// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="activation_fwd_activation_fwd,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=1632,HLS_SYN_LUT=2291,HLS_VERSION=2020_2}" *)

module activation_fwd (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_state7 = 24'd64;
parameter    ap_ST_fsm_state8 = 24'd128;
parameter    ap_ST_fsm_pp0_stage0 = 24'd256;
parameter    ap_ST_fsm_state12 = 24'd512;
parameter    ap_ST_fsm_pp1_stage0 = 24'd1024;
parameter    ap_ST_fsm_pp1_stage1 = 24'd2048;
parameter    ap_ST_fsm_pp1_stage2 = 24'd4096;
parameter    ap_ST_fsm_state17 = 24'd8192;
parameter    ap_ST_fsm_pp2_stage0 = 24'd16384;
parameter    ap_ST_fsm_pp2_stage1 = 24'd32768;
parameter    ap_ST_fsm_pp2_stage2 = 24'd65536;
parameter    ap_ST_fsm_state25 = 24'd131072;
parameter    ap_ST_fsm_pp3_stage0 = 24'd262144;
parameter    ap_ST_fsm_state29 = 24'd524288;
parameter    ap_ST_fsm_state30 = 24'd1048576;
parameter    ap_ST_fsm_state31 = 24'd2097152;
parameter    ap_ST_fsm_state32 = 24'd4194304;
parameter    ap_ST_fsm_state33 = 24'd8388608;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] in_r;
wire   [63:0] out_r;
wire   [31:0] dimension;
wire   [31:0] type_r;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond247_reg_993;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state25;
reg   [0:0] icmp_ln21_reg_978;
reg    gmem_blk_n_W;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_pp3_stage0;
reg   [0:0] exitcond3_reg_1259;
reg   [0:0] exitcond3_reg_1259_pp3_iter1_reg;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state33;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg    gmem_WVALID;
wire    gmem_WREADY;
wire   [31:0] gmem_WDATA;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [6:0] loop_index14_reg_352;
reg   [6:0] loop_index14_reg_352_pp0_iter1_reg;
wire    ap_block_state9_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [6:0] i_1_0_reg_364;
reg   [6:0] i_0_reg_376;
reg   [6:0] loop_index_reg_388;
reg   [31:0] type_read_reg_957;
reg   [31:0] dimension_read_reg_962;
reg   [63:0] out_read_reg_973;
wire   [0:0] icmp_ln21_fu_409_p2;
reg   [63:0] gmem_addr_reg_982;
wire   [6:0] empty_21_fu_435_p2;
reg   [6:0] empty_21_reg_988;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond247_fu_445_p2;
reg   [0:0] exitcond247_reg_993_pp0_iter1_reg;
reg   [31:0] gmem_addr_read_reg_997;
wire   [0:0] icmp_ln24_fu_459_p2;
wire    ap_CS_fsm_state12;
wire   [0:0] cmp11_fu_464_p2;
wire   [30:0] trunc_ln42_fu_469_p1;
reg   [30:0] trunc_ln42_reg_1010;
wire   [30:0] trunc_ln27_fu_472_p1;
reg   [30:0] trunc_ln27_reg_1019;
wire   [0:0] icmp_ln42_fu_479_p2;
reg   [0:0] icmp_ln42_reg_1028;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state13_pp1_stage0_iter0;
wire    ap_block_state16_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [63:0] i_1_0_cast6_fu_484_p1;
reg   [63:0] i_1_0_cast6_reg_1032;
wire   [63:0] zext_ln42_fu_495_p1;
reg   [63:0] zext_ln42_reg_1042;
wire   [0:0] icmp_ln42_1_fu_504_p2;
reg   [0:0] icmp_ln42_1_reg_1047;
wire   [63:0] zext_ln42_2_fu_515_p1;
reg   [63:0] zext_ln42_2_reg_1056;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state14_pp1_stage1_iter0;
wire    ap_block_pp1_stage1_11001;
wire   [0:0] icmp_ln42_2_fu_524_p2;
reg   [0:0] icmp_ln42_2_reg_1061;
wire   [63:0] zext_ln42_4_fu_535_p1;
reg   [63:0] zext_ln42_4_reg_1070;
wire   [0:0] icmp_ln42_3_fu_544_p2;
reg   [0:0] icmp_ln42_3_reg_1075;
wire   [6:0] add_ln42_3_fu_549_p2;
reg   [6:0] add_ln42_3_reg_1084;
wire   [0:0] icmp_ln42_4_fu_559_p2;
reg   [0:0] icmp_ln42_4_reg_1089;
wire   [63:0] zext_ln42_6_fu_564_p1;
reg   [63:0] zext_ln42_6_reg_1093;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state15_pp1_stage2_iter0;
wire    ap_block_pp1_stage2_11001;
wire   [6:0] add_ln42_4_fu_568_p2;
reg   [6:0] add_ln42_4_reg_1103;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln27_fu_578_p2;
reg   [0:0] icmp_ln27_reg_1108;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state18_pp2_stage0_iter0;
wire    ap_block_state21_pp2_stage0_iter1;
wire    ap_block_state24_pp2_stage0_iter2;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln27_reg_1108_pp2_iter1_reg;
wire   [63:0] i_0_cast5_fu_583_p1;
reg   [63:0] i_0_cast5_reg_1112;
reg   [63:0] i_0_cast5_reg_1112_pp2_iter1_reg;
wire   [63:0] zext_ln27_fu_594_p1;
reg   [63:0] zext_ln27_reg_1122;
reg   [63:0] zext_ln27_reg_1122_pp2_iter1_reg;
wire   [0:0] icmp_ln27_1_fu_603_p2;
reg   [0:0] icmp_ln27_1_reg_1127;
reg   [0:0] icmp_ln27_1_reg_1127_pp2_iter1_reg;
wire   [31:0] in_t_q1;
reg   [31:0] in_t_load_reg_1136;
wire    ap_CS_fsm_pp2_stage1;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state19_pp2_stage1_iter0;
wire    ap_block_state22_pp2_stage1_iter1;
wire    ap_block_pp2_stage1_11001;
wire   [31:0] in_t_q0;
reg   [31:0] in_t_load_5_reg_1143;
wire   [63:0] zext_ln27_2_fu_614_p1;
reg   [63:0] zext_ln27_2_reg_1150;
reg   [63:0] zext_ln27_2_reg_1150_pp2_iter1_reg;
wire   [0:0] icmp_ln27_2_fu_623_p2;
reg   [0:0] icmp_ln27_2_reg_1155;
reg   [0:0] icmp_ln27_2_reg_1155_pp2_iter1_reg;
wire   [63:0] zext_ln27_4_fu_634_p1;
reg   [63:0] zext_ln27_4_reg_1164;
reg   [63:0] zext_ln27_4_reg_1164_pp2_iter1_reg;
wire   [0:0] icmp_ln27_3_fu_643_p2;
reg   [0:0] icmp_ln27_3_reg_1169;
reg   [0:0] icmp_ln27_3_reg_1169_pp2_iter1_reg;
wire   [6:0] add_ln27_3_fu_648_p2;
reg   [6:0] add_ln27_3_reg_1178;
wire   [0:0] icmp_ln27_4_fu_658_p2;
reg   [0:0] icmp_ln27_4_reg_1183;
reg   [0:0] icmp_ln27_4_reg_1183_pp2_iter1_reg;
reg   [31:0] in_t_load_2_reg_1187;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_state20_pp2_stage2_iter0;
wire    ap_block_state23_pp2_stage2_iter1;
wire    ap_block_pp2_stage2_11001;
reg   [31:0] in_t_load_3_reg_1194;
wire   [63:0] zext_ln27_6_fu_663_p1;
reg   [63:0] zext_ln27_6_reg_1201;
reg   [63:0] zext_ln27_6_reg_1201_pp2_iter1_reg;
wire   [6:0] add_ln27_4_fu_667_p2;
reg   [6:0] add_ln27_4_reg_1211;
wire   [31:0] select_ln29_fu_714_p3;
reg   [31:0] select_ln29_reg_1216;
wire   [31:0] select_ln29_1_fu_762_p3;
reg   [31:0] select_ln29_1_reg_1221;
reg   [31:0] in_t_load_4_reg_1226;
reg    ap_enable_reg_pp2_iter1;
wire   [31:0] select_ln29_2_fu_810_p3;
reg   [31:0] select_ln29_2_reg_1233;
wire   [31:0] select_ln29_3_fu_858_p3;
reg   [31:0] select_ln29_3_reg_1238;
wire   [31:0] select_ln29_4_fu_906_p3;
reg   [31:0] select_ln29_4_reg_1243;
wire   [6:0] empty_27_fu_933_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state26_pp3_stage0_iter0;
wire    ap_block_state27_pp3_stage0_iter1;
wire    ap_block_state28_pp3_stage0_iter2;
reg    ap_block_state28_io;
reg    ap_block_pp3_stage0_11001;
wire   [0:0] exitcond3_fu_943_p2;
wire   [31:0] out_t_q0;
reg   [31:0] out_t_load_reg_1268;
reg    ap_enable_reg_pp3_iter1;
wire    ap_CS_fsm_state8;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage2_subdone;
reg    ap_predicate_tran15to17_state15;
reg    ap_condition_pp1_exit_iter0_state15;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp2_stage2_subdone;
reg    ap_predicate_tran23to25_state20;
reg    ap_condition_pp2_flush_enable;
reg    ap_condition_pp2_exit_iter1_state23;
reg    ap_enable_reg_pp2_iter2;
reg    ap_block_state25_io;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state26;
reg   [6:0] in_t_address0;
reg    in_t_ce0;
reg    in_t_we0;
wire   [31:0] in_t_d0;
reg   [6:0] in_t_address1;
reg    in_t_ce1;
reg   [6:0] out_t_address0;
reg    out_t_ce0;
reg    out_t_we0;
reg   [31:0] out_t_d0;
reg   [6:0] out_t_address1;
reg    out_t_ce1;
reg    out_t_we1;
reg   [31:0] out_t_d1;
reg   [6:0] ap_phi_mux_loop_index14_phi_fu_356_p4;
reg   [6:0] ap_phi_mux_i_1_0_phi_fu_368_p4;
wire    ap_block_pp1_stage0;
reg   [6:0] ap_phi_mux_i_0_phi_fu_380_p4;
wire    ap_block_pp2_stage0;
wire   [63:0] loop_index14_cast4_fu_450_p1;
wire    ap_block_pp1_stage1;
wire    ap_block_pp1_stage2;
wire    ap_block_pp2_stage1;
wire    ap_block_pp2_stage2;
wire   [63:0] loop_index_cast_fu_948_p1;
wire  signed [63:0] p_cast_cast_fu_425_p1;
wire   [63:0] p_cast2_cast_fu_922_p1;
reg    ap_block_state33;
wire    ap_block_pp3_stage0_01001;
reg   [31:0] grp_fu_399_p0;
reg   [31:0] grp_fu_404_p0;
wire   [61:0] p_cast_fu_415_p4;
wire   [31:0] loop_index14_cast16_fu_441_p1;
wire   [30:0] i_1_0_cast_fu_475_p1;
wire   [6:0] add_ln42_fu_489_p2;
wire   [30:0] zext_ln42_1_fu_500_p1;
wire   [6:0] add_ln42_1_fu_509_p2;
wire   [30:0] zext_ln42_3_fu_520_p1;
wire   [6:0] add_ln42_2_fu_529_p2;
wire   [30:0] zext_ln42_5_fu_540_p1;
wire   [30:0] zext_ln42_7_fu_555_p1;
wire   [30:0] i_0_cast_fu_574_p1;
wire   [6:0] add_ln27_fu_588_p2;
wire   [30:0] zext_ln27_1_fu_599_p1;
wire   [6:0] add_ln27_1_fu_608_p2;
wire   [30:0] zext_ln27_3_fu_619_p1;
wire   [6:0] add_ln27_2_fu_628_p2;
wire   [30:0] zext_ln27_5_fu_639_p1;
wire   [30:0] zext_ln27_7_fu_654_p1;
wire   [31:0] bitcast_ln29_fu_673_p1;
wire   [7:0] tmp_fu_676_p4;
wire   [22:0] trunc_ln29_fu_686_p1;
wire   [0:0] icmp_ln29_1_fu_696_p2;
wire   [0:0] icmp_ln29_fu_690_p2;
wire   [0:0] or_ln29_fu_702_p2;
wire   [0:0] grp_fu_399_p2;
wire   [0:0] and_ln29_fu_708_p2;
wire   [31:0] bitcast_ln29_1_fu_721_p1;
wire   [7:0] tmp_2_fu_724_p4;
wire   [22:0] trunc_ln29_1_fu_734_p1;
wire   [0:0] icmp_ln29_3_fu_744_p2;
wire   [0:0] icmp_ln29_2_fu_738_p2;
wire   [0:0] or_ln29_1_fu_750_p2;
wire   [0:0] grp_fu_404_p2;
wire   [0:0] and_ln29_1_fu_756_p2;
wire   [31:0] bitcast_ln29_2_fu_769_p1;
wire   [7:0] tmp_4_fu_772_p4;
wire   [22:0] trunc_ln29_2_fu_782_p1;
wire   [0:0] icmp_ln29_5_fu_792_p2;
wire   [0:0] icmp_ln29_4_fu_786_p2;
wire   [0:0] or_ln29_2_fu_798_p2;
wire   [0:0] and_ln29_2_fu_804_p2;
wire   [31:0] bitcast_ln29_3_fu_817_p1;
wire   [7:0] tmp_6_fu_820_p4;
wire   [22:0] trunc_ln29_3_fu_830_p1;
wire   [0:0] icmp_ln29_7_fu_840_p2;
wire   [0:0] icmp_ln29_6_fu_834_p2;
wire   [0:0] or_ln29_3_fu_846_p2;
wire   [0:0] and_ln29_3_fu_852_p2;
wire   [31:0] bitcast_ln29_4_fu_865_p1;
wire   [7:0] tmp_8_fu_868_p4;
wire   [22:0] trunc_ln29_4_fu_878_p1;
wire   [0:0] icmp_ln29_9_fu_888_p2;
wire   [0:0] icmp_ln29_8_fu_882_p2;
wire   [0:0] or_ln29_4_fu_894_p2;
wire   [0:0] and_ln29_4_fu_900_p2;
wire   [61:0] p_cast2_fu_913_p4;
wire   [31:0] loop_index_cast1_fu_939_p1;
wire    ap_block_pp2_stage2_00001;
wire    ap_block_pp2_stage0_00001;
wire    ap_block_pp2_stage1_00001;
reg   [23:0] ap_NS_fsm;
wire    ap_block_pp1_stage0_subdone;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp2_stage0_subdone;
wire    ap_block_pp2_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 24'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
end

activation_fwd_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .in_r(in_r),
    .out_r(out_r),
    .dimension(dimension),
    .type_r(type_r),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

activation_fwd_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_addr_reg_982),
    .I_ARID(1'd0),
    .I_ARLEN(dimension_read_reg_962),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(p_cast2_cast_fu_922_p1),
    .I_AWID(1'd0),
    .I_AWLEN(dimension_read_reg_962),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(gmem_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

activation_fwd_in_t #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
in_t_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(in_t_address0),
    .ce0(in_t_ce0),
    .we0(in_t_we0),
    .d0(in_t_d0),
    .q0(in_t_q0),
    .address1(in_t_address1),
    .ce1(in_t_ce1),
    .q1(in_t_q1)
);

activation_fwd_out_t #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
out_t_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(out_t_address0),
    .ce0(out_t_ce0),
    .we0(out_t_we0),
    .d0(out_t_d0),
    .q0(out_t_q0),
    .address1(out_t_address1),
    .ce1(out_t_ce1),
    .we1(out_t_we1),
    .d1(out_t_d1)
);

activation_fwd_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_399_p0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_399_p2)
);

activation_fwd_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_404_p0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_404_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state9)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state15) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((cmp11_fu_464_p2 == 1'd1) & (icmp_ln24_fu_459_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state15) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state15);
        end else if (((1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_subdone))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((cmp11_fu_464_p2 == 1'd1) & (icmp_ln24_fu_459_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp2_flush_enable)) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((cmp11_fu_464_p2 == 1'd1) & (icmp_ln24_fu_459_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_subdone))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((((ap_enable_reg_pp2_iter0 == 1'b0) & (1'b1 == ap_condition_pp2_exit_iter1_state23) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_subdone)) | ((cmp11_fu_464_p2 == 1'd1) & (icmp_ln24_fu_459_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter1_state23) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_subdone))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter0;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_subdone))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if (((cmp11_fu_464_p2 == 1'd1) & (icmp_ln24_fu_459_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state26) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln21_reg_978 == 1'd1) & (1'b0 == ap_block_state25_io))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state26)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state26);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln21_reg_978 == 1'd1) & (1'b0 == ap_block_state25_io))) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln27_4_reg_1183 == 1'd0) & (icmp_ln27_3_reg_1169 == 1'd0) & (icmp_ln27_2_reg_1155 == 1'd0) & (icmp_ln27_1_reg_1127 == 1'd0) & (icmp_ln27_reg_1108 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i_0_reg_376 <= add_ln27_4_reg_1211;
    end else if (((cmp11_fu_464_p2 == 1'd1) & (icmp_ln24_fu_459_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        i_0_reg_376 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp11_fu_464_p2 == 1'd1) & (icmp_ln24_fu_459_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        i_1_0_reg_364 <= 7'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln42_4_reg_1089 == 1'd0) & (icmp_ln42_3_reg_1075 == 1'd0) & (icmp_ln42_2_reg_1061 == 1'd0) & (icmp_ln42_1_reg_1047 == 1'd0) & (icmp_ln42_reg_1028 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_1_0_reg_364 <= add_ln42_4_reg_1103;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        loop_index14_reg_352 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond247_reg_993 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        loop_index14_reg_352 <= empty_21_reg_988;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln21_reg_978 == 1'd1) & (1'b0 == ap_block_state25_io))) begin
        loop_index_reg_388 <= 7'd0;
    end else if (((exitcond3_fu_943_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        loop_index_reg_388 <= empty_27_fu_933_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_3_fu_643_p2 == 1'd0) & (icmp_ln27_2_fu_623_p2 == 1'd0) & (icmp_ln27_1_reg_1127 == 1'd0) & (icmp_ln27_reg_1108 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        add_ln27_3_reg_1178 <= add_ln27_3_fu_648_p2;
        icmp_ln27_4_reg_1183 <= icmp_ln27_4_fu_658_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_4_reg_1183 == 1'd0) & (icmp_ln27_3_reg_1169 == 1'd0) & (icmp_ln27_2_reg_1155 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln27_1_reg_1127 == 1'd0) & (icmp_ln27_reg_1108 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        add_ln27_4_reg_1211 <= add_ln27_4_fu_667_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_3_fu_544_p2 == 1'd0) & (icmp_ln42_2_fu_524_p2 == 1'd0) & (icmp_ln42_1_reg_1047 == 1'd0) & (icmp_ln42_reg_1028 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        add_ln42_3_reg_1084 <= add_ln42_3_fu_549_p2;
        icmp_ln42_4_reg_1089 <= icmp_ln42_4_fu_559_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln42_4_reg_1089 == 1'd0) & (icmp_ln42_3_reg_1075 == 1'd0) & (icmp_ln42_2_reg_1061 == 1'd0) & (icmp_ln42_1_reg_1047 == 1'd0) & (icmp_ln42_reg_1028 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001))) begin
        add_ln42_4_reg_1103 <= add_ln42_4_fu_568_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        dimension_read_reg_962 <= dimension;
        icmp_ln21_reg_978 <= icmp_ln21_fu_409_p2;
        out_read_reg_973 <= out_r;
        type_read_reg_957 <= type_r;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_21_reg_988 <= empty_21_fu_435_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond247_reg_993 <= exitcond247_fu_445_p2;
        exitcond247_reg_993_pp0_iter1_reg <= exitcond247_reg_993;
        loop_index14_reg_352_pp0_iter1_reg <= loop_index14_reg_352;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        exitcond3_reg_1259 <= exitcond3_fu_943_p2;
        exitcond3_reg_1259_pp3_iter1_reg <= exitcond3_reg_1259;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond247_reg_993 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_addr_read_reg_997 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_409_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        gmem_addr_reg_982 <= p_cast_cast_fu_425_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_fu_578_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i_0_cast5_reg_1112[6 : 0] <= i_0_cast5_fu_583_p1[6 : 0];
        icmp_ln27_1_reg_1127 <= icmp_ln27_1_fu_603_p2;
        zext_ln27_reg_1122[6 : 0] <= zext_ln27_fu_594_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i_0_cast5_reg_1112_pp2_iter1_reg[6 : 0] <= i_0_cast5_reg_1112[6 : 0];
        icmp_ln27_1_reg_1127_pp2_iter1_reg <= icmp_ln27_1_reg_1127;
        icmp_ln27_reg_1108 <= icmp_ln27_fu_578_p2;
        icmp_ln27_reg_1108_pp2_iter1_reg <= icmp_ln27_reg_1108;
        zext_ln27_reg_1122_pp2_iter1_reg[6 : 0] <= zext_ln27_reg_1122[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_fu_479_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_1_0_cast6_reg_1032[6 : 0] <= i_1_0_cast6_fu_484_p1[6 : 0];
        icmp_ln42_1_reg_1047 <= icmp_ln42_1_fu_504_p2;
        zext_ln42_reg_1042[6 : 0] <= zext_ln42_fu_495_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_1_reg_1127 == 1'd0) & (icmp_ln27_reg_1108 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        icmp_ln27_2_reg_1155 <= icmp_ln27_2_fu_623_p2;
        zext_ln27_2_reg_1150[6 : 0] <= zext_ln27_2_fu_614_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        icmp_ln27_2_reg_1155_pp2_iter1_reg <= icmp_ln27_2_reg_1155;
        icmp_ln27_3_reg_1169_pp2_iter1_reg <= icmp_ln27_3_reg_1169;
        icmp_ln27_4_reg_1183_pp2_iter1_reg <= icmp_ln27_4_reg_1183;
        zext_ln27_2_reg_1150_pp2_iter1_reg[6 : 0] <= zext_ln27_2_reg_1150[6 : 0];
        zext_ln27_4_reg_1164_pp2_iter1_reg[6 : 0] <= zext_ln27_4_reg_1164[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_2_fu_623_p2 == 1'd0) & (icmp_ln27_1_reg_1127 == 1'd0) & (icmp_ln27_reg_1108 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        icmp_ln27_3_reg_1169 <= icmp_ln27_3_fu_643_p2;
        zext_ln27_4_reg_1164[6 : 0] <= zext_ln27_4_fu_634_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_1_reg_1047 == 1'd0) & (icmp_ln42_reg_1028 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        icmp_ln42_2_reg_1061 <= icmp_ln42_2_fu_524_p2;
        zext_ln42_2_reg_1056[6 : 0] <= zext_ln42_2_fu_515_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_2_fu_524_p2 == 1'd0) & (icmp_ln42_1_reg_1047 == 1'd0) & (icmp_ln42_reg_1028 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        icmp_ln42_3_reg_1075 <= icmp_ln42_3_fu_544_p2;
        zext_ln42_4_reg_1070[6 : 0] <= zext_ln42_4_fu_535_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln42_reg_1028 <= icmp_ln42_fu_479_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_2_reg_1155 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln27_1_reg_1127 == 1'd0) & (icmp_ln27_reg_1108 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        in_t_load_2_reg_1187 <= in_t_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_3_reg_1169 == 1'd0) & (icmp_ln27_2_reg_1155 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln27_1_reg_1127 == 1'd0) & (icmp_ln27_reg_1108 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        in_t_load_3_reg_1194 <= in_t_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln27_4_reg_1183 == 1'd0) & (icmp_ln27_3_reg_1169 == 1'd0) & (icmp_ln27_2_reg_1155 == 1'd0) & (icmp_ln27_1_reg_1127 == 1'd0) & (icmp_ln27_reg_1108 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        in_t_load_4_reg_1226 <= in_t_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln27_1_reg_1127 == 1'd0) & (icmp_ln27_reg_1108 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        in_t_load_5_reg_1143 <= in_t_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln27_reg_1108 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        in_t_load_reg_1136 <= in_t_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond3_reg_1259 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        out_t_load_reg_1268 <= out_t_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_1_reg_1127 == 1'd0) & (icmp_ln27_reg_1108 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        select_ln29_1_reg_1221 <= select_ln29_1_fu_762_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_2_reg_1155 == 1'd0) & (icmp_ln27_1_reg_1127_pp2_iter1_reg == 1'd0) & (icmp_ln27_reg_1108_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        select_ln29_2_reg_1233 <= select_ln29_2_fu_810_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_3_reg_1169 == 1'd0) & (icmp_ln27_2_reg_1155 == 1'd0) & (icmp_ln27_1_reg_1127_pp2_iter1_reg == 1'd0) & (icmp_ln27_reg_1108_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        select_ln29_3_reg_1238 <= select_ln29_3_fu_858_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_4_reg_1183_pp2_iter1_reg == 1'd0) & (icmp_ln27_3_reg_1169_pp2_iter1_reg == 1'd0) & (icmp_ln27_2_reg_1155_pp2_iter1_reg == 1'd0) & (icmp_ln27_1_reg_1127_pp2_iter1_reg == 1'd0) & (icmp_ln27_reg_1108_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        select_ln29_4_reg_1243 <= select_ln29_4_fu_906_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1108 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        select_ln29_reg_1216 <= select_ln29_fu_714_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp11_fu_464_p2 == 1'd1) & (icmp_ln24_fu_459_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        trunc_ln27_reg_1019 <= trunc_ln27_fu_472_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp11_fu_464_p2 == 1'd1) & (icmp_ln24_fu_459_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        trunc_ln42_reg_1010 <= trunc_ln42_fu_469_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_3_reg_1169 == 1'd0) & (icmp_ln27_2_reg_1155 == 1'd0) & (icmp_ln27_1_reg_1127 == 1'd0) & (icmp_ln27_reg_1108 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        zext_ln27_6_reg_1201[6 : 0] <= zext_ln27_6_fu_663_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        zext_ln27_6_reg_1201_pp2_iter1_reg[6 : 0] <= zext_ln27_6_reg_1201[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_3_reg_1075 == 1'd0) & (icmp_ln42_2_reg_1061 == 1'd0) & (icmp_ln42_1_reg_1047 == 1'd0) & (icmp_ln42_reg_1028 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001))) begin
        zext_ln42_6_reg_1093[6 : 0] <= zext_ln42_6_fu_564_p1[6 : 0];
    end
end

always @ (*) begin
    if ((exitcond247_fu_445_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_predicate_tran15to17_state15 == 1'b1)) begin
        ap_condition_pp1_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_condition_pp2_exit_iter1_state23 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter1_state23 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_tran23to25_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_subdone))) begin
        ap_condition_pp2_flush_enable = 1'b1;
    end else begin
        ap_condition_pp2_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond3_fu_943_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state26 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state26 = 1'b0;
    end
end

always @ (*) begin
    if ((~((gmem_BVALID == 1'b0) & (icmp_ln21_reg_978 == 1'd1)) & (1'b1 == ap_CS_fsm_state33))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln27_4_reg_1183 == 1'd0) & (icmp_ln27_3_reg_1169 == 1'd0) & (icmp_ln27_2_reg_1155 == 1'd0) & (icmp_ln27_1_reg_1127 == 1'd0) & (icmp_ln27_reg_1108 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_i_0_phi_fu_380_p4 = add_ln27_4_reg_1211;
    end else begin
        ap_phi_mux_i_0_phi_fu_380_p4 = i_0_reg_376;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln42_4_reg_1089 == 1'd0) & (icmp_ln42_3_reg_1075 == 1'd0) & (icmp_ln42_2_reg_1061 == 1'd0) & (icmp_ln42_1_reg_1047 == 1'd0) & (icmp_ln42_reg_1028 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_i_1_0_phi_fu_368_p4 = add_ln42_4_reg_1103;
    end else begin
        ap_phi_mux_i_1_0_phi_fu_368_p4 = i_1_0_reg_364;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond247_reg_993 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_loop_index14_phi_fu_356_p4 = empty_21_reg_988;
    end else begin
        ap_phi_mux_loop_index14_phi_fu_356_p4 = loop_index14_reg_352;
    end
end

always @ (*) begin
    if ((~((gmem_BVALID == 1'b0) & (icmp_ln21_reg_978 == 1'd1)) & (1'b1 == ap_CS_fsm_state33))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln21_reg_978 == 1'd1) & (1'b0 == ap_block_state25_io))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((gmem_BVALID == 1'b0) & (icmp_ln21_reg_978 == 1'd1)) & (1'b1 == ap_CS_fsm_state33) & (icmp_ln21_reg_978 == 1'd1))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond247_reg_993 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_reg_1259_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln21_reg_978 == 1'd1))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln21_reg_978 == 1'd1))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond247_reg_993 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond3_reg_1259_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        grp_fu_399_p0 = in_t_load_4_reg_1226;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_399_p0 = in_t_load_2_reg_1187;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2))) begin
        grp_fu_399_p0 = in_t_load_reg_1136;
    end else begin
        grp_fu_399_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_404_p0 = in_t_load_3_reg_1194;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2))) begin
        grp_fu_404_p0 = in_t_load_5_reg_1143;
    end else begin
        grp_fu_404_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2))) begin
        in_t_address0 = zext_ln27_6_fu_663_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        in_t_address0 = zext_ln27_4_fu_634_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        in_t_address0 = zext_ln27_fu_594_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2))) begin
        in_t_address0 = zext_ln42_6_fu_564_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        in_t_address0 = zext_ln42_4_fu_535_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        in_t_address0 = zext_ln42_fu_495_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        in_t_address0 = loop_index14_cast4_fu_450_p1;
    end else begin
        in_t_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        in_t_address1 = zext_ln27_2_fu_614_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        in_t_address1 = i_0_cast5_fu_583_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        in_t_address1 = zext_ln42_2_fu_515_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        in_t_address1 = i_1_0_cast6_fu_484_p1;
    end else begin
        in_t_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        in_t_ce0 = 1'b1;
    end else begin
        in_t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        in_t_ce1 = 1'b1;
    end else begin
        in_t_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond247_reg_993_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_t_we0 = 1'b1;
    end else begin
        in_t_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        out_t_address0 = loop_index_cast_fu_948_p1;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2))) begin
        out_t_address0 = zext_ln27_4_reg_1164_pp2_iter1_reg;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        out_t_address0 = zext_ln27_reg_1122_pp2_iter1_reg;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        out_t_address0 = zext_ln42_6_reg_1093;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2))) begin
        out_t_address0 = zext_ln42_2_reg_1056;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        out_t_address0 = zext_ln42_reg_1042;
    end else begin
        out_t_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        out_t_address1 = zext_ln27_6_reg_1201_pp2_iter1_reg;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2))) begin
        out_t_address1 = zext_ln27_2_reg_1150_pp2_iter1_reg;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        out_t_address1 = i_0_cast5_reg_1112_pp2_iter1_reg;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2))) begin
        out_t_address1 = zext_ln42_4_reg_1070;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        out_t_address1 = i_1_0_cast6_reg_1032;
    end else begin
        out_t_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        out_t_ce0 = 1'b1;
    end else begin
        out_t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        out_t_ce1 = 1'b1;
    end else begin
        out_t_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2))) begin
        out_t_d0 = select_ln29_3_reg_1238;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        out_t_d0 = select_ln29_1_reg_1221;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2))) begin
        out_t_d0 = in_t_q1;
    end else if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1)))) begin
        out_t_d0 = in_t_q0;
    end else begin
        out_t_d0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        out_t_d1 = select_ln29_4_reg_1243;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2))) begin
        out_t_d1 = select_ln29_2_reg_1233;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        out_t_d1 = select_ln29_reg_1216;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2))) begin
        out_t_d1 = in_t_q0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        out_t_d1 = in_t_q1;
    end else begin
        out_t_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln42_4_reg_1089 == 1'd0) & (icmp_ln42_3_reg_1075 == 1'd0) & (icmp_ln42_2_reg_1061 == 1'd0) & (icmp_ln42_1_reg_1047 == 1'd0) & (icmp_ln42_reg_1028 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln27_3_reg_1169_pp2_iter1_reg == 1'd0) & (icmp_ln27_2_reg_1155_pp2_iter1_reg == 1'd0) & (icmp_ln27_1_reg_1127_pp2_iter1_reg == 1'd0) & (icmp_ln27_reg_1108_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln27_1_reg_1127_pp2_iter1_reg == 1'd0) & (icmp_ln27_reg_1108_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln42_2_reg_1061 == 1'd0) & (icmp_ln42_1_reg_1047 == 1'd0) & (icmp_ln42_reg_1028 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln42_1_reg_1047 == 1'd0) & (icmp_ln42_reg_1028 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        out_t_we0 = 1'b1;
    end else begin
        out_t_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln27_4_reg_1183_pp2_iter1_reg == 1'd0) & (icmp_ln27_3_reg_1169_pp2_iter1_reg == 1'd0) & (icmp_ln27_2_reg_1155_pp2_iter1_reg == 1'd0) & (icmp_ln27_1_reg_1127_pp2_iter1_reg == 1'd0) & (icmp_ln27_reg_1108_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln27_2_reg_1155_pp2_iter1_reg == 1'd0) & (icmp_ln27_1_reg_1127_pp2_iter1_reg == 1'd0) & (icmp_ln27_reg_1108_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln27_reg_1108_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln42_3_reg_1075 == 1'd0) & (icmp_ln42_2_reg_1061 == 1'd0) & (icmp_ln42_1_reg_1047 == 1'd0) & (icmp_ln42_reg_1028 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln42_reg_1028 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        out_t_we1 = 1'b1;
    end else begin
        out_t_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (icmp_ln21_fu_409_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else if (((ap_start == 1'b1) & (icmp_ln21_fu_409_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond247_fu_445_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((exitcond247_fu_445_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((cmp11_fu_464_p2 == 1'd1) & (icmp_ln24_fu_459_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((cmp11_fu_464_p2 == 1'd1) & (icmp_ln24_fu_459_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((~((ap_predicate_tran15to17_state15 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2_subdone)) & (1'b0 == ap_block_pp1_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_predicate_tran15to17_state15 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_subdone)) & (1'b0 == ap_block_pp2_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln21_reg_978 == 1'd1) & (1'b0 == ap_block_state25_io))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln21_reg_978 == 1'd0) & (1'b0 == ap_block_state25_io))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (exitcond3_fu_943_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (exitcond3_fu_943_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if ((~((gmem_BVALID == 1'b0) & (icmp_ln21_reg_978 == 1'd1)) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln27_1_fu_608_p2 = (i_0_reg_376 + 7'd2);

assign add_ln27_2_fu_628_p2 = (i_0_reg_376 + 7'd3);

assign add_ln27_3_fu_648_p2 = (i_0_reg_376 + 7'd4);

assign add_ln27_4_fu_667_p2 = (i_0_reg_376 + 7'd5);

assign add_ln27_fu_588_p2 = (ap_phi_mux_i_0_phi_fu_380_p4 + 7'd1);

assign add_ln42_1_fu_509_p2 = (i_1_0_reg_364 + 7'd2);

assign add_ln42_2_fu_529_p2 = (i_1_0_reg_364 + 7'd3);

assign add_ln42_3_fu_549_p2 = (i_1_0_reg_364 + 7'd4);

assign add_ln42_4_fu_568_p2 = (i_1_0_reg_364 + 7'd5);

assign add_ln42_fu_489_p2 = (ap_phi_mux_i_1_0_phi_fu_368_p4 + 7'd1);

assign and_ln29_1_fu_756_p2 = (or_ln29_1_fu_750_p2 & grp_fu_404_p2);

assign and_ln29_2_fu_804_p2 = (or_ln29_2_fu_798_p2 & grp_fu_399_p2);

assign and_ln29_3_fu_852_p2 = (or_ln29_3_fu_846_p2 & grp_fu_404_p2);

assign and_ln29_4_fu_900_p2 = (or_ln29_4_fu_894_p2 & grp_fu_399_p2);

assign and_ln29_fu_708_p2 = (or_ln29_fu_702_p2 & grp_fu_399_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((gmem_RVALID == 1'b0) & (exitcond247_reg_993 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((gmem_RVALID == 1'b0) & (exitcond247_reg_993 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((1'b1 == ap_block_state28_io) & (ap_enable_reg_pp3_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((1'b1 == ap_block_state28_io) & (ap_enable_reg_pp3_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = ((gmem_RVALID == 1'b0) & (exitcond247_reg_993 == 1'd0));
end

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state25_io = ((gmem_AWREADY == 1'b0) & (icmp_ln21_reg_978 == 1'd1));
end

assign ap_block_state26_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state28_io = ((gmem_WREADY == 1'b0) & (exitcond3_reg_1259_pp3_iter1_reg == 1'd0));
end

assign ap_block_state28_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state33 = ((gmem_BVALID == 1'b0) & (icmp_ln21_reg_978 == 1'd1));
end

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

always @ (*) begin
    ap_predicate_tran15to17_state15 = ((icmp_ln42_reg_1028 == 1'd1) | ((icmp_ln42_1_reg_1047 == 1'd1) | ((icmp_ln42_2_reg_1061 == 1'd1) | ((icmp_ln42_4_reg_1089 == 1'd1) | (icmp_ln42_3_reg_1075 == 1'd1)))));
end

always @ (*) begin
    ap_predicate_tran23to25_state20 = ((icmp_ln27_reg_1108 == 1'd1) | ((icmp_ln27_1_reg_1127 == 1'd1) | ((icmp_ln27_2_reg_1155 == 1'd1) | ((icmp_ln27_4_reg_1183 == 1'd1) | (icmp_ln27_3_reg_1169 == 1'd1)))));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln29_1_fu_721_p1 = in_t_load_5_reg_1143;

assign bitcast_ln29_2_fu_769_p1 = in_t_load_2_reg_1187;

assign bitcast_ln29_3_fu_817_p1 = in_t_load_3_reg_1194;

assign bitcast_ln29_4_fu_865_p1 = in_t_load_4_reg_1226;

assign bitcast_ln29_fu_673_p1 = in_t_load_reg_1136;

assign cmp11_fu_464_p2 = (($signed(dimension_read_reg_962) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign empty_21_fu_435_p2 = (ap_phi_mux_loop_index14_phi_fu_356_p4 + 7'd1);

assign empty_27_fu_933_p2 = (loop_index_reg_388 + 7'd1);

assign exitcond247_fu_445_p2 = ((loop_index14_cast16_fu_441_p1 == dimension_read_reg_962) ? 1'b1 : 1'b0);

assign exitcond3_fu_943_p2 = ((loop_index_cast1_fu_939_p1 == dimension_read_reg_962) ? 1'b1 : 1'b0);

assign gmem_WDATA = out_t_load_reg_1268;

assign i_0_cast5_fu_583_p1 = ap_phi_mux_i_0_phi_fu_380_p4;

assign i_0_cast_fu_574_p1 = ap_phi_mux_i_0_phi_fu_380_p4;

assign i_1_0_cast6_fu_484_p1 = ap_phi_mux_i_1_0_phi_fu_368_p4;

assign i_1_0_cast_fu_475_p1 = ap_phi_mux_i_1_0_phi_fu_368_p4;

assign icmp_ln21_fu_409_p2 = ((dimension != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_459_p2 = ((type_read_reg_957 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln27_1_fu_603_p2 = ((zext_ln27_1_fu_599_p1 == trunc_ln27_reg_1019) ? 1'b1 : 1'b0);

assign icmp_ln27_2_fu_623_p2 = ((zext_ln27_3_fu_619_p1 == trunc_ln27_reg_1019) ? 1'b1 : 1'b0);

assign icmp_ln27_3_fu_643_p2 = ((zext_ln27_5_fu_639_p1 == trunc_ln27_reg_1019) ? 1'b1 : 1'b0);

assign icmp_ln27_4_fu_658_p2 = ((zext_ln27_7_fu_654_p1 == trunc_ln27_reg_1019) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_578_p2 = ((i_0_cast_fu_574_p1 == trunc_ln27_reg_1019) ? 1'b1 : 1'b0);

assign icmp_ln29_1_fu_696_p2 = ((trunc_ln29_fu_686_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_2_fu_738_p2 = ((tmp_2_fu_724_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_3_fu_744_p2 = ((trunc_ln29_1_fu_734_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_4_fu_786_p2 = ((tmp_4_fu_772_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_5_fu_792_p2 = ((trunc_ln29_2_fu_782_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_6_fu_834_p2 = ((tmp_6_fu_820_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_7_fu_840_p2 = ((trunc_ln29_3_fu_830_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_8_fu_882_p2 = ((tmp_8_fu_868_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_9_fu_888_p2 = ((trunc_ln29_4_fu_878_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_690_p2 = ((tmp_fu_676_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln42_1_fu_504_p2 = ((zext_ln42_1_fu_500_p1 == trunc_ln42_reg_1010) ? 1'b1 : 1'b0);

assign icmp_ln42_2_fu_524_p2 = ((zext_ln42_3_fu_520_p1 == trunc_ln42_reg_1010) ? 1'b1 : 1'b0);

assign icmp_ln42_3_fu_544_p2 = ((zext_ln42_5_fu_540_p1 == trunc_ln42_reg_1010) ? 1'b1 : 1'b0);

assign icmp_ln42_4_fu_559_p2 = ((zext_ln42_7_fu_555_p1 == trunc_ln42_reg_1010) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_479_p2 = ((i_1_0_cast_fu_475_p1 == trunc_ln42_reg_1010) ? 1'b1 : 1'b0);

assign in_t_d0 = gmem_addr_read_reg_997;

assign loop_index14_cast16_fu_441_p1 = ap_phi_mux_loop_index14_phi_fu_356_p4;

assign loop_index14_cast4_fu_450_p1 = loop_index14_reg_352_pp0_iter1_reg;

assign loop_index_cast1_fu_939_p1 = loop_index_reg_388;

assign loop_index_cast_fu_948_p1 = loop_index_reg_388;

assign or_ln29_1_fu_750_p2 = (icmp_ln29_3_fu_744_p2 | icmp_ln29_2_fu_738_p2);

assign or_ln29_2_fu_798_p2 = (icmp_ln29_5_fu_792_p2 | icmp_ln29_4_fu_786_p2);

assign or_ln29_3_fu_846_p2 = (icmp_ln29_7_fu_840_p2 | icmp_ln29_6_fu_834_p2);

assign or_ln29_4_fu_894_p2 = (icmp_ln29_9_fu_888_p2 | icmp_ln29_8_fu_882_p2);

assign or_ln29_fu_702_p2 = (icmp_ln29_fu_690_p2 | icmp_ln29_1_fu_696_p2);

assign p_cast2_cast_fu_922_p1 = $signed(p_cast2_fu_913_p4);

assign p_cast2_fu_913_p4 = {{out_read_reg_973[63:2]}};

assign p_cast_cast_fu_425_p1 = $signed(p_cast_fu_415_p4);

assign p_cast_fu_415_p4 = {{in_r[63:2]}};

assign select_ln29_1_fu_762_p3 = ((and_ln29_1_fu_756_p2[0:0] == 1'b1) ? in_t_load_5_reg_1143 : 32'd0);

assign select_ln29_2_fu_810_p3 = ((and_ln29_2_fu_804_p2[0:0] == 1'b1) ? in_t_load_2_reg_1187 : 32'd0);

assign select_ln29_3_fu_858_p3 = ((and_ln29_3_fu_852_p2[0:0] == 1'b1) ? in_t_load_3_reg_1194 : 32'd0);

assign select_ln29_4_fu_906_p3 = ((and_ln29_4_fu_900_p2[0:0] == 1'b1) ? in_t_load_4_reg_1226 : 32'd0);

assign select_ln29_fu_714_p3 = ((and_ln29_fu_708_p2[0:0] == 1'b1) ? in_t_load_reg_1136 : 32'd0);

assign tmp_2_fu_724_p4 = {{bitcast_ln29_1_fu_721_p1[30:23]}};

assign tmp_4_fu_772_p4 = {{bitcast_ln29_2_fu_769_p1[30:23]}};

assign tmp_6_fu_820_p4 = {{bitcast_ln29_3_fu_817_p1[30:23]}};

assign tmp_8_fu_868_p4 = {{bitcast_ln29_4_fu_865_p1[30:23]}};

assign tmp_fu_676_p4 = {{bitcast_ln29_fu_673_p1[30:23]}};

assign trunc_ln27_fu_472_p1 = dimension_read_reg_962[30:0];

assign trunc_ln29_1_fu_734_p1 = bitcast_ln29_1_fu_721_p1[22:0];

assign trunc_ln29_2_fu_782_p1 = bitcast_ln29_2_fu_769_p1[22:0];

assign trunc_ln29_3_fu_830_p1 = bitcast_ln29_3_fu_817_p1[22:0];

assign trunc_ln29_4_fu_878_p1 = bitcast_ln29_4_fu_865_p1[22:0];

assign trunc_ln29_fu_686_p1 = bitcast_ln29_fu_673_p1[22:0];

assign trunc_ln42_fu_469_p1 = dimension_read_reg_962[30:0];

assign zext_ln27_1_fu_599_p1 = add_ln27_fu_588_p2;

assign zext_ln27_2_fu_614_p1 = add_ln27_1_fu_608_p2;

assign zext_ln27_3_fu_619_p1 = add_ln27_1_fu_608_p2;

assign zext_ln27_4_fu_634_p1 = add_ln27_2_fu_628_p2;

assign zext_ln27_5_fu_639_p1 = add_ln27_2_fu_628_p2;

assign zext_ln27_6_fu_663_p1 = add_ln27_3_reg_1178;

assign zext_ln27_7_fu_654_p1 = add_ln27_3_fu_648_p2;

assign zext_ln27_fu_594_p1 = add_ln27_fu_588_p2;

assign zext_ln42_1_fu_500_p1 = add_ln42_fu_489_p2;

assign zext_ln42_2_fu_515_p1 = add_ln42_1_fu_509_p2;

assign zext_ln42_3_fu_520_p1 = add_ln42_1_fu_509_p2;

assign zext_ln42_4_fu_535_p1 = add_ln42_2_fu_529_p2;

assign zext_ln42_5_fu_540_p1 = add_ln42_2_fu_529_p2;

assign zext_ln42_6_fu_564_p1 = add_ln42_3_reg_1084;

assign zext_ln42_7_fu_555_p1 = add_ln42_3_fu_549_p2;

assign zext_ln42_fu_495_p1 = add_ln42_fu_489_p2;

always @ (posedge ap_clk) begin
    i_1_0_cast6_reg_1032[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln42_reg_1042[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln42_2_reg_1056[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln42_4_reg_1070[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln42_6_reg_1093[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    i_0_cast5_reg_1112[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    i_0_cast5_reg_1112_pp2_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln27_reg_1122[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln27_reg_1122_pp2_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln27_2_reg_1150[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln27_2_reg_1150_pp2_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln27_4_reg_1164[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln27_4_reg_1164_pp2_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln27_6_reg_1201[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln27_6_reg_1201_pp2_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //activation_fwd
