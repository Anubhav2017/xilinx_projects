// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv_combined_conv_combined,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=0,HLS_SYN_FF=14293,HLS_SYN_LUT=12398,HLS_VERSION=2020_2}" *)

module conv_combined (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST,
        m_axi_gmem2_WID,
        m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY,
        m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID,
        m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA,
        m_axi_gmem2_RLAST,
        m_axi_gmem2_RID,
        m_axi_gmem2_RUSER,
        m_axi_gmem2_RRESP,
        m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP,
        m_axi_gmem2_BID,
        m_axi_gmem2_BUSER,
        x_Addr_A,
        x_EN_A,
        x_WEN_A,
        x_Din_A,
        x_Dout_A,
        x_Clk_A,
        x_Rst_A,
        dx_Addr_A,
        dx_EN_A,
        dx_WEN_A,
        dx_Din_A,
        dx_Dout_A,
        dx_Clk_A,
        dx_Rst_A,
        y_Addr_A,
        y_EN_A,
        y_WEN_A,
        y_Din_A,
        y_Dout_A,
        y_Clk_A,
        y_Rst_A,
        dy_Addr_A,
        dy_EN_A,
        dy_WEN_A,
        dy_Din_A,
        dy_Dout_A,
        dy_Clk_A,
        dy_Rst_A,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 143'd1;
parameter    ap_ST_fsm_state2 = 143'd2;
parameter    ap_ST_fsm_state3 = 143'd4;
parameter    ap_ST_fsm_state4 = 143'd8;
parameter    ap_ST_fsm_state5 = 143'd16;
parameter    ap_ST_fsm_state6 = 143'd32;
parameter    ap_ST_fsm_state7 = 143'd64;
parameter    ap_ST_fsm_state8 = 143'd128;
parameter    ap_ST_fsm_state9 = 143'd256;
parameter    ap_ST_fsm_state10 = 143'd512;
parameter    ap_ST_fsm_state11 = 143'd1024;
parameter    ap_ST_fsm_state12 = 143'd2048;
parameter    ap_ST_fsm_state13 = 143'd4096;
parameter    ap_ST_fsm_state14 = 143'd8192;
parameter    ap_ST_fsm_state15 = 143'd16384;
parameter    ap_ST_fsm_state16 = 143'd32768;
parameter    ap_ST_fsm_state17 = 143'd65536;
parameter    ap_ST_fsm_state18 = 143'd131072;
parameter    ap_ST_fsm_state19 = 143'd262144;
parameter    ap_ST_fsm_state20 = 143'd524288;
parameter    ap_ST_fsm_state21 = 143'd1048576;
parameter    ap_ST_fsm_state22 = 143'd2097152;
parameter    ap_ST_fsm_state23 = 143'd4194304;
parameter    ap_ST_fsm_state24 = 143'd8388608;
parameter    ap_ST_fsm_state25 = 143'd16777216;
parameter    ap_ST_fsm_state26 = 143'd33554432;
parameter    ap_ST_fsm_state27 = 143'd67108864;
parameter    ap_ST_fsm_pp0_stage0 = 143'd134217728;
parameter    ap_ST_fsm_state31 = 143'd268435456;
parameter    ap_ST_fsm_state32 = 143'd536870912;
parameter    ap_ST_fsm_state33 = 143'd1073741824;
parameter    ap_ST_fsm_state34 = 143'd2147483648;
parameter    ap_ST_fsm_state35 = 143'd4294967296;
parameter    ap_ST_fsm_state36 = 143'd8589934592;
parameter    ap_ST_fsm_state37 = 143'd17179869184;
parameter    ap_ST_fsm_pp1_stage0 = 143'd34359738368;
parameter    ap_ST_fsm_state41 = 143'd68719476736;
parameter    ap_ST_fsm_state42 = 143'd137438953472;
parameter    ap_ST_fsm_state43 = 143'd274877906944;
parameter    ap_ST_fsm_state44 = 143'd549755813888;
parameter    ap_ST_fsm_state45 = 143'd1099511627776;
parameter    ap_ST_fsm_state46 = 143'd2199023255552;
parameter    ap_ST_fsm_state47 = 143'd4398046511104;
parameter    ap_ST_fsm_pp2_stage0 = 143'd8796093022208;
parameter    ap_ST_fsm_state51 = 143'd17592186044416;
parameter    ap_ST_fsm_state52 = 143'd35184372088832;
parameter    ap_ST_fsm_state53 = 143'd70368744177664;
parameter    ap_ST_fsm_state54 = 143'd140737488355328;
parameter    ap_ST_fsm_state55 = 143'd281474976710656;
parameter    ap_ST_fsm_state56 = 143'd562949953421312;
parameter    ap_ST_fsm_state57 = 143'd1125899906842624;
parameter    ap_ST_fsm_state58 = 143'd2251799813685248;
parameter    ap_ST_fsm_state59 = 143'd4503599627370496;
parameter    ap_ST_fsm_state60 = 143'd9007199254740992;
parameter    ap_ST_fsm_state61 = 143'd18014398509481984;
parameter    ap_ST_fsm_state62 = 143'd36028797018963968;
parameter    ap_ST_fsm_state63 = 143'd72057594037927936;
parameter    ap_ST_fsm_state64 = 143'd144115188075855872;
parameter    ap_ST_fsm_state65 = 143'd288230376151711744;
parameter    ap_ST_fsm_state66 = 143'd576460752303423488;
parameter    ap_ST_fsm_state67 = 143'd1152921504606846976;
parameter    ap_ST_fsm_state68 = 143'd2305843009213693952;
parameter    ap_ST_fsm_state69 = 143'd4611686018427387904;
parameter    ap_ST_fsm_state70 = 143'd9223372036854775808;
parameter    ap_ST_fsm_state71 = 143'd18446744073709551616;
parameter    ap_ST_fsm_pp3_stage0 = 143'd36893488147419103232;
parameter    ap_ST_fsm_state75 = 143'd73786976294838206464;
parameter    ap_ST_fsm_state76 = 143'd147573952589676412928;
parameter    ap_ST_fsm_state77 = 143'd295147905179352825856;
parameter    ap_ST_fsm_state78 = 143'd590295810358705651712;
parameter    ap_ST_fsm_state79 = 143'd1180591620717411303424;
parameter    ap_ST_fsm_state80 = 143'd2361183241434822606848;
parameter    ap_ST_fsm_state81 = 143'd4722366482869645213696;
parameter    ap_ST_fsm_state82 = 143'd9444732965739290427392;
parameter    ap_ST_fsm_state83 = 143'd18889465931478580854784;
parameter    ap_ST_fsm_state84 = 143'd37778931862957161709568;
parameter    ap_ST_fsm_state85 = 143'd75557863725914323419136;
parameter    ap_ST_fsm_state86 = 143'd151115727451828646838272;
parameter    ap_ST_fsm_state87 = 143'd302231454903657293676544;
parameter    ap_ST_fsm_state88 = 143'd604462909807314587353088;
parameter    ap_ST_fsm_state89 = 143'd1208925819614629174706176;
parameter    ap_ST_fsm_state90 = 143'd2417851639229258349412352;
parameter    ap_ST_fsm_state91 = 143'd4835703278458516698824704;
parameter    ap_ST_fsm_state92 = 143'd9671406556917033397649408;
parameter    ap_ST_fsm_pp4_stage0 = 143'd19342813113834066795298816;
parameter    ap_ST_fsm_pp4_stage1 = 143'd38685626227668133590597632;
parameter    ap_ST_fsm_state106 = 143'd77371252455336267181195264;
parameter    ap_ST_fsm_state107 = 143'd154742504910672534362390528;
parameter    ap_ST_fsm_state108 = 143'd309485009821345068724781056;
parameter    ap_ST_fsm_state109 = 143'd618970019642690137449562112;
parameter    ap_ST_fsm_state110 = 143'd1237940039285380274899124224;
parameter    ap_ST_fsm_state111 = 143'd2475880078570760549798248448;
parameter    ap_ST_fsm_state112 = 143'd4951760157141521099596496896;
parameter    ap_ST_fsm_state113 = 143'd9903520314283042199192993792;
parameter    ap_ST_fsm_state114 = 143'd19807040628566084398385987584;
parameter    ap_ST_fsm_pp5_stage0 = 143'd39614081257132168796771975168;
parameter    ap_ST_fsm_state118 = 143'd79228162514264337593543950336;
parameter    ap_ST_fsm_state119 = 143'd158456325028528675187087900672;
parameter    ap_ST_fsm_state120 = 143'd316912650057057350374175801344;
parameter    ap_ST_fsm_state121 = 143'd633825300114114700748351602688;
parameter    ap_ST_fsm_state122 = 143'd1267650600228229401496703205376;
parameter    ap_ST_fsm_pp6_stage0 = 143'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state126 = 143'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state127 = 143'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state128 = 143'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state129 = 143'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state130 = 143'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state131 = 143'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state132 = 143'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state133 = 143'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state134 = 143'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state135 = 143'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state136 = 143'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state137 = 143'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state138 = 143'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state139 = 143'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state140 = 143'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state141 = 143'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state142 = 143'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state143 = 143'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state144 = 143'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state145 = 143'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state146 = 143'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state147 = 143'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state148 = 143'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state149 = 143'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state150 = 143'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state151 = 143'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state152 = 143'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state153 = 143'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state154 = 143'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state155 = 143'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state156 = 143'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_pp7_stage0 = 143'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state160 = 143'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state161 = 143'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state162 = 143'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state163 = 143'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state164 = 143'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state165 = 143'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_pp8_stage0 = 143'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_pp8_stage1 = 143'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state176 = 143'd5575186299632655785383929568162090376495104;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM2_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM2_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_USER_VALUE = 0;
parameter    C_M_AXI_GMEM2_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM2_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM2_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
output   m_axi_gmem2_AWVALID;
input   m_axi_gmem2_AWREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_AWADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_AWID;
output  [7:0] m_axi_gmem2_AWLEN;
output  [2:0] m_axi_gmem2_AWSIZE;
output  [1:0] m_axi_gmem2_AWBURST;
output  [1:0] m_axi_gmem2_AWLOCK;
output  [3:0] m_axi_gmem2_AWCACHE;
output  [2:0] m_axi_gmem2_AWPROT;
output  [3:0] m_axi_gmem2_AWQOS;
output  [3:0] m_axi_gmem2_AWREGION;
output  [C_M_AXI_GMEM2_AWUSER_WIDTH - 1:0] m_axi_gmem2_AWUSER;
output   m_axi_gmem2_WVALID;
input   m_axi_gmem2_WREADY;
output  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_WDATA;
output  [C_M_AXI_GMEM2_WSTRB_WIDTH - 1:0] m_axi_gmem2_WSTRB;
output   m_axi_gmem2_WLAST;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_WID;
output  [C_M_AXI_GMEM2_WUSER_WIDTH - 1:0] m_axi_gmem2_WUSER;
output   m_axi_gmem2_ARVALID;
input   m_axi_gmem2_ARREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_ARADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_ARID;
output  [7:0] m_axi_gmem2_ARLEN;
output  [2:0] m_axi_gmem2_ARSIZE;
output  [1:0] m_axi_gmem2_ARBURST;
output  [1:0] m_axi_gmem2_ARLOCK;
output  [3:0] m_axi_gmem2_ARCACHE;
output  [2:0] m_axi_gmem2_ARPROT;
output  [3:0] m_axi_gmem2_ARQOS;
output  [3:0] m_axi_gmem2_ARREGION;
output  [C_M_AXI_GMEM2_ARUSER_WIDTH - 1:0] m_axi_gmem2_ARUSER;
input   m_axi_gmem2_RVALID;
output   m_axi_gmem2_RREADY;
input  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_RDATA;
input   m_axi_gmem2_RLAST;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_RID;
input  [C_M_AXI_GMEM2_RUSER_WIDTH - 1:0] m_axi_gmem2_RUSER;
input  [1:0] m_axi_gmem2_RRESP;
input   m_axi_gmem2_BVALID;
output   m_axi_gmem2_BREADY;
input  [1:0] m_axi_gmem2_BRESP;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_BID;
input  [C_M_AXI_GMEM2_BUSER_WIDTH - 1:0] m_axi_gmem2_BUSER;
output  [31:0] x_Addr_A;
output   x_EN_A;
output  [1:0] x_WEN_A;
output  [15:0] x_Din_A;
input  [15:0] x_Dout_A;
output   x_Clk_A;
output   x_Rst_A;
output  [31:0] dx_Addr_A;
output   dx_EN_A;
output  [1:0] dx_WEN_A;
output  [15:0] dx_Din_A;
input  [15:0] dx_Dout_A;
output   dx_Clk_A;
output   dx_Rst_A;
output  [31:0] y_Addr_A;
output   y_EN_A;
output  [1:0] y_WEN_A;
output  [15:0] y_Din_A;
input  [15:0] y_Dout_A;
output   y_Clk_A;
output   y_Rst_A;
output  [31:0] dy_Addr_A;
output   dy_EN_A;
output  [1:0] dy_WEN_A;
output  [15:0] dy_Din_A;
input  [15:0] dy_Dout_A;
output   dy_Clk_A;
output   dy_Rst_A;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

reg x_EN_A;
reg dx_EN_A;
reg[1:0] dx_WEN_A;
reg y_EN_A;
reg[1:0] y_WEN_A;
reg[15:0] y_Din_A;
reg dy_EN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [142:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] wt;
wire   [31:0] dwt;
wire   [31:0] b;
wire   [31:0] db;
wire   [31:0] debug_x;
wire   [31:0] debug_dx;
wire   [31:0] F;
wire   [31:0] C;
wire   [31:0] H;
wire   [31:0] W;
wire   [31:0] FH;
wire   [31:0] FW;
wire    fwprop;
wire    debugip;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state21;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln52_reg_3798;
wire    ap_CS_fsm_state11;
reg   [0:0] icmp_ln49_1_reg_3681;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln62_reg_3827;
wire    ap_CS_fsm_state41;
reg   [0:0] icmp_ln49_reg_3611;
reg   [0:0] fwprop_read_reg_3473;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln88_reg_3873;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state108;
reg   [0:0] icmp_ln120_reg_4450;
reg    gmem_blk_n_W;
reg    ap_enable_reg_pp6_iter2;
wire    ap_block_pp6_stage0;
reg   [0:0] icmp_ln131_reg_4578;
reg   [0:0] icmp_ln131_reg_4578_pp6_iter1_reg;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state130;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln96_reg_4080;
wire    ap_CS_fsm_state114;
reg    ap_enable_reg_pp5_iter2;
wire    ap_block_pp5_stage0;
reg   [0:0] icmp_ln123_reg_4549;
reg   [0:0] icmp_ln123_reg_4549_pp5_iter1_reg;
wire    ap_CS_fsm_state122;
reg   [0:0] cmp147408_reg_3941;
reg    gmem2_blk_n_AW;
wire    ap_CS_fsm_pp8_stage0;
reg    ap_enable_reg_pp8_iter1;
wire    ap_block_pp8_stage0;
reg   [0:0] icmp_ln140_1_reg_4882;
reg    gmem2_blk_n_W;
wire    ap_CS_fsm_pp8_stage1;
wire    ap_block_pp8_stage1;
reg   [0:0] icmp_ln140_1_reg_4882_pp8_iter1_reg;
reg    gmem2_blk_n_B;
reg    ap_enable_reg_pp8_iter4;
reg   [0:0] icmp_ln140_1_reg_4882_pp8_iter3_reg;
reg    ap_enable_reg_pp8_iter2;
reg   [0:0] icmp_ln140_1_reg_4882_pp8_iter4_reg;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg   [31:0] gmem_AWADDR;
reg   [31:0] gmem_AWLEN;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg   [15:0] gmem_WDATA;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
reg   [31:0] gmem_ARLEN;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [15:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg    gmem2_AWVALID;
wire    gmem2_AWREADY;
reg   [31:0] gmem2_AWADDR;
reg    gmem2_WVALID;
wire    gmem2_WREADY;
reg   [15:0] gmem2_WDATA;
wire    gmem2_ARREADY;
wire    gmem2_RVALID;
wire   [15:0] gmem2_RDATA;
wire    gmem2_RLAST;
wire   [0:0] gmem2_RID;
wire   [0:0] gmem2_RUSER;
wire   [1:0] gmem2_RRESP;
wire    gmem2_BVALID;
reg    gmem2_BREADY;
wire   [1:0] gmem2_BRESP;
wire   [0:0] gmem2_BID;
wire   [0:0] gmem2_BUSER;
reg   [30:0] l_reg_700;
reg   [30:0] i_1_reg_711;
reg   [30:0] i_2_reg_722;
reg   [30:0] l_1_reg_792;
reg   [95:0] indvar_flatten167_reg_859;
reg   [31:0] c_1_reg_871;
reg   [63:0] indvar_flatten138_reg_883;
reg   [31:0] fh_1_reg_894;
reg   [31:0] fw_1_reg_905;
reg   [30:0] l_2_reg_974;
reg   [30:0] i_5_reg_985;
reg   [30:0] fw_reg_1100;
reg   [15:0] empty_63_reg_1111;
reg   [30:0] i_6_reg_1136;
wire   [31:0] grp_fu_1162_p2;
reg   [31:0] reg_1172;
wire    ap_CS_fsm_state79;
(* use_dsp48 = "no" *) wire  signed [12:0] grp_fu_1167_p2;
reg  signed [12:0] reg_1176;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state142;
wire   [15:0] dbbuf_V_q0;
reg   [15:0] reg_1180;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter1;
wire    ap_block_state123_pp6_stage0_iter0;
wire    ap_block_state124_pp6_stage0_iter1;
wire    ap_block_state125_pp6_stage0_iter2;
reg    ap_block_state125_io;
reg    ap_block_pp6_stage0_11001;
reg   [0:0] debugip_read_reg_3469;
reg   [31:0] FW_read_reg_3477;
reg   [31:0] FH_read_reg_3498;
reg  signed [31:0] W_read_reg_3512;
reg  signed [31:0] H_read_reg_3522;
reg  signed [31:0] C_read_reg_3528;
reg   [31:0] F_read_reg_3539;
reg   [31:0] debug_dx_read_reg_3549;
reg   [31:0] debug_x_read_reg_3554;
reg   [31:0] db_read_reg_3559;
reg   [31:0] b_read_reg_3564;
reg   [31:0] dwt_read_reg_3569;
reg   [31:0] wt_read_reg_3575;
wire   [12:0] empty_fu_1186_p1;
reg   [12:0] empty_reg_3580;
wire  signed [12:0] empty_47_fu_1190_p1;
reg  signed [12:0] empty_47_reg_3585;
(* use_dsp48 = "no" *) wire  signed [12:0] outH_fu_1198_p2;
reg  signed [12:0] outH_reg_3594;
wire    ap_CS_fsm_state2;
wire   [12:0] trunc_ln44_fu_1208_p1;
reg   [12:0] trunc_ln44_reg_3601;
wire   [31:0] outW_fu_1212_p2;
reg   [31:0] outW_reg_3606;
wire   [0:0] icmp_ln49_fu_1218_p2;
wire   [63:0] grp_fu_1229_p2;
reg   [63:0] bound_reg_3625;
wire    ap_CS_fsm_state3;
wire   [30:0] empty_48_fu_1235_p1;
reg   [30:0] empty_48_reg_3631;
wire    ap_CS_fsm_state4;
wire   [0:0] grp_fu_1147_p2;
reg   [0:0] cmp57438_reg_3646;
wire    ap_CS_fsm_state8;
wire  signed [30:0] trunc_ln49_fu_1251_p1;
reg  signed [30:0] trunc_ln49_reg_3650;
wire  signed [30:0] trunc_ln49_1_fu_1254_p1;
reg  signed [30:0] trunc_ln49_1_reg_3655;
wire  signed [30:0] empty_49_fu_1257_p1;
reg  signed [30:0] empty_49_reg_3661;
wire   [94:0] grp_fu_1245_p2;
reg   [94:0] bound5_reg_3666;
wire   [0:0] grp_fu_1152_p2;
reg   [0:0] icmp_ln51_reg_3671;
wire   [94:0] add_ln49_1_fu_1260_p2;
reg   [94:0] add_ln49_1_reg_3676;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln49_1_fu_1271_p2;
wire   [30:0] grp_fu_1266_p2;
reg   [30:0] empty_50_reg_3685;
wire    ap_CS_fsm_state10;
wire   [30:0] tmp_fu_1280_p2;
reg   [30:0] tmp_reg_3691;
wire   [4:0] trunc_ln53_fu_1285_p1;
reg   [4:0] trunc_ln53_reg_3696;
wire  signed [30:0] add_ln49_fu_1289_p2;
reg  signed [30:0] add_ln49_reg_3701;
wire   [0:0] icmp_ln50_fu_1295_p2;
reg   [0:0] icmp_ln50_reg_3706;
wire   [30:0] select_ln49_2_fu_1300_p3;
reg   [30:0] select_ln49_2_reg_3717;
wire   [2:0] trunc_ln49_2_fu_1308_p1;
reg   [2:0] trunc_ln49_2_reg_3722;
wire   [30:0] grp_fu_1332_p2;
reg   [30:0] p_mid1_reg_3734;
wire    ap_CS_fsm_state13;
wire   [0:0] select_ln49_5_fu_1388_p3;
reg   [0:0] select_ln49_5_reg_3740;
wire    ap_CS_fsm_state14;
wire  signed [30:0] select_ln50_1_fu_1410_p3;
reg  signed [30:0] select_ln50_1_reg_3745;
wire   [6:0] add_ln53_1_fu_1434_p2;
reg   [6:0] add_ln53_1_reg_3750;
wire   [31:0] select_ln50_3_fu_1440_p3;
reg   [31:0] select_ln50_3_reg_3756;
wire   [30:0] grp_fu_1448_p2;
reg   [30:0] mul_ln50_reg_3761;
wire    ap_CS_fsm_state16;
wire   [31:0] select_ln50_fu_1456_p3;
reg   [31:0] select_ln50_reg_3766;
wire    ap_CS_fsm_state17;
wire  signed [30:0] tmp11_fu_1468_p2;
reg  signed [30:0] tmp11_reg_3772;
wire   [30:0] grp_fu_1473_p2;
reg   [30:0] empty_53_reg_3777;
wire    ap_CS_fsm_state19;
reg   [31:0] gmem_addr_2_reg_3782;
wire    ap_CS_fsm_state20;
wire   [9:0] add_ln53_4_fu_1558_p2;
reg   [9:0] add_ln53_4_reg_3788;
wire   [30:0] add_ln52_fu_1564_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state28_pp0_stage0_iter0;
reg    ap_block_state29_pp0_stage0_iter1;
wire    ap_block_state30_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln52_fu_1574_p2;
reg   [0:0] icmp_ln52_reg_3798_pp0_iter1_reg;
wire   [9:0] add_ln53_5_fu_1583_p2;
reg   [9:0] add_ln53_5_reg_3802;
reg   [9:0] add_ln53_5_reg_3802_pp0_iter1_reg;
reg   [15:0] gmem_addr_2_read_reg_3807;
wire   [31:0] add_ln51_fu_1592_p2;
wire    ap_CS_fsm_state31;
wire   [63:0] select_ln50_4_fu_1603_p3;
wire   [30:0] add_ln62_fu_1610_p2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state38_pp1_stage0_iter0;
reg    ap_block_state39_pp1_stage0_iter1;
wire    ap_block_state40_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln62_fu_1616_p2;
reg   [0:0] icmp_ln62_reg_3827_pp1_iter1_reg;
wire   [2:0] trunc_ln63_fu_1621_p1;
reg   [2:0] trunc_ln63_reg_3831;
reg   [2:0] trunc_ln63_reg_3831_pp1_iter1_reg;
reg   [15:0] gmem_addr_read_reg_3836;
reg   [31:0] gmem_addr_1_reg_3841;
wire   [31:0] sub_ln70_fu_1654_p2;
reg   [31:0] sub_ln70_reg_3848;
wire   [0:0] icmp_ln73_fu_1659_p2;
reg   [0:0] icmp_ln73_reg_3854;
wire   [30:0] trunc_ln88_fu_1664_p1;
reg   [30:0] trunc_ln88_reg_3860;
wire    ap_CS_fsm_state47;
wire   [30:0] add_ln88_fu_1667_p2;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state48_pp2_stage0_iter0;
reg    ap_block_state49_pp2_stage0_iter1;
wire    ap_block_state50_pp2_stage0_iter2;
reg    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln88_fu_1673_p2;
reg   [0:0] icmp_ln88_reg_3873_pp2_iter1_reg;
wire   [2:0] trunc_ln89_fu_1678_p1;
reg   [2:0] trunc_ln89_reg_3877;
reg   [2:0] trunc_ln89_reg_3877_pp2_iter1_reg;
reg   [15:0] gmem_addr_1_read_reg_3882;
wire    ap_CS_fsm_state51;
wire   [63:0] cast95_fu_1689_p1;
reg   [63:0] cast95_reg_3892;
wire   [63:0] grp_fu_1692_p2;
reg   [63:0] bound96_reg_3898;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
wire  signed [30:0] trunc_ln93_fu_1710_p1;
reg  signed [30:0] trunc_ln93_reg_3915;
wire    ap_CS_fsm_state54;
wire  signed [30:0] grp_fu_1716_p2;
reg  signed [30:0] empty_69_reg_3927;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state57;
wire  signed [30:0] grp_fu_1725_p2;
reg  signed [30:0] empty_70_reg_3945;
wire   [94:0] grp_fu_1704_p2;
reg   [94:0] bound107_reg_3951;
reg   [0:0] icmp_ln95_reg_3957;
wire    ap_CS_fsm_state58;
wire   [4:0] trunc_ln97_fu_1739_p1;
reg   [4:0] trunc_ln97_reg_3968;
wire   [94:0] add_ln93_1_fu_1743_p2;
reg   [94:0] add_ln93_1_reg_3973;
wire    ap_CS_fsm_state59;
wire   [30:0] grp_fu_1734_p2;
reg   [30:0] empty_71_reg_3978;
wire   [0:0] icmp_ln94_fu_1754_p2;
reg   [0:0] icmp_ln94_reg_3986;
wire   [0:0] icmp_ln93_fu_1749_p2;
wire   [0:0] cmp176393_fu_1759_p2;
reg   [0:0] cmp176393_reg_3997;
wire  signed [30:0] select_ln93_1_fu_1785_p3;
reg  signed [30:0] select_ln93_1_reg_4006;
wire    ap_CS_fsm_state60;
wire   [0:0] select_ln93_4_fu_1833_p3;
reg   [0:0] select_ln93_4_reg_4012;
wire   [31:0] select_ln94_fu_1850_p3;
reg   [31:0] select_ln94_reg_4017;
wire  signed [30:0] trunc_ln94_1_fu_1858_p1;
reg  signed [30:0] trunc_ln94_1_reg_4023;
wire   [6:0] add_ln97_1_fu_1878_p2;
reg   [6:0] add_ln97_1_reg_4028;
wire   [31:0] select_ln94_3_fu_1884_p3;
reg   [31:0] select_ln94_3_reg_4034;
wire  signed [30:0] trunc_ln95_fu_1892_p1;
reg  signed [30:0] trunc_ln95_reg_4039;
wire   [30:0] grp_fu_1896_p2;
reg   [30:0] mul_ln93_reg_4044;
wire    ap_CS_fsm_state62;
wire   [30:0] grp_fu_1900_p2;
reg   [30:0] p_mid1100_reg_4049;
wire   [30:0] grp_fu_1904_p2;
reg   [30:0] empty_74_reg_4054;
wire   [30:0] empty_75_fu_1924_p2;
reg   [30:0] empty_75_reg_4059;
wire    ap_CS_fsm_state63;
reg   [31:0] gmem_addr_3_reg_4064;
wire    ap_CS_fsm_state64;
wire   [9:0] add_ln97_4_fu_2011_p2;
reg   [9:0] add_ln97_4_reg_4070;
wire   [30:0] add_ln96_fu_2017_p2;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state72_pp3_stage0_iter0;
reg    ap_block_state73_pp3_stage0_iter1;
wire    ap_block_state74_pp3_stage0_iter2;
reg    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln96_fu_2027_p2;
reg   [0:0] icmp_ln96_reg_4080_pp3_iter1_reg;
wire   [9:0] add_ln97_5_fu_2036_p2;
reg   [9:0] add_ln97_5_reg_4084;
reg   [9:0] add_ln97_5_reg_4084_pp3_iter1_reg;
reg   [15:0] gmem_addr_3_read_reg_4089;
wire   [31:0] add_ln95_fu_2045_p2;
wire    ap_CS_fsm_state75;
wire   [63:0] select_ln94_4_fu_2056_p3;
wire   [63:0] grp_fu_1767_p2;
reg   [63:0] bound130_reg_4104;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state80;
wire  signed [12:0] trunc_ln103_fu_2088_p1;
reg  signed [12:0] trunc_ln103_reg_4130;
wire   [31:0] sub_ln103_fu_2096_p2;
reg   [31:0] sub_ln103_reg_4135;
wire   [95:0] grp_fu_2069_p2;
reg   [95:0] bound143_reg_4140;
wire   [62:0] grp_fu_2082_p2;
reg   [62:0] bound174_reg_4145;
wire   [0:0] icmp_ln108_fu_2101_p2;
reg   [0:0] icmp_ln108_reg_4150;
wire   [62:0] add_ln103_4_fu_2106_p2;
reg   [62:0] add_ln103_4_reg_4155;
wire    ap_CS_fsm_state82;
wire   [0:0] icmp_ln104_fu_2123_p2;
reg   [0:0] icmp_ln104_reg_4163;
wire   [0:0] icmp_ln103_fu_2112_p2;
wire   [30:0] select_ln103_1_fu_2129_p3;
reg   [30:0] select_ln103_1_reg_4168;
wire   [2:0] trunc_ln103_2_fu_2141_p1;
reg   [2:0] trunc_ln103_2_reg_4178;
wire   [31:0] select_ln103_fu_2145_p3;
reg   [31:0] select_ln103_reg_4185;
wire    ap_CS_fsm_state84;
wire   [12:0] trunc_ln104_fu_2152_p1;
reg   [12:0] trunc_ln104_reg_4190;
wire  signed [12:0] grp_fu_3367_p3;
wire    ap_CS_fsm_state85;
wire   [6:0] zext_ln104_fu_2180_p1;
reg   [6:0] zext_ln104_reg_4203;
wire    ap_CS_fsm_state88;
wire  signed [12:0] grp_fu_3374_p2;
reg  signed [12:0] empty_82_reg_4208;
reg   [2:0] dbbuf_V_addr_1_reg_4213;
wire   [31:0] add_ln105_fu_2184_p2;
reg   [31:0] add_ln105_reg_4218;
wire    ap_CS_fsm_state90;
wire   [12:0] trunc_ln105_fu_2195_p1;
reg   [12:0] trunc_ln105_reg_4226;
wire   [0:0] icmp_ln105_fu_2190_p2;
wire   [31:0] add_ln104_fu_2214_p2;
reg  signed [15:0] r_V_reg_4241;
wire    ap_CS_fsm_state92;
wire  signed [28:0] sext_ln1118_1_fu_2219_p1;
reg  signed [28:0] sext_ln1118_1_reg_4246;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state93_pp4_stage0_iter0;
wire    ap_block_state95_pp4_stage0_iter1;
wire    ap_block_state97_pp4_stage0_iter2;
wire    ap_block_state99_pp4_stage0_iter3;
wire    ap_block_state101_pp4_stage0_iter4;
wire    ap_block_state103_pp4_stage0_iter5;
wire    ap_block_state105_pp4_stage0_iter6;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln106_fu_2232_p2;
reg   [0:0] icmp_ln106_reg_4257;
reg   [0:0] icmp_ln106_reg_4257_pp4_iter1_reg;
reg   [0:0] icmp_ln106_reg_4257_pp4_iter2_reg;
reg   [0:0] icmp_ln106_reg_4257_pp4_iter3_reg;
reg   [0:0] icmp_ln106_reg_4257_pp4_iter4_reg;
reg   [0:0] icmp_ln106_reg_4257_pp4_iter5_reg;
wire   [31:0] add_ln106_fu_2237_p2;
reg   [31:0] add_ln106_reg_4261;
wire   [95:0] add_ln106_1_fu_2247_p2;
reg   [95:0] add_ln106_1_reg_4271;
wire    ap_CS_fsm_pp4_stage1;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state94_pp4_stage1_iter0;
wire    ap_block_state96_pp4_stage1_iter1;
wire    ap_block_state98_pp4_stage1_iter2;
wire    ap_block_state100_pp4_stage1_iter3;
wire    ap_block_state102_pp4_stage1_iter4;
wire    ap_block_state104_pp4_stage1_iter5;
wire    ap_block_pp4_stage1_11001;
wire   [0:0] icmp_ln107_fu_2253_p2;
reg   [0:0] icmp_ln107_reg_4276;
reg   [0:0] icmp_ln107_reg_4276_pp4_iter1_reg;
wire   [31:0] select_ln106_2_fu_2258_p3;
reg   [31:0] select_ln106_2_reg_4287;
wire   [4:0] trunc_ln106_2_fu_2265_p1;
reg   [4:0] trunc_ln106_2_reg_4292;
reg   [4:0] trunc_ln106_2_reg_4292_pp4_iter1_reg;
wire   [63:0] add_ln107_2_fu_2269_p2;
reg   [63:0] add_ln107_2_reg_4297;
wire   [63:0] select_ln107_4_fu_2275_p3;
reg   [63:0] select_ln107_4_reg_4302;
reg    ap_enable_reg_pp4_iter1;
(* use_dsp48 = "no" *) wire   [12:0] empty_80_fu_2290_p2;
reg   [12:0] empty_80_reg_4307;
wire   [31:0] select_ln106_fu_2299_p3;
reg   [31:0] select_ln106_reg_4312;
(* use_dsp48 = "no" *) wire   [12:0] p_mid1155_fu_2311_p2;
reg   [12:0] p_mid1155_reg_4317;
wire   [0:0] select_ln106_5_fu_2327_p3;
reg   [0:0] select_ln106_5_reg_4322;
wire   [31:0] add_ln107_fu_2333_p2;
reg   [31:0] add_ln107_reg_4329;
wire   [12:0] p_mid1134_fu_2348_p2;
reg   [12:0] p_mid1134_reg_4334;
wire   [6:0] select_ln107_1_fu_2358_p3;
reg   [6:0] select_ln107_1_reg_4339;
wire   [9:0] trunc_ln1118_fu_2422_p1;
reg   [9:0] trunc_ln1118_reg_4344;
wire   [7:0] trunc_ln1118_1_fu_2426_p1;
reg   [7:0] trunc_ln1118_1_reg_4349;
wire   [31:0] select_ln107_3_fu_2436_p3;
reg   [31:0] select_ln107_3_reg_4359;
reg    ap_enable_reg_pp4_iter2;
wire   [12:0] trunc_ln109_fu_2441_p1;
reg   [12:0] trunc_ln109_reg_4364;
reg   [12:0] trunc_ln109_reg_4364_pp4_iter3_reg;
wire   [9:0] trunc_ln1118_2_fu_2445_p1;
reg   [9:0] trunc_ln1118_2_reg_4369;
wire   [31:0] add_ln108_fu_2449_p2;
reg   [31:0] add_ln108_reg_4374;
wire   [9:0] add_ln1118_6_fu_2467_p2;
reg   [9:0] add_ln1118_6_reg_4379;
reg   [9:0] dwbuf_V_addr_2_reg_4389;
reg   [9:0] dwbuf_V_addr_2_reg_4389_pp4_iter4_reg;
reg   [9:0] dwbuf_V_addr_2_reg_4389_pp4_iter5_reg;
reg   [12:0] dx_addr_1_reg_4405;
reg   [12:0] dx_addr_1_reg_4405_pp4_iter4_reg;
wire   [0:0] addr_cmp_fu_2494_p2;
reg   [0:0] addr_cmp_reg_4410;
wire   [15:0] add_ln703_1_fu_2560_p2;
wire    ap_CS_fsm_state106;
wire   [94:0] add_ln120_1_fu_2565_p2;
reg   [94:0] add_ln120_1_reg_4435;
wire    ap_CS_fsm_state107;
wire   [4:0] trunc_ln124_fu_2580_p1;
reg   [4:0] trunc_ln124_reg_4445;
wire   [0:0] icmp_ln120_fu_2584_p2;
wire   [30:0] grp_fu_2575_p2;
reg   [30:0] empty_83_reg_4454;
wire   [0:0] icmp_ln121_fu_2595_p2;
reg   [0:0] icmp_ln121_reg_4459;
wire  signed [30:0] select_ln120_1_fu_2600_p3;
reg  signed [30:0] select_ln120_1_reg_4467;
reg    ap_block_state108_io;
wire   [2:0] trunc_ln120_fu_2608_p1;
reg   [2:0] trunc_ln120_reg_4473;
wire   [0:0] select_ln120_4_fu_2617_p3;
reg   [0:0] select_ln120_4_reg_4479;
wire   [31:0] select_ln121_fu_2630_p3;
reg   [31:0] select_ln121_reg_4486;
wire  signed [30:0] trunc_ln122_fu_2638_p1;
reg  signed [30:0] trunc_ln122_reg_4492;
wire  signed [30:0] trunc_ln121_1_fu_2689_p1;
reg  signed [30:0] trunc_ln121_1_reg_4497;
wire    ap_CS_fsm_state109;
wire   [6:0] add_ln124_1_fu_2708_p2;
reg   [6:0] add_ln124_1_reg_4502;
wire   [31:0] select_ln121_3_fu_2714_p3;
reg   [31:0] select_ln121_3_reg_4508;
wire   [30:0] grp_fu_2649_p2;
reg   [30:0] mul_ln120_reg_4513;
wire    ap_CS_fsm_state110;
wire   [30:0] grp_fu_2721_p2;
reg   [30:0] empty_87_reg_4518;
wire   [30:0] grp_fu_2725_p2;
reg   [30:0] p_mid1189_reg_4523;
wire    ap_CS_fsm_state111;
wire   [30:0] empty_88_fu_2745_p2;
reg   [30:0] empty_88_reg_4528;
wire    ap_CS_fsm_state112;
reg   [31:0] gmem_addr_4_reg_4533;
wire    ap_CS_fsm_state113;
wire   [9:0] add_ln124_4_fu_2832_p2;
reg   [9:0] add_ln124_4_reg_4539;
wire   [30:0] add_ln123_fu_2838_p2;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state115_pp5_stage0_iter0;
wire    ap_block_state116_pp5_stage0_iter1;
wire    ap_block_state117_pp5_stage0_iter2;
reg    ap_block_state117_io;
reg    ap_block_pp5_stage0_11001;
wire   [0:0] icmp_ln123_fu_2848_p2;
wire   [15:0] dwbuf_V_q1;
reg   [15:0] dwbuf_V_load_reg_4558;
reg    ap_enable_reg_pp5_iter1;
wire   [31:0] add_ln122_fu_2867_p2;
wire   [63:0] select_ln121_4_fu_2878_p3;
wire   [30:0] add_ln131_fu_2885_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [0:0] icmp_ln131_fu_2891_p2;
wire    ap_CS_fsm_state131;
wire   [63:0] grp_fu_2916_p2;
reg   [63:0] bound27_reg_4597;
wire    ap_CS_fsm_state132;
wire    ap_CS_fsm_state133;
wire   [95:0] grp_fu_2928_p2;
reg   [95:0] bound41_reg_4614;
wire    ap_CS_fsm_state137;
wire    ap_CS_fsm_state138;
reg   [0:0] cmp99323_reg_4630;
wire  signed [12:0] trunc_ln70_fu_2950_p1;
reg  signed [12:0] trunc_ln70_reg_4634;
wire   [126:0] grp_fu_2944_p2;
reg   [126:0] bound63_reg_4639;
wire   [0:0] icmp_ln72_fu_2953_p2;
reg   [0:0] icmp_ln72_reg_4644;
wire   [126:0] add_ln70_4_fu_2958_p2;
reg   [126:0] add_ln70_4_reg_4649;
wire    ap_CS_fsm_state143;
wire   [0:0] icmp_ln70_fu_2972_p2;
reg   [0:0] icmp_ln70_reg_4664;
wire  signed [12:0] grp_fu_3417_p2;
reg  signed [12:0] empty_57_reg_4668;
wire    ap_CS_fsm_state146;
wire  signed [12:0] grp_fu_3423_p2;
reg  signed [12:0] empty_58_reg_4673;
wire   [12:0] trunc_ln72_fu_2977_p1;
reg   [12:0] trunc_ln72_reg_4678;
(* use_dsp48 = "no" *) wire   [12:0] empty_59_fu_2981_p2;
reg   [12:0] empty_59_reg_4683;
wire   [0:0] icmp_ln71_fu_2992_p2;
reg   [0:0] icmp_ln71_reg_4688;
wire   [2:0] select_ln70_2_fu_3017_p3;
reg   [2:0] select_ln70_2_reg_4703;
wire   [0:0] select_ln70_6_fu_3042_p3;
reg   [0:0] select_ln70_6_reg_4708;
wire   [30:0] select_ln70_7_fu_3049_p3;
reg   [30:0] select_ln70_7_reg_4716;
wire  signed [12:0] trunc_ln71_1_fu_3063_p1;
reg  signed [12:0] trunc_ln71_1_reg_4721;
wire   [0:0] select_ln71_4_fu_3067_p3;
reg   [0:0] select_ln71_4_reg_4726;
wire   [31:0] select_ln71_5_fu_3074_p3;
reg   [31:0] select_ln71_5_reg_4734;
wire   [0:0] or_ln71_fu_3082_p2;
reg   [0:0] or_ln71_reg_4739;
wire    ap_CS_fsm_state147;
wire   [12:0] trunc_ln72_1_fu_3107_p1;
reg   [12:0] trunc_ln72_1_reg_4744;
wire   [12:0] select_ln72_1_fu_3111_p3;
reg   [12:0] select_ln72_1_reg_4749;
wire   [31:0] select_ln72_3_fu_3118_p3;
reg   [31:0] select_ln72_3_reg_4754;
wire    ap_CS_fsm_state149;
wire   [12:0] select_ln71_1_fu_3160_p3;
reg   [12:0] select_ln71_1_reg_4764;
wire    ap_CS_fsm_state150;
wire    ap_CS_fsm_state151;
wire   [31:0] select_ln72_fu_3179_p3;
reg   [31:0] select_ln72_reg_4774;
wire   [12:0] trunc_ln73_fu_3187_p1;
reg   [12:0] trunc_ln73_reg_4779;
wire   [15:0] bbuf_V_q0;
wire    ap_CS_fsm_state152;
reg   [12:0] y_addr_reg_4790;
wire   [31:0] add_ln75_fu_3195_p2;
reg   [31:0] add_ln75_reg_4795;
wire    ap_CS_fsm_state153;
wire   [0:0] icmp_ln75_fu_3201_p2;
wire   [31:0] add_ln73_fu_3220_p2;
wire   [63:0] select_ln72_4_fu_3231_p3;
wire   [95:0] select_ln71_6_fu_3244_p3;
(* use_dsp48 = "no" *) wire   [12:0] add_ln77_fu_3251_p2;
reg   [12:0] add_ln77_reg_4823;
wire    ap_CS_fsm_state156;
wire   [30:0] add_ln76_fu_3255_p2;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter0;
wire    ap_block_state157_pp7_stage0_iter0;
wire    ap_block_state158_pp7_stage0_iter1;
wire    ap_block_state159_pp7_stage0_iter2;
wire    ap_block_pp7_stage0_11001;
wire   [0:0] icmp_ln76_fu_3265_p2;
reg   [0:0] icmp_ln76_reg_4833;
reg   [0:0] icmp_ln76_reg_4833_pp7_iter1_reg;
wire   [15:0] add_ln703_fu_3284_p2;
reg    ap_enable_reg_pp7_iter2;
wire  signed [31:0] grp_fu_2905_p2;
reg  signed [31:0] tmp5_reg_4847;
wire    ap_CS_fsm_state162;
wire   [31:0] grp_fu_3290_p2;
reg   [31:0] mul293_reg_4852;
wire    ap_CS_fsm_state164;
wire   [0:0] icmp_ln140_fu_3294_p2;
wire    ap_CS_fsm_state165;
wire   [30:0] trunc_ln140_fu_3299_p1;
reg   [30:0] trunc_ln140_reg_4862;
wire  signed [31:0] sext_ln140_fu_3311_p1;
reg  signed [31:0] sext_ln140_reg_4867;
wire  signed [31:0] sext_ln140_1_fu_3324_p1;
reg  signed [31:0] sext_ln140_1_reg_4872;
wire   [30:0] add_ln140_fu_3328_p2;
reg   [30:0] add_ln140_reg_4877;
reg    ap_enable_reg_pp8_iter0;
wire    ap_block_state166_pp8_stage0_iter0;
wire    ap_block_state168_pp8_stage0_iter1;
reg    ap_block_state168_io;
wire    ap_block_state170_pp8_stage0_iter2;
reg    ap_block_state170_io;
wire    ap_block_state172_pp8_stage0_iter3;
reg    ap_block_state174_pp8_stage0_iter4;
reg    ap_block_pp8_stage0_11001;
wire   [0:0] icmp_ln140_1_fu_3334_p2;
reg   [0:0] icmp_ln140_1_reg_4882_pp8_iter2_reg;
reg   [31:0] gmem2_addr_reg_4891;
reg   [31:0] gmem2_addr_1_reg_4902;
reg   [31:0] gmem2_addr_1_reg_4902_pp8_iter1_reg;
reg   [15:0] x_load_1_reg_4908;
reg   [15:0] dx_load_reg_4913;
wire    ap_CS_fsm_state27;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state28;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state37;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state38;
reg    ap_enable_reg_pp1_iter2;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state48;
reg    ap_enable_reg_pp2_iter2;
wire    ap_CS_fsm_state71;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state72;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_pp4_stage1_subdone;
reg    ap_condition_pp4_flush_enable;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter1_state96;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter4;
reg    ap_enable_reg_pp4_iter5;
reg    ap_enable_reg_pp4_iter6;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state115;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state123;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_flush_enable;
reg    ap_enable_reg_pp7_iter1;
reg    ap_block_pp8_stage0_subdone;
reg    ap_condition_pp8_exit_iter0_state166;
wire    ap_block_state167_pp8_stage1_iter0;
wire    ap_block_state169_pp8_stage1_iter1;
reg    ap_block_state169_io;
wire    ap_block_state171_pp8_stage1_iter2;
wire    ap_block_state173_pp8_stage1_iter3;
reg    ap_block_state175_pp8_stage1_iter4;
reg    ap_block_pp8_stage1_subdone;
reg    ap_enable_reg_pp8_iter3;
reg   [9:0] wbuf_V_address0;
reg    wbuf_V_ce0;
reg    wbuf_V_we0;
wire  signed [15:0] wbuf_V_q0;
reg   [9:0] dwbuf_V_address0;
reg    dwbuf_V_ce0;
reg    dwbuf_V_we0;
reg   [15:0] dwbuf_V_d0;
reg   [9:0] dwbuf_V_address1;
reg    dwbuf_V_ce1;
reg   [2:0] bbuf_V_address0;
reg    bbuf_V_ce0;
reg    bbuf_V_we0;
reg   [2:0] dbbuf_V_address0;
reg    dbbuf_V_ce0;
reg    dbbuf_V_we0;
reg   [15:0] dbbuf_V_d0;
reg   [94:0] indvar_flatten22_reg_641;
reg  signed [30:0] i_reg_652;
reg   [63:0] indvar_flatten_reg_664;
reg   [31:0] j_reg_676;
reg   [31:0] k_reg_688;
reg   [31:0] j_1_reg_733;
reg   [94:0] indvar_flatten125_reg_745;
reg   [30:0] i_3_reg_756;
reg   [63:0] indvar_flatten102_reg_768;
reg   [31:0] k_1_reg_780;
reg   [62:0] indvar_flatten180_reg_803;
reg   [30:0] f_1_reg_814;
reg   [31:0] h_1_reg_825;
reg   [31:0] w_1_reg_837;
reg   [15:0] empty_77_reg_848;
reg   [95:0] ap_phi_mux_indvar_flatten167_phi_fu_863_p4;
wire    ap_block_pp4_stage0;
reg   [31:0] ap_phi_mux_c_1_phi_fu_875_p4;
reg   [63:0] ap_phi_mux_indvar_flatten138_phi_fu_887_p4;
wire    ap_block_pp4_stage1;
reg   [31:0] ap_phi_mux_fh_1_phi_fu_898_p4;
reg   [31:0] ap_phi_mux_fw_1_phi_fu_909_p4;
reg   [94:0] indvar_flatten214_reg_917;
reg    ap_block_state122;
reg   [31:0] j_2_reg_928;
reg   [30:0] i_4_reg_940;
reg   [63:0] indvar_flatten191_reg_951;
reg   [31:0] k_2_reg_963;
reg   [126:0] indvar_flatten91_reg_996;
reg   [30:0] f_reg_1007;
reg   [31:0] c_reg_1019;
reg   [95:0] indvar_flatten57_reg_1031;
reg   [63:0] indvar_flatten36_reg_1043;
reg   [31:0] h_reg_1055;
reg   [31:0] w_reg_1067;
reg   [15:0] empty_60_reg_1079;
wire    ap_CS_fsm_state161;
reg   [31:0] fh_reg_1089;
reg   [15:0] empty_65_reg_1123;
wire    ap_CS_fsm_state160;
reg   [30:0] ap_phi_mux_i_6_phi_fu_1140_p4;
wire   [31:0] zext_ln53_6_fu_1588_p1;
wire   [31:0] zext_ln63_fu_1625_p1;
wire   [31:0] zext_ln89_fu_1682_p1;
wire   [31:0] zext_ln97_6_fu_2041_p1;
wire   [31:0] zext_ln103_fu_2156_p1;
wire   [31:0] p_cast29_fu_2204_p1;
wire   [31:0] zext_ln1118_7_fu_2472_p1;
wire   [31:0] zext_ln1118_fu_2481_p1;
wire   [31:0] zext_ln124_6_fu_2862_p1;
wire   [31:0] zext_ln132_fu_2900_p1;
wire   [31:0] zext_ln70_fu_3166_p1;
wire   [31:0] zext_ln74_fu_3191_p1;
wire   [31:0] zext_ln1116_fu_3279_p1;
wire    ap_block_pp7_stage0;
wire   [31:0] zext_ln141_fu_3339_p1;
wire  signed [31:0] sext_ln62_fu_1321_p1;
wire  signed [31:0] sext_ln52_fu_1519_p1;
wire  signed [31:0] sext_ln88_fu_1638_p1;
wire  signed [31:0] sext_ln96_fu_1972_p1;
wire  signed [31:0] sext_ln123_fu_2793_p1;
wire   [31:0] add_ln141_fu_3345_p2;
wire   [31:0] add_ln142_fu_3356_p2;
reg    ap_block_state11_io;
reg    ap_predicate_op403_readreq_state41;
reg    ap_block_state41_io;
reg    ap_predicate_op854_writeresp_state130;
reg    ap_block_state130;
wire    ap_block_pp5_stage0_01001;
wire    ap_block_pp6_stage0_01001;
reg    ap_block_pp8_stage1_11001;
reg    ap_block_pp8_stage1_01001;
reg    ap_block_pp8_stage0_01001;
reg   [31:0] reuse_addr_reg_fu_262;
reg   [15:0] reuse_reg_fu_266;
wire    ap_CS_fsm_state91;
reg   [31:0] x_Addr_A_orig;
reg   [31:0] dx_Addr_A_orig;
reg   [31:0] y_Addr_A_orig;
wire   [31:0] grp_fu_1157_p2;
wire  signed [31:0] empty_47_fu_1190_p0;
wire   [12:0] sub_ln43_fu_1194_p2;
wire   [31:0] sub_ln44_fu_1204_p2;
wire   [31:0] grp_fu_1229_p0;
wire   [31:0] grp_fu_1229_p1;
wire   [30:0] grp_fu_1245_p0;
wire   [63:0] grp_fu_1245_p1;
wire   [30:0] trunc_ln50_fu_1276_p1;
wire   [30:0] trunc_ln3_fu_1312_p4;
wire    ap_CS_fsm_state12;
wire   [4:0] tmp_2_fu_1351_p3;
wire   [5:0] zext_ln53_1_fu_1358_p1;
wire   [5:0] zext_ln53_fu_1348_p1;
wire   [5:0] add_ln53_fu_1362_p2;
wire   [0:0] icmp_ln51_1_fu_1383_p2;
wire   [31:0] select_ln49_fu_1336_p3;
wire   [31:0] add_ln50_fu_1394_p2;
wire   [30:0] trunc_ln50_1_fu_1400_p1;
wire   [30:0] select_ln49_1_fu_1343_p3;
wire   [30:0] tmp_mid1_fu_1404_p2;
wire   [30:0] select_ln49_3_fu_1372_p3;
wire   [4:0] trunc_ln53_1_fu_1418_p1;
wire   [4:0] select_ln49_4_fu_1377_p3;
wire   [4:0] select_ln50_2_fu_1422_p3;
wire   [6:0] zext_ln50_fu_1368_p1;
wire   [6:0] zext_ln53_2_fu_1430_p1;
wire    ap_CS_fsm_state15;
wire   [0:0] or_ln50_fu_1452_p2;
wire   [30:0] trunc_ln51_fu_1464_p1;
wire    ap_CS_fsm_state18;
wire   [8:0] tmp_1_fu_1480_p3;
wire   [29:0] zext_ln53_4_fu_1487_p1;
wire   [29:0] zext_ln53_3_fu_1477_p1;
wire   [31:0] tmp_4_fu_1497_p3;
wire   [31:0] empty_54_fu_1504_p2;
wire   [30:0] trunc_ln5_fu_1509_p4;
wire   [6:0] trunc_ln53_2_fu_1529_p1;
wire   [29:0] add_ln53_2_fu_1491_p2;
wire   [29:0] zext_ln53_5_fu_1532_p1;
wire   [29:0] add_ln53_3_fu_1536_p2;
wire   [7:0] trunc_ln53_4_fu_1546_p1;
wire   [9:0] p_shl1_cast_fu_1550_p3;
wire   [9:0] trunc_ln53_3_fu_1542_p1;
wire   [31:0] l_cast_fu_1570_p1;
wire   [9:0] trunc_ln53_5_fu_1579_p1;
wire   [63:0] add_ln50_1_fu_1597_p2;
wire   [30:0] trunc_ln8_fu_1629_p4;
wire   [31:0] add_ln70_fu_1649_p2;
wire   [31:0] grp_fu_1692_p0;
wire   [31:0] grp_fu_1692_p1;
wire   [30:0] grp_fu_1704_p0;
wire   [63:0] grp_fu_1704_p1;
wire  signed [30:0] grp_fu_1716_p0;
wire  signed [30:0] grp_fu_1716_p1;
wire  signed [30:0] grp_fu_1725_p1;
wire  signed [30:0] grp_fu_1734_p0;
wire   [31:0] grp_fu_1767_p0;
wire   [31:0] grp_fu_1767_p1;
wire   [30:0] add_ln93_fu_1772_p2;
wire   [2:0] trunc_ln93_2_fu_1792_p1;
wire   [4:0] tmp_7_fu_1800_p3;
wire   [5:0] zext_ln97_1_fu_1808_p1;
wire   [5:0] zext_ln97_fu_1796_p1;
wire   [5:0] add_ln97_fu_1812_p2;
wire   [0:0] icmp_ln95_1_fu_1828_p2;
wire   [31:0] select_ln93_fu_1778_p3;
wire   [0:0] or_ln94_fu_1845_p2;
wire   [31:0] add_ln94_fu_1839_p2;
wire   [4:0] trunc_ln97_1_fu_1862_p1;
wire   [4:0] select_ln93_3_fu_1822_p3;
wire   [4:0] select_ln94_2_fu_1866_p3;
wire   [6:0] zext_ln94_fu_1818_p1;
wire   [6:0] zext_ln97_2_fu_1874_p1;
wire    ap_CS_fsm_state61;
wire   [30:0] select_ln93_2_fu_1908_p3;
wire   [30:0] tmp2_fu_1920_p2;
wire   [30:0] select_ln94_1_fu_1914_p3;
wire   [8:0] tmp_3_fu_1933_p3;
wire   [29:0] zext_ln97_4_fu_1940_p1;
wire   [29:0] zext_ln97_3_fu_1930_p1;
wire   [31:0] tmp_9_fu_1950_p3;
wire   [31:0] empty_76_fu_1957_p2;
wire   [30:0] trunc_ln_fu_1962_p4;
wire   [6:0] trunc_ln97_2_fu_1982_p1;
wire   [29:0] add_ln97_2_fu_1944_p2;
wire   [29:0] zext_ln97_5_fu_1985_p1;
wire   [29:0] add_ln97_3_fu_1989_p2;
wire   [7:0] trunc_ln97_4_fu_1999_p1;
wire   [9:0] p_shl3_cast_fu_2003_p3;
wire   [9:0] trunc_ln97_3_fu_1995_p1;
wire   [31:0] l_1_cast_fu_2023_p1;
wire   [9:0] trunc_ln97_5_fu_2032_p1;
wire   [63:0] add_ln94_1_fu_2050_p2;
wire   [31:0] grp_fu_2069_p0;
wire   [63:0] grp_fu_2069_p1;
wire   [30:0] grp_fu_2082_p0;
wire   [31:0] grp_fu_2082_p1;
wire   [31:0] add_ln103_fu_2091_p2;
wire   [30:0] add_ln103_2_fu_2117_p2;
wire   [4:0] tmp_s_fu_2163_p3;
wire   [5:0] zext_ln1118_2_fu_2170_p1;
wire   [5:0] zext_ln1118_1_fu_2160_p1;
wire   [5:0] add_ln1118_1_fu_2174_p2;
(* use_dsp48 = "no" *) wire   [12:0] empty_78_fu_2199_p2;
wire  signed [15:0] sext_ln1118_1_fu_2219_p0;
wire   [12:0] trunc_ln107_fu_2281_p1;
wire   [12:0] tmp3_fu_2285_p2;
wire  signed [12:0] grp_fu_3380_p2;
wire  signed [12:0] grp_fu_3387_p2;
wire   [6:0] trunc_ln727_fu_2295_p1;
wire   [0:0] icmp_ln108_1_fu_2322_p2;
wire   [12:0] trunc_ln107_1_fu_2339_p1;
wire   [12:0] tmp3_mid1_fu_2343_p2;
wire   [12:0] select_ln106_1_fu_2306_p3;
wire   [6:0] trunc_ln727_1_fu_2354_p1;
wire   [6:0] select_ln106_3_fu_2315_p3;
wire   [6:0] zext_ln1118_3_fu_2366_p1;
wire   [6:0] add_ln1118_2_fu_2369_p2;
wire   [8:0] tmp_10_fu_2378_p3;
wire   [29:0] zext_ln1118_5_fu_2386_p1;
wire   [29:0] zext_ln1118_4_fu_2374_p1;
wire   [0:0] or_ln107_fu_2401_p2;
wire   [29:0] add_ln1118_3_fu_2390_p2;
wire   [29:0] zext_ln1118_6_fu_2413_p1;
wire   [29:0] add_ln1118_4_fu_2416_p2;
wire   [12:0] select_ln106_4_fu_2396_p3;
wire   [31:0] select_ln107_fu_2405_p3;
wire   [9:0] p_shl7_cast_fu_2455_p3;
wire   [9:0] add_ln1118_5_fu_2462_p2;
wire  signed [12:0] grp_fu_3394_p3;
(* use_dsp48 = "no" *) wire   [12:0] add_ln1118_fu_2477_p2;
wire   [15:0] lhs_2_fu_2512_p3;
wire  signed [28:0] grp_fu_3401_p3;
wire  signed [28:0] grp_fu_3409_p3;
wire  signed [30:0] grp_fu_2575_p0;
wire   [30:0] add_ln120_fu_2589_p2;
wire   [0:0] icmp_ln122_fu_2612_p2;
wire   [0:0] or_ln121_fu_2624_p2;
wire   [4:0] tmp_5_fu_2656_p3;
wire   [5:0] zext_ln124_1_fu_2663_p1;
wire   [5:0] zext_ln124_fu_2653_p1;
wire   [5:0] add_ln124_fu_2667_p2;
wire   [31:0] select_ln120_fu_2642_p3;
wire   [31:0] add_ln121_fu_2683_p2;
wire   [4:0] trunc_ln124_1_fu_2693_p1;
wire   [4:0] select_ln120_3_fu_2677_p3;
wire   [4:0] select_ln121_2_fu_2697_p3;
wire   [6:0] zext_ln121_fu_2673_p1;
wire   [6:0] zext_ln124_2_fu_2704_p1;
wire   [30:0] select_ln120_2_fu_2729_p3;
wire   [30:0] tmp4_fu_2741_p2;
wire   [30:0] select_ln121_1_fu_2735_p3;
wire   [8:0] tmp_6_fu_2754_p3;
wire   [29:0] zext_ln124_4_fu_2761_p1;
wire   [29:0] zext_ln124_3_fu_2751_p1;
wire   [31:0] tmp_8_fu_2771_p3;
wire   [31:0] empty_89_fu_2778_p2;
wire   [30:0] trunc_ln1_fu_2783_p4;
wire   [6:0] trunc_ln124_2_fu_2803_p1;
wire   [29:0] add_ln124_2_fu_2765_p2;
wire   [29:0] zext_ln124_5_fu_2806_p1;
wire   [29:0] add_ln124_3_fu_2810_p2;
wire   [7:0] trunc_ln124_4_fu_2820_p1;
wire   [9:0] p_shl5_cast_fu_2824_p3;
wire   [9:0] trunc_ln124_3_fu_2816_p1;
wire   [31:0] l_2_cast_fu_2844_p1;
wire   [9:0] trunc_ln124_5_fu_2853_p1;
wire   [9:0] add_ln124_5_fu_2857_p2;
wire   [63:0] add_ln121_1_fu_2872_p2;
wire   [2:0] trunc_ln132_fu_2896_p1;
wire   [31:0] grp_fu_2916_p0;
wire   [31:0] grp_fu_2916_p1;
wire   [31:0] grp_fu_2928_p0;
wire   [63:0] grp_fu_2928_p1;
wire   [30:0] trunc_ln70_1_fu_2934_p1;
wire   [30:0] grp_fu_2944_p0;
wire   [95:0] grp_fu_2944_p1;
wire   [30:0] add_ln70_2_fu_2986_p2;
wire   [2:0] trunc_ln70_4_fu_3009_p1;
wire   [2:0] trunc_ln70_5_fu_3013_p1;
wire   [0:0] icmp_ln73_1_fu_3025_p2;
wire   [0:0] icmp_ln72_1_fu_3037_p2;
wire   [31:0] select_ln70_fu_2997_p3;
wire   [31:0] add_ln71_fu_3057_p2;
wire   [0:0] select_ln70_5_fu_3030_p3;
wire   [31:0] select_ln71_fu_3086_p3;
wire   [31:0] add_ln72_fu_3101_p2;
wire   [12:0] select_ln71_2_fu_3094_p3;
wire  signed [12:0] grp_fu_3428_p2;
wire   [12:0] select_ln70_1_fu_3125_p3;
wire   [12:0] select_ln70_4_fu_3130_p3;
wire   [12:0] p_mid132_fu_3142_p2;
wire   [12:0] select_ln71_3_fu_3135_p3;
wire  signed [12:0] grp_fu_3435_p2;
wire   [12:0] select_ln70_3_fu_3154_p3;
wire   [0:0] or_ln72_fu_3170_p2;
wire   [0:0] or_ln72_1_fu_3174_p2;
wire  signed [12:0] grp_fu_3440_p3;
wire   [12:0] trunc_ln75_fu_3206_p1;
wire   [12:0] tmp1_fu_3210_p2;
wire   [63:0] add_ln72_1_fu_3225_p2;
wire   [95:0] add_ln71_1_fu_3238_p2;
wire  signed [12:0] grp_fu_3449_p2;
wire   [31:0] fw_cast_fu_3261_p1;
wire   [12:0] trunc_ln77_fu_3270_p1;
wire   [12:0] add_ln1116_fu_3274_p2;
wire    ap_CS_fsm_state163;
wire   [30:0] trunc_ln4_fu_3302_p4;
wire   [30:0] trunc_ln140_1_fu_3315_p4;
wire  signed [12:0] grp_fu_3367_p0;
wire   [12:0] grp_fu_3367_p2;
wire  signed [12:0] grp_fu_3380_p0;
wire  signed [12:0] grp_fu_3387_p0;
wire  signed [12:0] grp_fu_3394_p0;
wire  signed [15:0] grp_fu_3401_p1;
wire   [28:0] grp_fu_3401_p2;
wire  signed [15:0] grp_fu_3409_p1;
wire   [28:0] grp_fu_3409_p2;
wire  signed [12:0] grp_fu_3417_p0;
wire  signed [12:0] grp_fu_3423_p0;
wire  signed [12:0] grp_fu_3428_p0;
wire  signed [12:0] grp_fu_3440_p0;
wire   [12:0] grp_fu_3440_p2;
wire  signed [12:0] grp_fu_3449_p0;
reg    grp_fu_2575_ce;
reg    grp_fu_2905_ce;
wire    ap_CS_fsm_state176;
reg   [142:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp8;
wire    ap_enable_pp8;
wire   [63:0] grp_fu_1229_p00;
wire   [63:0] grp_fu_1229_p10;
wire   [94:0] grp_fu_1245_p00;
wire   [94:0] grp_fu_1245_p10;
wire   [63:0] grp_fu_1692_p00;
wire   [63:0] grp_fu_1692_p10;
wire   [94:0] grp_fu_1704_p00;
wire   [94:0] grp_fu_1704_p10;
wire   [63:0] grp_fu_1767_p10;
wire   [95:0] grp_fu_2069_p00;
wire   [95:0] grp_fu_2069_p10;
wire   [62:0] grp_fu_2082_p00;
wire   [62:0] grp_fu_2082_p10;
wire   [63:0] grp_fu_2916_p00;
wire   [63:0] grp_fu_2916_p10;
wire   [95:0] grp_fu_2928_p00;
wire   [95:0] grp_fu_2928_p10;
wire   [126:0] grp_fu_2944_p00;
wire   [126:0] grp_fu_2944_p10;
reg    ap_condition_4596;
reg    ap_condition_4600;
reg    ap_condition_2404;
reg    ap_condition_2416;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 143'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp8_iter1 = 1'b0;
#0 ap_enable_reg_pp8_iter4 = 1'b0;
#0 ap_enable_reg_pp8_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp8_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp4_iter6 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp8_iter3 = 1'b0;
end

conv_combined_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .wt(wt),
    .dwt(dwt),
    .b(b),
    .db(db),
    .debug_x(debug_x),
    .debug_dx(debug_dx),
    .F(F),
    .C(C),
    .H(H),
    .W(W),
    .FH(FH),
    .FW(FW),
    .fwprop(fwprop),
    .debugip(debugip),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

conv_combined_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(gmem_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(gmem_AWLEN),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(gmem_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

conv_combined_gmem2_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM2_CACHE_VALUE ))
gmem2_m_axi_U(
    .AWVALID(m_axi_gmem2_AWVALID),
    .AWREADY(m_axi_gmem2_AWREADY),
    .AWADDR(m_axi_gmem2_AWADDR),
    .AWID(m_axi_gmem2_AWID),
    .AWLEN(m_axi_gmem2_AWLEN),
    .AWSIZE(m_axi_gmem2_AWSIZE),
    .AWBURST(m_axi_gmem2_AWBURST),
    .AWLOCK(m_axi_gmem2_AWLOCK),
    .AWCACHE(m_axi_gmem2_AWCACHE),
    .AWPROT(m_axi_gmem2_AWPROT),
    .AWQOS(m_axi_gmem2_AWQOS),
    .AWREGION(m_axi_gmem2_AWREGION),
    .AWUSER(m_axi_gmem2_AWUSER),
    .WVALID(m_axi_gmem2_WVALID),
    .WREADY(m_axi_gmem2_WREADY),
    .WDATA(m_axi_gmem2_WDATA),
    .WSTRB(m_axi_gmem2_WSTRB),
    .WLAST(m_axi_gmem2_WLAST),
    .WID(m_axi_gmem2_WID),
    .WUSER(m_axi_gmem2_WUSER),
    .ARVALID(m_axi_gmem2_ARVALID),
    .ARREADY(m_axi_gmem2_ARREADY),
    .ARADDR(m_axi_gmem2_ARADDR),
    .ARID(m_axi_gmem2_ARID),
    .ARLEN(m_axi_gmem2_ARLEN),
    .ARSIZE(m_axi_gmem2_ARSIZE),
    .ARBURST(m_axi_gmem2_ARBURST),
    .ARLOCK(m_axi_gmem2_ARLOCK),
    .ARCACHE(m_axi_gmem2_ARCACHE),
    .ARPROT(m_axi_gmem2_ARPROT),
    .ARQOS(m_axi_gmem2_ARQOS),
    .ARREGION(m_axi_gmem2_ARREGION),
    .ARUSER(m_axi_gmem2_ARUSER),
    .RVALID(m_axi_gmem2_RVALID),
    .RREADY(m_axi_gmem2_RREADY),
    .RDATA(m_axi_gmem2_RDATA),
    .RLAST(m_axi_gmem2_RLAST),
    .RID(m_axi_gmem2_RID),
    .RUSER(m_axi_gmem2_RUSER),
    .RRESP(m_axi_gmem2_RRESP),
    .BVALID(m_axi_gmem2_BVALID),
    .BREADY(m_axi_gmem2_BREADY),
    .BRESP(m_axi_gmem2_BRESP),
    .BID(m_axi_gmem2_BID),
    .BUSER(m_axi_gmem2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem2_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem2_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem2_RDATA),
    .I_RID(gmem2_RID),
    .I_RUSER(gmem2_RUSER),
    .I_RRESP(gmem2_RRESP),
    .I_RLAST(gmem2_RLAST),
    .I_AWVALID(gmem2_AWVALID),
    .I_AWREADY(gmem2_AWREADY),
    .I_AWADDR(gmem2_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem2_WVALID),
    .I_WREADY(gmem2_WREADY),
    .I_WDATA(gmem2_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(gmem2_BVALID),
    .I_BREADY(gmem2_BREADY),
    .I_BRESP(gmem2_BRESP),
    .I_BID(gmem2_BID),
    .I_BUSER(gmem2_BUSER)
);

conv_combined_wbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 625 ),
    .AddressWidth( 10 ))
wbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(wbuf_V_address0),
    .ce0(wbuf_V_ce0),
    .we0(wbuf_V_we0),
    .d0(gmem_addr_2_read_reg_3807),
    .q0(wbuf_V_q0)
);

conv_combined_dwbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 625 ),
    .AddressWidth( 10 ))
dwbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dwbuf_V_address0),
    .ce0(dwbuf_V_ce0),
    .we0(dwbuf_V_we0),
    .d0(dwbuf_V_d0),
    .address1(dwbuf_V_address1),
    .ce1(dwbuf_V_ce1),
    .q1(dwbuf_V_q1)
);

conv_combined_bbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
bbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bbuf_V_address0),
    .ce0(bbuf_V_ce0),
    .we0(bbuf_V_we0),
    .d0(gmem_addr_read_reg_3836),
    .q0(bbuf_V_q0)
);

conv_combined_bbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dbbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dbbuf_V_address0),
    .ce0(dbbuf_V_ce0),
    .we0(dbbuf_V_we0),
    .d0(dbbuf_V_d0),
    .q0(dbbuf_V_q0)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1229_p0),
    .din1(grp_fu_1229_p1),
    .ce(1'b1),
    .dout(grp_fu_1229_p2)
);

conv_combined_mul_31ns_64ns_95_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
mul_31ns_64ns_95_5_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1245_p0),
    .din1(grp_fu_1245_p1),
    .ce(1'b1),
    .dout(grp_fu_1245_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(i_reg_652),
    .din1(trunc_ln49_1_reg_3655),
    .ce(1'b1),
    .dout(grp_fu_1266_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(add_ln49_reg_3701),
    .din1(trunc_ln49_1_reg_3655),
    .ce(1'b1),
    .dout(grp_fu_1332_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln50_1_reg_3745),
    .din1(trunc_ln49_reg_3650),
    .ce(1'b1),
    .dout(grp_fu_1448_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp11_reg_3772),
    .din1(empty_49_reg_3661),
    .ce(1'b1),
    .dout(grp_fu_1473_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1692_p0),
    .din1(grp_fu_1692_p1),
    .ce(1'b1),
    .dout(grp_fu_1692_p2)
);

conv_combined_mul_31ns_64ns_95_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
mul_31ns_64ns_95_5_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1704_p0),
    .din1(grp_fu_1704_p1),
    .ce(1'b1),
    .dout(grp_fu_1704_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1716_p0),
    .din1(grp_fu_1716_p1),
    .ce(1'b1),
    .dout(grp_fu_1716_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(empty_69_reg_3927),
    .din1(grp_fu_1725_p1),
    .ce(1'b1),
    .dout(grp_fu_1725_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1734_p0),
    .din1(empty_69_reg_3927),
    .ce(1'b1),
    .dout(grp_fu_1734_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1767_p0),
    .din1(grp_fu_1767_p1),
    .ce(1'b1),
    .dout(grp_fu_1767_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln93_1_reg_4006),
    .din1(empty_70_reg_3945),
    .ce(1'b1),
    .dout(grp_fu_1896_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln94_1_reg_4023),
    .din1(empty_69_reg_3927),
    .ce(1'b1),
    .dout(grp_fu_1900_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln95_reg_4039),
    .din1(trunc_ln93_reg_3915),
    .ce(1'b1),
    .dout(grp_fu_1904_p2)
);

conv_combined_mul_32ns_64ns_96_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 96 ))
mul_32ns_64ns_96_5_1_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2069_p0),
    .din1(grp_fu_2069_p1),
    .ce(1'b1),
    .dout(grp_fu_2069_p2)
);

conv_combined_mul_31ns_32ns_63_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_31ns_32ns_63_2_1_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2082_p0),
    .din1(grp_fu_2082_p1),
    .ce(1'b1),
    .dout(grp_fu_2082_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2575_p0),
    .din1(empty_69_reg_3927),
    .ce(grp_fu_2575_ce),
    .dout(grp_fu_2575_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln120_1_reg_4467),
    .din1(empty_70_reg_3945),
    .ce(1'b1),
    .dout(grp_fu_2649_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln122_reg_4492),
    .din1(trunc_ln93_reg_3915),
    .ce(1'b1),
    .dout(grp_fu_2721_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln121_1_reg_4497),
    .din1(empty_69_reg_3927),
    .ce(1'b1),
    .dout(grp_fu_2725_p2)
);

conv_combined_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(C_read_reg_3528),
    .din1(W_read_reg_3512),
    .ce(grp_fu_2905_ce),
    .dout(grp_fu_2905_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2916_p0),
    .din1(grp_fu_2916_p1),
    .ce(1'b1),
    .dout(grp_fu_2916_p2)
);

conv_combined_mul_32ns_64ns_96_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 96 ))
mul_32ns_64ns_96_5_1_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2928_p0),
    .din1(grp_fu_2928_p1),
    .ce(1'b1),
    .dout(grp_fu_2928_p2)
);

conv_combined_mul_31ns_96ns_127_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 96 ),
    .dout_WIDTH( 127 ))
mul_31ns_96ns_127_5_1_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2944_p0),
    .din1(grp_fu_2944_p1),
    .ce(1'b1),
    .dout(grp_fu_2944_p2)
);

conv_combined_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U26(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp5_reg_4847),
    .din1(H_read_reg_3522),
    .ce(1'b1),
    .dout(grp_fu_3290_p2)
);

conv_combined_mac_muladd_13s_13s_13ns_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mac_muladd_13s_13s_13ns_13_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3367_p0),
    .din1(outH_reg_3594),
    .din2(grp_fu_3367_p2),
    .ce(1'b1),
    .dout(grp_fu_3367_p3)
);

conv_combined_mul_mul_13s_13s_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_mul_13s_13s_13_4_1_U28(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3367_p3),
    .din1(reg_1176),
    .ce(1'b1),
    .dout(grp_fu_3374_p2)
);

conv_combined_mul_mul_13s_13s_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_mul_13s_13s_13_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3380_p0),
    .din1(empty_47_reg_3585),
    .ce(1'b1),
    .dout(grp_fu_3380_p2)
);

conv_combined_mul_mul_13s_13s_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_mul_13s_13s_13_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3387_p0),
    .din1(empty_47_reg_3585),
    .ce(1'b1),
    .dout(grp_fu_3387_p2)
);

conv_combined_mac_muladd_13s_13s_13ns_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mac_muladd_13s_13s_13ns_13_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3394_p0),
    .din1(trunc_ln103_reg_4130),
    .din2(trunc_ln105_reg_4226),
    .ce(1'b1),
    .dout(grp_fu_3394_p3)
);

conv_combined_mac_muladd_16s_16s_29ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
mac_muladd_16s_16s_29ns_29_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(wbuf_V_q0),
    .din1(grp_fu_3401_p1),
    .din2(grp_fu_3401_p2),
    .ce(1'b1),
    .dout(grp_fu_3401_p3)
);

conv_combined_mac_muladd_16s_16s_29ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
mac_muladd_16s_16s_29ns_29_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(x_Dout_A),
    .din1(grp_fu_3409_p1),
    .din2(grp_fu_3409_p2),
    .ce(1'b1),
    .dout(grp_fu_3409_p3)
);

conv_combined_mul_mul_13s_13s_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_mul_13s_13s_13_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3417_p0),
    .din1(outH_reg_3594),
    .ce(1'b1),
    .dout(grp_fu_3417_p2)
);

conv_combined_mul_mul_13s_13s_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_mul_13s_13s_13_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3423_p0),
    .din1(empty_47_reg_3585),
    .ce(1'b1),
    .dout(grp_fu_3423_p2)
);

conv_combined_mul_mul_13s_13s_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_mul_13s_13s_13_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3428_p0),
    .din1(outH_reg_3594),
    .ce(1'b1),
    .dout(grp_fu_3428_p2)
);

conv_combined_mul_mul_13s_13s_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_mul_13s_13s_13_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln71_1_reg_4721),
    .din1(empty_47_reg_3585),
    .ce(1'b1),
    .dout(grp_fu_3435_p2)
);

conv_combined_mac_muladd_13s_13s_13ns_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mac_muladd_13s_13s_13ns_13_4_1_U38(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3440_p0),
    .din1(reg_1176),
    .din2(grp_fu_3440_p2),
    .ce(1'b1),
    .dout(grp_fu_3440_p3)
);

conv_combined_mul_mul_13s_13s_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_mul_13s_13s_13_4_1_U39(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3449_p0),
    .din1(trunc_ln70_reg_4634),
    .ce(1'b1),
    .dout(grp_fu_3449_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state28))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state28)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state28);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state38))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state38)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state38);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state48))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state48)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state48);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state72))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state71)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state72)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state72);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state71)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp4_flush_enable)) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state92)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            if ((1'b1 == ap_condition_pp4_exit_iter1_state96)) begin
                ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter6 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter5 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
            ap_enable_reg_pp4_iter6 <= ap_enable_reg_pp4_iter5;
        end else if ((1'b1 == ap_CS_fsm_state92)) begin
            ap_enable_reg_pp4_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state115) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state114))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state115)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state115);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state114))) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state123))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if (((icmp_ln120_reg_4450 == 1'd1) & (1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state123)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state123);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end else if (((icmp_ln120_reg_4450 == 1'd1) & (1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108))) begin
            ap_enable_reg_pp6_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp7_flush_enable)) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state156) & (cmp99323_reg_4630 == 1'd1))) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end else if (((1'b1 == ap_CS_fsm_state156) & (cmp99323_reg_4630 == 1'd1))) begin
            ap_enable_reg_pp7_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage0_subdone) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b1 == ap_condition_pp8_exit_iter0_state166))) begin
            ap_enable_reg_pp8_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state165) & (icmp_ln140_fu_3294_p2 == 1'd1))) begin
            ap_enable_reg_pp8_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage1_subdone) & (1'b1 == ap_CS_fsm_pp8_stage1))) begin
            ap_enable_reg_pp8_iter1 <= ap_enable_reg_pp8_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage1_subdone) & (1'b1 == ap_CS_fsm_pp8_stage1))) begin
            ap_enable_reg_pp8_iter2 <= ap_enable_reg_pp8_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage1_subdone) & (1'b1 == ap_CS_fsm_pp8_stage1))) begin
            ap_enable_reg_pp8_iter3 <= ap_enable_reg_pp8_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage1_subdone) & (1'b1 == ap_CS_fsm_pp8_stage1))) begin
            ap_enable_reg_pp8_iter4 <= ap_enable_reg_pp8_iter3;
        end else if (((1'b1 == ap_CS_fsm_state165) & (icmp_ln140_fu_3294_p2 == 1'd1))) begin
            ap_enable_reg_pp8_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4257 == 1'd0))) begin
        c_1_reg_871 <= select_ln106_2_reg_4287;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        c_1_reg_871 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state153) & (icmp_ln75_fu_3201_p2 == 1'd1))) begin
        c_reg_1019 <= select_ln71_5_reg_4734;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        c_reg_1019 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        empty_60_reg_1079 <= bbuf_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state161)) begin
        empty_60_reg_1079 <= empty_65_reg_1123;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state156) & (cmp99323_reg_4630 == 1'd1))) begin
        empty_63_reg_1111 <= empty_60_reg_1079;
    end else if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter2 == 1'b1) & (icmp_ln76_reg_4833_pp7_iter1_reg == 1'd0))) begin
        empty_63_reg_1111 <= add_ln703_fu_3284_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state156) & (cmp99323_reg_4630 == 1'd0))) begin
        empty_65_reg_1123 <= empty_60_reg_1079;
    end else if ((1'b1 == ap_CS_fsm_state160)) begin
        empty_65_reg_1123 <= empty_63_reg_1111;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        empty_77_reg_848 <= dbbuf_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        empty_77_reg_848 <= add_ln703_1_fu_2560_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & ((icmp_ln105_fu_2190_p2 == 1'd1) | (cmp176393_reg_3997 == 1'd0)))) begin
        f_1_reg_814 <= select_ln103_1_reg_4168;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        f_1_reg_814 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state153) & (icmp_ln75_fu_3201_p2 == 1'd1))) begin
        f_reg_1007 <= select_ln70_7_reg_4716;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        f_reg_1007 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln106_reg_4257_pp4_iter2_reg == 1'd0))) begin
        fh_1_reg_894 <= select_ln107_3_reg_4359;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        fh_1_reg_894 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        fh_reg_1089 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state161)) begin
        fh_reg_1089 <= add_ln75_reg_4795;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln106_reg_4257_pp4_iter2_reg == 1'd0))) begin
        fw_1_reg_905 <= add_ln108_reg_4374;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        fw_1_reg_905 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state156) & (cmp99323_reg_4630 == 1'd1))) begin
        fw_reg_1100 <= 31'd0;
    end else if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln76_fu_3265_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        fw_reg_1100 <= add_ln76_fu_3255_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & ((icmp_ln105_fu_2190_p2 == 1'd1) | (cmp176393_reg_3997 == 1'd0)))) begin
        h_1_reg_825 <= add_ln104_fu_2214_p2;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        h_1_reg_825 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state153) & (icmp_ln75_fu_3201_p2 == 1'd1))) begin
        h_reg_1055 <= select_ln72_3_reg_4754;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        h_reg_1055 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        i_1_reg_711 <= 31'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln62_fu_1616_p2 == 1'd0))) begin
        i_1_reg_711 <= add_ln62_fu_1610_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        i_2_reg_722 <= 31'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln88_fu_1673_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        i_2_reg_722 <= add_ln88_fu_1667_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        i_3_reg_756 <= select_ln93_1_reg_4006;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        i_3_reg_756 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln103_fu_2112_p2 == 1'd1))) begin
        i_4_reg_940 <= 31'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147408_reg_3941 == 1'd1)) & (1'b1 == ap_CS_fsm_state122))) begin
        i_4_reg_940 <= select_ln120_1_reg_4467;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_4450 == 1'd1) & (1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108))) begin
        i_5_reg_985 <= 31'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln131_fu_2891_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        i_5_reg_985 <= add_ln131_fu_2885_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state165) & (icmp_ln140_fu_3294_p2 == 1'd1))) begin
        i_6_reg_1136 <= 31'd0;
    end else if (((icmp_ln140_1_reg_4882 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        i_6_reg_1136 <= add_ln140_reg_4877;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_reg_652 <= select_ln49_2_reg_3717;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_reg_652 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        indvar_flatten102_reg_768 <= select_ln94_4_fu_2056_p3;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        indvar_flatten102_reg_768 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        indvar_flatten125_reg_745 <= add_ln93_1_reg_3973;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        indvar_flatten125_reg_745 <= 95'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4257_pp4_iter1_reg == 1'd0))) begin
        indvar_flatten138_reg_883 <= select_ln107_4_reg_4302;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        indvar_flatten138_reg_883 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4257 == 1'd0))) begin
        indvar_flatten167_reg_859 <= add_ln106_1_reg_4271;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        indvar_flatten167_reg_859 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & ((icmp_ln105_fu_2190_p2 == 1'd1) | (cmp176393_reg_3997 == 1'd0)))) begin
        indvar_flatten180_reg_803 <= add_ln103_4_reg_4155;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        indvar_flatten180_reg_803 <= 63'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln103_fu_2112_p2 == 1'd1))) begin
        indvar_flatten191_reg_951 <= 64'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147408_reg_3941 == 1'd1)) & (1'b1 == ap_CS_fsm_state122))) begin
        indvar_flatten191_reg_951 <= select_ln121_4_fu_2878_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln103_fu_2112_p2 == 1'd1))) begin
        indvar_flatten214_reg_917 <= 95'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147408_reg_3941 == 1'd1)) & (1'b1 == ap_CS_fsm_state122))) begin
        indvar_flatten214_reg_917 <= add_ln120_1_reg_4435;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten22_reg_641 <= add_ln49_1_reg_3676;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten22_reg_641 <= 95'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state153) & (icmp_ln75_fu_3201_p2 == 1'd1))) begin
        indvar_flatten36_reg_1043 <= select_ln72_4_fu_3231_p3;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        indvar_flatten36_reg_1043 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state153) & (icmp_ln75_fu_3201_p2 == 1'd1))) begin
        indvar_flatten57_reg_1031 <= select_ln71_6_fu_3244_p3;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        indvar_flatten57_reg_1031 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state153) & (icmp_ln75_fu_3201_p2 == 1'd1))) begin
        indvar_flatten91_reg_996 <= add_ln70_4_reg_4649;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        indvar_flatten91_reg_996 <= 127'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten_reg_664 <= select_ln50_4_fu_1603_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten_reg_664 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        j_1_reg_733 <= select_ln94_3_reg_4034;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        j_1_reg_733 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln103_fu_2112_p2 == 1'd1))) begin
        j_2_reg_928 <= 32'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147408_reg_3941 == 1'd1)) & (1'b1 == ap_CS_fsm_state122))) begin
        j_2_reg_928 <= select_ln121_3_reg_4508;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        j_reg_676 <= select_ln50_3_reg_3756;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        j_reg_676 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        k_1_reg_780 <= add_ln95_fu_2045_p2;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        k_1_reg_780 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln103_fu_2112_p2 == 1'd1))) begin
        k_2_reg_963 <= 32'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147408_reg_3941 == 1'd1)) & (1'b1 == ap_CS_fsm_state122))) begin
        k_2_reg_963 <= add_ln122_fu_2867_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        k_reg_688 <= add_ln51_fu_1592_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_reg_688 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        l_1_reg_792 <= 31'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln96_fu_2027_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        l_1_reg_792 <= add_ln96_fu_2017_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state114))) begin
        l_2_reg_974 <= 31'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln123_fu_2848_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        l_2_reg_974 <= add_ln123_fu_2838_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        l_reg_700 <= 31'd0;
    end else if (((icmp_ln52_fu_1574_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        l_reg_700 <= add_ln52_fu_1564_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & (icmp_ln105_fu_2190_p2 == 1'd0) & (cmp176393_reg_3997 == 1'd1))) begin
        reuse_addr_reg_fu_262 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln106_reg_4257_pp4_iter3_reg == 1'd0))) begin
        reuse_addr_reg_fu_262 <= zext_ln1118_fu_2481_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        reuse_reg_fu_266 <= 16'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln106_reg_4257_pp4_iter4_reg == 1'd0))) begin
        reuse_reg_fu_266 <= {{grp_fu_3401_p3[28:13]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        w_1_reg_837 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        w_1_reg_837 <= add_ln105_reg_4218;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state153) & (icmp_ln75_fu_3201_p2 == 1'd1))) begin
        w_reg_1067 <= add_ln73_fu_3220_p2;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        w_reg_1067 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        C_read_reg_3528 <= C;
        FH_read_reg_3498 <= FH;
        FW_read_reg_3477 <= FW;
        F_read_reg_3539 <= F;
        H_read_reg_3522 <= H;
        W_read_reg_3512 <= W;
        b_read_reg_3564 <= b;
        db_read_reg_3559 <= db;
        debug_dx_read_reg_3549 <= debug_dx;
        debug_x_read_reg_3554 <= debug_x;
        debugip_read_reg_3469 <= debugip;
        dwt_read_reg_3569 <= dwt;
        empty_47_reg_3585 <= empty_47_fu_1190_p1;
        empty_reg_3580 <= empty_fu_1186_p1;
        fwprop_read_reg_3473 <= fwprop;
        wt_read_reg_3575 <= wt;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        add_ln103_4_reg_4155 <= add_ln103_4_fu_2106_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & (cmp176393_reg_3997 == 1'd1))) begin
        add_ln105_reg_4218 <= add_ln105_fu_2184_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        add_ln106_1_reg_4271 <= add_ln106_1_fu_2247_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln106_fu_2232_p2 == 1'd0))) begin
        add_ln106_reg_4261 <= add_ln106_fu_2237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln106_reg_4257 == 1'd0))) begin
        add_ln107_2_reg_4297 <= add_ln107_2_fu_2269_p2;
        icmp_ln107_reg_4276 <= icmp_ln107_fu_2253_p2;
        trunc_ln106_2_reg_4292 <= trunc_ln106_2_fu_2265_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln106_reg_4257_pp4_iter1_reg == 1'd0))) begin
        add_ln107_reg_4329 <= add_ln107_fu_2333_p2;
        p_mid1134_reg_4334 <= p_mid1134_fu_2348_p2;
        select_ln106_5_reg_4322 <= select_ln106_5_fu_2327_p3;
        select_ln106_reg_4312 <= select_ln106_fu_2299_p3;
        select_ln107_1_reg_4339 <= select_ln107_1_fu_2358_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln106_reg_4257_pp4_iter1_reg == 1'd0))) begin
        add_ln108_reg_4374 <= add_ln108_fu_2449_p2;
        select_ln107_3_reg_4359 <= select_ln107_3_fu_2436_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln106_reg_4257_pp4_iter2_reg == 1'd0))) begin
        add_ln1118_6_reg_4379 <= add_ln1118_6_fu_2467_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        add_ln120_1_reg_4435 <= add_ln120_1_fu_2565_p2;
        icmp_ln120_reg_4450 <= icmp_ln120_fu_2584_p2;
        trunc_ln124_reg_4445 <= trunc_ln124_fu_2580_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        add_ln124_1_reg_4502 <= add_ln124_1_fu_2708_p2;
        select_ln121_3_reg_4508 <= select_ln121_3_fu_2714_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp147408_reg_3941 == 1'd1) & (1'b1 == ap_CS_fsm_state113))) begin
        add_ln124_4_reg_4539 <= add_ln124_4_fu_2832_p2;
        gmem_addr_4_reg_4533 <= sext_ln123_fu_2793_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        add_ln140_reg_4877 <= add_ln140_fu_3328_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln49_1_reg_3676 <= add_ln49_1_fu_1260_p2;
        icmp_ln49_1_reg_3681 <= icmp_ln49_1_fu_1271_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln49_1_reg_3681 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        add_ln49_reg_3701 <= add_ln49_fu_1289_p2;
        icmp_ln50_reg_3706 <= icmp_ln50_fu_1295_p2;
        select_ln49_2_reg_3717 <= select_ln49_2_fu_1300_p3;
        trunc_ln49_2_reg_3722 <= trunc_ln49_2_fu_1308_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln53_1_reg_3750 <= add_ln53_1_fu_1434_p2;
        select_ln49_5_reg_3740 <= select_ln49_5_fu_1388_p3;
        select_ln50_1_reg_3745 <= select_ln50_1_fu_1410_p3;
        select_ln50_3_reg_3756 <= select_ln50_3_fu_1440_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp57438_reg_3646 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        add_ln53_4_reg_3788 <= add_ln53_4_fu_1558_p2;
        gmem_addr_2_reg_3782 <= sext_ln52_fu_1519_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_1574_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln53_5_reg_3802 <= add_ln53_5_fu_1583_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln53_5_reg_3802_pp0_iter1_reg <= add_ln53_5_reg_3802;
        icmp_ln52_reg_3798 <= icmp_ln52_fu_1574_p2;
        icmp_ln52_reg_3798_pp0_iter1_reg <= icmp_ln52_reg_3798;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state143)) begin
        add_ln70_4_reg_4649 <= add_ln70_4_fu_2958_p2;
        icmp_ln70_reg_4664 <= icmp_ln70_fu_2972_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state153)) begin
        add_ln75_reg_4795 <= add_ln75_fu_3195_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state156) & (cmp99323_reg_4630 == 1'd1))) begin
        add_ln77_reg_4823 <= add_ln77_fu_3251_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        add_ln93_1_reg_3973 <= add_ln93_1_fu_1743_p2;
        empty_71_reg_3978 <= grp_fu_1734_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        add_ln97_1_reg_4028 <= add_ln97_1_fu_1878_p2;
        select_ln93_1_reg_4006 <= select_ln93_1_fu_1785_p3;
        select_ln93_4_reg_4012 <= select_ln93_4_fu_1833_p3;
        select_ln94_3_reg_4034 <= select_ln94_3_fu_1884_p3;
        select_ln94_reg_4017 <= select_ln94_fu_1850_p3;
        trunc_ln94_1_reg_4023 <= trunc_ln94_1_fu_1858_p1;
        trunc_ln95_reg_4039 <= trunc_ln95_fu_1892_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp147408_reg_3941 == 1'd1) & (1'b1 == ap_CS_fsm_state64))) begin
        add_ln97_4_reg_4070 <= add_ln97_4_fu_2011_p2;
        gmem_addr_3_reg_4064 <= sext_ln96_fu_1972_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln96_fu_2027_p2 == 1'd0))) begin
        add_ln97_5_reg_4084 <= add_ln97_5_fu_2036_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln97_5_reg_4084_pp3_iter1_reg <= add_ln97_5_reg_4084;
        icmp_ln96_reg_4080 <= icmp_ln96_fu_2027_p2;
        icmp_ln96_reg_4080_pp3_iter1_reg <= icmp_ln96_reg_4080;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln106_reg_4257_pp4_iter3_reg == 1'd0))) begin
        addr_cmp_reg_4410 <= addr_cmp_fu_2494_p2;
        dx_addr_1_reg_4405 <= zext_ln1118_fu_2481_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        bound107_reg_3951 <= grp_fu_1704_p2;
        cmp147408_reg_3941 <= grp_fu_1147_p2;
        empty_70_reg_3945 <= grp_fu_1725_p2;
        icmp_ln95_reg_3957 <= grp_fu_1152_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        bound130_reg_4104 <= grp_fu_1767_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        bound143_reg_4140 <= grp_fu_2069_p2;
        bound174_reg_4145 <= grp_fu_2082_p2;
        icmp_ln108_reg_4150 <= icmp_ln108_fu_2101_p2;
        sub_ln103_reg_4135 <= sub_ln103_fu_2096_p2;
        trunc_ln103_reg_4130 <= trunc_ln103_fu_2088_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        bound27_reg_4597 <= grp_fu_2916_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state137)) begin
        bound41_reg_4614 <= grp_fu_2928_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        bound5_reg_3666 <= grp_fu_1245_p2;
        cmp57438_reg_3646 <= grp_fu_1147_p2;
        empty_49_reg_3661 <= empty_49_fu_1257_p1;
        icmp_ln51_reg_3671 <= grp_fu_1152_p2;
        trunc_ln49_1_reg_3655 <= trunc_ln49_1_fu_1254_p1;
        trunc_ln49_reg_3650 <= trunc_ln49_fu_1251_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state142)) begin
        bound63_reg_4639 <= grp_fu_2944_p2;
        cmp99323_reg_4630 <= grp_fu_1147_p2;
        icmp_ln72_reg_4644 <= icmp_ln72_fu_2953_p2;
        trunc_ln70_reg_4634 <= trunc_ln70_fu_2950_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        bound96_reg_3898 <= grp_fu_1692_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bound_reg_3625 <= grp_fu_1229_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        cast95_reg_3892[31 : 0] <= cast95_fu_1689_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state59) & (icmp_ln93_fu_1749_p2 == 1'd1))) begin
        cmp176393_reg_3997 <= cmp176393_fu_1759_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state88) & (cmp176393_reg_3997 == 1'd1))) begin
        dbbuf_V_addr_1_reg_4213 <= zext_ln103_fu_2156_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln106_reg_4257_pp4_iter2_reg == 1'd0))) begin
        dwbuf_V_addr_2_reg_4389 <= zext_ln1118_7_fu_2472_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        dwbuf_V_addr_2_reg_4389_pp4_iter4_reg <= dwbuf_V_addr_2_reg_4389;
        dwbuf_V_addr_2_reg_4389_pp4_iter5_reg <= dwbuf_V_addr_2_reg_4389_pp4_iter4_reg;
        icmp_ln106_reg_4257 <= icmp_ln106_fu_2232_p2;
        icmp_ln106_reg_4257_pp4_iter1_reg <= icmp_ln106_reg_4257;
        icmp_ln106_reg_4257_pp4_iter2_reg <= icmp_ln106_reg_4257_pp4_iter1_reg;
        icmp_ln106_reg_4257_pp4_iter3_reg <= icmp_ln106_reg_4257_pp4_iter2_reg;
        icmp_ln106_reg_4257_pp4_iter4_reg <= icmp_ln106_reg_4257_pp4_iter3_reg;
        icmp_ln106_reg_4257_pp4_iter5_reg <= icmp_ln106_reg_4257_pp4_iter4_reg;
        trunc_ln109_reg_4364_pp4_iter3_reg <= trunc_ln109_reg_4364;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln123_reg_4549 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        dwbuf_V_load_reg_4558 <= dwbuf_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        dx_addr_1_reg_4405_pp4_iter4_reg <= dx_addr_1_reg_4405;
        icmp_ln107_reg_4276_pp4_iter1_reg <= icmp_ln107_reg_4276;
        trunc_ln106_2_reg_4292_pp4_iter1_reg <= trunc_ln106_2_reg_4292;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln140_1_reg_4882 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        dx_load_reg_4913 <= dx_Dout_A;
        x_load_1_reg_4908 <= x_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        empty_48_reg_3631 <= empty_48_fu_1235_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        empty_50_reg_3685 <= grp_fu_1266_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        empty_53_reg_3777 <= grp_fu_1473_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        empty_57_reg_4668 <= grp_fu_3417_p2;
        empty_58_reg_4673 <= grp_fu_3423_p2;
        empty_59_reg_4683 <= empty_59_fu_2981_p2;
        trunc_ln72_reg_4678 <= trunc_ln72_fu_2977_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        empty_69_reg_3927 <= grp_fu_1716_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        empty_74_reg_4054 <= grp_fu_1904_p2;
        mul_ln93_reg_4044 <= grp_fu_1896_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        empty_75_reg_4059 <= empty_75_fu_1924_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln107_reg_4276 == 1'd0))) begin
        empty_80_reg_4307 <= empty_80_fu_2290_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        empty_82_reg_4208 <= grp_fu_3374_p2;
        zext_ln104_reg_4203[5 : 0] <= zext_ln104_fu_2180_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        empty_83_reg_4454 <= grp_fu_2575_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        empty_87_reg_4518 <= grp_fu_2721_p2;
        mul_ln120_reg_4513 <= grp_fu_2649_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        empty_88_reg_4528 <= empty_88_fu_2745_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (icmp_ln140_1_fu_3334_p2 == 1'd0))) begin
        gmem2_addr_1_reg_4902 <= add_ln142_fu_3356_p2;
        gmem2_addr_reg_4891 <= add_ln141_fu_3345_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        gmem2_addr_1_reg_4902_pp8_iter1_reg <= gmem2_addr_1_reg_4902;
        icmp_ln140_1_reg_4882 <= icmp_ln140_1_fu_3334_p2;
        icmp_ln140_1_reg_4882_pp8_iter1_reg <= icmp_ln140_1_reg_4882;
        icmp_ln140_1_reg_4882_pp8_iter2_reg <= icmp_ln140_1_reg_4882_pp8_iter1_reg;
        icmp_ln140_1_reg_4882_pp8_iter3_reg <= icmp_ln140_1_reg_4882_pp8_iter2_reg;
        icmp_ln140_1_reg_4882_pp8_iter4_reg <= icmp_ln140_1_reg_4882_pp8_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_reg_3873 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        gmem_addr_1_read_reg_3882 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((fwprop_read_reg_3473 == 1'd0) & (icmp_ln49_reg_3611 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        gmem_addr_1_reg_3841 <= sext_ln88_fu_1638_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_reg_3798 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_addr_2_read_reg_3807 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_reg_4080 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        gmem_addr_3_read_reg_4089 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln62_reg_3827 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        gmem_addr_read_reg_3836 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln103_fu_2112_p2 == 1'd0))) begin
        icmp_ln104_reg_4163 <= icmp_ln104_fu_2123_p2;
        select_ln103_1_reg_4168 <= select_ln103_1_fu_2129_p3;
        trunc_ln103_2_reg_4178 <= trunc_ln103_2_fu_2141_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_4450 == 1'd0) & (1'b1 == ap_CS_fsm_state108))) begin
        icmp_ln121_reg_4459 <= icmp_ln121_fu_2595_p2;
        select_ln120_4_reg_4479 <= select_ln120_4_fu_2617_p3;
        select_ln121_reg_4486 <= select_ln121_fu_2630_p3;
        trunc_ln120_reg_4473 <= trunc_ln120_fu_2608_p1;
        trunc_ln122_reg_4492 <= trunc_ln122_fu_2638_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln123_reg_4549 <= icmp_ln123_fu_2848_p2;
        icmp_ln123_reg_4549_pp5_iter1_reg <= icmp_ln123_reg_4549;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        icmp_ln131_reg_4578 <= icmp_ln131_fu_2891_p2;
        icmp_ln131_reg_4578_pp6_iter1_reg <= icmp_ln131_reg_4578;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln49_reg_3611 <= icmp_ln49_fu_1218_p2;
        outH_reg_3594 <= outH_fu_1198_p2;
        outW_reg_3606 <= outW_fu_1212_p2;
        trunc_ln44_reg_3601 <= trunc_ln44_fu_1208_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln62_reg_3827 <= icmp_ln62_fu_1616_p2;
        icmp_ln62_reg_3827_pp1_iter1_reg <= icmp_ln62_reg_3827;
        trunc_ln63_reg_3831_pp1_iter1_reg <= trunc_ln63_reg_3831;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state146) & (icmp_ln70_reg_4664 == 1'd0))) begin
        icmp_ln71_reg_4688 <= icmp_ln71_fu_2992_p2;
        select_ln70_2_reg_4703 <= select_ln70_2_fu_3017_p3;
        select_ln70_6_reg_4708 <= select_ln70_6_fu_3042_p3;
        select_ln70_7_reg_4716 <= select_ln70_7_fu_3049_p3;
        select_ln71_4_reg_4726 <= select_ln71_4_fu_3067_p3;
        select_ln71_5_reg_4734 <= select_ln71_5_fu_3074_p3;
        trunc_ln71_1_reg_4721 <= trunc_ln71_1_fu_3063_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((fwprop_read_reg_3473 == 1'd1) & (icmp_ln49_reg_3611 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        icmp_ln73_reg_3854 <= icmp_ln73_fu_1659_p2;
        sub_ln70_reg_3848 <= sub_ln70_fu_1654_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        icmp_ln76_reg_4833 <= icmp_ln76_fu_3265_p2;
        icmp_ln76_reg_4833_pp7_iter1_reg <= icmp_ln76_reg_4833;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln88_reg_3873 <= icmp_ln88_fu_1673_p2;
        icmp_ln88_reg_3873_pp2_iter1_reg <= icmp_ln88_reg_3873;
        trunc_ln89_reg_3877_pp2_iter1_reg <= trunc_ln89_reg_3877;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state59) & (icmp_ln93_fu_1749_p2 == 1'd0))) begin
        icmp_ln94_reg_3986 <= icmp_ln94_fu_1754_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state164)) begin
        mul293_reg_4852 <= grp_fu_3290_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        mul_ln50_reg_3761 <= grp_fu_1448_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state147)) begin
        or_ln71_reg_4739 <= or_ln71_fu_3082_p2;
        select_ln72_1_reg_4749 <= select_ln72_1_fu_3111_p3;
        select_ln72_3_reg_4754 <= select_ln72_3_fu_3118_p3;
        trunc_ln72_1_reg_4744 <= trunc_ln72_1_fu_3107_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state62) & (select_ln93_4_reg_4012 == 1'd1))) begin
        p_mid1100_reg_4049 <= grp_fu_1900_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln107_reg_4276 == 1'd1) & (icmp_ln106_reg_4257_pp4_iter1_reg == 1'd0))) begin
        p_mid1155_reg_4317 <= p_mid1155_fu_2311_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state111) & (select_ln120_4_reg_4479 == 1'd1))) begin
        p_mid1189_reg_4523 <= grp_fu_2725_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_mid1_reg_3734 <= grp_fu_1332_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        r_V_reg_4241 <= dy_Dout_A;
        sext_ln1118_1_reg_4246 <= sext_ln1118_1_fu_2219_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((fwprop_read_reg_3473 == 1'd1) & (icmp_ln49_reg_3611 == 1'd1) & (1'b1 == ap_CS_fsm_state41)))) begin
        reg_1172 <= grp_fu_1162_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state81))) begin
        reg_1176 <= grp_fu_1167_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state89) | ((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln131_reg_4578 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)))) begin
        reg_1180 <= dbbuf_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        select_ln103_reg_4185 <= select_ln103_fu_2145_p3;
        trunc_ln104_reg_4190 <= trunc_ln104_fu_2152_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln106_reg_4257 == 1'd0))) begin
        select_ln106_2_reg_4287 <= select_ln106_2_fu_2258_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4257 == 1'd0))) begin
        select_ln107_4_reg_4302 <= select_ln107_4_fu_2275_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_4450 == 1'd0) & (1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108))) begin
        select_ln120_1_reg_4467 <= select_ln120_1_fu_2600_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        select_ln50_reg_3766 <= select_ln50_fu_1456_p3;
        tmp11_reg_3772 <= tmp11_fu_1468_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state150)) begin
        select_ln71_1_reg_4764 <= select_ln71_1_fu_3160_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state151)) begin
        select_ln72_reg_4774 <= select_ln72_fu_3179_p3;
        trunc_ln73_reg_4779 <= trunc_ln73_fu_3187_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state165) & (icmp_ln140_fu_3294_p2 == 1'd1))) begin
        sext_ln140_1_reg_4872 <= sext_ln140_1_fu_3324_p1;
        sext_ln140_reg_4867 <= sext_ln140_fu_3311_p1;
        trunc_ln140_reg_4862 <= trunc_ln140_fu_3299_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state162)) begin
        tmp5_reg_4847 <= grp_fu_2905_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_reg_3691 <= tmp_fu_1280_p2;
        trunc_ln53_reg_3696 <= trunc_ln53_fu_1285_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & (icmp_ln105_fu_2190_p2 == 1'd0) & (cmp176393_reg_3997 == 1'd1))) begin
        trunc_ln105_reg_4226 <= trunc_ln105_fu_2195_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln106_reg_4257_pp4_iter1_reg == 1'd0))) begin
        trunc_ln109_reg_4364 <= trunc_ln109_fu_2441_p1;
        trunc_ln1118_1_reg_4349 <= trunc_ln1118_1_fu_2426_p1;
        trunc_ln1118_2_reg_4369 <= trunc_ln1118_2_fu_2445_p1;
        trunc_ln1118_reg_4344 <= trunc_ln1118_fu_2422_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state109) & (select_ln120_4_reg_4479 == 1'd1))) begin
        trunc_ln121_1_reg_4497 <= trunc_ln121_1_fu_2689_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln62_fu_1616_p2 == 1'd0))) begin
        trunc_ln63_reg_3831 <= trunc_ln63_fu_1621_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        trunc_ln88_reg_3860 <= trunc_ln88_fu_1664_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln88_fu_1673_p2 == 1'd0))) begin
        trunc_ln89_reg_3877 <= trunc_ln89_fu_1678_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        trunc_ln93_reg_3915 <= trunc_ln93_fu_1710_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        trunc_ln97_reg_3968 <= trunc_ln97_fu_1739_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        y_addr_reg_4790 <= zext_ln74_fu_3191_p1;
    end
end

always @ (*) begin
    if ((icmp_ln52_fu_1574_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln62_fu_1616_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state38 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state38 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln88_fu_1673_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state48 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state48 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln96_fu_2027_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state72 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state72 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_condition_pp4_exit_iter1_state96 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter1_state96 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln106_reg_4257 == 1'd1))) begin
        ap_condition_pp4_flush_enable = 1'b1;
    end else begin
        ap_condition_pp4_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln123_fu_2848_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state115 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state115 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln131_fu_2891_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state123 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state123 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln76_fu_3265_p2 == 1'd1))) begin
        ap_condition_pp7_flush_enable = 1'b1;
    end else begin
        ap_condition_pp7_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln140_1_fu_3334_p2 == 1'd1)) begin
        ap_condition_pp8_exit_iter0_state166 = 1'b1;
    end else begin
        ap_condition_pp8_exit_iter0_state166 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state176)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter6 == 1'b0) & (ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter2 == 1'b0) & (ap_enable_reg_pp8_iter4 == 1'b0) & (ap_enable_reg_pp8_iter1 == 1'b0) & (ap_enable_reg_pp8_iter3 == 1'b0) & (ap_enable_reg_pp8_iter0 == 1'b0))) begin
        ap_idle_pp8 = 1'b1;
    end else begin
        ap_idle_pp8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4257 == 1'd0))) begin
        ap_phi_mux_c_1_phi_fu_875_p4 = select_ln106_2_reg_4287;
    end else begin
        ap_phi_mux_c_1_phi_fu_875_p4 = c_1_reg_871;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln106_reg_4257_pp4_iter2_reg == 1'd0))) begin
        ap_phi_mux_fh_1_phi_fu_898_p4 = select_ln107_3_reg_4359;
    end else begin
        ap_phi_mux_fh_1_phi_fu_898_p4 = fh_1_reg_894;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln106_reg_4257_pp4_iter2_reg == 1'd0))) begin
        ap_phi_mux_fw_1_phi_fu_909_p4 = add_ln108_reg_4374;
    end else begin
        ap_phi_mux_fw_1_phi_fu_909_p4 = fw_1_reg_905;
    end
end

always @ (*) begin
    if (((icmp_ln140_1_reg_4882 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        ap_phi_mux_i_6_phi_fu_1140_p4 = add_ln140_reg_4877;
    end else begin
        ap_phi_mux_i_6_phi_fu_1140_p4 = i_6_reg_1136;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4257_pp4_iter1_reg == 1'd0))) begin
        ap_phi_mux_indvar_flatten138_phi_fu_887_p4 = select_ln107_4_reg_4302;
    end else begin
        ap_phi_mux_indvar_flatten138_phi_fu_887_p4 = indvar_flatten138_reg_883;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4257 == 1'd0))) begin
        ap_phi_mux_indvar_flatten167_phi_fu_863_p4 = add_ln106_1_reg_4271;
    end else begin
        ap_phi_mux_indvar_flatten167_phi_fu_863_p4 = indvar_flatten167_reg_859;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state176)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state151)) begin
        bbuf_V_address0 = zext_ln70_fu_3166_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        bbuf_V_address0 = zext_ln63_fu_1625_p1;
    end else begin
        bbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state151) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        bbuf_V_ce0 = 1'b1;
    end else begin
        bbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln62_reg_3827_pp1_iter1_reg == 1'd0))) begin
        bbuf_V_we0 = 1'b1;
    end else begin
        bbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        dbbuf_V_address0 = zext_ln132_fu_2900_p1;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        dbbuf_V_address0 = dbbuf_V_addr_1_reg_4213;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        dbbuf_V_address0 = zext_ln103_fu_2156_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        dbbuf_V_address0 = zext_ln89_fu_1682_p1;
    end else begin
        dbbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state88) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
        dbbuf_V_ce0 = 1'b1;
    end else begin
        dbbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        dbbuf_V_d0 = empty_77_reg_848;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        dbbuf_V_d0 = gmem_addr_1_read_reg_3882;
    end else begin
        dbbuf_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state90) & (icmp_ln105_fu_2190_p2 == 1'd1) & (cmp176393_reg_3997 == 1'd1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln88_reg_3873_pp2_iter1_reg == 1'd0)))) begin
        dbbuf_V_we0 = 1'b1;
    end else begin
        dbbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        dwbuf_V_address0 = dwbuf_V_addr_2_reg_4389_pp4_iter5_reg;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        dwbuf_V_address0 = zext_ln97_6_fu_2041_p1;
    end else begin
        dwbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        dwbuf_V_address1 = zext_ln124_6_fu_2862_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        dwbuf_V_address1 = dwbuf_V_addr_2_reg_4389_pp4_iter4_reg;
    end else begin
        dwbuf_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        dwbuf_V_ce0 = 1'b1;
    end else begin
        dwbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        dwbuf_V_ce1 = 1'b1;
    end else begin
        dwbuf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        dwbuf_V_d0 = {{grp_fu_3409_p3[28:13]}};
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        dwbuf_V_d0 = gmem_addr_3_read_reg_4089;
    end else begin
        dwbuf_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln106_reg_4257_pp4_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln96_reg_4080_pp3_iter1_reg == 1'd0)))) begin
        dwbuf_V_we0 = 1'b1;
    end else begin
        dwbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        dx_Addr_A_orig = zext_ln141_fu_3339_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        dx_Addr_A_orig = dx_addr_1_reg_4405_pp4_iter4_reg;
    end else if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        dx_Addr_A_orig = zext_ln1118_fu_2481_p1;
    end else begin
        dx_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)) | ((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        dx_EN_A = 1'b1;
    end else begin
        dx_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln106_reg_4257_pp4_iter4_reg == 1'd0))) begin
        dx_WEN_A = 2'd3;
    end else begin
        dx_WEN_A = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state90))) begin
        dy_EN_A = 1'b1;
    end else begin
        dy_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp8_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_4600)) begin
            gmem2_AWADDR = gmem2_addr_1_reg_4902_pp8_iter1_reg;
        end else if ((1'b1 == ap_condition_4596)) begin
            gmem2_AWADDR = gmem2_addr_reg_4891;
        end else begin
            gmem2_AWADDR = 'bx;
        end
    end else begin
        gmem2_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln140_1_reg_4882_pp8_iter1_reg == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1)) | ((icmp_ln140_1_reg_4882 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)))) begin
        gmem2_AWVALID = 1'b1;
    end else begin
        gmem2_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln140_1_reg_4882_pp8_iter4_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1)) | ((icmp_ln140_1_reg_4882_pp8_iter3_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)))) begin
        gmem2_BREADY = 1'b1;
    end else begin
        gmem2_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln140_1_reg_4882_pp8_iter1_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_2416)) begin
            gmem2_WDATA = dx_load_reg_4913;
        end else if ((1'b1 == ap_condition_2404)) begin
            gmem2_WDATA = x_load_1_reg_4908;
        end else begin
            gmem2_WDATA = 'bx;
        end
    end else begin
        gmem2_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter2 == 1'b1) & (icmp_ln140_1_reg_4882_pp8_iter1_reg == 1'd0) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)) | ((icmp_ln140_1_reg_4882_pp8_iter1_reg == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1)))) begin
        gmem2_WVALID = 1'b1;
    end else begin
        gmem2_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln140_1_reg_4882_pp8_iter1_reg == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1)) | ((icmp_ln140_1_reg_4882 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0)))) begin
        gmem2_blk_n_AW = m_axi_gmem2_AWREADY;
    end else begin
        gmem2_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln140_1_reg_4882_pp8_iter4_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1)) | ((icmp_ln140_1_reg_4882_pp8_iter3_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0)))) begin
        gmem2_blk_n_B = m_axi_gmem2_BVALID;
    end else begin
        gmem2_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter2 == 1'b1) & (icmp_ln140_1_reg_4882_pp8_iter1_reg == 1'd0) & (1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0)) | ((icmp_ln140_1_reg_4882_pp8_iter1_reg == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1)))) begin
        gmem2_blk_n_W = m_axi_gmem2_WREADY;
    end else begin
        gmem2_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state65))) begin
        gmem_ARADDR = gmem_addr_3_reg_4064;
    end else if (((1'b0 == ap_block_state41_io) & (ap_predicate_op403_readreq_state41 == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
        gmem_ARADDR = sext_ln88_fu_1638_p1;
    end else if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        gmem_ARADDR = gmem_addr_2_reg_3782;
    end else if (((icmp_ln49_1_reg_3681 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
        gmem_ARADDR = sext_ln62_fu_1321_p1;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state65)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        gmem_ARLEN = FW_read_reg_3477;
    end else if ((((icmp_ln49_1_reg_3681 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11)) | ((1'b0 == ap_block_state41_io) & (ap_predicate_op403_readreq_state41 == 1'b1) & (1'b1 == ap_CS_fsm_state41)))) begin
        gmem_ARLEN = F_read_reg_3539;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln49_1_reg_3681 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11)) | ((1'b0 == ap_block_state41_io) & (ap_predicate_op403_readreq_state41 == 1'b1) & (1'b1 == ap_CS_fsm_state41)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state65)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state114))) begin
        gmem_AWADDR = gmem_addr_4_reg_4533;
    end else if (((icmp_ln120_reg_4450 == 1'd1) & (1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108))) begin
        gmem_AWADDR = gmem_addr_1_reg_3841;
    end else begin
        gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state114))) begin
        gmem_AWLEN = FW_read_reg_3477;
    end else if (((icmp_ln120_reg_4450 == 1'd1) & (1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108))) begin
        gmem_AWLEN = F_read_reg_3539;
    end else begin
        gmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln120_reg_4450 == 1'd1) & (1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108)) | ((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state114)))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((gmem_BVALID == 1'b0) & (ap_predicate_op854_writeresp_state130 == 1'b1)) & (ap_predicate_op854_writeresp_state130 == 1'b1) & (1'b1 == ap_CS_fsm_state130)) | (~((gmem_BVALID == 1'b0) & (cmp147408_reg_3941 == 1'd1)) & (cmp147408_reg_3941 == 1'd1) & (1'b1 == ap_CS_fsm_state122)))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln96_reg_4080 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln88_reg_3873 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln62_reg_3827 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln52_reg_3798 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln131_reg_4578_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_01001))) begin
        gmem_WDATA = reg_1180;
    end else if (((icmp_ln123_reg_4549_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_01001))) begin
        gmem_WDATA = dwbuf_V_load_reg_4558;
    end else begin
        gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln123_reg_4549_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((icmp_ln131_reg_4578_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state21) | ((fwprop_read_reg_3473 == 1'd0) & (icmp_ln49_reg_3611 == 1'd1) & (1'b1 == ap_CS_fsm_state41)) | ((icmp_ln49_1_reg_3681 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state114) | ((icmp_ln120_reg_4450 == 1'd1) & (1'b1 == ap_CS_fsm_state108)))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((cmp147408_reg_3941 == 1'd1) & (1'b1 == ap_CS_fsm_state122)) | ((fwprop_read_reg_3473 == 1'd0) & (icmp_ln49_reg_3611 == 1'd1) & (1'b1 == ap_CS_fsm_state130)))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln96_reg_4080 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln88_reg_3873 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln62_reg_3827 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln52_reg_3798 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln123_reg_4549_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((icmp_ln131_reg_4578_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0)))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state107) | ((1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108)))) begin
        grp_fu_2575_ce = 1'b1;
    end else begin
        grp_fu_2575_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state162) | (~((gmem_BVALID == 1'b0) & (ap_predicate_op854_writeresp_state130 == 1'b1)) & (1'b1 == ap_CS_fsm_state130)))) begin
        grp_fu_2905_ce = 1'b1;
    end else begin
        grp_fu_2905_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        wbuf_V_address0 = zext_ln1118_7_fu_2472_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        wbuf_V_address0 = zext_ln53_6_fu_1588_p1;
    end else begin
        wbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        wbuf_V_ce0 = 1'b1;
    end else begin
        wbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln52_reg_3798_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        wbuf_V_we0 = 1'b1;
    end else begin
        wbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_Addr_A_orig = zext_ln141_fu_3339_p1;
    end else if (((1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        x_Addr_A_orig = zext_ln1116_fu_3279_p1;
    end else if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        x_Addr_A_orig = zext_ln1118_fu_2481_p1;
    end else begin
        x_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)) | ((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0)) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter2 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        x_EN_A = 1'b1;
    end else begin
        x_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state160)) begin
        y_Addr_A_orig = y_addr_reg_4790;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        y_Addr_A_orig = zext_ln74_fu_3191_p1;
    end else begin
        y_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state160)) begin
        y_Din_A = empty_63_reg_1111;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        y_Din_A = bbuf_V_q0;
    end else begin
        y_Din_A = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state152))) begin
        y_EN_A = 1'b1;
    end else begin
        y_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state152))) begin
        y_WEN_A = 2'd3;
    end else begin
        y_WEN_A = 2'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln49_fu_1218_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln49_1_reg_3681 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else if (((icmp_ln49_1_reg_3681 == 1'd0) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((cmp57438_reg_3646 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln52_fu_1574_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln52_fu_1574_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln62_fu_1616_p2 == 1'd1)) & ~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln62_fu_1616_p2 == 1'd1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((fwprop_read_reg_3473 == 1'd1) & (icmp_ln49_reg_3611 == 1'd1) & (1'b0 == ap_block_state41_io) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state131;
            end else if (((icmp_ln49_reg_3611 == 1'd0) & (1'b0 == ap_block_state41_io) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end else if (((fwprop_read_reg_3473 == 1'd0) & (icmp_ln49_reg_3611 == 1'd1) & (1'b0 == ap_block_state41_io) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln88_fu_1673_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln88_fu_1673_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            if (((1'b1 == ap_CS_fsm_state59) & (icmp_ln93_fu_1749_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            if (((cmp147408_reg_3941 == 1'd0) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state65 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state65))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln96_fu_2027_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln96_fu_2027_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln103_fu_2112_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            if (((1'b1 == ap_CS_fsm_state88) & (cmp176393_reg_3997 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            if (((1'b1 == ap_CS_fsm_state90) & ((icmp_ln105_fu_2190_p2 == 1'd1) | (cmp176393_reg_3997 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter6 == 1'b1) & (ap_enable_reg_pp4_iter5 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage0)) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if (((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter6 == 1'b1) & (ap_enable_reg_pp4_iter5 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((~((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b0)) & (1'b0 == ap_block_pp4_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            if (((icmp_ln120_reg_4450 == 1'd1) & (1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((icmp_ln120_reg_4450 == 1'd0) & (1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108))) begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            if (((cmp147408_reg_3941 == 1'd0) & (1'b1 == ap_CS_fsm_state113))) begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end
        end
        ap_ST_fsm_state114 : begin
            if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state114))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln123_fu_2848_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)) & ~((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0)) | ((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln123_fu_2848_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            if ((~((gmem_BVALID == 1'b0) & (cmp147408_reg_3941 == 1'd1)) & (1'b1 == ap_CS_fsm_state122))) begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln131_fu_2891_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1)) & ~((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln131_fu_2891_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            if ((~((gmem_BVALID == 1'b0) & (ap_predicate_op854_writeresp_state130 == 1'b1)) & (debugip_read_reg_3469 == 1'd0) & (1'b1 == ap_CS_fsm_state130))) begin
                ap_NS_fsm = ap_ST_fsm_state176;
            end else if ((~((gmem_BVALID == 1'b0) & (ap_predicate_op854_writeresp_state130 == 1'b1)) & (debugip_read_reg_3469 == 1'd1) & (1'b1 == ap_CS_fsm_state130))) begin
                ap_NS_fsm = ap_ST_fsm_state162;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            if (((1'b1 == ap_CS_fsm_state146) & (icmp_ln70_reg_4664 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state147;
            end
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            if (((1'b1 == ap_CS_fsm_state153) & (icmp_ln75_fu_3201_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state143;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state154;
            end
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            if (((1'b1 == ap_CS_fsm_state156) & (cmp99323_reg_4630 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state161;
            end
        end
        ap_ST_fsm_pp7_stage0 : begin
            if (~((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if (((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state160;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            if (((1'b1 == ap_CS_fsm_state165) & (icmp_ln140_fu_3294_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state176;
            end
        end
        ap_ST_fsm_pp8_stage0 : begin
            if ((~((ap_enable_reg_pp8_iter1 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone) & (icmp_ln140_1_fu_3334_p2 == 1'd1) & (ap_enable_reg_pp8_iter0 == 1'b1)) & (1'b0 == ap_block_pp8_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage1;
            end else if (((ap_enable_reg_pp8_iter1 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone) & (icmp_ln140_1_fu_3334_p2 == 1'd1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state176;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end
        end
        ap_ST_fsm_pp8_stage1 : begin
            if ((~((ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage1_subdone) & (ap_enable_reg_pp8_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp8_stage1)) & (1'b0 == ap_block_pp8_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else if (((ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage1_subdone) & (ap_enable_reg_pp8_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp8_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state176;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage1;
            end
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln103_2_fu_2117_p2 = (f_1_reg_814 + 31'd1);

assign add_ln103_4_fu_2106_p2 = (indvar_flatten180_reg_803 + 63'd1);

assign add_ln103_fu_2091_p2 = ($signed(W_read_reg_3512) + $signed(32'd1));

assign add_ln104_fu_2214_p2 = (select_ln103_reg_4185 + 32'd1);

assign add_ln105_fu_2184_p2 = (w_1_reg_837 + 32'd1);

assign add_ln106_1_fu_2247_p2 = (indvar_flatten167_reg_859 + 96'd1);

assign add_ln106_fu_2237_p2 = (ap_phi_mux_c_1_phi_fu_875_p4 + 32'd1);

assign add_ln107_2_fu_2269_p2 = (ap_phi_mux_indvar_flatten138_phi_fu_887_p4 + 64'd1);

assign add_ln107_fu_2333_p2 = (select_ln106_fu_2299_p3 + 32'd1);

assign add_ln108_fu_2449_p2 = (select_ln107_fu_2405_p3 + 32'd1);

assign add_ln1116_fu_3274_p2 = (add_ln77_reg_4823 + trunc_ln77_fu_3270_p1);

assign add_ln1118_1_fu_2174_p2 = (zext_ln1118_2_fu_2170_p1 + zext_ln1118_1_fu_2160_p1);

assign add_ln1118_2_fu_2369_p2 = (zext_ln104_reg_4203 + zext_ln1118_3_fu_2366_p1);

assign add_ln1118_3_fu_2390_p2 = (zext_ln1118_5_fu_2386_p1 + zext_ln1118_4_fu_2374_p1);

assign add_ln1118_4_fu_2416_p2 = (add_ln1118_3_fu_2390_p2 + zext_ln1118_6_fu_2413_p1);

assign add_ln1118_5_fu_2462_p2 = (p_shl7_cast_fu_2455_p3 + trunc_ln1118_reg_4344);

assign add_ln1118_6_fu_2467_p2 = (add_ln1118_5_fu_2462_p2 + trunc_ln1118_2_reg_4369);

assign add_ln1118_fu_2477_p2 = ($signed(grp_fu_3394_p3) + $signed(trunc_ln109_reg_4364_pp4_iter3_reg));

assign add_ln120_1_fu_2565_p2 = (indvar_flatten214_reg_917 + 95'd1);

assign add_ln120_fu_2589_p2 = (i_4_reg_940 + 31'd1);

assign add_ln121_1_fu_2872_p2 = (indvar_flatten191_reg_951 + 64'd1);

assign add_ln121_fu_2683_p2 = (select_ln120_fu_2642_p3 + 32'd1);

assign add_ln122_fu_2867_p2 = (select_ln121_reg_4486 + 32'd1);

assign add_ln123_fu_2838_p2 = (l_2_reg_974 + 31'd1);

assign add_ln124_1_fu_2708_p2 = (zext_ln121_fu_2673_p1 + zext_ln124_2_fu_2704_p1);

assign add_ln124_2_fu_2765_p2 = (zext_ln124_4_fu_2761_p1 + zext_ln124_3_fu_2751_p1);

assign add_ln124_3_fu_2810_p2 = (add_ln124_2_fu_2765_p2 + zext_ln124_5_fu_2806_p1);

assign add_ln124_4_fu_2832_p2 = (p_shl5_cast_fu_2824_p3 + trunc_ln124_3_fu_2816_p1);

assign add_ln124_5_fu_2857_p2 = (add_ln124_4_reg_4539 + trunc_ln124_5_fu_2853_p1);

assign add_ln124_fu_2667_p2 = (zext_ln124_1_fu_2663_p1 + zext_ln124_fu_2653_p1);

assign add_ln131_fu_2885_p2 = (i_5_reg_985 + 31'd1);

assign add_ln140_fu_3328_p2 = (ap_phi_mux_i_6_phi_fu_1140_p4 + 31'd1);

assign add_ln141_fu_3345_p2 = ($signed(zext_ln141_fu_3339_p1) + $signed(sext_ln140_reg_4867));

assign add_ln142_fu_3356_p2 = ($signed(zext_ln141_fu_3339_p1) + $signed(sext_ln140_1_reg_4872));

assign add_ln49_1_fu_1260_p2 = (indvar_flatten22_reg_641 + 95'd1);

assign add_ln49_fu_1289_p2 = ($signed(i_reg_652) + $signed(31'd1));

assign add_ln50_1_fu_1597_p2 = (indvar_flatten_reg_664 + 64'd1);

assign add_ln50_fu_1394_p2 = (select_ln49_fu_1336_p3 + 32'd1);

assign add_ln51_fu_1592_p2 = (select_ln50_reg_3766 + 32'd1);

assign add_ln52_fu_1564_p2 = (l_reg_700 + 31'd1);

assign add_ln53_1_fu_1434_p2 = (zext_ln50_fu_1368_p1 + zext_ln53_2_fu_1430_p1);

assign add_ln53_2_fu_1491_p2 = (zext_ln53_4_fu_1487_p1 + zext_ln53_3_fu_1477_p1);

assign add_ln53_3_fu_1536_p2 = (add_ln53_2_fu_1491_p2 + zext_ln53_5_fu_1532_p1);

assign add_ln53_4_fu_1558_p2 = (p_shl1_cast_fu_1550_p3 + trunc_ln53_3_fu_1542_p1);

assign add_ln53_5_fu_1583_p2 = (add_ln53_4_reg_3788 + trunc_ln53_5_fu_1579_p1);

assign add_ln53_fu_1362_p2 = (zext_ln53_1_fu_1358_p1 + zext_ln53_fu_1348_p1);

assign add_ln62_fu_1610_p2 = (i_1_reg_711 + 31'd1);

assign add_ln703_1_fu_2560_p2 = ($signed(r_V_reg_4241) + $signed(empty_77_reg_848));

assign add_ln703_fu_3284_p2 = (x_Dout_A + empty_63_reg_1111);

assign add_ln70_2_fu_2986_p2 = (f_reg_1007 + 31'd1);

assign add_ln70_4_fu_2958_p2 = (indvar_flatten91_reg_996 + 127'd1);

assign add_ln70_fu_1649_p2 = ($signed(W_read_reg_3512) + $signed(32'd1));

assign add_ln71_1_fu_3238_p2 = (indvar_flatten57_reg_1031 + 96'd1);

assign add_ln71_fu_3057_p2 = (select_ln70_fu_2997_p3 + 32'd1);

assign add_ln72_1_fu_3225_p2 = (indvar_flatten36_reg_1043 + 64'd1);

assign add_ln72_fu_3101_p2 = (select_ln71_fu_3086_p3 + 32'd1);

assign add_ln73_fu_3220_p2 = (select_ln72_reg_4774 + 32'd1);

assign add_ln75_fu_3195_p2 = (fh_reg_1089 + 32'd1);

assign add_ln76_fu_3255_p2 = (fw_reg_1100 + 31'd1);

assign add_ln77_fu_3251_p2 = ($signed(grp_fu_3449_p2) + $signed(trunc_ln73_reg_4779));

assign add_ln88_fu_1667_p2 = (i_2_reg_722 + 31'd1);

assign add_ln93_1_fu_1743_p2 = (indvar_flatten125_reg_745 + 95'd1);

assign add_ln93_fu_1772_p2 = (i_3_reg_756 + 31'd1);

assign add_ln94_1_fu_2050_p2 = (indvar_flatten102_reg_768 + 64'd1);

assign add_ln94_fu_1839_p2 = (select_ln93_fu_1778_p3 + 32'd1);

assign add_ln95_fu_2045_p2 = (select_ln94_reg_4017 + 32'd1);

assign add_ln96_fu_2017_p2 = (l_1_reg_792 + 31'd1);

assign add_ln97_1_fu_1878_p2 = (zext_ln94_fu_1818_p1 + zext_ln97_2_fu_1874_p1);

assign add_ln97_2_fu_1944_p2 = (zext_ln97_4_fu_1940_p1 + zext_ln97_3_fu_1930_p1);

assign add_ln97_3_fu_1989_p2 = (add_ln97_2_fu_1944_p2 + zext_ln97_5_fu_1985_p1);

assign add_ln97_4_fu_2011_p2 = (p_shl3_cast_fu_2003_p3 + trunc_ln97_3_fu_1995_p1);

assign add_ln97_5_fu_2036_p2 = (add_ln97_4_reg_4070 + trunc_ln97_5_fu_2032_p1);

assign add_ln97_fu_1812_p2 = (zext_ln97_1_fu_1808_p1 + zext_ln97_fu_1796_p1);

assign addr_cmp_fu_2494_p2 = ((reuse_addr_reg_fu_262 == zext_ln1118_fu_2481_p1) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_pp8_stage0 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_pp8_stage1 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state147 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state160 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state161 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state162 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state163 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state164 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state165 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state176 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd83];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln52_reg_3798 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln52_reg_3798 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln62_reg_3827 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln62_reg_3827 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln88_reg_3873 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln88_reg_3873 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln96_reg_4080 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln96_reg_4080 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_block_state117_io));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_block_state117_io));
end

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b1 == ap_block_state125_io));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b1 == ap_block_state125_io));
end

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp8_stage0_01001 = ((gmem2_BVALID == 1'b0) & (icmp_ln140_1_reg_4882_pp8_iter3_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp8_stage0_11001 = (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b1 == ap_block_state170_io)) | ((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_block_state168_io)) | ((gmem2_BVALID == 1'b0) & (icmp_ln140_1_reg_4882_pp8_iter3_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp8_stage0_subdone = (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b1 == ap_block_state170_io)) | ((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_block_state168_io)) | ((gmem2_BVALID == 1'b0) & (icmp_ln140_1_reg_4882_pp8_iter3_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1)));
end

assign ap_block_pp8_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp8_stage1_01001 = ((gmem2_BVALID == 1'b0) & (icmp_ln140_1_reg_4882_pp8_iter4_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp8_stage1_11001 = (((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_block_state169_io)) | ((gmem2_BVALID == 1'b0) & (icmp_ln140_1_reg_4882_pp8_iter4_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp8_stage1_subdone = (((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_block_state169_io)) | ((gmem2_BVALID == 1'b0) & (icmp_ln140_1_reg_4882_pp8_iter4_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1)));
end

assign ap_block_state100_pp4_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp4_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp4_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp4_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state108_io = ((gmem_AWREADY == 1'b0) & (icmp_ln120_reg_4450 == 1'd1));
end

assign ap_block_state115_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state117_io = ((gmem_WREADY == 1'b0) & (icmp_ln123_reg_4549_pp5_iter1_reg == 1'd0));
end

assign ap_block_state117_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((gmem_ARREADY == 1'b0) & (icmp_ln49_1_reg_3681 == 1'd1));
end

always @ (*) begin
    ap_block_state122 = ((gmem_BVALID == 1'b0) & (cmp147408_reg_3941 == 1'd1));
end

assign ap_block_state123_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state125_io = ((gmem_WREADY == 1'b0) & (icmp_ln131_reg_4578_pp6_iter1_reg == 1'd0));
end

assign ap_block_state125_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state130 = ((gmem_BVALID == 1'b0) & (ap_predicate_op854_writeresp_state130 == 1'b1));
end

assign ap_block_state157_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state158_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state159_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state166_pp8_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state167_pp8_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state168_io = ((gmem2_AWREADY == 1'b0) & (icmp_ln140_1_reg_4882 == 1'd0));
end

assign ap_block_state168_pp8_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state169_io = (((gmem2_WREADY == 1'b0) & (icmp_ln140_1_reg_4882_pp8_iter1_reg == 1'd0)) | ((gmem2_AWREADY == 1'b0) & (icmp_ln140_1_reg_4882_pp8_iter1_reg == 1'd0)));
end

assign ap_block_state169_pp8_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state170_io = ((gmem2_WREADY == 1'b0) & (icmp_ln140_1_reg_4882_pp8_iter1_reg == 1'd0));
end

assign ap_block_state170_pp8_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state171_pp8_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state172_pp8_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state173_pp8_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state174_pp8_stage0_iter4 = ((gmem2_BVALID == 1'b0) & (icmp_ln140_1_reg_4882_pp8_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state175_pp8_stage1_iter4 = ((gmem2_BVALID == 1'b0) & (icmp_ln140_1_reg_4882_pp8_iter4_reg == 1'd0));
end

assign ap_block_state28_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp0_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln52_reg_3798 == 1'd0));
end

assign ap_block_state30_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state39_pp1_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln62_reg_3827 == 1'd0));
end

assign ap_block_state40_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state41_io = ((gmem_ARREADY == 1'b0) & (ap_predicate_op403_readreq_state41 == 1'b1));
end

assign ap_block_state48_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state49_pp2_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln88_reg_3873 == 1'd0));
end

assign ap_block_state50_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state73_pp3_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln96_reg_4080 == 1'd0));
end

assign ap_block_state74_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp4_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp4_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp4_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2404 = ((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage1_01001) & (1'b1 == ap_CS_fsm_pp8_stage1));
end

always @ (*) begin
    ap_condition_2416 = ((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_01001) & (1'b1 == ap_CS_fsm_pp8_stage0));
end

always @ (*) begin
    ap_condition_4596 = ((icmp_ln140_1_reg_4882 == 1'd0) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0));
end

always @ (*) begin
    ap_condition_4600 = ((icmp_ln140_1_reg_4882_pp8_iter1_reg == 1'd0) & (1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp8 = (ap_idle_pp8 ^ 1'b1);

always @ (*) begin
    ap_predicate_op403_readreq_state41 = ((fwprop_read_reg_3473 == 1'd0) & (icmp_ln49_reg_3611 == 1'd1));
end

always @ (*) begin
    ap_predicate_op854_writeresp_state130 = ((fwprop_read_reg_3473 == 1'd0) & (icmp_ln49_reg_3611 == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cast95_fu_1689_p1 = FH_read_reg_3498;

assign cmp176393_fu_1759_p2 = (($signed(outW_reg_3606) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign dx_Addr_A = dx_Addr_A_orig << 32'd1;

assign dx_Clk_A = ap_clk;

assign dx_Din_A = {{grp_fu_3401_p3[28:13]}};

assign dx_Rst_A = ap_rst_n_inv;

assign dy_Addr_A = p_cast29_fu_2204_p1 << 32'd1;

assign dy_Clk_A = ap_clk;

assign dy_Din_A = 16'd0;

assign dy_Rst_A = ap_rst_n_inv;

assign dy_WEN_A = 2'd0;

assign empty_47_fu_1190_p0 = H;

assign empty_47_fu_1190_p1 = empty_47_fu_1190_p0[12:0];

assign empty_48_fu_1235_p1 = F_read_reg_3539[30:0];

assign empty_49_fu_1257_p1 = FW_read_reg_3477[30:0];

assign empty_54_fu_1504_p2 = (tmp_4_fu_1497_p3 + wt_read_reg_3575);

assign empty_59_fu_2981_p2 = ($signed(trunc_ln72_fu_2977_p1) + $signed(grp_fu_3417_p2));

assign empty_75_fu_1924_p2 = (tmp2_fu_1920_p2 + select_ln94_1_fu_1914_p3);

assign empty_76_fu_1957_p2 = (tmp_9_fu_1950_p3 + dwt_read_reg_3569);

assign empty_78_fu_2199_p2 = ($signed(trunc_ln105_fu_2195_p1) + $signed(empty_82_reg_4208));

assign empty_80_fu_2290_p2 = ($signed(tmp3_fu_2285_p2) + $signed(grp_fu_3380_p2));

assign empty_88_fu_2745_p2 = (tmp4_fu_2741_p2 + select_ln121_1_fu_2735_p3);

assign empty_89_fu_2778_p2 = (tmp_8_fu_2771_p3 + dwt_read_reg_3569);

assign empty_fu_1186_p1 = FH[12:0];

assign fw_cast_fu_3261_p1 = fw_reg_1100;

assign grp_fu_1147_p2 = (($signed(FW_read_reg_3477) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign grp_fu_1152_p2 = ((FH_read_reg_3498 == 32'd0) ? 1'b1 : 1'b0);

assign grp_fu_1157_p2 = ($signed(H_read_reg_3522) + $signed(32'd1));

assign grp_fu_1162_p2 = (grp_fu_1157_p2 - FH_read_reg_3498);

assign grp_fu_1167_p2 = (trunc_ln44_reg_3601 + 13'd1);

assign grp_fu_1229_p0 = grp_fu_1229_p00;

assign grp_fu_1229_p00 = $unsigned(C_read_reg_3528);

assign grp_fu_1229_p1 = grp_fu_1229_p10;

assign grp_fu_1229_p10 = FH_read_reg_3498;

assign grp_fu_1245_p0 = grp_fu_1245_p00;

assign grp_fu_1245_p00 = empty_48_fu_1235_p1;

assign grp_fu_1245_p1 = grp_fu_1245_p10;

assign grp_fu_1245_p10 = bound_reg_3625;

assign grp_fu_1692_p0 = grp_fu_1692_p00;

assign grp_fu_1692_p00 = $unsigned(C_read_reg_3528);

assign grp_fu_1692_p1 = grp_fu_1692_p10;

assign grp_fu_1692_p10 = FH_read_reg_3498;

assign grp_fu_1704_p0 = grp_fu_1704_p00;

assign grp_fu_1704_p00 = trunc_ln88_reg_3860;

assign grp_fu_1704_p1 = grp_fu_1704_p10;

assign grp_fu_1704_p10 = bound96_reg_3898;

assign grp_fu_1716_p0 = FW_read_reg_3477[30:0];

assign grp_fu_1716_p1 = FH_read_reg_3498[30:0];

assign grp_fu_1725_p1 = C_read_reg_3528[30:0];

assign grp_fu_1734_p0 = j_1_reg_733[30:0];

assign grp_fu_1767_p0 = cast95_reg_3892;

assign grp_fu_1767_p1 = grp_fu_1767_p10;

assign grp_fu_1767_p10 = FW_read_reg_3477;

assign grp_fu_2069_p0 = grp_fu_2069_p00;

assign grp_fu_2069_p00 = $unsigned(C_read_reg_3528);

assign grp_fu_2069_p1 = grp_fu_2069_p10;

assign grp_fu_2069_p10 = bound130_reg_4104;

assign grp_fu_2082_p0 = grp_fu_2082_p00;

assign grp_fu_2082_p00 = trunc_ln88_reg_3860;

assign grp_fu_2082_p1 = grp_fu_2082_p10;

assign grp_fu_2082_p10 = reg_1172;

assign grp_fu_2575_p0 = j_2_reg_928[30:0];

assign grp_fu_2916_p0 = grp_fu_2916_p00;

assign grp_fu_2916_p00 = reg_1172;

assign grp_fu_2916_p1 = grp_fu_2916_p10;

assign grp_fu_2916_p10 = sub_ln70_reg_3848;

assign grp_fu_2928_p0 = grp_fu_2928_p00;

assign grp_fu_2928_p00 = $unsigned(C_read_reg_3528);

assign grp_fu_2928_p1 = grp_fu_2928_p10;

assign grp_fu_2928_p10 = bound27_reg_4597;

assign grp_fu_2944_p0 = grp_fu_2944_p00;

assign grp_fu_2944_p00 = trunc_ln70_1_fu_2934_p1;

assign grp_fu_2944_p1 = grp_fu_2944_p10;

assign grp_fu_2944_p10 = bound41_reg_4614;

assign grp_fu_3367_p0 = select_ln103_1_fu_2129_p3[12:0];

assign grp_fu_3367_p2 = select_ln103_fu_2145_p3[12:0];

assign grp_fu_3380_p0 = ap_phi_mux_c_1_phi_fu_875_p4[12:0];

assign grp_fu_3387_p0 = add_ln106_fu_2237_p2[12:0];

assign grp_fu_3394_p0 = ((select_ln106_5_reg_4322[0:0] == 1'b1) ? p_mid1134_reg_4334 : select_ln106_4_fu_2396_p3);

assign grp_fu_3401_p1 = sext_ln1118_1_reg_4246;

assign grp_fu_3401_p2 = {{lhs_2_fu_2512_p3}, {13'd0}};

assign grp_fu_3409_p1 = sext_ln1118_1_reg_4246;

assign grp_fu_3409_p2 = {{dwbuf_V_q1}, {13'd0}};

assign grp_fu_3417_p0 = f_reg_1007[12:0];

assign grp_fu_3423_p0 = c_reg_1019[12:0];

assign grp_fu_3428_p0 = add_ln70_2_fu_2986_p2[12:0];

assign grp_fu_3440_p0 = ((select_ln71_4_reg_4726[0:0] == 1'b1) ? p_mid132_fu_3142_p2 : select_ln71_3_fu_3135_p3);

assign grp_fu_3440_p2 = select_ln72_fu_3179_p3[12:0];

assign grp_fu_3449_p0 = (tmp1_fu_3210_p2 + select_ln72_1_reg_4749);

assign icmp_ln103_fu_2112_p2 = ((indvar_flatten180_reg_803 == bound174_reg_4145) ? 1'b1 : 1'b0);

assign icmp_ln104_fu_2123_p2 = ((h_1_reg_825 == reg_1172) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_2190_p2 = ((w_1_reg_837 == sub_ln103_reg_4135) ? 1'b1 : 1'b0);

assign icmp_ln106_fu_2232_p2 = ((ap_phi_mux_indvar_flatten167_phi_fu_863_p4 == bound143_reg_4140) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_2253_p2 = ((ap_phi_mux_indvar_flatten138_phi_fu_887_p4 == bound130_reg_4104) ? 1'b1 : 1'b0);

assign icmp_ln108_1_fu_2322_p2 = ((ap_phi_mux_fw_1_phi_fu_909_p4 == FW_read_reg_3477) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_2101_p2 = ((FW_read_reg_3477 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln120_fu_2584_p2 = ((indvar_flatten214_reg_917 == bound107_reg_3951) ? 1'b1 : 1'b0);

assign icmp_ln121_fu_2595_p2 = ((indvar_flatten191_reg_951 == bound96_reg_3898) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_2612_p2 = ((k_2_reg_963 == FH_read_reg_3498) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_2848_p2 = ((l_2_cast_fu_2844_p1 == FW_read_reg_3477) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_2891_p2 = ((i_5_reg_985 == trunc_ln88_reg_3860) ? 1'b1 : 1'b0);

assign icmp_ln140_1_fu_3334_p2 = ((ap_phi_mux_i_6_phi_fu_1140_p4 == trunc_ln140_reg_4862) ? 1'b1 : 1'b0);

assign icmp_ln140_fu_3294_p2 = (($signed(mul293_reg_4852) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln49_1_fu_1271_p2 = ((indvar_flatten22_reg_641 == bound5_reg_3666) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_1218_p2 = (($signed(F_read_reg_3539) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_1295_p2 = ((indvar_flatten_reg_664 == bound_reg_3625) ? 1'b1 : 1'b0);

assign icmp_ln51_1_fu_1383_p2 = ((k_reg_688 == FH_read_reg_3498) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_1574_p2 = ((l_cast_fu_1570_p1 == FW_read_reg_3477) ? 1'b1 : 1'b0);

assign icmp_ln62_fu_1616_p2 = ((i_1_reg_711 == empty_48_reg_3631) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_2972_p2 = ((indvar_flatten91_reg_996 == bound63_reg_4639) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_2992_p2 = ((indvar_flatten57_reg_1031 == bound41_reg_4614) ? 1'b1 : 1'b0);

assign icmp_ln72_1_fu_3037_p2 = ((indvar_flatten36_reg_1043 == bound27_reg_4597) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_2953_p2 = ((bound27_reg_4597 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln73_1_fu_3025_p2 = ((w_reg_1067 == sub_ln70_reg_3848) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_1659_p2 = ((add_ln70_fu_1649_p2 == FW_read_reg_3477) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_3201_p2 = ((fh_reg_1089 == FH_read_reg_3498) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_3265_p2 = ((fw_cast_fu_3261_p1 == FW_read_reg_3477) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_1673_p2 = ((i_2_reg_722 == trunc_ln88_reg_3860) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_1749_p2 = ((indvar_flatten125_reg_745 == bound107_reg_3951) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_1754_p2 = ((indvar_flatten102_reg_768 == bound96_reg_3898) ? 1'b1 : 1'b0);

assign icmp_ln95_1_fu_1828_p2 = ((k_1_reg_780 == FH_read_reg_3498) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_2027_p2 = ((l_1_cast_fu_2023_p1 == FW_read_reg_3477) ? 1'b1 : 1'b0);

assign l_1_cast_fu_2023_p1 = l_1_reg_792;

assign l_2_cast_fu_2844_p1 = l_2_reg_974;

assign l_cast_fu_1570_p1 = l_reg_700;

assign lhs_2_fu_2512_p3 = ((addr_cmp_reg_4410[0:0] == 1'b1) ? reuse_reg_fu_266 : dx_Dout_A);

assign or_ln107_fu_2401_p2 = (select_ln106_5_reg_4322 | icmp_ln107_reg_4276_pp4_iter1_reg);

assign or_ln121_fu_2624_p2 = (select_ln120_4_fu_2617_p3 | icmp_ln121_fu_2595_p2);

assign or_ln50_fu_1452_p2 = (select_ln49_5_reg_3740 | icmp_ln50_reg_3706);

assign or_ln71_fu_3082_p2 = (select_ln70_6_reg_4708 | icmp_ln71_reg_4688);

assign or_ln72_1_fu_3174_p2 = (or_ln72_fu_3170_p2 | icmp_ln71_reg_4688);

assign or_ln72_fu_3170_p2 = (select_ln71_4_reg_4726 | select_ln70_6_reg_4708);

assign or_ln94_fu_1845_p2 = (select_ln93_4_fu_1833_p3 | icmp_ln94_reg_3986);

assign outH_fu_1198_p2 = (sub_ln43_fu_1194_p2 + 13'd1);

assign outW_fu_1212_p2 = (sub_ln44_fu_1204_p2 + 32'd1);

assign p_cast29_fu_2204_p1 = empty_78_fu_2199_p2;

assign p_mid1134_fu_2348_p2 = (tmp3_mid1_fu_2343_p2 + select_ln106_1_fu_2306_p3);

assign p_mid1155_fu_2311_p2 = ($signed(trunc_ln104_reg_4190) + $signed(grp_fu_3387_p2));

assign p_mid132_fu_3142_p2 = (trunc_ln72_1_reg_4744 + select_ln70_1_fu_3125_p3);

assign p_shl1_cast_fu_1550_p3 = {{trunc_ln53_4_fu_1546_p1}, {2'd0}};

assign p_shl3_cast_fu_2003_p3 = {{trunc_ln97_4_fu_1999_p1}, {2'd0}};

assign p_shl5_cast_fu_2824_p3 = {{trunc_ln124_4_fu_2820_p1}, {2'd0}};

assign p_shl7_cast_fu_2455_p3 = {{trunc_ln1118_1_reg_4349}, {2'd0}};

assign select_ln103_1_fu_2129_p3 = ((icmp_ln104_fu_2123_p2[0:0] == 1'b1) ? add_ln103_2_fu_2117_p2 : f_1_reg_814);

assign select_ln103_fu_2145_p3 = ((icmp_ln104_reg_4163[0:0] == 1'b1) ? 32'd0 : h_1_reg_825);

assign select_ln106_1_fu_2306_p3 = ((icmp_ln107_reg_4276[0:0] == 1'b1) ? grp_fu_3387_p2 : grp_fu_3380_p2);

assign select_ln106_2_fu_2258_p3 = ((icmp_ln107_fu_2253_p2[0:0] == 1'b1) ? add_ln106_reg_4261 : c_1_reg_871);

assign select_ln106_3_fu_2315_p3 = ((icmp_ln107_reg_4276[0:0] == 1'b1) ? 7'd0 : trunc_ln727_fu_2295_p1);

assign select_ln106_4_fu_2396_p3 = ((icmp_ln107_reg_4276_pp4_iter1_reg[0:0] == 1'b1) ? p_mid1155_reg_4317 : empty_80_reg_4307);

assign select_ln106_5_fu_2327_p3 = ((icmp_ln107_reg_4276[0:0] == 1'b1) ? icmp_ln108_reg_4150 : icmp_ln108_1_fu_2322_p2);

assign select_ln106_fu_2299_p3 = ((icmp_ln107_reg_4276[0:0] == 1'b1) ? 32'd0 : ap_phi_mux_fh_1_phi_fu_898_p4);

assign select_ln107_1_fu_2358_p3 = ((select_ln106_5_fu_2327_p3[0:0] == 1'b1) ? trunc_ln727_1_fu_2354_p1 : select_ln106_3_fu_2315_p3);

assign select_ln107_3_fu_2436_p3 = ((select_ln106_5_reg_4322[0:0] == 1'b1) ? add_ln107_reg_4329 : select_ln106_reg_4312);

assign select_ln107_4_fu_2275_p3 = ((icmp_ln107_reg_4276[0:0] == 1'b1) ? 64'd1 : add_ln107_2_reg_4297);

assign select_ln107_fu_2405_p3 = ((or_ln107_fu_2401_p2[0:0] == 1'b1) ? 32'd0 : fw_1_reg_905);

assign select_ln120_1_fu_2600_p3 = ((icmp_ln121_fu_2595_p2[0:0] == 1'b1) ? add_ln120_fu_2589_p2 : i_4_reg_940);

assign select_ln120_2_fu_2729_p3 = ((icmp_ln121_reg_4459[0:0] == 1'b1) ? 31'd0 : empty_83_reg_4454);

assign select_ln120_3_fu_2677_p3 = ((icmp_ln121_reg_4459[0:0] == 1'b1) ? 5'd0 : trunc_ln124_reg_4445);

assign select_ln120_4_fu_2617_p3 = ((icmp_ln121_fu_2595_p2[0:0] == 1'b1) ? icmp_ln95_reg_3957 : icmp_ln122_fu_2612_p2);

assign select_ln120_fu_2642_p3 = ((icmp_ln121_reg_4459[0:0] == 1'b1) ? 32'd0 : j_2_reg_928);

assign select_ln121_1_fu_2735_p3 = ((select_ln120_4_reg_4479[0:0] == 1'b1) ? p_mid1189_reg_4523 : select_ln120_2_fu_2729_p3);

assign select_ln121_2_fu_2697_p3 = ((select_ln120_4_reg_4479[0:0] == 1'b1) ? trunc_ln124_1_fu_2693_p1 : select_ln120_3_fu_2677_p3);

assign select_ln121_3_fu_2714_p3 = ((select_ln120_4_reg_4479[0:0] == 1'b1) ? add_ln121_fu_2683_p2 : select_ln120_fu_2642_p3);

assign select_ln121_4_fu_2878_p3 = ((icmp_ln121_reg_4459[0:0] == 1'b1) ? 64'd1 : add_ln121_1_fu_2872_p2);

assign select_ln121_fu_2630_p3 = ((or_ln121_fu_2624_p2[0:0] == 1'b1) ? 32'd0 : k_2_reg_963);

assign select_ln49_1_fu_1343_p3 = ((icmp_ln50_reg_3706[0:0] == 1'b1) ? p_mid1_reg_3734 : empty_50_reg_3685);

assign select_ln49_2_fu_1300_p3 = ((icmp_ln50_fu_1295_p2[0:0] == 1'b1) ? add_ln49_fu_1289_p2 : i_reg_652);

assign select_ln49_3_fu_1372_p3 = ((icmp_ln50_reg_3706[0:0] == 1'b1) ? p_mid1_reg_3734 : tmp_reg_3691);

assign select_ln49_4_fu_1377_p3 = ((icmp_ln50_reg_3706[0:0] == 1'b1) ? 5'd0 : trunc_ln53_reg_3696);

assign select_ln49_5_fu_1388_p3 = ((icmp_ln50_reg_3706[0:0] == 1'b1) ? icmp_ln51_reg_3671 : icmp_ln51_1_fu_1383_p2);

assign select_ln49_fu_1336_p3 = ((icmp_ln50_reg_3706[0:0] == 1'b1) ? 32'd0 : j_reg_676);

assign select_ln50_1_fu_1410_p3 = ((select_ln49_5_fu_1388_p3[0:0] == 1'b1) ? tmp_mid1_fu_1404_p2 : select_ln49_3_fu_1372_p3);

assign select_ln50_2_fu_1422_p3 = ((select_ln49_5_fu_1388_p3[0:0] == 1'b1) ? trunc_ln53_1_fu_1418_p1 : select_ln49_4_fu_1377_p3);

assign select_ln50_3_fu_1440_p3 = ((select_ln49_5_fu_1388_p3[0:0] == 1'b1) ? add_ln50_fu_1394_p2 : select_ln49_fu_1336_p3);

assign select_ln50_4_fu_1603_p3 = ((icmp_ln50_reg_3706[0:0] == 1'b1) ? 64'd1 : add_ln50_1_fu_1597_p2);

assign select_ln50_fu_1456_p3 = ((or_ln50_fu_1452_p2[0:0] == 1'b1) ? 32'd0 : k_reg_688);

assign select_ln70_1_fu_3125_p3 = ((icmp_ln71_reg_4688[0:0] == 1'b1) ? grp_fu_3428_p2 : empty_57_reg_4668);

assign select_ln70_2_fu_3017_p3 = ((icmp_ln71_fu_2992_p2[0:0] == 1'b1) ? trunc_ln70_4_fu_3009_p1 : trunc_ln70_5_fu_3013_p1);

assign select_ln70_3_fu_3154_p3 = ((icmp_ln71_reg_4688[0:0] == 1'b1) ? 13'd0 : empty_58_reg_4673);

assign select_ln70_4_fu_3130_p3 = ((icmp_ln71_reg_4688[0:0] == 1'b1) ? grp_fu_3428_p2 : empty_59_reg_4683);

assign select_ln70_5_fu_3030_p3 = ((icmp_ln71_fu_2992_p2[0:0] == 1'b1) ? icmp_ln73_reg_3854 : icmp_ln73_1_fu_3025_p2);

assign select_ln70_6_fu_3042_p3 = ((icmp_ln71_fu_2992_p2[0:0] == 1'b1) ? icmp_ln72_reg_4644 : icmp_ln72_1_fu_3037_p2);

assign select_ln70_7_fu_3049_p3 = ((icmp_ln71_fu_2992_p2[0:0] == 1'b1) ? add_ln70_2_fu_2986_p2 : f_reg_1007);

assign select_ln70_fu_2997_p3 = ((icmp_ln71_fu_2992_p2[0:0] == 1'b1) ? 32'd0 : c_reg_1019);

assign select_ln71_1_fu_3160_p3 = ((select_ln70_6_reg_4708[0:0] == 1'b1) ? grp_fu_3435_p2 : select_ln70_3_fu_3154_p3);

assign select_ln71_2_fu_3094_p3 = ((or_ln71_fu_3082_p2[0:0] == 1'b1) ? 13'd0 : trunc_ln72_reg_4678);

assign select_ln71_3_fu_3135_p3 = ((select_ln70_6_reg_4708[0:0] == 1'b1) ? select_ln70_1_fu_3125_p3 : select_ln70_4_fu_3130_p3);

assign select_ln71_4_fu_3067_p3 = ((select_ln70_6_fu_3042_p3[0:0] == 1'b1) ? icmp_ln73_reg_3854 : select_ln70_5_fu_3030_p3);

assign select_ln71_5_fu_3074_p3 = ((select_ln70_6_fu_3042_p3[0:0] == 1'b1) ? add_ln71_fu_3057_p2 : select_ln70_fu_2997_p3);

assign select_ln71_6_fu_3244_p3 = ((icmp_ln71_reg_4688[0:0] == 1'b1) ? 96'd1 : add_ln71_1_fu_3238_p2);

assign select_ln71_fu_3086_p3 = ((or_ln71_fu_3082_p2[0:0] == 1'b1) ? 32'd0 : h_reg_1055);

assign select_ln72_1_fu_3111_p3 = ((select_ln71_4_reg_4726[0:0] == 1'b1) ? trunc_ln72_1_fu_3107_p1 : select_ln71_2_fu_3094_p3);

assign select_ln72_3_fu_3118_p3 = ((select_ln71_4_reg_4726[0:0] == 1'b1) ? add_ln72_fu_3101_p2 : select_ln71_fu_3086_p3);

assign select_ln72_4_fu_3231_p3 = ((or_ln71_reg_4739[0:0] == 1'b1) ? 64'd1 : add_ln72_1_fu_3225_p2);

assign select_ln72_fu_3179_p3 = ((or_ln72_1_fu_3174_p2[0:0] == 1'b1) ? 32'd0 : w_reg_1067);

assign select_ln93_1_fu_1785_p3 = ((icmp_ln94_reg_3986[0:0] == 1'b1) ? add_ln93_fu_1772_p2 : i_3_reg_756);

assign select_ln93_2_fu_1908_p3 = ((icmp_ln94_reg_3986[0:0] == 1'b1) ? 31'd0 : empty_71_reg_3978);

assign select_ln93_3_fu_1822_p3 = ((icmp_ln94_reg_3986[0:0] == 1'b1) ? 5'd0 : trunc_ln97_reg_3968);

assign select_ln93_4_fu_1833_p3 = ((icmp_ln94_reg_3986[0:0] == 1'b1) ? icmp_ln95_reg_3957 : icmp_ln95_1_fu_1828_p2);

assign select_ln93_fu_1778_p3 = ((icmp_ln94_reg_3986[0:0] == 1'b1) ? 32'd0 : j_1_reg_733);

assign select_ln94_1_fu_1914_p3 = ((select_ln93_4_reg_4012[0:0] == 1'b1) ? p_mid1100_reg_4049 : select_ln93_2_fu_1908_p3);

assign select_ln94_2_fu_1866_p3 = ((select_ln93_4_fu_1833_p3[0:0] == 1'b1) ? trunc_ln97_1_fu_1862_p1 : select_ln93_3_fu_1822_p3);

assign select_ln94_3_fu_1884_p3 = ((select_ln93_4_fu_1833_p3[0:0] == 1'b1) ? add_ln94_fu_1839_p2 : select_ln93_fu_1778_p3);

assign select_ln94_4_fu_2056_p3 = ((icmp_ln94_reg_3986[0:0] == 1'b1) ? 64'd1 : add_ln94_1_fu_2050_p2);

assign select_ln94_fu_1850_p3 = ((or_ln94_fu_1845_p2[0:0] == 1'b1) ? 32'd0 : k_1_reg_780);

assign sext_ln1118_1_fu_2219_p0 = dy_Dout_A;

assign sext_ln1118_1_fu_2219_p1 = sext_ln1118_1_fu_2219_p0;

assign sext_ln123_fu_2793_p1 = $signed(trunc_ln1_fu_2783_p4);

assign sext_ln140_1_fu_3324_p1 = $signed(trunc_ln140_1_fu_3315_p4);

assign sext_ln140_fu_3311_p1 = $signed(trunc_ln4_fu_3302_p4);

assign sext_ln52_fu_1519_p1 = $signed(trunc_ln5_fu_1509_p4);

assign sext_ln62_fu_1321_p1 = $signed(trunc_ln3_fu_1312_p4);

assign sext_ln88_fu_1638_p1 = $signed(trunc_ln8_fu_1629_p4);

assign sext_ln96_fu_1972_p1 = $signed(trunc_ln_fu_1962_p4);

assign sub_ln103_fu_2096_p2 = (add_ln103_fu_2091_p2 - FW_read_reg_3477);

assign sub_ln43_fu_1194_p2 = ($signed(empty_47_reg_3585) - $signed(empty_reg_3580));

assign sub_ln44_fu_1204_p2 = ($signed(W_read_reg_3512) - $signed(FW_read_reg_3477));

assign sub_ln70_fu_1654_p2 = (add_ln70_fu_1649_p2 - FW_read_reg_3477);

assign tmp11_fu_1468_p2 = (trunc_ln51_fu_1464_p1 + mul_ln50_reg_3761);

assign tmp1_fu_3210_p2 = (select_ln71_1_reg_4764 + trunc_ln75_fu_3206_p1);

assign tmp2_fu_1920_p2 = (mul_ln93_reg_4044 + empty_74_reg_4054);

assign tmp3_fu_2285_p2 = (trunc_ln104_reg_4190 + trunc_ln107_fu_2281_p1);

assign tmp3_mid1_fu_2343_p2 = (trunc_ln104_reg_4190 + trunc_ln107_1_fu_2339_p1);

assign tmp4_fu_2741_p2 = (mul_ln120_reg_4513 + empty_87_reg_4518);

assign tmp_10_fu_2378_p3 = {{add_ln1118_2_fu_2369_p2}, {2'd0}};

assign tmp_1_fu_1480_p3 = {{add_ln53_1_reg_3750}, {2'd0}};

assign tmp_2_fu_1351_p3 = {{trunc_ln49_2_reg_3722}, {2'd0}};

assign tmp_3_fu_1933_p3 = {{add_ln97_1_reg_4028}, {2'd0}};

assign tmp_4_fu_1497_p3 = {{empty_53_reg_3777}, {1'd0}};

assign tmp_5_fu_2656_p3 = {{trunc_ln120_reg_4473}, {2'd0}};

assign tmp_6_fu_2754_p3 = {{add_ln124_1_reg_4502}, {2'd0}};

assign tmp_7_fu_1800_p3 = {{trunc_ln93_2_fu_1792_p1}, {2'd0}};

assign tmp_8_fu_2771_p3 = {{empty_88_reg_4528}, {1'd0}};

assign tmp_9_fu_1950_p3 = {{empty_75_reg_4059}, {1'd0}};

assign tmp_fu_1280_p2 = (trunc_ln50_fu_1276_p1 + empty_50_reg_3685);

assign tmp_mid1_fu_1404_p2 = (trunc_ln50_1_fu_1400_p1 + select_ln49_1_fu_1343_p3);

assign tmp_s_fu_2163_p3 = {{trunc_ln103_2_reg_4178}, {2'd0}};

assign trunc_ln103_2_fu_2141_p1 = select_ln103_1_fu_2129_p3[2:0];

assign trunc_ln103_fu_2088_p1 = W_read_reg_3512[12:0];

assign trunc_ln104_fu_2152_p1 = select_ln103_fu_2145_p3[12:0];

assign trunc_ln105_fu_2195_p1 = w_1_reg_837[12:0];

assign trunc_ln106_2_fu_2265_p1 = select_ln106_2_fu_2258_p3[4:0];

assign trunc_ln107_1_fu_2339_p1 = add_ln107_fu_2333_p2[12:0];

assign trunc_ln107_fu_2281_p1 = ap_phi_mux_fh_1_phi_fu_898_p4[12:0];

assign trunc_ln109_fu_2441_p1 = select_ln107_fu_2405_p3[12:0];

assign trunc_ln1118_1_fu_2426_p1 = add_ln1118_4_fu_2416_p2[7:0];

assign trunc_ln1118_2_fu_2445_p1 = select_ln107_fu_2405_p3[9:0];

assign trunc_ln1118_fu_2422_p1 = add_ln1118_4_fu_2416_p2[9:0];

assign trunc_ln120_fu_2608_p1 = select_ln120_1_fu_2600_p3[2:0];

assign trunc_ln121_1_fu_2689_p1 = add_ln121_fu_2683_p2[30:0];

assign trunc_ln122_fu_2638_p1 = select_ln121_fu_2630_p3[30:0];

assign trunc_ln124_1_fu_2693_p1 = add_ln121_fu_2683_p2[4:0];

assign trunc_ln124_2_fu_2803_p1 = select_ln121_reg_4486[6:0];

assign trunc_ln124_3_fu_2816_p1 = add_ln124_3_fu_2810_p2[9:0];

assign trunc_ln124_4_fu_2820_p1 = add_ln124_3_fu_2810_p2[7:0];

assign trunc_ln124_5_fu_2853_p1 = l_2_reg_974[9:0];

assign trunc_ln124_fu_2580_p1 = j_2_reg_928[4:0];

assign trunc_ln132_fu_2896_p1 = i_5_reg_985[2:0];

assign trunc_ln140_1_fu_3315_p4 = {{debug_dx_read_reg_3549[31:1]}};

assign trunc_ln140_fu_3299_p1 = mul293_reg_4852[30:0];

assign trunc_ln1_fu_2783_p4 = {{empty_89_fu_2778_p2[31:1]}};

assign trunc_ln3_fu_1312_p4 = {{b_read_reg_3564[31:1]}};

assign trunc_ln44_fu_1208_p1 = sub_ln44_fu_1204_p2[12:0];

assign trunc_ln49_1_fu_1254_p1 = C_read_reg_3528[30:0];

assign trunc_ln49_2_fu_1308_p1 = select_ln49_2_fu_1300_p3[2:0];

assign trunc_ln49_fu_1251_p1 = FH_read_reg_3498[30:0];

assign trunc_ln4_fu_3302_p4 = {{debug_x_read_reg_3554[31:1]}};

assign trunc_ln50_1_fu_1400_p1 = add_ln50_fu_1394_p2[30:0];

assign trunc_ln50_fu_1276_p1 = j_reg_676[30:0];

assign trunc_ln51_fu_1464_p1 = select_ln50_fu_1456_p3[30:0];

assign trunc_ln53_1_fu_1418_p1 = add_ln50_fu_1394_p2[4:0];

assign trunc_ln53_2_fu_1529_p1 = select_ln50_reg_3766[6:0];

assign trunc_ln53_3_fu_1542_p1 = add_ln53_3_fu_1536_p2[9:0];

assign trunc_ln53_4_fu_1546_p1 = add_ln53_3_fu_1536_p2[7:0];

assign trunc_ln53_5_fu_1579_p1 = l_reg_700[9:0];

assign trunc_ln53_fu_1285_p1 = j_reg_676[4:0];

assign trunc_ln5_fu_1509_p4 = {{empty_54_fu_1504_p2[31:1]}};

assign trunc_ln63_fu_1621_p1 = i_1_reg_711[2:0];

assign trunc_ln70_1_fu_2934_p1 = F_read_reg_3539[30:0];

assign trunc_ln70_4_fu_3009_p1 = add_ln70_2_fu_2986_p2[2:0];

assign trunc_ln70_5_fu_3013_p1 = f_reg_1007[2:0];

assign trunc_ln70_fu_2950_p1 = W_read_reg_3512[12:0];

assign trunc_ln71_1_fu_3063_p1 = add_ln71_fu_3057_p2[12:0];

assign trunc_ln727_1_fu_2354_p1 = add_ln107_fu_2333_p2[6:0];

assign trunc_ln727_fu_2295_p1 = ap_phi_mux_fh_1_phi_fu_898_p4[6:0];

assign trunc_ln72_1_fu_3107_p1 = add_ln72_fu_3101_p2[12:0];

assign trunc_ln72_fu_2977_p1 = h_reg_1055[12:0];

assign trunc_ln73_fu_3187_p1 = select_ln72_fu_3179_p3[12:0];

assign trunc_ln75_fu_3206_p1 = fh_reg_1089[12:0];

assign trunc_ln77_fu_3270_p1 = fw_reg_1100[12:0];

assign trunc_ln88_fu_1664_p1 = F_read_reg_3539[30:0];

assign trunc_ln89_fu_1678_p1 = i_2_reg_722[2:0];

assign trunc_ln8_fu_1629_p4 = {{db_read_reg_3559[31:1]}};

assign trunc_ln93_2_fu_1792_p1 = select_ln93_1_fu_1785_p3[2:0];

assign trunc_ln93_fu_1710_p1 = FW_read_reg_3477[30:0];

assign trunc_ln94_1_fu_1858_p1 = add_ln94_fu_1839_p2[30:0];

assign trunc_ln95_fu_1892_p1 = select_ln94_fu_1850_p3[30:0];

assign trunc_ln97_1_fu_1862_p1 = add_ln94_fu_1839_p2[4:0];

assign trunc_ln97_2_fu_1982_p1 = select_ln94_reg_4017[6:0];

assign trunc_ln97_3_fu_1995_p1 = add_ln97_3_fu_1989_p2[9:0];

assign trunc_ln97_4_fu_1999_p1 = add_ln97_3_fu_1989_p2[7:0];

assign trunc_ln97_5_fu_2032_p1 = l_1_reg_792[9:0];

assign trunc_ln97_fu_1739_p1 = j_1_reg_733[4:0];

assign trunc_ln_fu_1962_p4 = {{empty_76_fu_1957_p2[31:1]}};

assign x_Addr_A = x_Addr_A_orig << 32'd1;

assign x_Clk_A = ap_clk;

assign x_Din_A = 16'd0;

assign x_Rst_A = ap_rst_n_inv;

assign x_WEN_A = 2'd0;

assign y_Addr_A = y_Addr_A_orig << 32'd1;

assign y_Clk_A = ap_clk;

assign y_Rst_A = ap_rst_n_inv;

assign zext_ln103_fu_2156_p1 = trunc_ln103_2_reg_4178;

assign zext_ln104_fu_2180_p1 = add_ln1118_1_fu_2174_p2;

assign zext_ln1116_fu_3279_p1 = add_ln1116_fu_3274_p2;

assign zext_ln1118_1_fu_2160_p1 = trunc_ln103_2_reg_4178;

assign zext_ln1118_2_fu_2170_p1 = tmp_s_fu_2163_p3;

assign zext_ln1118_3_fu_2366_p1 = trunc_ln106_2_reg_4292_pp4_iter1_reg;

assign zext_ln1118_4_fu_2374_p1 = add_ln1118_2_fu_2369_p2;

assign zext_ln1118_5_fu_2386_p1 = tmp_10_fu_2378_p3;

assign zext_ln1118_6_fu_2413_p1 = select_ln107_1_reg_4339;

assign zext_ln1118_7_fu_2472_p1 = add_ln1118_6_reg_4379;

assign zext_ln1118_fu_2481_p1 = add_ln1118_fu_2477_p2;

assign zext_ln121_fu_2673_p1 = add_ln124_fu_2667_p2;

assign zext_ln124_1_fu_2663_p1 = tmp_5_fu_2656_p3;

assign zext_ln124_2_fu_2704_p1 = select_ln121_2_fu_2697_p3;

assign zext_ln124_3_fu_2751_p1 = add_ln124_1_reg_4502;

assign zext_ln124_4_fu_2761_p1 = tmp_6_fu_2754_p3;

assign zext_ln124_5_fu_2806_p1 = trunc_ln124_2_fu_2803_p1;

assign zext_ln124_6_fu_2862_p1 = add_ln124_5_fu_2857_p2;

assign zext_ln124_fu_2653_p1 = trunc_ln120_reg_4473;

assign zext_ln132_fu_2900_p1 = trunc_ln132_fu_2896_p1;

assign zext_ln141_fu_3339_p1 = ap_phi_mux_i_6_phi_fu_1140_p4;

assign zext_ln50_fu_1368_p1 = add_ln53_fu_1362_p2;

assign zext_ln53_1_fu_1358_p1 = tmp_2_fu_1351_p3;

assign zext_ln53_2_fu_1430_p1 = select_ln50_2_fu_1422_p3;

assign zext_ln53_3_fu_1477_p1 = add_ln53_1_reg_3750;

assign zext_ln53_4_fu_1487_p1 = tmp_1_fu_1480_p3;

assign zext_ln53_5_fu_1532_p1 = trunc_ln53_2_fu_1529_p1;

assign zext_ln53_6_fu_1588_p1 = add_ln53_5_reg_3802_pp0_iter1_reg;

assign zext_ln53_fu_1348_p1 = trunc_ln49_2_reg_3722;

assign zext_ln63_fu_1625_p1 = trunc_ln63_reg_3831_pp1_iter1_reg;

assign zext_ln70_fu_3166_p1 = select_ln70_2_reg_4703;

assign zext_ln74_fu_3191_p1 = $unsigned(grp_fu_3440_p3);

assign zext_ln89_fu_1682_p1 = trunc_ln89_reg_3877_pp2_iter1_reg;

assign zext_ln94_fu_1818_p1 = add_ln97_fu_1812_p2;

assign zext_ln97_1_fu_1808_p1 = tmp_7_fu_1800_p3;

assign zext_ln97_2_fu_1874_p1 = select_ln94_2_fu_1866_p3;

assign zext_ln97_3_fu_1930_p1 = add_ln97_1_reg_4028;

assign zext_ln97_4_fu_1940_p1 = tmp_3_fu_1933_p3;

assign zext_ln97_5_fu_1985_p1 = trunc_ln97_2_fu_1982_p1;

assign zext_ln97_6_fu_2041_p1 = add_ln97_5_reg_4084_pp3_iter1_reg;

assign zext_ln97_fu_1796_p1 = trunc_ln93_2_fu_1792_p1;

always @ (posedge ap_clk) begin
    cast95_reg_3892[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln104_reg_4203[6] <= 1'b0;
end

endmodule //conv_combined
