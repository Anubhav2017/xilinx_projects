// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv_combined_conv_combined,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=0,HLS_SYN_FF=14304,HLS_SYN_LUT=12534,HLS_VERSION=2020_2}" *)

module conv_combined (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST,
        m_axi_gmem2_WID,
        m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY,
        m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID,
        m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA,
        m_axi_gmem2_RLAST,
        m_axi_gmem2_RID,
        m_axi_gmem2_RUSER,
        m_axi_gmem2_RRESP,
        m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP,
        m_axi_gmem2_BID,
        m_axi_gmem2_BUSER,
        x_Addr_A,
        x_EN_A,
        x_WEN_A,
        x_Din_A,
        x_Dout_A,
        x_Clk_A,
        x_Rst_A,
        dx_Addr_A,
        dx_EN_A,
        dx_WEN_A,
        dx_Din_A,
        dx_Dout_A,
        dx_Clk_A,
        dx_Rst_A,
        y_Addr_A,
        y_EN_A,
        y_WEN_A,
        y_Din_A,
        y_Dout_A,
        y_Clk_A,
        y_Rst_A,
        dy_Addr_A,
        dy_EN_A,
        dy_WEN_A,
        dy_Din_A,
        dy_Dout_A,
        dy_Clk_A,
        dy_Rst_A,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 148'd1;
parameter    ap_ST_fsm_state2 = 148'd2;
parameter    ap_ST_fsm_state3 = 148'd4;
parameter    ap_ST_fsm_state4 = 148'd8;
parameter    ap_ST_fsm_state5 = 148'd16;
parameter    ap_ST_fsm_state6 = 148'd32;
parameter    ap_ST_fsm_state7 = 148'd64;
parameter    ap_ST_fsm_state8 = 148'd128;
parameter    ap_ST_fsm_state9 = 148'd256;
parameter    ap_ST_fsm_state10 = 148'd512;
parameter    ap_ST_fsm_state11 = 148'd1024;
parameter    ap_ST_fsm_state12 = 148'd2048;
parameter    ap_ST_fsm_state13 = 148'd4096;
parameter    ap_ST_fsm_state14 = 148'd8192;
parameter    ap_ST_fsm_state15 = 148'd16384;
parameter    ap_ST_fsm_state16 = 148'd32768;
parameter    ap_ST_fsm_state17 = 148'd65536;
parameter    ap_ST_fsm_state18 = 148'd131072;
parameter    ap_ST_fsm_state19 = 148'd262144;
parameter    ap_ST_fsm_state20 = 148'd524288;
parameter    ap_ST_fsm_state21 = 148'd1048576;
parameter    ap_ST_fsm_state22 = 148'd2097152;
parameter    ap_ST_fsm_state23 = 148'd4194304;
parameter    ap_ST_fsm_state24 = 148'd8388608;
parameter    ap_ST_fsm_state25 = 148'd16777216;
parameter    ap_ST_fsm_state26 = 148'd33554432;
parameter    ap_ST_fsm_state27 = 148'd67108864;
parameter    ap_ST_fsm_pp0_stage0 = 148'd134217728;
parameter    ap_ST_fsm_state31 = 148'd268435456;
parameter    ap_ST_fsm_state32 = 148'd536870912;
parameter    ap_ST_fsm_state33 = 148'd1073741824;
parameter    ap_ST_fsm_state34 = 148'd2147483648;
parameter    ap_ST_fsm_state35 = 148'd4294967296;
parameter    ap_ST_fsm_state36 = 148'd8589934592;
parameter    ap_ST_fsm_state37 = 148'd17179869184;
parameter    ap_ST_fsm_pp1_stage0 = 148'd34359738368;
parameter    ap_ST_fsm_state41 = 148'd68719476736;
parameter    ap_ST_fsm_state42 = 148'd137438953472;
parameter    ap_ST_fsm_state43 = 148'd274877906944;
parameter    ap_ST_fsm_state44 = 148'd549755813888;
parameter    ap_ST_fsm_state45 = 148'd1099511627776;
parameter    ap_ST_fsm_state46 = 148'd2199023255552;
parameter    ap_ST_fsm_state47 = 148'd4398046511104;
parameter    ap_ST_fsm_pp2_stage0 = 148'd8796093022208;
parameter    ap_ST_fsm_state51 = 148'd17592186044416;
parameter    ap_ST_fsm_state52 = 148'd35184372088832;
parameter    ap_ST_fsm_state53 = 148'd70368744177664;
parameter    ap_ST_fsm_state54 = 148'd140737488355328;
parameter    ap_ST_fsm_state55 = 148'd281474976710656;
parameter    ap_ST_fsm_state56 = 148'd562949953421312;
parameter    ap_ST_fsm_state57 = 148'd1125899906842624;
parameter    ap_ST_fsm_state58 = 148'd2251799813685248;
parameter    ap_ST_fsm_state59 = 148'd4503599627370496;
parameter    ap_ST_fsm_state60 = 148'd9007199254740992;
parameter    ap_ST_fsm_state61 = 148'd18014398509481984;
parameter    ap_ST_fsm_state62 = 148'd36028797018963968;
parameter    ap_ST_fsm_state63 = 148'd72057594037927936;
parameter    ap_ST_fsm_state64 = 148'd144115188075855872;
parameter    ap_ST_fsm_state65 = 148'd288230376151711744;
parameter    ap_ST_fsm_state66 = 148'd576460752303423488;
parameter    ap_ST_fsm_state67 = 148'd1152921504606846976;
parameter    ap_ST_fsm_state68 = 148'd2305843009213693952;
parameter    ap_ST_fsm_state69 = 148'd4611686018427387904;
parameter    ap_ST_fsm_state70 = 148'd9223372036854775808;
parameter    ap_ST_fsm_state71 = 148'd18446744073709551616;
parameter    ap_ST_fsm_pp3_stage0 = 148'd36893488147419103232;
parameter    ap_ST_fsm_state75 = 148'd73786976294838206464;
parameter    ap_ST_fsm_state76 = 148'd147573952589676412928;
parameter    ap_ST_fsm_state77 = 148'd295147905179352825856;
parameter    ap_ST_fsm_state78 = 148'd590295810358705651712;
parameter    ap_ST_fsm_state79 = 148'd1180591620717411303424;
parameter    ap_ST_fsm_state80 = 148'd2361183241434822606848;
parameter    ap_ST_fsm_state81 = 148'd4722366482869645213696;
parameter    ap_ST_fsm_state82 = 148'd9444732965739290427392;
parameter    ap_ST_fsm_state83 = 148'd18889465931478580854784;
parameter    ap_ST_fsm_state84 = 148'd37778931862957161709568;
parameter    ap_ST_fsm_state85 = 148'd75557863725914323419136;
parameter    ap_ST_fsm_state86 = 148'd151115727451828646838272;
parameter    ap_ST_fsm_state87 = 148'd302231454903657293676544;
parameter    ap_ST_fsm_state88 = 148'd604462909807314587353088;
parameter    ap_ST_fsm_state89 = 148'd1208925819614629174706176;
parameter    ap_ST_fsm_state90 = 148'd2417851639229258349412352;
parameter    ap_ST_fsm_state91 = 148'd4835703278458516698824704;
parameter    ap_ST_fsm_state92 = 148'd9671406556917033397649408;
parameter    ap_ST_fsm_pp4_stage0 = 148'd19342813113834066795298816;
parameter    ap_ST_fsm_pp4_stage1 = 148'd38685626227668133590597632;
parameter    ap_ST_fsm_state106 = 148'd77371252455336267181195264;
parameter    ap_ST_fsm_state107 = 148'd154742504910672534362390528;
parameter    ap_ST_fsm_state108 = 148'd309485009821345068724781056;
parameter    ap_ST_fsm_state109 = 148'd618970019642690137449562112;
parameter    ap_ST_fsm_state110 = 148'd1237940039285380274899124224;
parameter    ap_ST_fsm_state111 = 148'd2475880078570760549798248448;
parameter    ap_ST_fsm_state112 = 148'd4951760157141521099596496896;
parameter    ap_ST_fsm_state113 = 148'd9903520314283042199192993792;
parameter    ap_ST_fsm_state114 = 148'd19807040628566084398385987584;
parameter    ap_ST_fsm_pp5_stage0 = 148'd39614081257132168796771975168;
parameter    ap_ST_fsm_state118 = 148'd79228162514264337593543950336;
parameter    ap_ST_fsm_state119 = 148'd158456325028528675187087900672;
parameter    ap_ST_fsm_state120 = 148'd316912650057057350374175801344;
parameter    ap_ST_fsm_state121 = 148'd633825300114114700748351602688;
parameter    ap_ST_fsm_state122 = 148'd1267650600228229401496703205376;
parameter    ap_ST_fsm_pp6_stage0 = 148'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state126 = 148'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state127 = 148'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state128 = 148'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state129 = 148'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state130 = 148'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state131 = 148'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state132 = 148'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state133 = 148'd649037107316853453566312041152512;
parameter    ap_ST_fsm_pp7_stage0 = 148'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state137 = 148'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state138 = 148'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state139 = 148'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state140 = 148'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state141 = 148'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state142 = 148'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state143 = 148'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state144 = 148'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state145 = 148'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state146 = 148'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state147 = 148'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state148 = 148'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state149 = 148'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state150 = 148'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state151 = 148'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state152 = 148'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state153 = 148'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state154 = 148'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state155 = 148'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state156 = 148'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state157 = 148'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state158 = 148'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state159 = 148'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state160 = 148'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state161 = 148'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state162 = 148'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state163 = 148'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_pp8_stage0 = 148'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state167 = 148'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state168 = 148'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state169 = 148'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state170 = 148'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state171 = 148'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state172 = 148'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_pp9_stage0 = 148'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_pp9_stage1 = 148'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state183 = 148'd178405961588244985132285746181186892047843328;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM2_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM2_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_USER_VALUE = 0;
parameter    C_M_AXI_GMEM2_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM2_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM2_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
output   m_axi_gmem2_AWVALID;
input   m_axi_gmem2_AWREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_AWADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_AWID;
output  [7:0] m_axi_gmem2_AWLEN;
output  [2:0] m_axi_gmem2_AWSIZE;
output  [1:0] m_axi_gmem2_AWBURST;
output  [1:0] m_axi_gmem2_AWLOCK;
output  [3:0] m_axi_gmem2_AWCACHE;
output  [2:0] m_axi_gmem2_AWPROT;
output  [3:0] m_axi_gmem2_AWQOS;
output  [3:0] m_axi_gmem2_AWREGION;
output  [C_M_AXI_GMEM2_AWUSER_WIDTH - 1:0] m_axi_gmem2_AWUSER;
output   m_axi_gmem2_WVALID;
input   m_axi_gmem2_WREADY;
output  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_WDATA;
output  [C_M_AXI_GMEM2_WSTRB_WIDTH - 1:0] m_axi_gmem2_WSTRB;
output   m_axi_gmem2_WLAST;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_WID;
output  [C_M_AXI_GMEM2_WUSER_WIDTH - 1:0] m_axi_gmem2_WUSER;
output   m_axi_gmem2_ARVALID;
input   m_axi_gmem2_ARREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_ARADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_ARID;
output  [7:0] m_axi_gmem2_ARLEN;
output  [2:0] m_axi_gmem2_ARSIZE;
output  [1:0] m_axi_gmem2_ARBURST;
output  [1:0] m_axi_gmem2_ARLOCK;
output  [3:0] m_axi_gmem2_ARCACHE;
output  [2:0] m_axi_gmem2_ARPROT;
output  [3:0] m_axi_gmem2_ARQOS;
output  [3:0] m_axi_gmem2_ARREGION;
output  [C_M_AXI_GMEM2_ARUSER_WIDTH - 1:0] m_axi_gmem2_ARUSER;
input   m_axi_gmem2_RVALID;
output   m_axi_gmem2_RREADY;
input  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_RDATA;
input   m_axi_gmem2_RLAST;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_RID;
input  [C_M_AXI_GMEM2_RUSER_WIDTH - 1:0] m_axi_gmem2_RUSER;
input  [1:0] m_axi_gmem2_RRESP;
input   m_axi_gmem2_BVALID;
output   m_axi_gmem2_BREADY;
input  [1:0] m_axi_gmem2_BRESP;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_BID;
input  [C_M_AXI_GMEM2_BUSER_WIDTH - 1:0] m_axi_gmem2_BUSER;
output  [31:0] x_Addr_A;
output   x_EN_A;
output  [1:0] x_WEN_A;
output  [15:0] x_Din_A;
input  [15:0] x_Dout_A;
output   x_Clk_A;
output   x_Rst_A;
output  [31:0] dx_Addr_A;
output   dx_EN_A;
output  [1:0] dx_WEN_A;
output  [15:0] dx_Din_A;
input  [15:0] dx_Dout_A;
output   dx_Clk_A;
output   dx_Rst_A;
output  [31:0] y_Addr_A;
output   y_EN_A;
output  [1:0] y_WEN_A;
output  [15:0] y_Din_A;
input  [15:0] y_Dout_A;
output   y_Clk_A;
output   y_Rst_A;
output  [31:0] dy_Addr_A;
output   dy_EN_A;
output  [1:0] dy_WEN_A;
output  [15:0] dy_Din_A;
input  [15:0] dy_Dout_A;
output   dy_Clk_A;
output   dy_Rst_A;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

reg x_EN_A;
reg dx_EN_A;
reg[1:0] dx_WEN_A;
reg[15:0] dx_Din_A;
reg y_EN_A;
reg[1:0] y_WEN_A;
reg[15:0] y_Din_A;
reg dy_EN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [147:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] wt;
wire   [31:0] dwt;
wire   [31:0] b;
wire   [31:0] db;
wire   [31:0] debug_x;
wire   [31:0] debug_dx;
wire   [31:0] F;
wire   [31:0] C;
wire   [31:0] H;
wire   [31:0] W;
wire   [31:0] FH;
wire   [31:0] FW;
wire    fwprop;
wire    debugip;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state21;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln52_reg_3845;
wire    ap_CS_fsm_state11;
reg   [0:0] icmp_ln49_1_reg_3728;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln62_reg_3874;
wire    ap_CS_fsm_state41;
reg   [0:0] icmp_ln49_reg_3658;
reg   [0:0] fwprop_read_reg_3520;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln92_reg_3908;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state108;
reg   [0:0] icmp_ln124_reg_4485;
reg    gmem_blk_n_W;
reg    ap_enable_reg_pp6_iter2;
wire    ap_block_pp6_stage0;
reg   [0:0] icmp_ln135_reg_4613;
reg   [0:0] icmp_ln135_reg_4613_pp6_iter1_reg;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state130;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln100_reg_4115;
wire    ap_CS_fsm_state114;
reg    ap_enable_reg_pp5_iter2;
wire    ap_block_pp5_stage0;
reg   [0:0] icmp_ln127_reg_4584;
reg   [0:0] icmp_ln127_reg_4584_pp5_iter1_reg;
wire    ap_CS_fsm_state122;
reg   [0:0] cmp155422_reg_3976;
reg    gmem2_blk_n_AW;
wire    ap_CS_fsm_pp9_stage0;
reg    ap_enable_reg_pp9_iter1;
wire    ap_block_pp9_stage0;
reg   [0:0] icmp_ln144_1_reg_4927;
reg    gmem2_blk_n_W;
wire    ap_CS_fsm_pp9_stage1;
wire    ap_block_pp9_stage1;
reg   [0:0] icmp_ln144_1_reg_4927_pp9_iter1_reg;
reg    gmem2_blk_n_B;
reg    ap_enable_reg_pp9_iter4;
reg   [0:0] icmp_ln144_1_reg_4927_pp9_iter3_reg;
reg    ap_enable_reg_pp9_iter2;
reg   [0:0] icmp_ln144_1_reg_4927_pp9_iter4_reg;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg   [31:0] gmem_AWADDR;
reg   [31:0] gmem_AWLEN;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg   [15:0] gmem_WDATA;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
reg   [31:0] gmem_ARLEN;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [15:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg    gmem2_AWVALID;
wire    gmem2_AWREADY;
reg   [31:0] gmem2_AWADDR;
reg    gmem2_WVALID;
wire    gmem2_WREADY;
reg   [15:0] gmem2_WDATA;
wire    gmem2_ARREADY;
wire    gmem2_RVALID;
wire   [15:0] gmem2_RDATA;
wire    gmem2_RLAST;
wire   [0:0] gmem2_RID;
wire   [0:0] gmem2_RUSER;
wire   [1:0] gmem2_RRESP;
wire    gmem2_BVALID;
reg    gmem2_BREADY;
wire   [1:0] gmem2_BRESP;
wire   [0:0] gmem2_BID;
wire   [0:0] gmem2_BUSER;
reg   [30:0] l_reg_711;
reg   [30:0] i_1_reg_722;
reg   [30:0] i_3_reg_733;
reg   [30:0] l_1_reg_803;
reg   [95:0] indvar_flatten167_reg_870;
reg   [31:0] c_1_reg_882;
reg   [63:0] indvar_flatten138_reg_894;
reg   [31:0] fh_1_reg_905;
reg   [31:0] fw_1_reg_916;
reg   [30:0] l_2_reg_985;
reg   [30:0] i_6_reg_996;
reg   [31:0] i_2_reg_1007;
reg   [30:0] fw_reg_1122;
reg   [15:0] empty_64_reg_1133;
reg   [31:0] i_7_reg_1158;
wire   [31:0] grp_fu_1190_p2;
reg   [31:0] reg_1200;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state137;
(* use_dsp48 = "no" *) wire  signed [12:0] grp_fu_1195_p2;
reg  signed [12:0] reg_1204;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state149;
wire   [15:0] dbbuf_V_q0;
reg   [15:0] reg_1208;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter1;
wire    ap_block_state123_pp6_stage0_iter0;
wire    ap_block_state124_pp6_stage0_iter1;
wire    ap_block_state125_pp6_stage0_iter2;
reg    ap_block_state125_io;
reg    ap_block_pp6_stage0_11001;
wire  signed [31:0] grp_fu_1181_p2;
reg  signed [31:0] reg_1214;
wire    ap_CS_fsm_state131;
wire    ap_CS_fsm_state169;
wire   [31:0] grp_fu_1218_p2;
reg   [31:0] reg_1223;
wire    ap_CS_fsm_state133;
wire    ap_CS_fsm_state171;
reg   [0:0] debugip_read_reg_3516;
reg   [31:0] FW_read_reg_3524;
reg   [31:0] FH_read_reg_3545;
reg  signed [31:0] W_read_reg_3559;
reg  signed [31:0] H_read_reg_3569;
reg  signed [31:0] C_read_reg_3575;
reg   [31:0] F_read_reg_3586;
reg   [31:0] debug_dx_read_reg_3596;
reg   [31:0] debug_x_read_reg_3601;
reg   [31:0] db_read_reg_3606;
reg   [31:0] b_read_reg_3611;
reg   [31:0] dwt_read_reg_3616;
reg   [31:0] wt_read_reg_3622;
wire   [12:0] empty_fu_1227_p1;
reg   [12:0] empty_reg_3627;
wire  signed [12:0] empty_48_fu_1231_p1;
reg  signed [12:0] empty_48_reg_3632;
(* use_dsp48 = "no" *) wire  signed [12:0] outH_fu_1239_p2;
reg  signed [12:0] outH_reg_3641;
wire    ap_CS_fsm_state2;
wire   [12:0] trunc_ln44_fu_1249_p1;
reg   [12:0] trunc_ln44_reg_3648;
wire   [31:0] outW_fu_1253_p2;
reg   [31:0] outW_reg_3653;
wire   [0:0] icmp_ln49_fu_1259_p2;
wire   [63:0] grp_fu_1270_p2;
reg   [63:0] bound_reg_3672;
wire    ap_CS_fsm_state3;
wire   [30:0] empty_49_fu_1276_p1;
reg   [30:0] empty_49_reg_3678;
wire    ap_CS_fsm_state4;
wire   [0:0] grp_fu_1171_p2;
reg   [0:0] cmp57452_reg_3693;
wire    ap_CS_fsm_state8;
wire  signed [30:0] trunc_ln49_fu_1292_p1;
reg  signed [30:0] trunc_ln49_reg_3697;
wire  signed [30:0] trunc_ln49_1_fu_1295_p1;
reg  signed [30:0] trunc_ln49_1_reg_3702;
wire  signed [30:0] empty_50_fu_1298_p1;
reg  signed [30:0] empty_50_reg_3708;
wire   [94:0] grp_fu_1286_p2;
reg   [94:0] bound5_reg_3713;
wire   [0:0] grp_fu_1176_p2;
reg   [0:0] icmp_ln51_reg_3718;
wire   [94:0] add_ln49_1_fu_1301_p2;
reg   [94:0] add_ln49_1_reg_3723;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln49_1_fu_1312_p2;
wire   [30:0] grp_fu_1307_p2;
reg   [30:0] empty_51_reg_3732;
wire    ap_CS_fsm_state10;
wire   [30:0] tmp_fu_1321_p2;
reg   [30:0] tmp_reg_3738;
wire   [4:0] trunc_ln53_fu_1326_p1;
reg   [4:0] trunc_ln53_reg_3743;
wire  signed [30:0] add_ln49_fu_1330_p2;
reg  signed [30:0] add_ln49_reg_3748;
wire   [0:0] icmp_ln50_fu_1336_p2;
reg   [0:0] icmp_ln50_reg_3753;
wire   [30:0] select_ln49_2_fu_1341_p3;
reg   [30:0] select_ln49_2_reg_3764;
wire   [2:0] trunc_ln49_2_fu_1349_p1;
reg   [2:0] trunc_ln49_2_reg_3769;
wire   [30:0] grp_fu_1373_p2;
reg   [30:0] p_mid1_reg_3781;
wire    ap_CS_fsm_state13;
wire   [0:0] select_ln49_5_fu_1429_p3;
reg   [0:0] select_ln49_5_reg_3787;
wire    ap_CS_fsm_state14;
wire  signed [30:0] select_ln50_1_fu_1451_p3;
reg  signed [30:0] select_ln50_1_reg_3792;
wire   [6:0] add_ln53_1_fu_1475_p2;
reg   [6:0] add_ln53_1_reg_3797;
wire   [31:0] select_ln50_3_fu_1481_p3;
reg   [31:0] select_ln50_3_reg_3803;
wire   [30:0] grp_fu_1489_p2;
reg   [30:0] mul_ln50_reg_3808;
wire    ap_CS_fsm_state16;
wire   [31:0] select_ln50_fu_1497_p3;
reg   [31:0] select_ln50_reg_3813;
wire    ap_CS_fsm_state17;
wire  signed [30:0] tmp11_fu_1509_p2;
reg  signed [30:0] tmp11_reg_3819;
wire   [30:0] grp_fu_1514_p2;
reg   [30:0] empty_54_reg_3824;
wire    ap_CS_fsm_state19;
reg   [31:0] gmem_addr_2_reg_3829;
wire    ap_CS_fsm_state20;
wire   [9:0] add_ln53_4_fu_1599_p2;
reg   [9:0] add_ln53_4_reg_3835;
wire   [30:0] add_ln52_fu_1605_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state28_pp0_stage0_iter0;
reg    ap_block_state29_pp0_stage0_iter1;
wire    ap_block_state30_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln52_fu_1615_p2;
reg   [0:0] icmp_ln52_reg_3845_pp0_iter1_reg;
wire   [9:0] add_ln53_5_fu_1624_p2;
reg   [9:0] add_ln53_5_reg_3849;
reg   [9:0] add_ln53_5_reg_3849_pp0_iter1_reg;
reg   [15:0] gmem_addr_2_read_reg_3854;
wire   [31:0] add_ln51_fu_1633_p2;
wire    ap_CS_fsm_state31;
wire   [63:0] select_ln50_4_fu_1644_p3;
wire   [30:0] add_ln62_fu_1651_p2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state38_pp1_stage0_iter0;
reg    ap_block_state39_pp1_stage0_iter1;
wire    ap_block_state40_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln62_fu_1657_p2;
reg   [0:0] icmp_ln62_reg_3874_pp1_iter1_reg;
wire   [2:0] trunc_ln63_fu_1662_p1;
reg   [2:0] trunc_ln63_reg_3878;
reg   [2:0] trunc_ln63_reg_3878_pp1_iter1_reg;
reg   [15:0] gmem_addr_read_reg_3883;
reg   [31:0] gmem_addr_1_reg_3888;
wire   [30:0] trunc_ln92_fu_1690_p1;
reg   [30:0] trunc_ln92_reg_3895;
wire    ap_CS_fsm_state47;
wire   [30:0] add_ln92_fu_1693_p2;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state48_pp2_stage0_iter0;
reg    ap_block_state49_pp2_stage0_iter1;
wire    ap_block_state50_pp2_stage0_iter2;
reg    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln92_fu_1699_p2;
reg   [0:0] icmp_ln92_reg_3908_pp2_iter1_reg;
wire   [2:0] trunc_ln93_fu_1704_p1;
reg   [2:0] trunc_ln93_reg_3912;
reg   [2:0] trunc_ln93_reg_3912_pp2_iter1_reg;
reg   [15:0] gmem_addr_1_read_reg_3917;
wire    ap_CS_fsm_state51;
wire   [63:0] cast95_fu_1715_p1;
reg   [63:0] cast95_reg_3927;
wire   [63:0] grp_fu_1718_p2;
reg   [63:0] bound96_reg_3933;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
wire  signed [30:0] trunc_ln97_fu_1736_p1;
reg  signed [30:0] trunc_ln97_reg_3950;
wire    ap_CS_fsm_state54;
wire  signed [30:0] grp_fu_1742_p2;
reg  signed [30:0] empty_70_reg_3962;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state57;
wire  signed [30:0] grp_fu_1751_p2;
reg  signed [30:0] empty_71_reg_3980;
wire   [94:0] grp_fu_1730_p2;
reg   [94:0] bound107_reg_3986;
reg   [0:0] icmp_ln99_reg_3992;
wire    ap_CS_fsm_state58;
wire   [4:0] trunc_ln101_fu_1765_p1;
reg   [4:0] trunc_ln101_reg_4003;
wire   [94:0] add_ln97_1_fu_1769_p2;
reg   [94:0] add_ln97_1_reg_4008;
wire    ap_CS_fsm_state59;
wire   [30:0] grp_fu_1760_p2;
reg   [30:0] empty_72_reg_4013;
wire   [0:0] icmp_ln98_fu_1780_p2;
reg   [0:0] icmp_ln98_reg_4021;
wire   [0:0] icmp_ln97_fu_1775_p2;
wire   [0:0] cmp184407_fu_1785_p2;
reg   [0:0] cmp184407_reg_4032;
wire  signed [30:0] select_ln97_1_fu_1811_p3;
reg  signed [30:0] select_ln97_1_reg_4041;
wire    ap_CS_fsm_state60;
wire   [0:0] select_ln97_4_fu_1859_p3;
reg   [0:0] select_ln97_4_reg_4047;
wire   [31:0] select_ln98_fu_1876_p3;
reg   [31:0] select_ln98_reg_4052;
wire  signed [30:0] trunc_ln98_1_fu_1884_p1;
reg  signed [30:0] trunc_ln98_1_reg_4058;
wire   [6:0] add_ln101_1_fu_1904_p2;
reg   [6:0] add_ln101_1_reg_4063;
wire   [31:0] select_ln98_3_fu_1910_p3;
reg   [31:0] select_ln98_3_reg_4069;
wire  signed [30:0] trunc_ln99_fu_1918_p1;
reg  signed [30:0] trunc_ln99_reg_4074;
wire   [30:0] grp_fu_1922_p2;
reg   [30:0] mul_ln97_reg_4079;
wire    ap_CS_fsm_state62;
wire   [30:0] grp_fu_1926_p2;
reg   [30:0] p_mid1100_reg_4084;
wire   [30:0] grp_fu_1930_p2;
reg   [30:0] empty_75_reg_4089;
wire   [30:0] empty_76_fu_1950_p2;
reg   [30:0] empty_76_reg_4094;
wire    ap_CS_fsm_state63;
reg   [31:0] gmem_addr_3_reg_4099;
wire    ap_CS_fsm_state64;
wire   [9:0] add_ln101_4_fu_2037_p2;
reg   [9:0] add_ln101_4_reg_4105;
wire   [30:0] add_ln100_fu_2043_p2;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state72_pp3_stage0_iter0;
reg    ap_block_state73_pp3_stage0_iter1;
wire    ap_block_state74_pp3_stage0_iter2;
reg    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln100_fu_2053_p2;
reg   [0:0] icmp_ln100_reg_4115_pp3_iter1_reg;
wire   [9:0] add_ln101_5_fu_2062_p2;
reg   [9:0] add_ln101_5_reg_4119;
reg   [9:0] add_ln101_5_reg_4119_pp3_iter1_reg;
reg   [15:0] gmem_addr_3_read_reg_4124;
wire   [31:0] add_ln99_fu_2071_p2;
wire    ap_CS_fsm_state75;
wire   [63:0] select_ln98_4_fu_2082_p3;
wire   [63:0] grp_fu_1793_p2;
reg   [63:0] bound130_reg_4139;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state80;
wire  signed [12:0] trunc_ln107_fu_2114_p1;
reg  signed [12:0] trunc_ln107_reg_4165;
wire   [31:0] sub_ln107_fu_2122_p2;
reg   [31:0] sub_ln107_reg_4170;
wire   [95:0] grp_fu_2095_p2;
reg   [95:0] bound143_reg_4175;
wire   [62:0] grp_fu_2108_p2;
reg   [62:0] bound174_reg_4180;
wire   [0:0] icmp_ln112_fu_2127_p2;
reg   [0:0] icmp_ln112_reg_4185;
wire   [62:0] add_ln107_4_fu_2132_p2;
reg   [62:0] add_ln107_4_reg_4190;
wire    ap_CS_fsm_state82;
wire   [0:0] icmp_ln108_fu_2149_p2;
reg   [0:0] icmp_ln108_reg_4198;
wire   [0:0] icmp_ln107_fu_2138_p2;
wire   [30:0] select_ln107_1_fu_2155_p3;
reg   [30:0] select_ln107_1_reg_4203;
wire   [2:0] trunc_ln107_2_fu_2167_p1;
reg   [2:0] trunc_ln107_2_reg_4213;
wire   [31:0] select_ln107_fu_2171_p3;
reg   [31:0] select_ln107_reg_4220;
wire    ap_CS_fsm_state84;
wire   [12:0] trunc_ln108_fu_2178_p1;
reg   [12:0] trunc_ln108_reg_4225;
wire  signed [12:0] grp_fu_3414_p3;
wire    ap_CS_fsm_state85;
wire   [6:0] zext_ln108_fu_2206_p1;
reg   [6:0] zext_ln108_reg_4238;
wire    ap_CS_fsm_state88;
wire  signed [12:0] grp_fu_3421_p2;
reg  signed [12:0] empty_83_reg_4243;
reg   [2:0] dbbuf_V_addr_1_reg_4248;
wire   [31:0] add_ln109_fu_2210_p2;
reg   [31:0] add_ln109_reg_4253;
wire    ap_CS_fsm_state90;
wire   [12:0] trunc_ln109_fu_2221_p1;
reg   [12:0] trunc_ln109_reg_4261;
wire   [0:0] icmp_ln109_fu_2216_p2;
wire   [31:0] add_ln108_fu_2245_p2;
reg  signed [15:0] r_V_reg_4276;
wire    ap_CS_fsm_state92;
wire  signed [28:0] sext_ln1118_1_fu_2250_p1;
reg  signed [28:0] sext_ln1118_1_reg_4281;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state93_pp4_stage0_iter0;
wire    ap_block_state95_pp4_stage0_iter1;
wire    ap_block_state97_pp4_stage0_iter2;
wire    ap_block_state99_pp4_stage0_iter3;
wire    ap_block_state101_pp4_stage0_iter4;
wire    ap_block_state103_pp4_stage0_iter5;
wire    ap_block_state105_pp4_stage0_iter6;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln110_fu_2258_p2;
reg   [0:0] icmp_ln110_reg_4292;
reg   [0:0] icmp_ln110_reg_4292_pp4_iter1_reg;
reg   [0:0] icmp_ln110_reg_4292_pp4_iter2_reg;
reg   [0:0] icmp_ln110_reg_4292_pp4_iter3_reg;
reg   [0:0] icmp_ln110_reg_4292_pp4_iter4_reg;
reg   [0:0] icmp_ln110_reg_4292_pp4_iter5_reg;
wire   [31:0] add_ln110_fu_2263_p2;
reg   [31:0] add_ln110_reg_4296;
wire   [95:0] add_ln110_1_fu_2273_p2;
reg   [95:0] add_ln110_1_reg_4306;
wire    ap_CS_fsm_pp4_stage1;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state94_pp4_stage1_iter0;
wire    ap_block_state96_pp4_stage1_iter1;
wire    ap_block_state98_pp4_stage1_iter2;
wire    ap_block_state100_pp4_stage1_iter3;
wire    ap_block_state102_pp4_stage1_iter4;
wire    ap_block_state104_pp4_stage1_iter5;
wire    ap_block_pp4_stage1_11001;
wire   [0:0] icmp_ln111_fu_2279_p2;
reg   [0:0] icmp_ln111_reg_4311;
reg   [0:0] icmp_ln111_reg_4311_pp4_iter1_reg;
wire   [31:0] select_ln110_2_fu_2284_p3;
reg   [31:0] select_ln110_2_reg_4322;
wire   [4:0] trunc_ln110_2_fu_2291_p1;
reg   [4:0] trunc_ln110_2_reg_4327;
reg   [4:0] trunc_ln110_2_reg_4327_pp4_iter1_reg;
wire   [63:0] add_ln111_2_fu_2295_p2;
reg   [63:0] add_ln111_2_reg_4332;
wire   [63:0] select_ln111_4_fu_2301_p3;
reg   [63:0] select_ln111_4_reg_4337;
reg    ap_enable_reg_pp4_iter1;
(* use_dsp48 = "no" *) wire   [12:0] empty_81_fu_2316_p2;
reg   [12:0] empty_81_reg_4342;
wire   [31:0] select_ln110_fu_2325_p3;
reg   [31:0] select_ln110_reg_4347;
(* use_dsp48 = "no" *) wire   [12:0] p_mid1155_fu_2337_p2;
reg   [12:0] p_mid1155_reg_4352;
wire   [0:0] select_ln110_5_fu_2353_p3;
reg   [0:0] select_ln110_5_reg_4357;
wire   [31:0] add_ln111_fu_2359_p2;
reg   [31:0] add_ln111_reg_4364;
wire   [12:0] p_mid1134_fu_2374_p2;
reg   [12:0] p_mid1134_reg_4369;
wire   [6:0] select_ln111_1_fu_2384_p3;
reg   [6:0] select_ln111_1_reg_4374;
wire   [9:0] trunc_ln1118_fu_2448_p1;
reg   [9:0] trunc_ln1118_reg_4379;
wire   [7:0] trunc_ln1118_1_fu_2452_p1;
reg   [7:0] trunc_ln1118_1_reg_4384;
wire   [31:0] select_ln111_3_fu_2462_p3;
reg   [31:0] select_ln111_3_reg_4394;
reg    ap_enable_reg_pp4_iter2;
wire   [12:0] trunc_ln113_fu_2467_p1;
reg   [12:0] trunc_ln113_reg_4399;
reg   [12:0] trunc_ln113_reg_4399_pp4_iter3_reg;
wire   [9:0] trunc_ln1118_2_fu_2471_p1;
reg   [9:0] trunc_ln1118_2_reg_4404;
wire   [31:0] add_ln112_fu_2475_p2;
reg   [31:0] add_ln112_reg_4409;
wire   [9:0] add_ln1118_6_fu_2493_p2;
reg   [9:0] add_ln1118_6_reg_4414;
reg   [9:0] dwbuf_V_addr_2_reg_4424;
reg   [9:0] dwbuf_V_addr_2_reg_4424_pp4_iter4_reg;
reg   [9:0] dwbuf_V_addr_2_reg_4424_pp4_iter5_reg;
reg   [12:0] dx_addr_2_reg_4440;
reg   [12:0] dx_addr_2_reg_4440_pp4_iter4_reg;
wire   [0:0] addr_cmp_fu_2520_p2;
reg   [0:0] addr_cmp_reg_4445;
wire   [15:0] add_ln703_fu_2586_p2;
wire    ap_CS_fsm_state106;
wire   [94:0] add_ln124_1_fu_2591_p2;
reg   [94:0] add_ln124_1_reg_4470;
wire    ap_CS_fsm_state107;
wire   [4:0] trunc_ln128_fu_2606_p1;
reg   [4:0] trunc_ln128_reg_4480;
wire   [0:0] icmp_ln124_fu_2610_p2;
wire   [30:0] grp_fu_2601_p2;
reg   [30:0] empty_84_reg_4489;
wire   [0:0] icmp_ln125_fu_2621_p2;
reg   [0:0] icmp_ln125_reg_4494;
wire  signed [30:0] select_ln124_1_fu_2626_p3;
reg  signed [30:0] select_ln124_1_reg_4502;
reg    ap_block_state108_io;
wire   [2:0] trunc_ln124_fu_2634_p1;
reg   [2:0] trunc_ln124_reg_4508;
wire   [0:0] select_ln124_4_fu_2643_p3;
reg   [0:0] select_ln124_4_reg_4514;
wire   [31:0] select_ln125_fu_2656_p3;
reg   [31:0] select_ln125_reg_4521;
wire  signed [30:0] trunc_ln126_fu_2664_p1;
reg  signed [30:0] trunc_ln126_reg_4527;
wire  signed [30:0] trunc_ln125_1_fu_2715_p1;
reg  signed [30:0] trunc_ln125_1_reg_4532;
wire    ap_CS_fsm_state109;
wire   [6:0] add_ln128_1_fu_2734_p2;
reg   [6:0] add_ln128_1_reg_4537;
wire   [31:0] select_ln125_3_fu_2740_p3;
reg   [31:0] select_ln125_3_reg_4543;
wire   [30:0] grp_fu_2675_p2;
reg   [30:0] mul_ln124_reg_4548;
wire    ap_CS_fsm_state110;
wire   [30:0] grp_fu_2747_p2;
reg   [30:0] empty_88_reg_4553;
wire   [30:0] grp_fu_2751_p2;
reg   [30:0] p_mid1189_reg_4558;
wire    ap_CS_fsm_state111;
wire   [30:0] empty_89_fu_2771_p2;
reg   [30:0] empty_89_reg_4563;
wire    ap_CS_fsm_state112;
reg   [31:0] gmem_addr_4_reg_4568;
wire    ap_CS_fsm_state113;
wire   [9:0] add_ln128_4_fu_2858_p2;
reg   [9:0] add_ln128_4_reg_4574;
wire   [30:0] add_ln127_fu_2864_p2;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state115_pp5_stage0_iter0;
wire    ap_block_state116_pp5_stage0_iter1;
wire    ap_block_state117_pp5_stage0_iter2;
reg    ap_block_state117_io;
reg    ap_block_pp5_stage0_11001;
wire   [0:0] icmp_ln127_fu_2874_p2;
wire   [15:0] dwbuf_V_q1;
reg   [15:0] dwbuf_V_load_reg_4593;
reg    ap_enable_reg_pp5_iter1;
wire   [31:0] add_ln126_fu_2893_p2;
wire   [63:0] select_ln125_4_fu_2904_p3;
wire   [30:0] add_ln135_fu_2911_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [0:0] icmp_ln135_fu_2917_p2;
wire   [31:0] add_ln70_fu_2931_p2;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter0;
wire    ap_block_state134_pp7_stage0_iter0;
wire    ap_block_state135_pp7_stage0_iter1;
wire    ap_block_state136_pp7_stage0_iter2;
wire    ap_block_pp7_stage0_11001;
wire   [0:0] icmp_ln70_fu_2937_p2;
wire   [31:0] sub_ln74_fu_2957_p2;
reg   [31:0] sub_ln74_reg_4636;
wire   [0:0] icmp_ln77_fu_2962_p2;
reg   [0:0] icmp_ln77_reg_4642;
wire    ap_CS_fsm_state138;
wire   [63:0] grp_fu_2974_p2;
reg   [63:0] bound27_reg_4658;
wire    ap_CS_fsm_state139;
wire    ap_CS_fsm_state140;
wire   [95:0] grp_fu_2986_p2;
reg   [95:0] bound41_reg_4675;
wire    ap_CS_fsm_state144;
wire    ap_CS_fsm_state145;
reg   [0:0] cmp106332_reg_4691;
wire  signed [12:0] trunc_ln74_fu_3008_p1;
reg  signed [12:0] trunc_ln74_reg_4695;
wire   [126:0] grp_fu_3002_p2;
reg   [126:0] bound63_reg_4700;
wire   [0:0] icmp_ln76_fu_3011_p2;
reg   [0:0] icmp_ln76_reg_4705;
wire   [126:0] add_ln74_4_fu_3016_p2;
reg   [126:0] add_ln74_4_reg_4710;
wire    ap_CS_fsm_state150;
wire   [0:0] icmp_ln74_fu_3030_p2;
reg   [0:0] icmp_ln74_reg_4725;
wire  signed [12:0] grp_fu_3464_p2;
reg  signed [12:0] empty_58_reg_4729;
wire    ap_CS_fsm_state153;
wire  signed [12:0] grp_fu_3470_p2;
reg  signed [12:0] empty_59_reg_4734;
wire   [12:0] trunc_ln76_fu_3035_p1;
reg   [12:0] trunc_ln76_reg_4739;
(* use_dsp48 = "no" *) wire   [12:0] empty_60_fu_3039_p2;
reg   [12:0] empty_60_reg_4744;
wire   [0:0] icmp_ln75_fu_3050_p2;
reg   [0:0] icmp_ln75_reg_4749;
wire   [2:0] select_ln74_2_fu_3075_p3;
reg   [2:0] select_ln74_2_reg_4764;
wire   [0:0] select_ln74_6_fu_3100_p3;
reg   [0:0] select_ln74_6_reg_4769;
wire   [30:0] select_ln74_7_fu_3107_p3;
reg   [30:0] select_ln74_7_reg_4777;
wire  signed [12:0] trunc_ln75_1_fu_3121_p1;
reg  signed [12:0] trunc_ln75_1_reg_4782;
wire   [0:0] select_ln75_4_fu_3125_p3;
reg   [0:0] select_ln75_4_reg_4787;
wire   [31:0] select_ln75_5_fu_3132_p3;
reg   [31:0] select_ln75_5_reg_4795;
wire   [0:0] or_ln75_fu_3140_p2;
reg   [0:0] or_ln75_reg_4800;
wire    ap_CS_fsm_state154;
wire   [12:0] trunc_ln76_1_fu_3165_p1;
reg   [12:0] trunc_ln76_1_reg_4805;
wire   [12:0] select_ln76_1_fu_3169_p3;
reg   [12:0] select_ln76_1_reg_4810;
wire   [31:0] select_ln76_3_fu_3176_p3;
reg   [31:0] select_ln76_3_reg_4815;
wire    ap_CS_fsm_state156;
wire   [12:0] select_ln75_1_fu_3218_p3;
reg   [12:0] select_ln75_1_reg_4825;
wire    ap_CS_fsm_state157;
wire    ap_CS_fsm_state158;
wire   [31:0] select_ln76_fu_3237_p3;
reg   [31:0] select_ln76_reg_4835;
wire   [12:0] trunc_ln77_fu_3245_p1;
reg   [12:0] trunc_ln77_reg_4840;
wire   [15:0] bbuf_V_q0;
wire    ap_CS_fsm_state159;
reg   [12:0] y_addr_reg_4851;
wire   [31:0] add_ln79_fu_3253_p2;
reg   [31:0] add_ln79_reg_4856;
wire    ap_CS_fsm_state160;
wire   [0:0] icmp_ln79_fu_3259_p2;
wire   [31:0] add_ln77_fu_3278_p2;
wire   [63:0] select_ln76_4_fu_3289_p3;
wire   [95:0] select_ln75_6_fu_3302_p3;
(* use_dsp48 = "no" *) wire   [12:0] add_ln81_fu_3309_p2;
reg   [12:0] add_ln81_reg_4884;
wire    ap_CS_fsm_state163;
wire   [30:0] add_ln80_fu_3313_p2;
wire    ap_CS_fsm_pp8_stage0;
reg    ap_enable_reg_pp8_iter0;
wire    ap_block_state164_pp8_stage0_iter0;
wire    ap_block_state165_pp8_stage0_iter1;
wire    ap_block_state166_pp8_stage0_iter2;
wire    ap_block_pp8_stage0_11001;
wire   [0:0] icmp_ln80_fu_3323_p2;
reg   [0:0] icmp_ln80_reg_4894;
reg   [0:0] icmp_ln80_reg_4894_pp8_iter1_reg;
wire   [15:0] add_ln703_1_fu_3342_p2;
reg    ap_enable_reg_pp8_iter2;
wire   [0:0] icmp_ln144_fu_3348_p2;
wire    ap_CS_fsm_state172;
wire  signed [31:0] sext_ln144_fu_3363_p1;
reg  signed [31:0] sext_ln144_reg_4912;
wire  signed [31:0] sext_ln144_1_fu_3376_p1;
reg  signed [31:0] sext_ln144_1_reg_4917;
wire   [31:0] add_ln144_fu_3380_p2;
reg   [31:0] add_ln144_reg_4922;
reg    ap_enable_reg_pp9_iter0;
wire    ap_block_state173_pp9_stage0_iter0;
wire    ap_block_state175_pp9_stage0_iter1;
reg    ap_block_state175_io;
wire    ap_block_state177_pp9_stage0_iter2;
reg    ap_block_state177_io;
wire    ap_block_state179_pp9_stage0_iter3;
reg    ap_block_state181_pp9_stage0_iter4;
reg    ap_block_pp9_stage0_11001;
wire   [0:0] icmp_ln144_1_fu_3386_p2;
reg   [0:0] icmp_ln144_1_reg_4927_pp9_iter2_reg;
reg   [31:0] gmem2_addr_reg_4936;
reg   [31:0] gmem2_addr_1_reg_4947;
reg   [31:0] gmem2_addr_1_reg_4947_pp9_iter1_reg;
reg   [15:0] x_load_1_reg_4953;
reg   [15:0] dx_load_reg_4958;
wire    ap_CS_fsm_state27;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state28;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state37;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state38;
reg    ap_enable_reg_pp1_iter2;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state48;
reg    ap_enable_reg_pp2_iter2;
wire    ap_CS_fsm_state71;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state72;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_pp4_stage1_subdone;
reg    ap_condition_pp4_flush_enable;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter1_state96;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter4;
reg    ap_enable_reg_pp4_iter5;
reg    ap_enable_reg_pp4_iter6;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state115;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state123;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state134;
reg    ap_enable_reg_pp7_iter1;
reg    ap_enable_reg_pp7_iter2;
wire    ap_block_pp8_stage0_subdone;
reg    ap_condition_pp8_flush_enable;
reg    ap_enable_reg_pp8_iter1;
reg    ap_block_pp9_stage0_subdone;
reg    ap_condition_pp9_exit_iter0_state173;
wire    ap_block_state174_pp9_stage1_iter0;
wire    ap_block_state176_pp9_stage1_iter1;
reg    ap_block_state176_io;
wire    ap_block_state178_pp9_stage1_iter2;
wire    ap_block_state180_pp9_stage1_iter3;
reg    ap_block_state182_pp9_stage1_iter4;
reg    ap_block_pp9_stage1_subdone;
reg    ap_enable_reg_pp9_iter3;
reg   [9:0] wbuf_V_address0;
reg    wbuf_V_ce0;
reg    wbuf_V_we0;
wire  signed [15:0] wbuf_V_q0;
reg   [9:0] dwbuf_V_address0;
reg    dwbuf_V_ce0;
reg    dwbuf_V_we0;
reg   [15:0] dwbuf_V_d0;
reg   [9:0] dwbuf_V_address1;
reg    dwbuf_V_ce1;
reg   [2:0] bbuf_V_address0;
reg    bbuf_V_ce0;
reg    bbuf_V_we0;
reg   [2:0] dbbuf_V_address0;
reg    dbbuf_V_ce0;
reg    dbbuf_V_we0;
reg   [15:0] dbbuf_V_d0;
reg   [94:0] indvar_flatten22_reg_652;
reg  signed [30:0] i_reg_663;
reg   [63:0] indvar_flatten_reg_675;
reg   [31:0] j_reg_687;
reg   [31:0] k_reg_699;
reg   [31:0] j_1_reg_744;
reg   [94:0] indvar_flatten125_reg_756;
reg   [30:0] i_4_reg_767;
reg   [63:0] indvar_flatten102_reg_779;
reg   [31:0] k_1_reg_791;
reg   [62:0] indvar_flatten180_reg_814;
reg   [30:0] f_1_reg_825;
reg   [31:0] h_1_reg_836;
reg   [31:0] w_1_reg_848;
reg   [15:0] empty_78_reg_859;
reg   [95:0] ap_phi_mux_indvar_flatten167_phi_fu_874_p4;
wire    ap_block_pp4_stage0;
reg   [31:0] ap_phi_mux_c_1_phi_fu_886_p4;
reg   [63:0] ap_phi_mux_indvar_flatten138_phi_fu_898_p4;
wire    ap_block_pp4_stage1;
reg   [31:0] ap_phi_mux_fh_1_phi_fu_909_p4;
reg   [31:0] ap_phi_mux_fw_1_phi_fu_920_p4;
reg   [94:0] indvar_flatten214_reg_928;
reg    ap_block_state122;
reg   [31:0] j_2_reg_939;
reg   [30:0] i_5_reg_951;
reg   [63:0] indvar_flatten191_reg_962;
reg   [31:0] k_2_reg_974;
reg   [126:0] indvar_flatten91_reg_1018;
reg   [30:0] f_reg_1029;
reg   [31:0] c_reg_1041;
reg   [95:0] indvar_flatten57_reg_1053;
reg   [63:0] indvar_flatten36_reg_1065;
reg   [31:0] h_reg_1077;
reg   [31:0] w_reg_1089;
reg   [15:0] empty_61_reg_1101;
wire    ap_CS_fsm_state168;
reg   [31:0] fh_reg_1111;
reg   [15:0] empty_66_reg_1145;
wire    ap_CS_fsm_state167;
reg   [31:0] ap_phi_mux_i_7_phi_fu_1162_p4;
wire   [31:0] zext_ln53_6_fu_1629_p1;
wire   [31:0] zext_ln63_fu_1666_p1;
wire   [31:0] zext_ln93_fu_1708_p1;
wire   [31:0] zext_ln101_6_fu_2067_p1;
wire   [31:0] zext_ln107_fu_2182_p1;
wire   [31:0] p_cast30_fu_2230_p1;
wire   [31:0] zext_ln1118_7_fu_2498_p1;
wire   [31:0] zext_ln1118_fu_2507_p1;
wire   [31:0] zext_ln128_6_fu_2888_p1;
wire   [31:0] zext_ln136_fu_2926_p1;
wire   [31:0] zext_ln71_fu_2947_p1;
wire    ap_block_pp7_stage0;
wire   [31:0] zext_ln74_fu_3224_p1;
wire   [31:0] zext_ln78_fu_3249_p1;
wire   [31:0] zext_ln1116_fu_3337_p1;
wire    ap_block_pp8_stage0;
wire  signed [31:0] sext_ln62_fu_1362_p1;
wire  signed [31:0] sext_ln52_fu_1560_p1;
wire  signed [31:0] sext_ln92_fu_1679_p1;
wire  signed [31:0] sext_ln100_fu_1998_p1;
wire  signed [31:0] sext_ln127_fu_2819_p1;
wire   [31:0] add_ln145_fu_3392_p2;
wire   [31:0] add_ln146_fu_3403_p2;
reg    ap_block_state11_io;
reg    ap_predicate_op410_readreq_state41;
reg    ap_block_state41_io;
reg    ap_predicate_op856_writeresp_state130;
reg    ap_block_state130;
wire    ap_block_pp5_stage0_01001;
wire    ap_block_pp6_stage0_01001;
reg    ap_block_pp9_stage1_11001;
reg    ap_block_pp9_stage1_01001;
reg    ap_block_pp9_stage0_01001;
reg   [31:0] reuse_addr_reg_fu_264;
reg   [15:0] reuse_reg_fu_268;
wire    ap_CS_fsm_state91;
reg   [31:0] x_Addr_A_orig;
reg   [31:0] dx_Addr_A_orig;
reg   [31:0] y_Addr_A_orig;
wire   [31:0] grp_fu_1185_p2;
wire    ap_CS_fsm_state132;
wire    ap_CS_fsm_state170;
wire  signed [31:0] empty_48_fu_1231_p0;
wire   [12:0] sub_ln43_fu_1235_p2;
wire   [31:0] sub_ln44_fu_1245_p2;
wire   [31:0] grp_fu_1270_p0;
wire   [31:0] grp_fu_1270_p1;
wire   [30:0] grp_fu_1286_p0;
wire   [63:0] grp_fu_1286_p1;
wire   [30:0] trunc_ln50_fu_1317_p1;
wire   [30:0] trunc_ln3_fu_1353_p4;
wire    ap_CS_fsm_state12;
wire   [4:0] tmp_2_fu_1392_p3;
wire   [5:0] zext_ln53_1_fu_1399_p1;
wire   [5:0] zext_ln53_fu_1389_p1;
wire   [5:0] add_ln53_fu_1403_p2;
wire   [0:0] icmp_ln51_1_fu_1424_p2;
wire   [31:0] select_ln49_fu_1377_p3;
wire   [31:0] add_ln50_fu_1435_p2;
wire   [30:0] trunc_ln50_1_fu_1441_p1;
wire   [30:0] select_ln49_1_fu_1384_p3;
wire   [30:0] tmp_mid1_fu_1445_p2;
wire   [30:0] select_ln49_3_fu_1413_p3;
wire   [4:0] trunc_ln53_1_fu_1459_p1;
wire   [4:0] select_ln49_4_fu_1418_p3;
wire   [4:0] select_ln50_2_fu_1463_p3;
wire   [6:0] zext_ln50_fu_1409_p1;
wire   [6:0] zext_ln53_2_fu_1471_p1;
wire    ap_CS_fsm_state15;
wire   [0:0] or_ln50_fu_1493_p2;
wire   [30:0] trunc_ln51_fu_1505_p1;
wire    ap_CS_fsm_state18;
wire   [8:0] tmp_1_fu_1521_p3;
wire   [29:0] zext_ln53_4_fu_1528_p1;
wire   [29:0] zext_ln53_3_fu_1518_p1;
wire   [31:0] tmp_4_fu_1538_p3;
wire   [31:0] empty_55_fu_1545_p2;
wire   [30:0] trunc_ln5_fu_1550_p4;
wire   [6:0] trunc_ln53_2_fu_1570_p1;
wire   [29:0] add_ln53_2_fu_1532_p2;
wire   [29:0] zext_ln53_5_fu_1573_p1;
wire   [29:0] add_ln53_3_fu_1577_p2;
wire   [7:0] trunc_ln53_4_fu_1587_p1;
wire   [9:0] p_shl1_cast_fu_1591_p3;
wire   [9:0] trunc_ln53_3_fu_1583_p1;
wire   [31:0] l_cast_fu_1611_p1;
wire   [9:0] trunc_ln53_5_fu_1620_p1;
wire   [63:0] add_ln50_1_fu_1638_p2;
wire   [30:0] trunc_ln7_fu_1670_p4;
wire   [31:0] grp_fu_1718_p0;
wire   [31:0] grp_fu_1718_p1;
wire   [30:0] grp_fu_1730_p0;
wire   [63:0] grp_fu_1730_p1;
wire  signed [30:0] grp_fu_1742_p0;
wire  signed [30:0] grp_fu_1742_p1;
wire  signed [30:0] grp_fu_1751_p1;
wire  signed [30:0] grp_fu_1760_p0;
wire   [31:0] grp_fu_1793_p0;
wire   [31:0] grp_fu_1793_p1;
wire   [30:0] add_ln97_fu_1798_p2;
wire   [2:0] trunc_ln97_2_fu_1818_p1;
wire   [4:0] tmp_7_fu_1826_p3;
wire   [5:0] zext_ln101_1_fu_1834_p1;
wire   [5:0] zext_ln101_fu_1822_p1;
wire   [5:0] add_ln101_fu_1838_p2;
wire   [0:0] icmp_ln99_1_fu_1854_p2;
wire   [31:0] select_ln97_fu_1804_p3;
wire   [0:0] or_ln98_fu_1871_p2;
wire   [31:0] add_ln98_fu_1865_p2;
wire   [4:0] trunc_ln101_1_fu_1888_p1;
wire   [4:0] select_ln97_3_fu_1848_p3;
wire   [4:0] select_ln98_2_fu_1892_p3;
wire   [6:0] zext_ln98_fu_1844_p1;
wire   [6:0] zext_ln101_2_fu_1900_p1;
wire    ap_CS_fsm_state61;
wire   [30:0] select_ln97_2_fu_1934_p3;
wire   [30:0] tmp3_fu_1946_p2;
wire   [30:0] select_ln98_1_fu_1940_p3;
wire   [8:0] tmp_3_fu_1959_p3;
wire   [29:0] zext_ln101_4_fu_1966_p1;
wire   [29:0] zext_ln101_3_fu_1956_p1;
wire   [31:0] tmp_9_fu_1976_p3;
wire   [31:0] empty_77_fu_1983_p2;
wire   [30:0] trunc_ln_fu_1988_p4;
wire   [6:0] trunc_ln101_2_fu_2008_p1;
wire   [29:0] add_ln101_2_fu_1970_p2;
wire   [29:0] zext_ln101_5_fu_2011_p1;
wire   [29:0] add_ln101_3_fu_2015_p2;
wire   [7:0] trunc_ln101_4_fu_2025_p1;
wire   [9:0] p_shl3_cast_fu_2029_p3;
wire   [9:0] trunc_ln101_3_fu_2021_p1;
wire   [31:0] l_1_cast_fu_2049_p1;
wire   [9:0] trunc_ln101_5_fu_2058_p1;
wire   [63:0] add_ln98_1_fu_2076_p2;
wire   [31:0] grp_fu_2095_p0;
wire   [63:0] grp_fu_2095_p1;
wire   [30:0] grp_fu_2108_p0;
wire   [31:0] grp_fu_2108_p1;
wire   [31:0] add_ln107_fu_2117_p2;
wire   [30:0] add_ln107_2_fu_2143_p2;
wire   [4:0] tmp_s_fu_2189_p3;
wire   [5:0] zext_ln1118_2_fu_2196_p1;
wire   [5:0] zext_ln1118_1_fu_2186_p1;
wire   [5:0] add_ln1118_1_fu_2200_p2;
(* use_dsp48 = "no" *) wire   [12:0] empty_79_fu_2225_p2;
wire  signed [15:0] sext_ln1118_1_fu_2250_p0;
wire   [12:0] trunc_ln111_fu_2307_p1;
wire   [12:0] tmp4_fu_2311_p2;
wire  signed [12:0] grp_fu_3427_p2;
wire  signed [12:0] grp_fu_3434_p2;
wire   [6:0] trunc_ln727_fu_2321_p1;
wire   [0:0] icmp_ln112_1_fu_2348_p2;
wire   [12:0] trunc_ln111_1_fu_2365_p1;
wire   [12:0] tmp4_mid1_fu_2369_p2;
wire   [12:0] select_ln110_1_fu_2332_p3;
wire   [6:0] trunc_ln727_1_fu_2380_p1;
wire   [6:0] select_ln110_3_fu_2341_p3;
wire   [6:0] zext_ln1118_3_fu_2392_p1;
wire   [6:0] add_ln1118_2_fu_2395_p2;
wire   [8:0] tmp_10_fu_2404_p3;
wire   [29:0] zext_ln1118_5_fu_2412_p1;
wire   [29:0] zext_ln1118_4_fu_2400_p1;
wire   [0:0] or_ln111_fu_2427_p2;
wire   [29:0] add_ln1118_3_fu_2416_p2;
wire   [29:0] zext_ln1118_6_fu_2439_p1;
wire   [29:0] add_ln1118_4_fu_2442_p2;
wire   [12:0] select_ln110_4_fu_2422_p3;
wire   [31:0] select_ln111_fu_2431_p3;
wire   [9:0] p_shl7_cast_fu_2481_p3;
wire   [9:0] add_ln1118_5_fu_2488_p2;
wire  signed [12:0] grp_fu_3441_p3;
(* use_dsp48 = "no" *) wire   [12:0] add_ln1118_fu_2503_p2;
wire   [15:0] lhs_2_fu_2538_p3;
wire  signed [28:0] grp_fu_3448_p3;
wire  signed [28:0] grp_fu_3456_p3;
wire  signed [30:0] grp_fu_2601_p0;
wire   [30:0] add_ln124_fu_2615_p2;
wire   [0:0] icmp_ln126_fu_2638_p2;
wire   [0:0] or_ln125_fu_2650_p2;
wire   [4:0] tmp_5_fu_2682_p3;
wire   [5:0] zext_ln128_1_fu_2689_p1;
wire   [5:0] zext_ln128_fu_2679_p1;
wire   [5:0] add_ln128_fu_2693_p2;
wire   [31:0] select_ln124_fu_2668_p3;
wire   [31:0] add_ln125_fu_2709_p2;
wire   [4:0] trunc_ln128_1_fu_2719_p1;
wire   [4:0] select_ln124_3_fu_2703_p3;
wire   [4:0] select_ln125_2_fu_2723_p3;
wire   [6:0] zext_ln125_fu_2699_p1;
wire   [6:0] zext_ln128_2_fu_2730_p1;
wire   [30:0] select_ln124_2_fu_2755_p3;
wire   [30:0] tmp5_fu_2767_p2;
wire   [30:0] select_ln125_1_fu_2761_p3;
wire   [8:0] tmp_6_fu_2780_p3;
wire   [29:0] zext_ln128_4_fu_2787_p1;
wire   [29:0] zext_ln128_3_fu_2777_p1;
wire   [31:0] tmp_8_fu_2797_p3;
wire   [31:0] empty_90_fu_2804_p2;
wire   [30:0] trunc_ln1_fu_2809_p4;
wire   [6:0] trunc_ln128_2_fu_2829_p1;
wire   [29:0] add_ln128_2_fu_2791_p2;
wire   [29:0] zext_ln128_5_fu_2832_p1;
wire   [29:0] add_ln128_3_fu_2836_p2;
wire   [7:0] trunc_ln128_4_fu_2846_p1;
wire   [9:0] p_shl5_cast_fu_2850_p3;
wire   [9:0] trunc_ln128_3_fu_2842_p1;
wire   [31:0] l_2_cast_fu_2870_p1;
wire   [9:0] trunc_ln128_5_fu_2879_p1;
wire   [9:0] add_ln128_5_fu_2883_p2;
wire   [63:0] add_ln125_1_fu_2898_p2;
wire   [2:0] trunc_ln136_fu_2922_p1;
wire   [12:0] trunc_ln71_fu_2943_p1;
wire   [31:0] add_ln74_fu_2952_p2;
wire   [31:0] grp_fu_2974_p0;
wire   [31:0] grp_fu_2974_p1;
wire   [31:0] grp_fu_2986_p0;
wire   [63:0] grp_fu_2986_p1;
wire   [30:0] trunc_ln74_1_fu_2992_p1;
wire   [30:0] grp_fu_3002_p0;
wire   [95:0] grp_fu_3002_p1;
wire   [30:0] add_ln74_2_fu_3044_p2;
wire   [2:0] trunc_ln74_4_fu_3067_p1;
wire   [2:0] trunc_ln74_5_fu_3071_p1;
wire   [0:0] icmp_ln77_1_fu_3083_p2;
wire   [0:0] icmp_ln76_1_fu_3095_p2;
wire   [31:0] select_ln74_fu_3055_p3;
wire   [31:0] add_ln75_fu_3115_p2;
wire   [0:0] select_ln74_5_fu_3088_p3;
wire   [31:0] select_ln75_fu_3144_p3;
wire   [31:0] add_ln76_fu_3159_p2;
wire   [12:0] select_ln75_2_fu_3152_p3;
wire  signed [12:0] grp_fu_3475_p2;
wire   [12:0] select_ln74_1_fu_3183_p3;
wire   [12:0] select_ln74_4_fu_3188_p3;
wire   [12:0] p_mid132_fu_3200_p2;
wire   [12:0] select_ln75_3_fu_3193_p3;
wire  signed [12:0] grp_fu_3482_p2;
wire   [12:0] select_ln74_3_fu_3212_p3;
wire   [0:0] or_ln76_fu_3228_p2;
wire   [0:0] or_ln76_1_fu_3232_p2;
wire  signed [12:0] grp_fu_3487_p3;
wire   [12:0] trunc_ln79_fu_3264_p1;
wire   [12:0] tmp2_fu_3268_p2;
wire   [63:0] add_ln76_1_fu_3283_p2;
wire   [95:0] add_ln75_1_fu_3296_p2;
wire  signed [12:0] grp_fu_3496_p2;
wire   [31:0] fw_cast_fu_3319_p1;
wire   [12:0] trunc_ln81_fu_3328_p1;
wire   [12:0] add_ln1116_fu_3332_p2;
wire   [30:0] trunc_ln4_fu_3354_p4;
wire   [30:0] trunc_ln144_1_fu_3367_p4;
wire  signed [12:0] grp_fu_3414_p0;
wire   [12:0] grp_fu_3414_p2;
wire  signed [12:0] grp_fu_3427_p0;
wire  signed [12:0] grp_fu_3434_p0;
wire  signed [12:0] grp_fu_3441_p0;
wire  signed [15:0] grp_fu_3448_p1;
wire   [28:0] grp_fu_3448_p2;
wire  signed [15:0] grp_fu_3456_p1;
wire   [28:0] grp_fu_3456_p2;
wire  signed [12:0] grp_fu_3464_p0;
wire  signed [12:0] grp_fu_3470_p0;
wire  signed [12:0] grp_fu_3475_p0;
wire  signed [12:0] grp_fu_3487_p0;
wire   [12:0] grp_fu_3487_p2;
wire  signed [12:0] grp_fu_3496_p0;
reg    grp_fu_1181_ce;
reg    grp_fu_2601_ce;
wire    ap_CS_fsm_state183;
reg   [147:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp8;
wire    ap_enable_pp8;
reg    ap_idle_pp9;
wire    ap_enable_pp9;
wire   [63:0] grp_fu_1270_p00;
wire   [63:0] grp_fu_1270_p10;
wire   [94:0] grp_fu_1286_p00;
wire   [94:0] grp_fu_1286_p10;
wire   [63:0] grp_fu_1718_p00;
wire   [63:0] grp_fu_1718_p10;
wire   [94:0] grp_fu_1730_p00;
wire   [94:0] grp_fu_1730_p10;
wire   [63:0] grp_fu_1793_p10;
wire   [95:0] grp_fu_2095_p00;
wire   [95:0] grp_fu_2095_p10;
wire   [62:0] grp_fu_2108_p00;
wire   [62:0] grp_fu_2108_p10;
wire   [63:0] grp_fu_2974_p00;
wire   [63:0] grp_fu_2974_p10;
wire   [95:0] grp_fu_2986_p00;
wire   [95:0] grp_fu_2986_p10;
wire   [126:0] grp_fu_3002_p00;
wire   [126:0] grp_fu_3002_p10;
reg    ap_condition_4715;
reg    ap_condition_4719;
reg    ap_condition_2475;
reg    ap_condition_2487;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 148'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp9_iter1 = 1'b0;
#0 ap_enable_reg_pp9_iter4 = 1'b0;
#0 ap_enable_reg_pp9_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp8_iter0 = 1'b0;
#0 ap_enable_reg_pp8_iter2 = 1'b0;
#0 ap_enable_reg_pp9_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp4_iter6 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp8_iter1 = 1'b0;
#0 ap_enable_reg_pp9_iter3 = 1'b0;
end

conv_combined_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .wt(wt),
    .dwt(dwt),
    .b(b),
    .db(db),
    .debug_x(debug_x),
    .debug_dx(debug_dx),
    .F(F),
    .C(C),
    .H(H),
    .W(W),
    .FH(FH),
    .FW(FW),
    .fwprop(fwprop),
    .debugip(debugip),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

conv_combined_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(gmem_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(gmem_AWLEN),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(gmem_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

conv_combined_gmem2_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM2_CACHE_VALUE ))
gmem2_m_axi_U(
    .AWVALID(m_axi_gmem2_AWVALID),
    .AWREADY(m_axi_gmem2_AWREADY),
    .AWADDR(m_axi_gmem2_AWADDR),
    .AWID(m_axi_gmem2_AWID),
    .AWLEN(m_axi_gmem2_AWLEN),
    .AWSIZE(m_axi_gmem2_AWSIZE),
    .AWBURST(m_axi_gmem2_AWBURST),
    .AWLOCK(m_axi_gmem2_AWLOCK),
    .AWCACHE(m_axi_gmem2_AWCACHE),
    .AWPROT(m_axi_gmem2_AWPROT),
    .AWQOS(m_axi_gmem2_AWQOS),
    .AWREGION(m_axi_gmem2_AWREGION),
    .AWUSER(m_axi_gmem2_AWUSER),
    .WVALID(m_axi_gmem2_WVALID),
    .WREADY(m_axi_gmem2_WREADY),
    .WDATA(m_axi_gmem2_WDATA),
    .WSTRB(m_axi_gmem2_WSTRB),
    .WLAST(m_axi_gmem2_WLAST),
    .WID(m_axi_gmem2_WID),
    .WUSER(m_axi_gmem2_WUSER),
    .ARVALID(m_axi_gmem2_ARVALID),
    .ARREADY(m_axi_gmem2_ARREADY),
    .ARADDR(m_axi_gmem2_ARADDR),
    .ARID(m_axi_gmem2_ARID),
    .ARLEN(m_axi_gmem2_ARLEN),
    .ARSIZE(m_axi_gmem2_ARSIZE),
    .ARBURST(m_axi_gmem2_ARBURST),
    .ARLOCK(m_axi_gmem2_ARLOCK),
    .ARCACHE(m_axi_gmem2_ARCACHE),
    .ARPROT(m_axi_gmem2_ARPROT),
    .ARQOS(m_axi_gmem2_ARQOS),
    .ARREGION(m_axi_gmem2_ARREGION),
    .ARUSER(m_axi_gmem2_ARUSER),
    .RVALID(m_axi_gmem2_RVALID),
    .RREADY(m_axi_gmem2_RREADY),
    .RDATA(m_axi_gmem2_RDATA),
    .RLAST(m_axi_gmem2_RLAST),
    .RID(m_axi_gmem2_RID),
    .RUSER(m_axi_gmem2_RUSER),
    .RRESP(m_axi_gmem2_RRESP),
    .BVALID(m_axi_gmem2_BVALID),
    .BREADY(m_axi_gmem2_BREADY),
    .BRESP(m_axi_gmem2_BRESP),
    .BID(m_axi_gmem2_BID),
    .BUSER(m_axi_gmem2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem2_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem2_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem2_RDATA),
    .I_RID(gmem2_RID),
    .I_RUSER(gmem2_RUSER),
    .I_RRESP(gmem2_RRESP),
    .I_RLAST(gmem2_RLAST),
    .I_AWVALID(gmem2_AWVALID),
    .I_AWREADY(gmem2_AWREADY),
    .I_AWADDR(gmem2_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem2_WVALID),
    .I_WREADY(gmem2_WREADY),
    .I_WDATA(gmem2_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(gmem2_BVALID),
    .I_BREADY(gmem2_BREADY),
    .I_BRESP(gmem2_BRESP),
    .I_BID(gmem2_BID),
    .I_BUSER(gmem2_BUSER)
);

conv_combined_wbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 625 ),
    .AddressWidth( 10 ))
wbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(wbuf_V_address0),
    .ce0(wbuf_V_ce0),
    .we0(wbuf_V_we0),
    .d0(gmem_addr_2_read_reg_3854),
    .q0(wbuf_V_q0)
);

conv_combined_dwbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 625 ),
    .AddressWidth( 10 ))
dwbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dwbuf_V_address0),
    .ce0(dwbuf_V_ce0),
    .we0(dwbuf_V_we0),
    .d0(dwbuf_V_d0),
    .address1(dwbuf_V_address1),
    .ce1(dwbuf_V_ce1),
    .q1(dwbuf_V_q1)
);

conv_combined_bbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
bbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bbuf_V_address0),
    .ce0(bbuf_V_ce0),
    .we0(bbuf_V_we0),
    .d0(gmem_addr_read_reg_3883),
    .q0(bbuf_V_q0)
);

conv_combined_bbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dbbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dbbuf_V_address0),
    .ce0(dbbuf_V_ce0),
    .we0(dbbuf_V_we0),
    .d0(dbbuf_V_d0),
    .q0(dbbuf_V_q0)
);

conv_combined_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(C_read_reg_3575),
    .din1(W_read_reg_3559),
    .ce(grp_fu_1181_ce),
    .dout(grp_fu_1181_p2)
);

conv_combined_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_1214),
    .din1(H_read_reg_3569),
    .ce(1'b1),
    .dout(grp_fu_1218_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1270_p0),
    .din1(grp_fu_1270_p1),
    .ce(1'b1),
    .dout(grp_fu_1270_p2)
);

conv_combined_mul_31ns_64ns_95_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
mul_31ns_64ns_95_5_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1286_p0),
    .din1(grp_fu_1286_p1),
    .ce(1'b1),
    .dout(grp_fu_1286_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(i_reg_663),
    .din1(trunc_ln49_1_reg_3702),
    .ce(1'b1),
    .dout(grp_fu_1307_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(add_ln49_reg_3748),
    .din1(trunc_ln49_1_reg_3702),
    .ce(1'b1),
    .dout(grp_fu_1373_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln50_1_reg_3792),
    .din1(trunc_ln49_reg_3697),
    .ce(1'b1),
    .dout(grp_fu_1489_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp11_reg_3819),
    .din1(empty_50_reg_3708),
    .ce(1'b1),
    .dout(grp_fu_1514_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1718_p0),
    .din1(grp_fu_1718_p1),
    .ce(1'b1),
    .dout(grp_fu_1718_p2)
);

conv_combined_mul_31ns_64ns_95_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
mul_31ns_64ns_95_5_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1730_p0),
    .din1(grp_fu_1730_p1),
    .ce(1'b1),
    .dout(grp_fu_1730_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1742_p0),
    .din1(grp_fu_1742_p1),
    .ce(1'b1),
    .dout(grp_fu_1742_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(empty_70_reg_3962),
    .din1(grp_fu_1751_p1),
    .ce(1'b1),
    .dout(grp_fu_1751_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1760_p0),
    .din1(empty_70_reg_3962),
    .ce(1'b1),
    .dout(grp_fu_1760_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1793_p0),
    .din1(grp_fu_1793_p1),
    .ce(1'b1),
    .dout(grp_fu_1793_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln97_1_reg_4041),
    .din1(empty_71_reg_3980),
    .ce(1'b1),
    .dout(grp_fu_1922_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln98_1_reg_4058),
    .din1(empty_70_reg_3962),
    .ce(1'b1),
    .dout(grp_fu_1926_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln99_reg_4074),
    .din1(trunc_ln97_reg_3950),
    .ce(1'b1),
    .dout(grp_fu_1930_p2)
);

conv_combined_mul_32ns_64ns_96_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 96 ))
mul_32ns_64ns_96_5_1_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2095_p0),
    .din1(grp_fu_2095_p1),
    .ce(1'b1),
    .dout(grp_fu_2095_p2)
);

conv_combined_mul_31ns_32ns_63_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_31ns_32ns_63_2_1_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2108_p0),
    .din1(grp_fu_2108_p1),
    .ce(1'b1),
    .dout(grp_fu_2108_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2601_p0),
    .din1(empty_70_reg_3962),
    .ce(grp_fu_2601_ce),
    .dout(grp_fu_2601_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln124_1_reg_4502),
    .din1(empty_71_reg_3980),
    .ce(1'b1),
    .dout(grp_fu_2675_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln126_reg_4527),
    .din1(trunc_ln97_reg_3950),
    .ce(1'b1),
    .dout(grp_fu_2747_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln125_1_reg_4532),
    .din1(empty_70_reg_3962),
    .ce(1'b1),
    .dout(grp_fu_2751_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2974_p0),
    .din1(grp_fu_2974_p1),
    .ce(1'b1),
    .dout(grp_fu_2974_p2)
);

conv_combined_mul_32ns_64ns_96_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 96 ))
mul_32ns_64ns_96_5_1_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2986_p0),
    .din1(grp_fu_2986_p1),
    .ce(1'b1),
    .dout(grp_fu_2986_p2)
);

conv_combined_mul_31ns_96ns_127_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 96 ),
    .dout_WIDTH( 127 ))
mul_31ns_96ns_127_5_1_U26(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3002_p0),
    .din1(grp_fu_3002_p1),
    .ce(1'b1),
    .dout(grp_fu_3002_p2)
);

conv_combined_mac_muladd_13s_13s_13ns_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mac_muladd_13s_13s_13ns_13_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3414_p0),
    .din1(outH_reg_3641),
    .din2(grp_fu_3414_p2),
    .ce(1'b1),
    .dout(grp_fu_3414_p3)
);

conv_combined_mul_mul_13s_13s_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_mul_13s_13s_13_4_1_U28(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3414_p3),
    .din1(reg_1204),
    .ce(1'b1),
    .dout(grp_fu_3421_p2)
);

conv_combined_mul_mul_13s_13s_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_mul_13s_13s_13_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3427_p0),
    .din1(empty_48_reg_3632),
    .ce(1'b1),
    .dout(grp_fu_3427_p2)
);

conv_combined_mul_mul_13s_13s_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_mul_13s_13s_13_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3434_p0),
    .din1(empty_48_reg_3632),
    .ce(1'b1),
    .dout(grp_fu_3434_p2)
);

conv_combined_mac_muladd_13s_13s_13ns_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mac_muladd_13s_13s_13ns_13_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3441_p0),
    .din1(trunc_ln107_reg_4165),
    .din2(trunc_ln109_reg_4261),
    .ce(1'b1),
    .dout(grp_fu_3441_p3)
);

conv_combined_mac_muladd_16s_16s_29ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
mac_muladd_16s_16s_29ns_29_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(wbuf_V_q0),
    .din1(grp_fu_3448_p1),
    .din2(grp_fu_3448_p2),
    .ce(1'b1),
    .dout(grp_fu_3448_p3)
);

conv_combined_mac_muladd_16s_16s_29ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
mac_muladd_16s_16s_29ns_29_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(x_Dout_A),
    .din1(grp_fu_3456_p1),
    .din2(grp_fu_3456_p2),
    .ce(1'b1),
    .dout(grp_fu_3456_p3)
);

conv_combined_mul_mul_13s_13s_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_mul_13s_13s_13_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3464_p0),
    .din1(outH_reg_3641),
    .ce(1'b1),
    .dout(grp_fu_3464_p2)
);

conv_combined_mul_mul_13s_13s_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_mul_13s_13s_13_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3470_p0),
    .din1(empty_48_reg_3632),
    .ce(1'b1),
    .dout(grp_fu_3470_p2)
);

conv_combined_mul_mul_13s_13s_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_mul_13s_13s_13_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3475_p0),
    .din1(outH_reg_3641),
    .ce(1'b1),
    .dout(grp_fu_3475_p2)
);

conv_combined_mul_mul_13s_13s_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_mul_13s_13s_13_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln75_1_reg_4782),
    .din1(empty_48_reg_3632),
    .ce(1'b1),
    .dout(grp_fu_3482_p2)
);

conv_combined_mac_muladd_13s_13s_13ns_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mac_muladd_13s_13s_13ns_13_4_1_U38(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3487_p0),
    .din1(reg_1204),
    .din2(grp_fu_3487_p2),
    .ce(1'b1),
    .dout(grp_fu_3487_p3)
);

conv_combined_mul_mul_13s_13s_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_mul_13s_13s_13_4_1_U39(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3496_p0),
    .din1(trunc_ln74_reg_4695),
    .ce(1'b1),
    .dout(grp_fu_3496_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state28))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state28)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state28);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state38))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state38)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state38);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state48))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state48)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state48);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state72))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state71)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state72)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state72);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state71)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp4_flush_enable)) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state92)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            if ((1'b1 == ap_condition_pp4_exit_iter1_state96)) begin
                ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter6 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter5 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
            ap_enable_reg_pp4_iter6 <= ap_enable_reg_pp4_iter5;
        end else if ((1'b1 == ap_CS_fsm_state92)) begin
            ap_enable_reg_pp4_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state115) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state114))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state115)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state115);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state114))) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state123))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if (((icmp_ln124_reg_4485 == 1'd1) & (1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state123)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state123);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end else if (((icmp_ln124_reg_4485 == 1'd1) & (1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108))) begin
            ap_enable_reg_pp6_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_condition_pp7_exit_iter0_state134) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state133)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state134)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state134);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end else if ((1'b1 == ap_CS_fsm_state133)) begin
            ap_enable_reg_pp7_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp8_flush_enable)) begin
            ap_enable_reg_pp8_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state163) & (cmp106332_reg_4691 == 1'd1))) begin
            ap_enable_reg_pp8_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter1 <= ap_enable_reg_pp8_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter2 <= ap_enable_reg_pp8_iter1;
        end else if (((1'b1 == ap_CS_fsm_state163) & (cmp106332_reg_4691 == 1'd1))) begin
            ap_enable_reg_pp8_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp9_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp9_stage0_subdone) & (1'b1 == ap_CS_fsm_pp9_stage0) & (1'b1 == ap_condition_pp9_exit_iter0_state173))) begin
            ap_enable_reg_pp9_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state172) & (icmp_ln144_fu_3348_p2 == 1'd1))) begin
            ap_enable_reg_pp9_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp9_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp9_stage1_subdone) & (1'b1 == ap_CS_fsm_pp9_stage1))) begin
            ap_enable_reg_pp9_iter1 <= ap_enable_reg_pp9_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp9_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp9_stage1_subdone) & (1'b1 == ap_CS_fsm_pp9_stage1))) begin
            ap_enable_reg_pp9_iter2 <= ap_enable_reg_pp9_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp9_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp9_stage1_subdone) & (1'b1 == ap_CS_fsm_pp9_stage1))) begin
            ap_enable_reg_pp9_iter3 <= ap_enable_reg_pp9_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp9_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp9_stage1_subdone) & (1'b1 == ap_CS_fsm_pp9_stage1))) begin
            ap_enable_reg_pp9_iter4 <= ap_enable_reg_pp9_iter3;
        end else if (((1'b1 == ap_CS_fsm_state172) & (icmp_ln144_fu_3348_p2 == 1'd1))) begin
            ap_enable_reg_pp9_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln110_reg_4292 == 1'd0))) begin
        c_1_reg_882 <= select_ln110_2_reg_4322;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        c_1_reg_882 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state160) & (icmp_ln79_fu_3259_p2 == 1'd1))) begin
        c_reg_1041 <= select_ln75_5_reg_4795;
    end else if ((1'b1 == ap_CS_fsm_state149)) begin
        c_reg_1041 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        empty_61_reg_1101 <= bbuf_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state168)) begin
        empty_61_reg_1101 <= empty_66_reg_1145;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state163) & (cmp106332_reg_4691 == 1'd1))) begin
        empty_64_reg_1133 <= empty_61_reg_1101;
    end else if (((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter2 == 1'b1) & (icmp_ln80_reg_4894_pp8_iter1_reg == 1'd0))) begin
        empty_64_reg_1133 <= add_ln703_1_fu_3342_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state163) & (cmp106332_reg_4691 == 1'd0))) begin
        empty_66_reg_1145 <= empty_61_reg_1101;
    end else if ((1'b1 == ap_CS_fsm_state167)) begin
        empty_66_reg_1145 <= empty_64_reg_1133;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        empty_78_reg_859 <= dbbuf_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        empty_78_reg_859 <= add_ln703_fu_2586_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & ((icmp_ln109_fu_2216_p2 == 1'd1) | (cmp184407_reg_4032 == 1'd0)))) begin
        f_1_reg_825 <= select_ln107_1_reg_4203;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        f_1_reg_825 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state160) & (icmp_ln79_fu_3259_p2 == 1'd1))) begin
        f_reg_1029 <= select_ln74_7_reg_4777;
    end else if ((1'b1 == ap_CS_fsm_state149)) begin
        f_reg_1029 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln110_reg_4292_pp4_iter2_reg == 1'd0))) begin
        fh_1_reg_905 <= select_ln111_3_reg_4394;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        fh_1_reg_905 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        fh_reg_1111 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state168)) begin
        fh_reg_1111 <= add_ln79_reg_4856;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln110_reg_4292_pp4_iter2_reg == 1'd0))) begin
        fw_1_reg_916 <= add_ln112_reg_4409;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        fw_1_reg_916 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state163) & (cmp106332_reg_4691 == 1'd1))) begin
        fw_reg_1122 <= 31'd0;
    end else if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (icmp_ln80_fu_3323_p2 == 1'd0) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        fw_reg_1122 <= add_ln80_fu_3313_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & ((icmp_ln109_fu_2216_p2 == 1'd1) | (cmp184407_reg_4032 == 1'd0)))) begin
        h_1_reg_836 <= add_ln108_fu_2245_p2;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        h_1_reg_836 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state160) & (icmp_ln79_fu_3259_p2 == 1'd1))) begin
        h_reg_1077 <= select_ln76_3_reg_4815;
    end else if ((1'b1 == ap_CS_fsm_state149)) begin
        h_reg_1077 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        i_1_reg_722 <= 31'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln62_fu_1657_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        i_1_reg_722 <= add_ln62_fu_1651_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln70_fu_2937_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        i_2_reg_1007 <= add_ln70_fu_2931_p2;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        i_2_reg_1007 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        i_3_reg_733 <= 31'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln92_fu_1699_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        i_3_reg_733 <= add_ln92_fu_1693_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        i_4_reg_767 <= select_ln97_1_reg_4041;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        i_4_reg_767 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln107_fu_2138_p2 == 1'd1))) begin
        i_5_reg_951 <= 31'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp155422_reg_3976 == 1'd1)) & (1'b1 == ap_CS_fsm_state122))) begin
        i_5_reg_951 <= select_ln124_1_reg_4502;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_reg_4485 == 1'd1) & (1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108))) begin
        i_6_reg_996 <= 31'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln135_fu_2917_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        i_6_reg_996 <= add_ln135_fu_2911_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state172) & (icmp_ln144_fu_3348_p2 == 1'd1))) begin
        i_7_reg_1158 <= 32'd0;
    end else if (((icmp_ln144_1_reg_4927 == 1'd0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        i_7_reg_1158 <= add_ln144_reg_4922;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_reg_663 <= select_ln49_2_reg_3764;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_reg_663 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        indvar_flatten102_reg_779 <= select_ln98_4_fu_2082_p3;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        indvar_flatten102_reg_779 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        indvar_flatten125_reg_756 <= add_ln97_1_reg_4008;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        indvar_flatten125_reg_756 <= 95'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln110_reg_4292_pp4_iter1_reg == 1'd0))) begin
        indvar_flatten138_reg_894 <= select_ln111_4_reg_4337;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        indvar_flatten138_reg_894 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln110_reg_4292 == 1'd0))) begin
        indvar_flatten167_reg_870 <= add_ln110_1_reg_4306;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        indvar_flatten167_reg_870 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & ((icmp_ln109_fu_2216_p2 == 1'd1) | (cmp184407_reg_4032 == 1'd0)))) begin
        indvar_flatten180_reg_814 <= add_ln107_4_reg_4190;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        indvar_flatten180_reg_814 <= 63'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln107_fu_2138_p2 == 1'd1))) begin
        indvar_flatten191_reg_962 <= 64'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp155422_reg_3976 == 1'd1)) & (1'b1 == ap_CS_fsm_state122))) begin
        indvar_flatten191_reg_962 <= select_ln125_4_fu_2904_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln107_fu_2138_p2 == 1'd1))) begin
        indvar_flatten214_reg_928 <= 95'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp155422_reg_3976 == 1'd1)) & (1'b1 == ap_CS_fsm_state122))) begin
        indvar_flatten214_reg_928 <= add_ln124_1_reg_4470;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten22_reg_652 <= add_ln49_1_reg_3723;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten22_reg_652 <= 95'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state160) & (icmp_ln79_fu_3259_p2 == 1'd1))) begin
        indvar_flatten36_reg_1065 <= select_ln76_4_fu_3289_p3;
    end else if ((1'b1 == ap_CS_fsm_state149)) begin
        indvar_flatten36_reg_1065 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state160) & (icmp_ln79_fu_3259_p2 == 1'd1))) begin
        indvar_flatten57_reg_1053 <= select_ln75_6_fu_3302_p3;
    end else if ((1'b1 == ap_CS_fsm_state149)) begin
        indvar_flatten57_reg_1053 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state160) & (icmp_ln79_fu_3259_p2 == 1'd1))) begin
        indvar_flatten91_reg_1018 <= add_ln74_4_reg_4710;
    end else if ((1'b1 == ap_CS_fsm_state149)) begin
        indvar_flatten91_reg_1018 <= 127'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten_reg_675 <= select_ln50_4_fu_1644_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten_reg_675 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        j_1_reg_744 <= select_ln98_3_reg_4069;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        j_1_reg_744 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln107_fu_2138_p2 == 1'd1))) begin
        j_2_reg_939 <= 32'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp155422_reg_3976 == 1'd1)) & (1'b1 == ap_CS_fsm_state122))) begin
        j_2_reg_939 <= select_ln125_3_reg_4543;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        j_reg_687 <= select_ln50_3_reg_3803;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        j_reg_687 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        k_1_reg_791 <= add_ln99_fu_2071_p2;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        k_1_reg_791 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln107_fu_2138_p2 == 1'd1))) begin
        k_2_reg_974 <= 32'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp155422_reg_3976 == 1'd1)) & (1'b1 == ap_CS_fsm_state122))) begin
        k_2_reg_974 <= add_ln126_fu_2893_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        k_reg_699 <= add_ln51_fu_1633_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_reg_699 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        l_1_reg_803 <= 31'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln100_fu_2053_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        l_1_reg_803 <= add_ln100_fu_2043_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state114))) begin
        l_2_reg_985 <= 31'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln127_fu_2874_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        l_2_reg_985 <= add_ln127_fu_2864_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        l_reg_711 <= 31'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln52_fu_1615_p2 == 1'd0))) begin
        l_reg_711 <= add_ln52_fu_1605_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & (icmp_ln109_fu_2216_p2 == 1'd0) & (cmp184407_reg_4032 == 1'd1))) begin
        reuse_addr_reg_fu_264 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln110_reg_4292_pp4_iter3_reg == 1'd0))) begin
        reuse_addr_reg_fu_264 <= zext_ln1118_fu_2507_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & (icmp_ln109_fu_2216_p2 == 1'd0) & (cmp184407_reg_4032 == 1'd1))) begin
        reuse_reg_fu_268 <= 16'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln110_reg_4292_pp4_iter4_reg == 1'd0))) begin
        reuse_reg_fu_268 <= {{grp_fu_3448_p3[28:13]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        w_1_reg_848 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        w_1_reg_848 <= add_ln109_reg_4253;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state160) & (icmp_ln79_fu_3259_p2 == 1'd1))) begin
        w_reg_1089 <= add_ln77_fu_3278_p2;
    end else if ((1'b1 == ap_CS_fsm_state149)) begin
        w_reg_1089 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        C_read_reg_3575 <= C;
        FH_read_reg_3545 <= FH;
        FW_read_reg_3524 <= FW;
        F_read_reg_3586 <= F;
        H_read_reg_3569 <= H;
        W_read_reg_3559 <= W;
        b_read_reg_3611 <= b;
        db_read_reg_3606 <= db;
        debug_dx_read_reg_3596 <= debug_dx;
        debug_x_read_reg_3601 <= debug_x;
        debugip_read_reg_3516 <= debugip;
        dwt_read_reg_3616 <= dwt;
        empty_48_reg_3632 <= empty_48_fu_1231_p1;
        empty_reg_3627 <= empty_fu_1227_p1;
        fwprop_read_reg_3520 <= fwprop;
        wt_read_reg_3622 <= wt;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        add_ln101_1_reg_4063 <= add_ln101_1_fu_1904_p2;
        select_ln97_1_reg_4041 <= select_ln97_1_fu_1811_p3;
        select_ln97_4_reg_4047 <= select_ln97_4_fu_1859_p3;
        select_ln98_3_reg_4069 <= select_ln98_3_fu_1910_p3;
        select_ln98_reg_4052 <= select_ln98_fu_1876_p3;
        trunc_ln98_1_reg_4058 <= trunc_ln98_1_fu_1884_p1;
        trunc_ln99_reg_4074 <= trunc_ln99_fu_1918_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp155422_reg_3976 == 1'd1) & (1'b1 == ap_CS_fsm_state64))) begin
        add_ln101_4_reg_4105 <= add_ln101_4_fu_2037_p2;
        gmem_addr_3_reg_4099 <= sext_ln100_fu_1998_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln100_fu_2053_p2 == 1'd0))) begin
        add_ln101_5_reg_4119 <= add_ln101_5_fu_2062_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln101_5_reg_4119_pp3_iter1_reg <= add_ln101_5_reg_4119;
        icmp_ln100_reg_4115 <= icmp_ln100_fu_2053_p2;
        icmp_ln100_reg_4115_pp3_iter1_reg <= icmp_ln100_reg_4115;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        add_ln107_4_reg_4190 <= add_ln107_4_fu_2132_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & (cmp184407_reg_4032 == 1'd1))) begin
        add_ln109_reg_4253 <= add_ln109_fu_2210_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        add_ln110_1_reg_4306 <= add_ln110_1_fu_2273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln110_fu_2258_p2 == 1'd0))) begin
        add_ln110_reg_4296 <= add_ln110_fu_2263_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln110_reg_4292_pp4_iter2_reg == 1'd0))) begin
        add_ln1118_6_reg_4414 <= add_ln1118_6_fu_2493_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln110_reg_4292 == 1'd0))) begin
        add_ln111_2_reg_4332 <= add_ln111_2_fu_2295_p2;
        icmp_ln111_reg_4311 <= icmp_ln111_fu_2279_p2;
        trunc_ln110_2_reg_4327 <= trunc_ln110_2_fu_2291_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln110_reg_4292_pp4_iter1_reg == 1'd0))) begin
        add_ln111_reg_4364 <= add_ln111_fu_2359_p2;
        p_mid1134_reg_4369 <= p_mid1134_fu_2374_p2;
        select_ln110_5_reg_4357 <= select_ln110_5_fu_2353_p3;
        select_ln110_reg_4347 <= select_ln110_fu_2325_p3;
        select_ln111_1_reg_4374 <= select_ln111_1_fu_2384_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln110_reg_4292_pp4_iter1_reg == 1'd0))) begin
        add_ln112_reg_4409 <= add_ln112_fu_2475_p2;
        select_ln111_3_reg_4394 <= select_ln111_3_fu_2462_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        add_ln124_1_reg_4470 <= add_ln124_1_fu_2591_p2;
        icmp_ln124_reg_4485 <= icmp_ln124_fu_2610_p2;
        trunc_ln128_reg_4480 <= trunc_ln128_fu_2606_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        add_ln128_1_reg_4537 <= add_ln128_1_fu_2734_p2;
        select_ln125_3_reg_4543 <= select_ln125_3_fu_2740_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp155422_reg_3976 == 1'd1) & (1'b1 == ap_CS_fsm_state113))) begin
        add_ln128_4_reg_4574 <= add_ln128_4_fu_2858_p2;
        gmem_addr_4_reg_4568 <= sext_ln127_fu_2819_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1))) begin
        add_ln144_reg_4922 <= add_ln144_fu_3380_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln49_1_reg_3723 <= add_ln49_1_fu_1301_p2;
        icmp_ln49_1_reg_3728 <= icmp_ln49_1_fu_1312_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln49_1_reg_3728 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        add_ln49_reg_3748 <= add_ln49_fu_1330_p2;
        icmp_ln50_reg_3753 <= icmp_ln50_fu_1336_p2;
        select_ln49_2_reg_3764 <= select_ln49_2_fu_1341_p3;
        trunc_ln49_2_reg_3769 <= trunc_ln49_2_fu_1349_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln53_1_reg_3797 <= add_ln53_1_fu_1475_p2;
        select_ln49_5_reg_3787 <= select_ln49_5_fu_1429_p3;
        select_ln50_1_reg_3792 <= select_ln50_1_fu_1451_p3;
        select_ln50_3_reg_3803 <= select_ln50_3_fu_1481_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp57452_reg_3693 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        add_ln53_4_reg_3835 <= add_ln53_4_fu_1599_p2;
        gmem_addr_2_reg_3829 <= sext_ln52_fu_1560_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln52_fu_1615_p2 == 1'd0))) begin
        add_ln53_5_reg_3849 <= add_ln53_5_fu_1624_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln53_5_reg_3849_pp0_iter1_reg <= add_ln53_5_reg_3849;
        icmp_ln52_reg_3845 <= icmp_ln52_fu_1615_p2;
        icmp_ln52_reg_3845_pp0_iter1_reg <= icmp_ln52_reg_3845;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state150)) begin
        add_ln74_4_reg_4710 <= add_ln74_4_fu_3016_p2;
        icmp_ln74_reg_4725 <= icmp_ln74_fu_3030_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state160)) begin
        add_ln79_reg_4856 <= add_ln79_fu_3253_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state163) & (cmp106332_reg_4691 == 1'd1))) begin
        add_ln81_reg_4884 <= add_ln81_fu_3309_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        add_ln97_1_reg_4008 <= add_ln97_1_fu_1769_p2;
        empty_72_reg_4013 <= grp_fu_1760_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln110_reg_4292_pp4_iter3_reg == 1'd0))) begin
        addr_cmp_reg_4445 <= addr_cmp_fu_2520_p2;
        dx_addr_2_reg_4440 <= zext_ln1118_fu_2507_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        bound107_reg_3986 <= grp_fu_1730_p2;
        cmp155422_reg_3976 <= grp_fu_1171_p2;
        empty_71_reg_3980 <= grp_fu_1751_p2;
        icmp_ln99_reg_3992 <= grp_fu_1176_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        bound130_reg_4139 <= grp_fu_1793_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        bound143_reg_4175 <= grp_fu_2095_p2;
        bound174_reg_4180 <= grp_fu_2108_p2;
        icmp_ln112_reg_4185 <= icmp_ln112_fu_2127_p2;
        sub_ln107_reg_4170 <= sub_ln107_fu_2122_p2;
        trunc_ln107_reg_4165 <= trunc_ln107_fu_2114_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        bound27_reg_4658 <= grp_fu_2974_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        bound41_reg_4675 <= grp_fu_2986_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        bound5_reg_3713 <= grp_fu_1286_p2;
        cmp57452_reg_3693 <= grp_fu_1171_p2;
        empty_50_reg_3708 <= empty_50_fu_1298_p1;
        icmp_ln51_reg_3718 <= grp_fu_1176_p2;
        trunc_ln49_1_reg_3702 <= trunc_ln49_1_fu_1295_p1;
        trunc_ln49_reg_3697 <= trunc_ln49_fu_1292_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        bound63_reg_4700 <= grp_fu_3002_p2;
        cmp106332_reg_4691 <= grp_fu_1171_p2;
        icmp_ln76_reg_4705 <= icmp_ln76_fu_3011_p2;
        trunc_ln74_reg_4695 <= trunc_ln74_fu_3008_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        bound96_reg_3933 <= grp_fu_1718_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bound_reg_3672 <= grp_fu_1270_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        cast95_reg_3927[31 : 0] <= cast95_fu_1715_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state59) & (icmp_ln97_fu_1775_p2 == 1'd1))) begin
        cmp184407_reg_4032 <= cmp184407_fu_1785_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state88) & (cmp184407_reg_4032 == 1'd1))) begin
        dbbuf_V_addr_1_reg_4248 <= zext_ln107_fu_2182_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln110_reg_4292_pp4_iter2_reg == 1'd0))) begin
        dwbuf_V_addr_2_reg_4424 <= zext_ln1118_7_fu_2498_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        dwbuf_V_addr_2_reg_4424_pp4_iter4_reg <= dwbuf_V_addr_2_reg_4424;
        dwbuf_V_addr_2_reg_4424_pp4_iter5_reg <= dwbuf_V_addr_2_reg_4424_pp4_iter4_reg;
        icmp_ln110_reg_4292 <= icmp_ln110_fu_2258_p2;
        icmp_ln110_reg_4292_pp4_iter1_reg <= icmp_ln110_reg_4292;
        icmp_ln110_reg_4292_pp4_iter2_reg <= icmp_ln110_reg_4292_pp4_iter1_reg;
        icmp_ln110_reg_4292_pp4_iter3_reg <= icmp_ln110_reg_4292_pp4_iter2_reg;
        icmp_ln110_reg_4292_pp4_iter4_reg <= icmp_ln110_reg_4292_pp4_iter3_reg;
        icmp_ln110_reg_4292_pp4_iter5_reg <= icmp_ln110_reg_4292_pp4_iter4_reg;
        trunc_ln113_reg_4399_pp4_iter3_reg <= trunc_ln113_reg_4399;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln127_reg_4584 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        dwbuf_V_load_reg_4593 <= dwbuf_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        dx_addr_2_reg_4440_pp4_iter4_reg <= dx_addr_2_reg_4440;
        icmp_ln111_reg_4311_pp4_iter1_reg <= icmp_ln111_reg_4311;
        trunc_ln110_2_reg_4327_pp4_iter1_reg <= trunc_ln110_2_reg_4327;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_1_reg_4927 == 1'd0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        dx_load_reg_4958 <= dx_Dout_A;
        x_load_1_reg_4953 <= x_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        empty_49_reg_3678 <= empty_49_fu_1276_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        empty_51_reg_3732 <= grp_fu_1307_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        empty_54_reg_3824 <= grp_fu_1514_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state153)) begin
        empty_58_reg_4729 <= grp_fu_3464_p2;
        empty_59_reg_4734 <= grp_fu_3470_p2;
        empty_60_reg_4744 <= empty_60_fu_3039_p2;
        trunc_ln76_reg_4739 <= trunc_ln76_fu_3035_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        empty_70_reg_3962 <= grp_fu_1742_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        empty_75_reg_4089 <= grp_fu_1930_p2;
        mul_ln97_reg_4079 <= grp_fu_1922_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        empty_76_reg_4094 <= empty_76_fu_1950_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln111_reg_4311 == 1'd0))) begin
        empty_81_reg_4342 <= empty_81_fu_2316_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        empty_83_reg_4243 <= grp_fu_3421_p2;
        zext_ln108_reg_4238[5 : 0] <= zext_ln108_fu_2206_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        empty_84_reg_4489 <= grp_fu_2601_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        empty_88_reg_4553 <= grp_fu_2747_p2;
        mul_ln124_reg_4548 <= grp_fu_2675_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        empty_89_reg_4563 <= empty_89_fu_2771_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln144_1_fu_3386_p2 == 1'd0))) begin
        gmem2_addr_1_reg_4947 <= add_ln146_fu_3403_p2;
        gmem2_addr_reg_4936 <= add_ln145_fu_3392_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        gmem2_addr_1_reg_4947_pp9_iter1_reg <= gmem2_addr_1_reg_4947;
        icmp_ln144_1_reg_4927 <= icmp_ln144_1_fu_3386_p2;
        icmp_ln144_1_reg_4927_pp9_iter1_reg <= icmp_ln144_1_reg_4927;
        icmp_ln144_1_reg_4927_pp9_iter2_reg <= icmp_ln144_1_reg_4927_pp9_iter1_reg;
        icmp_ln144_1_reg_4927_pp9_iter3_reg <= icmp_ln144_1_reg_4927_pp9_iter2_reg;
        icmp_ln144_1_reg_4927_pp9_iter4_reg <= icmp_ln144_1_reg_4927_pp9_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln92_reg_3908 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        gmem_addr_1_read_reg_3917 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((fwprop_read_reg_3520 == 1'd0) & (icmp_ln49_reg_3658 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        gmem_addr_1_reg_3888 <= sext_ln92_fu_1679_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_reg_3845 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_addr_2_read_reg_3854 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_reg_4115 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        gmem_addr_3_read_reg_4124 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln62_reg_3874 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        gmem_addr_read_reg_3883 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln107_fu_2138_p2 == 1'd0))) begin
        icmp_ln108_reg_4198 <= icmp_ln108_fu_2149_p2;
        select_ln107_1_reg_4203 <= select_ln107_1_fu_2155_p3;
        trunc_ln107_2_reg_4213 <= trunc_ln107_2_fu_2167_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_reg_4485 == 1'd0) & (1'b1 == ap_CS_fsm_state108))) begin
        icmp_ln125_reg_4494 <= icmp_ln125_fu_2621_p2;
        select_ln124_4_reg_4514 <= select_ln124_4_fu_2643_p3;
        select_ln125_reg_4521 <= select_ln125_fu_2656_p3;
        trunc_ln124_reg_4508 <= trunc_ln124_fu_2634_p1;
        trunc_ln126_reg_4527 <= trunc_ln126_fu_2664_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln127_reg_4584 <= icmp_ln127_fu_2874_p2;
        icmp_ln127_reg_4584_pp5_iter1_reg <= icmp_ln127_reg_4584;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        icmp_ln135_reg_4613 <= icmp_ln135_fu_2917_p2;
        icmp_ln135_reg_4613_pp6_iter1_reg <= icmp_ln135_reg_4613;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln49_reg_3658 <= icmp_ln49_fu_1259_p2;
        outH_reg_3641 <= outH_fu_1239_p2;
        outW_reg_3653 <= outW_fu_1253_p2;
        trunc_ln44_reg_3648 <= trunc_ln44_fu_1249_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln62_reg_3874 <= icmp_ln62_fu_1657_p2;
        icmp_ln62_reg_3874_pp1_iter1_reg <= icmp_ln62_reg_3874;
        trunc_ln63_reg_3878_pp1_iter1_reg <= trunc_ln63_reg_3878;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state153) & (icmp_ln74_reg_4725 == 1'd0))) begin
        icmp_ln75_reg_4749 <= icmp_ln75_fu_3050_p2;
        select_ln74_2_reg_4764 <= select_ln74_2_fu_3075_p3;
        select_ln74_6_reg_4769 <= select_ln74_6_fu_3100_p3;
        select_ln74_7_reg_4777 <= select_ln74_7_fu_3107_p3;
        select_ln75_4_reg_4787 <= select_ln75_4_fu_3125_p3;
        select_ln75_5_reg_4795 <= select_ln75_5_fu_3132_p3;
        trunc_ln75_1_reg_4782 <= trunc_ln75_1_fu_3121_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln49_reg_3658 == 1'd1) & (1'b1 == ap_CS_fsm_state137))) begin
        icmp_ln77_reg_4642 <= icmp_ln77_fu_2962_p2;
        sub_ln74_reg_4636 <= sub_ln74_fu_2957_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        icmp_ln80_reg_4894 <= icmp_ln80_fu_3323_p2;
        icmp_ln80_reg_4894_pp8_iter1_reg <= icmp_ln80_reg_4894;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln92_reg_3908 <= icmp_ln92_fu_1699_p2;
        icmp_ln92_reg_3908_pp2_iter1_reg <= icmp_ln92_reg_3908;
        trunc_ln93_reg_3912_pp2_iter1_reg <= trunc_ln93_reg_3912;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state59) & (icmp_ln97_fu_1775_p2 == 1'd0))) begin
        icmp_ln98_reg_4021 <= icmp_ln98_fu_1780_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        mul_ln50_reg_3808 <= grp_fu_1489_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        or_ln75_reg_4800 <= or_ln75_fu_3140_p2;
        select_ln76_1_reg_4810 <= select_ln76_1_fu_3169_p3;
        select_ln76_3_reg_4815 <= select_ln76_3_fu_3176_p3;
        trunc_ln76_1_reg_4805 <= trunc_ln76_1_fu_3165_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state62) & (select_ln97_4_reg_4047 == 1'd1))) begin
        p_mid1100_reg_4084 <= grp_fu_1926_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln111_reg_4311 == 1'd1) & (icmp_ln110_reg_4292_pp4_iter1_reg == 1'd0))) begin
        p_mid1155_reg_4352 <= p_mid1155_fu_2337_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state111) & (select_ln124_4_reg_4514 == 1'd1))) begin
        p_mid1189_reg_4558 <= grp_fu_2751_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_mid1_reg_3781 <= grp_fu_1373_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        r_V_reg_4276 <= dy_Dout_A;
        sext_ln1118_1_reg_4281 <= sext_ln1118_1_fu_2250_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((icmp_ln49_reg_3658 == 1'd1) & (1'b1 == ap_CS_fsm_state137)))) begin
        reg_1200 <= grp_fu_1190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state81))) begin
        reg_1204 <= grp_fu_1195_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state89) | ((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln135_reg_4613 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)))) begin
        reg_1208 <= dbbuf_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state131))) begin
        reg_1214 <= grp_fu_1181_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state171) | (1'b1 == ap_CS_fsm_state133))) begin
        reg_1223 <= grp_fu_1218_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        select_ln107_reg_4220 <= select_ln107_fu_2171_p3;
        trunc_ln108_reg_4225 <= trunc_ln108_fu_2178_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln110_reg_4292 == 1'd0))) begin
        select_ln110_2_reg_4322 <= select_ln110_2_fu_2284_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln110_reg_4292 == 1'd0))) begin
        select_ln111_4_reg_4337 <= select_ln111_4_fu_2301_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_reg_4485 == 1'd0) & (1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108))) begin
        select_ln124_1_reg_4502 <= select_ln124_1_fu_2626_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        select_ln50_reg_3813 <= select_ln50_fu_1497_p3;
        tmp11_reg_3819 <= tmp11_fu_1509_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state157)) begin
        select_ln75_1_reg_4825 <= select_ln75_1_fu_3218_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state158)) begin
        select_ln76_reg_4835 <= select_ln76_fu_3237_p3;
        trunc_ln77_reg_4840 <= trunc_ln77_fu_3245_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state172) & (icmp_ln144_fu_3348_p2 == 1'd1))) begin
        sext_ln144_1_reg_4917 <= sext_ln144_1_fu_3376_p1;
        sext_ln144_reg_4912 <= sext_ln144_fu_3363_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_reg_3738 <= tmp_fu_1321_p2;
        trunc_ln53_reg_3743 <= trunc_ln53_fu_1326_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        trunc_ln101_reg_4003 <= trunc_ln101_fu_1765_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & (icmp_ln109_fu_2216_p2 == 1'd0) & (cmp184407_reg_4032 == 1'd1))) begin
        trunc_ln109_reg_4261 <= trunc_ln109_fu_2221_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln110_reg_4292_pp4_iter1_reg == 1'd0))) begin
        trunc_ln1118_1_reg_4384 <= trunc_ln1118_1_fu_2452_p1;
        trunc_ln1118_2_reg_4404 <= trunc_ln1118_2_fu_2471_p1;
        trunc_ln1118_reg_4379 <= trunc_ln1118_fu_2448_p1;
        trunc_ln113_reg_4399 <= trunc_ln113_fu_2467_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state109) & (select_ln124_4_reg_4514 == 1'd1))) begin
        trunc_ln125_1_reg_4532 <= trunc_ln125_1_fu_2715_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln62_fu_1657_p2 == 1'd0))) begin
        trunc_ln63_reg_3878 <= trunc_ln63_fu_1662_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        trunc_ln92_reg_3895 <= trunc_ln92_fu_1690_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln92_fu_1699_p2 == 1'd0))) begin
        trunc_ln93_reg_3912 <= trunc_ln93_fu_1704_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        trunc_ln97_reg_3950 <= trunc_ln97_fu_1736_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        y_addr_reg_4851 <= zext_ln78_fu_3249_p1;
    end
end

always @ (*) begin
    if ((icmp_ln52_fu_1615_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln62_fu_1657_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state38 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state38 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln92_fu_1699_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state48 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state48 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln100_fu_2053_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state72 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state72 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_condition_pp4_exit_iter1_state96 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter1_state96 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln110_reg_4292 == 1'd1))) begin
        ap_condition_pp4_flush_enable = 1'b1;
    end else begin
        ap_condition_pp4_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln127_fu_2874_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state115 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state115 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln135_fu_2917_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state123 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state123 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln70_fu_2937_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state134 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state134 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0_subdone) & (1'b1 == ap_CS_fsm_pp8_stage0) & (icmp_ln80_fu_3323_p2 == 1'd1))) begin
        ap_condition_pp8_flush_enable = 1'b1;
    end else begin
        ap_condition_pp8_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln144_1_fu_3386_p2 == 1'd1)) begin
        ap_condition_pp9_exit_iter0_state173 = 1'b1;
    end else begin
        ap_condition_pp9_exit_iter0_state173 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state183)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter6 == 1'b0) & (ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter1 == 1'b0) & (ap_enable_reg_pp8_iter2 == 1'b0) & (ap_enable_reg_pp8_iter0 == 1'b0))) begin
        ap_idle_pp8 = 1'b1;
    end else begin
        ap_idle_pp8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter2 == 1'b0) & (ap_enable_reg_pp9_iter4 == 1'b0) & (ap_enable_reg_pp9_iter1 == 1'b0) & (ap_enable_reg_pp9_iter3 == 1'b0) & (ap_enable_reg_pp9_iter0 == 1'b0))) begin
        ap_idle_pp9 = 1'b1;
    end else begin
        ap_idle_pp9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln110_reg_4292 == 1'd0))) begin
        ap_phi_mux_c_1_phi_fu_886_p4 = select_ln110_2_reg_4322;
    end else begin
        ap_phi_mux_c_1_phi_fu_886_p4 = c_1_reg_882;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln110_reg_4292_pp4_iter2_reg == 1'd0))) begin
        ap_phi_mux_fh_1_phi_fu_909_p4 = select_ln111_3_reg_4394;
    end else begin
        ap_phi_mux_fh_1_phi_fu_909_p4 = fh_1_reg_905;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln110_reg_4292_pp4_iter2_reg == 1'd0))) begin
        ap_phi_mux_fw_1_phi_fu_920_p4 = add_ln112_reg_4409;
    end else begin
        ap_phi_mux_fw_1_phi_fu_920_p4 = fw_1_reg_916;
    end
end

always @ (*) begin
    if (((icmp_ln144_1_reg_4927 == 1'd0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage0) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        ap_phi_mux_i_7_phi_fu_1162_p4 = add_ln144_reg_4922;
    end else begin
        ap_phi_mux_i_7_phi_fu_1162_p4 = i_7_reg_1158;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln110_reg_4292_pp4_iter1_reg == 1'd0))) begin
        ap_phi_mux_indvar_flatten138_phi_fu_898_p4 = select_ln111_4_reg_4337;
    end else begin
        ap_phi_mux_indvar_flatten138_phi_fu_898_p4 = indvar_flatten138_reg_894;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln110_reg_4292 == 1'd0))) begin
        ap_phi_mux_indvar_flatten167_phi_fu_874_p4 = add_ln110_1_reg_4306;
    end else begin
        ap_phi_mux_indvar_flatten167_phi_fu_874_p4 = indvar_flatten167_reg_870;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state183)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state158)) begin
        bbuf_V_address0 = zext_ln74_fu_3224_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        bbuf_V_address0 = zext_ln63_fu_1666_p1;
    end else begin
        bbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state158) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        bbuf_V_ce0 = 1'b1;
    end else begin
        bbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln62_reg_3874_pp1_iter1_reg == 1'd0))) begin
        bbuf_V_we0 = 1'b1;
    end else begin
        bbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        dbbuf_V_address0 = zext_ln136_fu_2926_p1;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        dbbuf_V_address0 = dbbuf_V_addr_1_reg_4248;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        dbbuf_V_address0 = zext_ln107_fu_2182_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        dbbuf_V_address0 = zext_ln93_fu_1708_p1;
    end else begin
        dbbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state88) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
        dbbuf_V_ce0 = 1'b1;
    end else begin
        dbbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        dbbuf_V_d0 = empty_78_reg_859;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        dbbuf_V_d0 = gmem_addr_1_read_reg_3917;
    end else begin
        dbbuf_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state90) & (icmp_ln109_fu_2216_p2 == 1'd1) & (cmp184407_reg_4032 == 1'd1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln92_reg_3908_pp2_iter1_reg == 1'd0)))) begin
        dbbuf_V_we0 = 1'b1;
    end else begin
        dbbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        dwbuf_V_address0 = dwbuf_V_addr_2_reg_4424_pp4_iter5_reg;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        dwbuf_V_address0 = zext_ln101_6_fu_2067_p1;
    end else begin
        dwbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        dwbuf_V_address1 = zext_ln128_6_fu_2888_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        dwbuf_V_address1 = dwbuf_V_addr_2_reg_4424_pp4_iter4_reg;
    end else begin
        dwbuf_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        dwbuf_V_ce0 = 1'b1;
    end else begin
        dwbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        dwbuf_V_ce1 = 1'b1;
    end else begin
        dwbuf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        dwbuf_V_d0 = {{grp_fu_3456_p3[28:13]}};
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        dwbuf_V_d0 = gmem_addr_3_read_reg_4124;
    end else begin
        dwbuf_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln110_reg_4292_pp4_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln100_reg_4115_pp3_iter1_reg == 1'd0)))) begin
        dwbuf_V_we0 = 1'b1;
    end else begin
        dwbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp9_stage0) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1))) begin
        dx_Addr_A_orig = ap_phi_mux_i_7_phi_fu_1162_p4;
    end else if (((1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        dx_Addr_A_orig = zext_ln71_fu_2947_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        dx_Addr_A_orig = dx_addr_2_reg_4440_pp4_iter4_reg;
    end else if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        dx_Addr_A_orig = zext_ln1118_fu_2507_p1;
    end else begin
        dx_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        dx_Din_A = 16'd0;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        dx_Din_A = {{grp_fu_3448_p3[28:13]}};
    end else begin
        dx_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0)) | ((1'b0 == ap_block_pp9_stage1_11001) & (1'b1 == ap_CS_fsm_pp9_stage1) & (ap_enable_reg_pp9_iter0 == 1'b1)) | ((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter2 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0)) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        dx_EN_A = 1'b1;
    end else begin
        dx_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln70_fu_2937_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln110_reg_4292_pp4_iter4_reg == 1'd0)))) begin
        dx_WEN_A = 2'd3;
    end else begin
        dx_WEN_A = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state90))) begin
        dy_EN_A = 1'b1;
    end else begin
        dy_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp9_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_4719)) begin
            gmem2_AWADDR = gmem2_addr_1_reg_4947_pp9_iter1_reg;
        end else if ((1'b1 == ap_condition_4715)) begin
            gmem2_AWADDR = gmem2_addr_reg_4936;
        end else begin
            gmem2_AWADDR = 'bx;
        end
    end else begin
        gmem2_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln144_1_reg_4927_pp9_iter1_reg == 1'd0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage1_11001) & (1'b1 == ap_CS_fsm_pp9_stage1)) | ((icmp_ln144_1_reg_4927 == 1'd0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0)))) begin
        gmem2_AWVALID = 1'b1;
    end else begin
        gmem2_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln144_1_reg_4927_pp9_iter4_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1) & (1'b0 == ap_block_pp9_stage1_11001) & (1'b1 == ap_CS_fsm_pp9_stage1)) | ((icmp_ln144_1_reg_4927_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0)))) begin
        gmem2_BREADY = 1'b1;
    end else begin
        gmem2_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln144_1_reg_4927_pp9_iter1_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_2487)) begin
            gmem2_WDATA = dx_load_reg_4958;
        end else if ((1'b1 == ap_condition_2475)) begin
            gmem2_WDATA = x_load_1_reg_4953;
        end else begin
            gmem2_WDATA = 'bx;
        end
    end else begin
        gmem2_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp9_iter2 == 1'b1) & (icmp_ln144_1_reg_4927_pp9_iter1_reg == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0)) | ((icmp_ln144_1_reg_4927_pp9_iter1_reg == 1'd0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage1_11001) & (1'b1 == ap_CS_fsm_pp9_stage1)))) begin
        gmem2_WVALID = 1'b1;
    end else begin
        gmem2_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln144_1_reg_4927_pp9_iter1_reg == 1'd0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage1) & (1'b1 == ap_CS_fsm_pp9_stage1)) | ((icmp_ln144_1_reg_4927 == 1'd0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage0) & (1'b1 == ap_CS_fsm_pp9_stage0)))) begin
        gmem2_blk_n_AW = m_axi_gmem2_AWREADY;
    end else begin
        gmem2_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln144_1_reg_4927_pp9_iter4_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1) & (1'b0 == ap_block_pp9_stage1) & (1'b1 == ap_CS_fsm_pp9_stage1)) | ((icmp_ln144_1_reg_4927_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1) & (1'b0 == ap_block_pp9_stage0) & (1'b1 == ap_CS_fsm_pp9_stage0)))) begin
        gmem2_blk_n_B = m_axi_gmem2_BVALID;
    end else begin
        gmem2_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp9_iter2 == 1'b1) & (icmp_ln144_1_reg_4927_pp9_iter1_reg == 1'd0) & (1'b0 == ap_block_pp9_stage0) & (1'b1 == ap_CS_fsm_pp9_stage0)) | ((icmp_ln144_1_reg_4927_pp9_iter1_reg == 1'd0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage1) & (1'b1 == ap_CS_fsm_pp9_stage1)))) begin
        gmem2_blk_n_W = m_axi_gmem2_WREADY;
    end else begin
        gmem2_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state65))) begin
        gmem_ARADDR = gmem_addr_3_reg_4099;
    end else if (((1'b0 == ap_block_state41_io) & (ap_predicate_op410_readreq_state41 == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
        gmem_ARADDR = sext_ln92_fu_1679_p1;
    end else if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        gmem_ARADDR = gmem_addr_2_reg_3829;
    end else if (((icmp_ln49_1_reg_3728 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
        gmem_ARADDR = sext_ln62_fu_1362_p1;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state65)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        gmem_ARLEN = FW_read_reg_3524;
    end else if ((((icmp_ln49_1_reg_3728 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11)) | ((1'b0 == ap_block_state41_io) & (ap_predicate_op410_readreq_state41 == 1'b1) & (1'b1 == ap_CS_fsm_state41)))) begin
        gmem_ARLEN = F_read_reg_3586;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln49_1_reg_3728 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11)) | ((1'b0 == ap_block_state41_io) & (ap_predicate_op410_readreq_state41 == 1'b1) & (1'b1 == ap_CS_fsm_state41)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state65)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state114))) begin
        gmem_AWADDR = gmem_addr_4_reg_4568;
    end else if (((icmp_ln124_reg_4485 == 1'd1) & (1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108))) begin
        gmem_AWADDR = gmem_addr_1_reg_3888;
    end else begin
        gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state114))) begin
        gmem_AWLEN = FW_read_reg_3524;
    end else if (((icmp_ln124_reg_4485 == 1'd1) & (1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108))) begin
        gmem_AWLEN = F_read_reg_3586;
    end else begin
        gmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln124_reg_4485 == 1'd1) & (1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108)) | ((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state114)))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((gmem_BVALID == 1'b0) & (ap_predicate_op856_writeresp_state130 == 1'b1)) & (ap_predicate_op856_writeresp_state130 == 1'b1) & (1'b1 == ap_CS_fsm_state130)) | (~((gmem_BVALID == 1'b0) & (cmp155422_reg_3976 == 1'd1)) & (cmp155422_reg_3976 == 1'd1) & (1'b1 == ap_CS_fsm_state122)))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln100_reg_4115 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln92_reg_3908 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln62_reg_3874 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln52_reg_3845 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln135_reg_4613_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_01001))) begin
        gmem_WDATA = reg_1208;
    end else if (((icmp_ln127_reg_4584_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_01001))) begin
        gmem_WDATA = dwbuf_V_load_reg_4593;
    end else begin
        gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln127_reg_4584_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((icmp_ln135_reg_4613_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state21) | ((fwprop_read_reg_3520 == 1'd0) & (icmp_ln49_reg_3658 == 1'd1) & (1'b1 == ap_CS_fsm_state41)) | ((icmp_ln49_1_reg_3728 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state114) | ((icmp_ln124_reg_4485 == 1'd1) & (1'b1 == ap_CS_fsm_state108)))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((cmp155422_reg_3976 == 1'd1) & (1'b1 == ap_CS_fsm_state122)) | ((fwprop_read_reg_3520 == 1'd0) & (icmp_ln49_reg_3658 == 1'd1) & (1'b1 == ap_CS_fsm_state130)))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln100_reg_4115 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln92_reg_3908 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln62_reg_3874 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln52_reg_3845 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln127_reg_4584_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((icmp_ln135_reg_4613_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0)))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state131) | (~((gmem_BVALID == 1'b0) & (ap_predicate_op856_writeresp_state130 == 1'b1)) & (1'b1 == ap_CS_fsm_state130)) | ((1'b0 == ap_block_state41_io) & (1'b1 == ap_CS_fsm_state41)))) begin
        grp_fu_1181_ce = 1'b1;
    end else begin
        grp_fu_1181_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state107) | ((1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108)))) begin
        grp_fu_2601_ce = 1'b1;
    end else begin
        grp_fu_2601_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        wbuf_V_address0 = zext_ln1118_7_fu_2498_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        wbuf_V_address0 = zext_ln53_6_fu_1629_p1;
    end else begin
        wbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        wbuf_V_ce0 = 1'b1;
    end else begin
        wbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln52_reg_3845_pp0_iter1_reg == 1'd0))) begin
        wbuf_V_we0 = 1'b1;
    end else begin
        wbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp9_stage0) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1))) begin
        x_Addr_A_orig = ap_phi_mux_i_7_phi_fu_1162_p4;
    end else if (((1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_Addr_A_orig = zext_ln1116_fu_3337_p1;
    end else if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        x_Addr_A_orig = zext_ln1118_fu_2507_p1;
    end else begin
        x_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0)) | ((1'b0 == ap_block_pp9_stage1_11001) & (1'b1 == ap_CS_fsm_pp9_stage1) & (ap_enable_reg_pp9_iter0 == 1'b1)) | ((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1)) | ((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0)) | ((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter2 == 1'b1)) | ((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        x_EN_A = 1'b1;
    end else begin
        x_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state167)) begin
        y_Addr_A_orig = y_addr_reg_4851;
    end else if ((1'b1 == ap_CS_fsm_state159)) begin
        y_Addr_A_orig = zext_ln78_fu_3249_p1;
    end else begin
        y_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state167)) begin
        y_Din_A = empty_64_reg_1133;
    end else if ((1'b1 == ap_CS_fsm_state159)) begin
        y_Din_A = bbuf_V_q0;
    end else begin
        y_Din_A = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state167) | (1'b1 == ap_CS_fsm_state159))) begin
        y_EN_A = 1'b1;
    end else begin
        y_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state167) | (1'b1 == ap_CS_fsm_state159))) begin
        y_WEN_A = 2'd3;
    end else begin
        y_WEN_A = 2'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln49_fu_1259_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln49_1_reg_3728 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else if (((icmp_ln49_1_reg_3728 == 1'd0) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((cmp57452_reg_3693 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln52_fu_1615_p2 == 1'd1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln52_fu_1615_p2 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln62_fu_1657_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln62_fu_1657_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((fwprop_read_reg_3520 == 1'd0) & (icmp_ln49_reg_3658 == 1'd0) & (1'b0 == ap_block_state41_io) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end else if (((fwprop_read_reg_3520 == 1'd0) & (icmp_ln49_reg_3658 == 1'd1) & (1'b0 == ap_block_state41_io) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else if (((fwprop_read_reg_3520 == 1'd1) & (1'b0 == ap_block_state41_io) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state131;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln92_fu_1699_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln92_fu_1699_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            if (((1'b1 == ap_CS_fsm_state59) & (icmp_ln97_fu_1775_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            if (((cmp155422_reg_3976 == 1'd0) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state65 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state65))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln100_fu_2053_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln100_fu_2053_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln107_fu_2138_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            if (((1'b1 == ap_CS_fsm_state88) & (cmp184407_reg_4032 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            if (((1'b1 == ap_CS_fsm_state90) & ((icmp_ln109_fu_2216_p2 == 1'd1) | (cmp184407_reg_4032 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter6 == 1'b1) & (ap_enable_reg_pp4_iter5 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage0)) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if (((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter6 == 1'b1) & (ap_enable_reg_pp4_iter5 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((~((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b0)) & (1'b0 == ap_block_pp4_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            if (((icmp_ln124_reg_4485 == 1'd1) & (1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((icmp_ln124_reg_4485 == 1'd0) & (1'b0 == ap_block_state108_io) & (1'b1 == ap_CS_fsm_state108))) begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            if (((cmp155422_reg_3976 == 1'd0) & (1'b1 == ap_CS_fsm_state113))) begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end
        end
        ap_ST_fsm_state114 : begin
            if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state114))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln127_fu_2874_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)) & ~((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0)) | ((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln127_fu_2874_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            if ((~((gmem_BVALID == 1'b0) & (cmp155422_reg_3976 == 1'd1)) & (1'b1 == ap_CS_fsm_state122))) begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln135_fu_2917_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1)) & ~((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln135_fu_2917_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            if ((~((gmem_BVALID == 1'b0) & (ap_predicate_op856_writeresp_state130 == 1'b1)) & (debugip_read_reg_3516 == 1'd0) & (1'b1 == ap_CS_fsm_state130))) begin
                ap_NS_fsm = ap_ST_fsm_state183;
            end else if ((~((gmem_BVALID == 1'b0) & (ap_predicate_op856_writeresp_state130 == 1'b1)) & (debugip_read_reg_3516 == 1'd1) & (1'b1 == ap_CS_fsm_state130))) begin
                ap_NS_fsm = ap_ST_fsm_state169;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (icmp_ln70_fu_2937_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter2 == 1'b1) & (ap_enable_reg_pp7_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter2 == 1'b1) & (ap_enable_reg_pp7_iter1 == 1'b0)) | ((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (icmp_ln70_fu_2937_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state137;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state137 : begin
            if (((icmp_ln49_reg_3658 == 1'd1) & (1'b1 == ap_CS_fsm_state137))) begin
                ap_NS_fsm = ap_ST_fsm_state138;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            if (((1'b1 == ap_CS_fsm_state153) & (icmp_ln74_reg_4725 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state154;
            end
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            if (((1'b1 == ap_CS_fsm_state160) & (icmp_ln79_fu_3259_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state150;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state161;
            end
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            if (((1'b1 == ap_CS_fsm_state163) & (cmp106332_reg_4691 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state168;
            end
        end
        ap_ST_fsm_pp8_stage0 : begin
            if (~((1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter1 == 1'b0) & (ap_enable_reg_pp8_iter2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else if (((1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter1 == 1'b0) & (ap_enable_reg_pp8_iter2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state167;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            if (((1'b1 == ap_CS_fsm_state172) & (icmp_ln144_fu_3348_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state183;
            end
        end
        ap_ST_fsm_pp9_stage0 : begin
            if ((~((ap_enable_reg_pp9_iter1 == 1'b0) & (1'b0 == ap_block_pp9_stage0_subdone) & (icmp_ln144_1_fu_3386_p2 == 1'd1) & (ap_enable_reg_pp9_iter0 == 1'b1)) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage1;
            end else if (((ap_enable_reg_pp9_iter1 == 1'b0) & (1'b0 == ap_block_pp9_stage0_subdone) & (icmp_ln144_1_fu_3386_p2 == 1'd1) & (ap_enable_reg_pp9_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state183;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end
        end
        ap_ST_fsm_pp9_stage1 : begin
            if ((~((ap_enable_reg_pp9_iter4 == 1'b1) & (1'b0 == ap_block_pp9_stage1_subdone) & (ap_enable_reg_pp9_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp9_stage1)) & (1'b0 == ap_block_pp9_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end else if (((ap_enable_reg_pp9_iter4 == 1'b1) & (1'b0 == ap_block_pp9_stage1_subdone) & (ap_enable_reg_pp9_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp9_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state183;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage1;
            end
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln100_fu_2043_p2 = (l_1_reg_803 + 31'd1);

assign add_ln101_1_fu_1904_p2 = (zext_ln98_fu_1844_p1 + zext_ln101_2_fu_1900_p1);

assign add_ln101_2_fu_1970_p2 = (zext_ln101_4_fu_1966_p1 + zext_ln101_3_fu_1956_p1);

assign add_ln101_3_fu_2015_p2 = (add_ln101_2_fu_1970_p2 + zext_ln101_5_fu_2011_p1);

assign add_ln101_4_fu_2037_p2 = (p_shl3_cast_fu_2029_p3 + trunc_ln101_3_fu_2021_p1);

assign add_ln101_5_fu_2062_p2 = (add_ln101_4_reg_4105 + trunc_ln101_5_fu_2058_p1);

assign add_ln101_fu_1838_p2 = (zext_ln101_1_fu_1834_p1 + zext_ln101_fu_1822_p1);

assign add_ln107_2_fu_2143_p2 = (f_1_reg_825 + 31'd1);

assign add_ln107_4_fu_2132_p2 = (indvar_flatten180_reg_814 + 63'd1);

assign add_ln107_fu_2117_p2 = ($signed(W_read_reg_3559) + $signed(32'd1));

assign add_ln108_fu_2245_p2 = (select_ln107_reg_4220 + 32'd1);

assign add_ln109_fu_2210_p2 = (w_1_reg_848 + 32'd1);

assign add_ln110_1_fu_2273_p2 = (indvar_flatten167_reg_870 + 96'd1);

assign add_ln110_fu_2263_p2 = (ap_phi_mux_c_1_phi_fu_886_p4 + 32'd1);

assign add_ln1116_fu_3332_p2 = (add_ln81_reg_4884 + trunc_ln81_fu_3328_p1);

assign add_ln1118_1_fu_2200_p2 = (zext_ln1118_2_fu_2196_p1 + zext_ln1118_1_fu_2186_p1);

assign add_ln1118_2_fu_2395_p2 = (zext_ln108_reg_4238 + zext_ln1118_3_fu_2392_p1);

assign add_ln1118_3_fu_2416_p2 = (zext_ln1118_5_fu_2412_p1 + zext_ln1118_4_fu_2400_p1);

assign add_ln1118_4_fu_2442_p2 = (add_ln1118_3_fu_2416_p2 + zext_ln1118_6_fu_2439_p1);

assign add_ln1118_5_fu_2488_p2 = (p_shl7_cast_fu_2481_p3 + trunc_ln1118_reg_4379);

assign add_ln1118_6_fu_2493_p2 = (add_ln1118_5_fu_2488_p2 + trunc_ln1118_2_reg_4404);

assign add_ln1118_fu_2503_p2 = ($signed(grp_fu_3441_p3) + $signed(trunc_ln113_reg_4399_pp4_iter3_reg));

assign add_ln111_2_fu_2295_p2 = (ap_phi_mux_indvar_flatten138_phi_fu_898_p4 + 64'd1);

assign add_ln111_fu_2359_p2 = (select_ln110_fu_2325_p3 + 32'd1);

assign add_ln112_fu_2475_p2 = (select_ln111_fu_2431_p3 + 32'd1);

assign add_ln124_1_fu_2591_p2 = (indvar_flatten214_reg_928 + 95'd1);

assign add_ln124_fu_2615_p2 = (i_5_reg_951 + 31'd1);

assign add_ln125_1_fu_2898_p2 = (indvar_flatten191_reg_962 + 64'd1);

assign add_ln125_fu_2709_p2 = (select_ln124_fu_2668_p3 + 32'd1);

assign add_ln126_fu_2893_p2 = (select_ln125_reg_4521 + 32'd1);

assign add_ln127_fu_2864_p2 = (l_2_reg_985 + 31'd1);

assign add_ln128_1_fu_2734_p2 = (zext_ln125_fu_2699_p1 + zext_ln128_2_fu_2730_p1);

assign add_ln128_2_fu_2791_p2 = (zext_ln128_4_fu_2787_p1 + zext_ln128_3_fu_2777_p1);

assign add_ln128_3_fu_2836_p2 = (add_ln128_2_fu_2791_p2 + zext_ln128_5_fu_2832_p1);

assign add_ln128_4_fu_2858_p2 = (p_shl5_cast_fu_2850_p3 + trunc_ln128_3_fu_2842_p1);

assign add_ln128_5_fu_2883_p2 = (add_ln128_4_reg_4574 + trunc_ln128_5_fu_2879_p1);

assign add_ln128_fu_2693_p2 = (zext_ln128_1_fu_2689_p1 + zext_ln128_fu_2679_p1);

assign add_ln135_fu_2911_p2 = (i_6_reg_996 + 31'd1);

assign add_ln144_fu_3380_p2 = (ap_phi_mux_i_7_phi_fu_1162_p4 + 32'd1);

assign add_ln145_fu_3392_p2 = ($signed(ap_phi_mux_i_7_phi_fu_1162_p4) + $signed(sext_ln144_reg_4912));

assign add_ln146_fu_3403_p2 = ($signed(ap_phi_mux_i_7_phi_fu_1162_p4) + $signed(sext_ln144_1_reg_4917));

assign add_ln49_1_fu_1301_p2 = (indvar_flatten22_reg_652 + 95'd1);

assign add_ln49_fu_1330_p2 = ($signed(i_reg_663) + $signed(31'd1));

assign add_ln50_1_fu_1638_p2 = (indvar_flatten_reg_675 + 64'd1);

assign add_ln50_fu_1435_p2 = (select_ln49_fu_1377_p3 + 32'd1);

assign add_ln51_fu_1633_p2 = (select_ln50_reg_3813 + 32'd1);

assign add_ln52_fu_1605_p2 = (l_reg_711 + 31'd1);

assign add_ln53_1_fu_1475_p2 = (zext_ln50_fu_1409_p1 + zext_ln53_2_fu_1471_p1);

assign add_ln53_2_fu_1532_p2 = (zext_ln53_4_fu_1528_p1 + zext_ln53_3_fu_1518_p1);

assign add_ln53_3_fu_1577_p2 = (add_ln53_2_fu_1532_p2 + zext_ln53_5_fu_1573_p1);

assign add_ln53_4_fu_1599_p2 = (p_shl1_cast_fu_1591_p3 + trunc_ln53_3_fu_1583_p1);

assign add_ln53_5_fu_1624_p2 = (add_ln53_4_reg_3835 + trunc_ln53_5_fu_1620_p1);

assign add_ln53_fu_1403_p2 = (zext_ln53_1_fu_1399_p1 + zext_ln53_fu_1389_p1);

assign add_ln62_fu_1651_p2 = (i_1_reg_722 + 31'd1);

assign add_ln703_1_fu_3342_p2 = (x_Dout_A + empty_64_reg_1133);

assign add_ln703_fu_2586_p2 = ($signed(r_V_reg_4276) + $signed(empty_78_reg_859));

assign add_ln70_fu_2931_p2 = (i_2_reg_1007 + 32'd1);

assign add_ln74_2_fu_3044_p2 = (f_reg_1029 + 31'd1);

assign add_ln74_4_fu_3016_p2 = (indvar_flatten91_reg_1018 + 127'd1);

assign add_ln74_fu_2952_p2 = ($signed(W_read_reg_3559) + $signed(32'd1));

assign add_ln75_1_fu_3296_p2 = (indvar_flatten57_reg_1053 + 96'd1);

assign add_ln75_fu_3115_p2 = (select_ln74_fu_3055_p3 + 32'd1);

assign add_ln76_1_fu_3283_p2 = (indvar_flatten36_reg_1065 + 64'd1);

assign add_ln76_fu_3159_p2 = (select_ln75_fu_3144_p3 + 32'd1);

assign add_ln77_fu_3278_p2 = (select_ln76_reg_4835 + 32'd1);

assign add_ln79_fu_3253_p2 = (fh_reg_1111 + 32'd1);

assign add_ln80_fu_3313_p2 = (fw_reg_1122 + 31'd1);

assign add_ln81_fu_3309_p2 = ($signed(grp_fu_3496_p2) + $signed(trunc_ln77_reg_4840));

assign add_ln92_fu_1693_p2 = (i_3_reg_733 + 31'd1);

assign add_ln97_1_fu_1769_p2 = (indvar_flatten125_reg_756 + 95'd1);

assign add_ln97_fu_1798_p2 = (i_4_reg_767 + 31'd1);

assign add_ln98_1_fu_2076_p2 = (indvar_flatten102_reg_779 + 64'd1);

assign add_ln98_fu_1865_p2 = (select_ln97_fu_1804_p3 + 32'd1);

assign add_ln99_fu_2071_p2 = (select_ln98_reg_4052 + 32'd1);

assign addr_cmp_fu_2520_p2 = ((reuse_addr_reg_fu_264 == zext_ln1118_fu_2507_p1) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_pp8_stage0 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_pp9_stage0 = ap_CS_fsm[32'd145];

assign ap_CS_fsm_pp9_stage1 = ap_CS_fsm[32'd146];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state157 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state158 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state159 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state160 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state163 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state167 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state168 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state169 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state170 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state171 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state172 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state183 = ap_CS_fsm[32'd147];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd83];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln52_reg_3845 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln52_reg_3845 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln62_reg_3874 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln62_reg_3874 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln92_reg_3908 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln92_reg_3908 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln100_reg_4115 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln100_reg_4115 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_block_state117_io));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_block_state117_io));
end

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b1 == ap_block_state125_io));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b1 == ap_block_state125_io));
end

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp9_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp9_stage0_01001 = ((gmem2_BVALID == 1'b0) & (icmp_ln144_1_reg_4927_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp9_stage0_11001 = (((ap_enable_reg_pp9_iter2 == 1'b1) & (1'b1 == ap_block_state177_io)) | ((ap_enable_reg_pp9_iter1 == 1'b1) & (1'b1 == ap_block_state175_io)) | ((gmem2_BVALID == 1'b0) & (icmp_ln144_1_reg_4927_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp9_stage0_subdone = (((ap_enable_reg_pp9_iter2 == 1'b1) & (1'b1 == ap_block_state177_io)) | ((ap_enable_reg_pp9_iter1 == 1'b1) & (1'b1 == ap_block_state175_io)) | ((gmem2_BVALID == 1'b0) & (icmp_ln144_1_reg_4927_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1)));
end

assign ap_block_pp9_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp9_stage1_01001 = ((gmem2_BVALID == 1'b0) & (icmp_ln144_1_reg_4927_pp9_iter4_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp9_stage1_11001 = (((ap_enable_reg_pp9_iter1 == 1'b1) & (1'b1 == ap_block_state176_io)) | ((gmem2_BVALID == 1'b0) & (icmp_ln144_1_reg_4927_pp9_iter4_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp9_stage1_subdone = (((ap_enable_reg_pp9_iter1 == 1'b1) & (1'b1 == ap_block_state176_io)) | ((gmem2_BVALID == 1'b0) & (icmp_ln144_1_reg_4927_pp9_iter4_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1)));
end

assign ap_block_state100_pp4_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp4_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp4_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp4_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state108_io = ((gmem_AWREADY == 1'b0) & (icmp_ln124_reg_4485 == 1'd1));
end

assign ap_block_state115_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state117_io = ((gmem_WREADY == 1'b0) & (icmp_ln127_reg_4584_pp5_iter1_reg == 1'd0));
end

assign ap_block_state117_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((gmem_ARREADY == 1'b0) & (icmp_ln49_1_reg_3728 == 1'd1));
end

always @ (*) begin
    ap_block_state122 = ((gmem_BVALID == 1'b0) & (cmp155422_reg_3976 == 1'd1));
end

assign ap_block_state123_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state125_io = ((gmem_WREADY == 1'b0) & (icmp_ln135_reg_4613_pp6_iter1_reg == 1'd0));
end

assign ap_block_state125_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state130 = ((gmem_BVALID == 1'b0) & (ap_predicate_op856_writeresp_state130 == 1'b1));
end

assign ap_block_state134_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state164_pp8_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state165_pp8_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state166_pp8_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state173_pp9_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state174_pp9_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state175_io = ((gmem2_AWREADY == 1'b0) & (icmp_ln144_1_reg_4927 == 1'd0));
end

assign ap_block_state175_pp9_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state176_io = (((gmem2_WREADY == 1'b0) & (icmp_ln144_1_reg_4927_pp9_iter1_reg == 1'd0)) | ((gmem2_AWREADY == 1'b0) & (icmp_ln144_1_reg_4927_pp9_iter1_reg == 1'd0)));
end

assign ap_block_state176_pp9_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state177_io = ((gmem2_WREADY == 1'b0) & (icmp_ln144_1_reg_4927_pp9_iter1_reg == 1'd0));
end

assign ap_block_state177_pp9_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state178_pp9_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state179_pp9_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state180_pp9_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state181_pp9_stage0_iter4 = ((gmem2_BVALID == 1'b0) & (icmp_ln144_1_reg_4927_pp9_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state182_pp9_stage1_iter4 = ((gmem2_BVALID == 1'b0) & (icmp_ln144_1_reg_4927_pp9_iter4_reg == 1'd0));
end

assign ap_block_state28_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp0_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln52_reg_3845 == 1'd0));
end

assign ap_block_state30_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state39_pp1_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln62_reg_3874 == 1'd0));
end

assign ap_block_state40_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state41_io = ((gmem_ARREADY == 1'b0) & (ap_predicate_op410_readreq_state41 == 1'b1));
end

assign ap_block_state48_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state49_pp2_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln92_reg_3908 == 1'd0));
end

assign ap_block_state50_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state73_pp3_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln100_reg_4115 == 1'd0));
end

assign ap_block_state74_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp4_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp4_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp4_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2475 = ((ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage1_01001) & (1'b1 == ap_CS_fsm_pp9_stage1));
end

always @ (*) begin
    ap_condition_2487 = ((ap_enable_reg_pp9_iter2 == 1'b1) & (1'b0 == ap_block_pp9_stage0_01001) & (1'b1 == ap_CS_fsm_pp9_stage0));
end

always @ (*) begin
    ap_condition_4715 = ((icmp_ln144_1_reg_4927 == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0));
end

always @ (*) begin
    ap_condition_4719 = ((icmp_ln144_1_reg_4927_pp9_iter1_reg == 1'd0) & (1'b0 == ap_block_pp9_stage1_11001) & (1'b1 == ap_CS_fsm_pp9_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp8 = (ap_idle_pp8 ^ 1'b1);

assign ap_enable_pp9 = (ap_idle_pp9 ^ 1'b1);

always @ (*) begin
    ap_predicate_op410_readreq_state41 = ((fwprop_read_reg_3520 == 1'd0) & (icmp_ln49_reg_3658 == 1'd1));
end

always @ (*) begin
    ap_predicate_op856_writeresp_state130 = ((fwprop_read_reg_3520 == 1'd0) & (icmp_ln49_reg_3658 == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cast95_fu_1715_p1 = FH_read_reg_3545;

assign cmp184407_fu_1785_p2 = (($signed(outW_reg_3653) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign dx_Addr_A = dx_Addr_A_orig << 32'd1;

assign dx_Clk_A = ap_clk;

assign dx_Rst_A = ap_rst_n_inv;

assign dy_Addr_A = p_cast30_fu_2230_p1 << 32'd1;

assign dy_Clk_A = ap_clk;

assign dy_Din_A = 16'd0;

assign dy_Rst_A = ap_rst_n_inv;

assign dy_WEN_A = 2'd0;

assign empty_48_fu_1231_p0 = H;

assign empty_48_fu_1231_p1 = empty_48_fu_1231_p0[12:0];

assign empty_49_fu_1276_p1 = F_read_reg_3586[30:0];

assign empty_50_fu_1298_p1 = FW_read_reg_3524[30:0];

assign empty_55_fu_1545_p2 = (tmp_4_fu_1538_p3 + wt_read_reg_3622);

assign empty_60_fu_3039_p2 = ($signed(trunc_ln76_fu_3035_p1) + $signed(grp_fu_3464_p2));

assign empty_76_fu_1950_p2 = (tmp3_fu_1946_p2 + select_ln98_1_fu_1940_p3);

assign empty_77_fu_1983_p2 = (tmp_9_fu_1976_p3 + dwt_read_reg_3616);

assign empty_79_fu_2225_p2 = ($signed(trunc_ln109_fu_2221_p1) + $signed(empty_83_reg_4243));

assign empty_81_fu_2316_p2 = ($signed(tmp4_fu_2311_p2) + $signed(grp_fu_3427_p2));

assign empty_89_fu_2771_p2 = (tmp5_fu_2767_p2 + select_ln125_1_fu_2761_p3);

assign empty_90_fu_2804_p2 = (tmp_8_fu_2797_p3 + dwt_read_reg_3616);

assign empty_fu_1227_p1 = FH[12:0];

assign fw_cast_fu_3319_p1 = fw_reg_1122;

assign grp_fu_1171_p2 = (($signed(FW_read_reg_3524) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign grp_fu_1176_p2 = ((FH_read_reg_3545 == 32'd0) ? 1'b1 : 1'b0);

assign grp_fu_1185_p2 = ($signed(H_read_reg_3569) + $signed(32'd1));

assign grp_fu_1190_p2 = (grp_fu_1185_p2 - FH_read_reg_3545);

assign grp_fu_1195_p2 = (trunc_ln44_reg_3648 + 13'd1);

assign grp_fu_1270_p0 = grp_fu_1270_p00;

assign grp_fu_1270_p00 = $unsigned(C_read_reg_3575);

assign grp_fu_1270_p1 = grp_fu_1270_p10;

assign grp_fu_1270_p10 = FH_read_reg_3545;

assign grp_fu_1286_p0 = grp_fu_1286_p00;

assign grp_fu_1286_p00 = empty_49_fu_1276_p1;

assign grp_fu_1286_p1 = grp_fu_1286_p10;

assign grp_fu_1286_p10 = bound_reg_3672;

assign grp_fu_1718_p0 = grp_fu_1718_p00;

assign grp_fu_1718_p00 = $unsigned(C_read_reg_3575);

assign grp_fu_1718_p1 = grp_fu_1718_p10;

assign grp_fu_1718_p10 = FH_read_reg_3545;

assign grp_fu_1730_p0 = grp_fu_1730_p00;

assign grp_fu_1730_p00 = trunc_ln92_reg_3895;

assign grp_fu_1730_p1 = grp_fu_1730_p10;

assign grp_fu_1730_p10 = bound96_reg_3933;

assign grp_fu_1742_p0 = FW_read_reg_3524[30:0];

assign grp_fu_1742_p1 = FH_read_reg_3545[30:0];

assign grp_fu_1751_p1 = C_read_reg_3575[30:0];

assign grp_fu_1760_p0 = j_1_reg_744[30:0];

assign grp_fu_1793_p0 = cast95_reg_3927;

assign grp_fu_1793_p1 = grp_fu_1793_p10;

assign grp_fu_1793_p10 = FW_read_reg_3524;

assign grp_fu_2095_p0 = grp_fu_2095_p00;

assign grp_fu_2095_p00 = $unsigned(C_read_reg_3575);

assign grp_fu_2095_p1 = grp_fu_2095_p10;

assign grp_fu_2095_p10 = bound130_reg_4139;

assign grp_fu_2108_p0 = grp_fu_2108_p00;

assign grp_fu_2108_p00 = trunc_ln92_reg_3895;

assign grp_fu_2108_p1 = grp_fu_2108_p10;

assign grp_fu_2108_p10 = reg_1200;

assign grp_fu_2601_p0 = j_2_reg_939[30:0];

assign grp_fu_2974_p0 = grp_fu_2974_p00;

assign grp_fu_2974_p00 = reg_1200;

assign grp_fu_2974_p1 = grp_fu_2974_p10;

assign grp_fu_2974_p10 = sub_ln74_reg_4636;

assign grp_fu_2986_p0 = grp_fu_2986_p00;

assign grp_fu_2986_p00 = $unsigned(C_read_reg_3575);

assign grp_fu_2986_p1 = grp_fu_2986_p10;

assign grp_fu_2986_p10 = bound27_reg_4658;

assign grp_fu_3002_p0 = grp_fu_3002_p00;

assign grp_fu_3002_p00 = trunc_ln74_1_fu_2992_p1;

assign grp_fu_3002_p1 = grp_fu_3002_p10;

assign grp_fu_3002_p10 = bound41_reg_4675;

assign grp_fu_3414_p0 = select_ln107_1_fu_2155_p3[12:0];

assign grp_fu_3414_p2 = select_ln107_fu_2171_p3[12:0];

assign grp_fu_3427_p0 = ap_phi_mux_c_1_phi_fu_886_p4[12:0];

assign grp_fu_3434_p0 = add_ln110_fu_2263_p2[12:0];

assign grp_fu_3441_p0 = ((select_ln110_5_reg_4357[0:0] == 1'b1) ? p_mid1134_reg_4369 : select_ln110_4_fu_2422_p3);

assign grp_fu_3448_p1 = sext_ln1118_1_reg_4281;

assign grp_fu_3448_p2 = {{lhs_2_fu_2538_p3}, {13'd0}};

assign grp_fu_3456_p1 = sext_ln1118_1_reg_4281;

assign grp_fu_3456_p2 = {{dwbuf_V_q1}, {13'd0}};

assign grp_fu_3464_p0 = f_reg_1029[12:0];

assign grp_fu_3470_p0 = c_reg_1041[12:0];

assign grp_fu_3475_p0 = add_ln74_2_fu_3044_p2[12:0];

assign grp_fu_3487_p0 = ((select_ln75_4_reg_4787[0:0] == 1'b1) ? p_mid132_fu_3200_p2 : select_ln75_3_fu_3193_p3);

assign grp_fu_3487_p2 = select_ln76_fu_3237_p3[12:0];

assign grp_fu_3496_p0 = (tmp2_fu_3268_p2 + select_ln76_1_reg_4810);

assign icmp_ln100_fu_2053_p2 = ((l_1_cast_fu_2049_p1 == FW_read_reg_3524) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_2138_p2 = ((indvar_flatten180_reg_814 == bound174_reg_4180) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_2149_p2 = ((h_1_reg_836 == reg_1200) ? 1'b1 : 1'b0);

assign icmp_ln109_fu_2216_p2 = ((w_1_reg_848 == sub_ln107_reg_4170) ? 1'b1 : 1'b0);

assign icmp_ln110_fu_2258_p2 = ((ap_phi_mux_indvar_flatten167_phi_fu_874_p4 == bound143_reg_4175) ? 1'b1 : 1'b0);

assign icmp_ln111_fu_2279_p2 = ((ap_phi_mux_indvar_flatten138_phi_fu_898_p4 == bound130_reg_4139) ? 1'b1 : 1'b0);

assign icmp_ln112_1_fu_2348_p2 = ((ap_phi_mux_fw_1_phi_fu_920_p4 == FW_read_reg_3524) ? 1'b1 : 1'b0);

assign icmp_ln112_fu_2127_p2 = ((FW_read_reg_3524 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_2610_p2 = ((indvar_flatten214_reg_928 == bound107_reg_3986) ? 1'b1 : 1'b0);

assign icmp_ln125_fu_2621_p2 = ((indvar_flatten191_reg_962 == bound96_reg_3933) ? 1'b1 : 1'b0);

assign icmp_ln126_fu_2638_p2 = ((k_2_reg_974 == FH_read_reg_3545) ? 1'b1 : 1'b0);

assign icmp_ln127_fu_2874_p2 = ((l_2_cast_fu_2870_p1 == FW_read_reg_3524) ? 1'b1 : 1'b0);

assign icmp_ln135_fu_2917_p2 = ((i_6_reg_996 == trunc_ln92_reg_3895) ? 1'b1 : 1'b0);

assign icmp_ln144_1_fu_3386_p2 = ((ap_phi_mux_i_7_phi_fu_1162_p4 == reg_1223) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_3348_p2 = (($signed(reg_1223) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln49_1_fu_1312_p2 = ((indvar_flatten22_reg_652 == bound5_reg_3713) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_1259_p2 = (($signed(F_read_reg_3586) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_1336_p2 = ((indvar_flatten_reg_675 == bound_reg_3672) ? 1'b1 : 1'b0);

assign icmp_ln51_1_fu_1424_p2 = ((k_reg_699 == FH_read_reg_3545) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_1615_p2 = ((l_cast_fu_1611_p1 == FW_read_reg_3524) ? 1'b1 : 1'b0);

assign icmp_ln62_fu_1657_p2 = ((i_1_reg_722 == empty_49_reg_3678) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_2937_p2 = ((i_2_reg_1007 == reg_1223) ? 1'b1 : 1'b0);

assign icmp_ln74_fu_3030_p2 = ((indvar_flatten91_reg_1018 == bound63_reg_4700) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_3050_p2 = ((indvar_flatten57_reg_1053 == bound41_reg_4675) ? 1'b1 : 1'b0);

assign icmp_ln76_1_fu_3095_p2 = ((indvar_flatten36_reg_1065 == bound27_reg_4658) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_3011_p2 = ((bound27_reg_4658 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln77_1_fu_3083_p2 = ((w_reg_1089 == sub_ln74_reg_4636) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_2962_p2 = ((add_ln74_fu_2952_p2 == FW_read_reg_3524) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_3259_p2 = ((fh_reg_1111 == FH_read_reg_3545) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_3323_p2 = ((fw_cast_fu_3319_p1 == FW_read_reg_3524) ? 1'b1 : 1'b0);

assign icmp_ln92_fu_1699_p2 = ((i_3_reg_733 == trunc_ln92_reg_3895) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_1775_p2 = ((indvar_flatten125_reg_756 == bound107_reg_3986) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_1780_p2 = ((indvar_flatten102_reg_779 == bound96_reg_3933) ? 1'b1 : 1'b0);

assign icmp_ln99_1_fu_1854_p2 = ((k_1_reg_791 == FH_read_reg_3545) ? 1'b1 : 1'b0);

assign l_1_cast_fu_2049_p1 = l_1_reg_803;

assign l_2_cast_fu_2870_p1 = l_2_reg_985;

assign l_cast_fu_1611_p1 = l_reg_711;

assign lhs_2_fu_2538_p3 = ((addr_cmp_reg_4445[0:0] == 1'b1) ? reuse_reg_fu_268 : dx_Dout_A);

assign or_ln111_fu_2427_p2 = (select_ln110_5_reg_4357 | icmp_ln111_reg_4311_pp4_iter1_reg);

assign or_ln125_fu_2650_p2 = (select_ln124_4_fu_2643_p3 | icmp_ln125_fu_2621_p2);

assign or_ln50_fu_1493_p2 = (select_ln49_5_reg_3787 | icmp_ln50_reg_3753);

assign or_ln75_fu_3140_p2 = (select_ln74_6_reg_4769 | icmp_ln75_reg_4749);

assign or_ln76_1_fu_3232_p2 = (or_ln76_fu_3228_p2 | icmp_ln75_reg_4749);

assign or_ln76_fu_3228_p2 = (select_ln75_4_reg_4787 | select_ln74_6_reg_4769);

assign or_ln98_fu_1871_p2 = (select_ln97_4_fu_1859_p3 | icmp_ln98_reg_4021);

assign outH_fu_1239_p2 = (sub_ln43_fu_1235_p2 + 13'd1);

assign outW_fu_1253_p2 = (sub_ln44_fu_1245_p2 + 32'd1);

assign p_cast30_fu_2230_p1 = empty_79_fu_2225_p2;

assign p_mid1134_fu_2374_p2 = (tmp4_mid1_fu_2369_p2 + select_ln110_1_fu_2332_p3);

assign p_mid1155_fu_2337_p2 = ($signed(trunc_ln108_reg_4225) + $signed(grp_fu_3434_p2));

assign p_mid132_fu_3200_p2 = (trunc_ln76_1_reg_4805 + select_ln74_1_fu_3183_p3);

assign p_shl1_cast_fu_1591_p3 = {{trunc_ln53_4_fu_1587_p1}, {2'd0}};

assign p_shl3_cast_fu_2029_p3 = {{trunc_ln101_4_fu_2025_p1}, {2'd0}};

assign p_shl5_cast_fu_2850_p3 = {{trunc_ln128_4_fu_2846_p1}, {2'd0}};

assign p_shl7_cast_fu_2481_p3 = {{trunc_ln1118_1_reg_4384}, {2'd0}};

assign select_ln107_1_fu_2155_p3 = ((icmp_ln108_fu_2149_p2[0:0] == 1'b1) ? add_ln107_2_fu_2143_p2 : f_1_reg_825);

assign select_ln107_fu_2171_p3 = ((icmp_ln108_reg_4198[0:0] == 1'b1) ? 32'd0 : h_1_reg_836);

assign select_ln110_1_fu_2332_p3 = ((icmp_ln111_reg_4311[0:0] == 1'b1) ? grp_fu_3434_p2 : grp_fu_3427_p2);

assign select_ln110_2_fu_2284_p3 = ((icmp_ln111_fu_2279_p2[0:0] == 1'b1) ? add_ln110_reg_4296 : c_1_reg_882);

assign select_ln110_3_fu_2341_p3 = ((icmp_ln111_reg_4311[0:0] == 1'b1) ? 7'd0 : trunc_ln727_fu_2321_p1);

assign select_ln110_4_fu_2422_p3 = ((icmp_ln111_reg_4311_pp4_iter1_reg[0:0] == 1'b1) ? p_mid1155_reg_4352 : empty_81_reg_4342);

assign select_ln110_5_fu_2353_p3 = ((icmp_ln111_reg_4311[0:0] == 1'b1) ? icmp_ln112_reg_4185 : icmp_ln112_1_fu_2348_p2);

assign select_ln110_fu_2325_p3 = ((icmp_ln111_reg_4311[0:0] == 1'b1) ? 32'd0 : ap_phi_mux_fh_1_phi_fu_909_p4);

assign select_ln111_1_fu_2384_p3 = ((select_ln110_5_fu_2353_p3[0:0] == 1'b1) ? trunc_ln727_1_fu_2380_p1 : select_ln110_3_fu_2341_p3);

assign select_ln111_3_fu_2462_p3 = ((select_ln110_5_reg_4357[0:0] == 1'b1) ? add_ln111_reg_4364 : select_ln110_reg_4347);

assign select_ln111_4_fu_2301_p3 = ((icmp_ln111_reg_4311[0:0] == 1'b1) ? 64'd1 : add_ln111_2_reg_4332);

assign select_ln111_fu_2431_p3 = ((or_ln111_fu_2427_p2[0:0] == 1'b1) ? 32'd0 : fw_1_reg_916);

assign select_ln124_1_fu_2626_p3 = ((icmp_ln125_fu_2621_p2[0:0] == 1'b1) ? add_ln124_fu_2615_p2 : i_5_reg_951);

assign select_ln124_2_fu_2755_p3 = ((icmp_ln125_reg_4494[0:0] == 1'b1) ? 31'd0 : empty_84_reg_4489);

assign select_ln124_3_fu_2703_p3 = ((icmp_ln125_reg_4494[0:0] == 1'b1) ? 5'd0 : trunc_ln128_reg_4480);

assign select_ln124_4_fu_2643_p3 = ((icmp_ln125_fu_2621_p2[0:0] == 1'b1) ? icmp_ln99_reg_3992 : icmp_ln126_fu_2638_p2);

assign select_ln124_fu_2668_p3 = ((icmp_ln125_reg_4494[0:0] == 1'b1) ? 32'd0 : j_2_reg_939);

assign select_ln125_1_fu_2761_p3 = ((select_ln124_4_reg_4514[0:0] == 1'b1) ? p_mid1189_reg_4558 : select_ln124_2_fu_2755_p3);

assign select_ln125_2_fu_2723_p3 = ((select_ln124_4_reg_4514[0:0] == 1'b1) ? trunc_ln128_1_fu_2719_p1 : select_ln124_3_fu_2703_p3);

assign select_ln125_3_fu_2740_p3 = ((select_ln124_4_reg_4514[0:0] == 1'b1) ? add_ln125_fu_2709_p2 : select_ln124_fu_2668_p3);

assign select_ln125_4_fu_2904_p3 = ((icmp_ln125_reg_4494[0:0] == 1'b1) ? 64'd1 : add_ln125_1_fu_2898_p2);

assign select_ln125_fu_2656_p3 = ((or_ln125_fu_2650_p2[0:0] == 1'b1) ? 32'd0 : k_2_reg_974);

assign select_ln49_1_fu_1384_p3 = ((icmp_ln50_reg_3753[0:0] == 1'b1) ? p_mid1_reg_3781 : empty_51_reg_3732);

assign select_ln49_2_fu_1341_p3 = ((icmp_ln50_fu_1336_p2[0:0] == 1'b1) ? add_ln49_fu_1330_p2 : i_reg_663);

assign select_ln49_3_fu_1413_p3 = ((icmp_ln50_reg_3753[0:0] == 1'b1) ? p_mid1_reg_3781 : tmp_reg_3738);

assign select_ln49_4_fu_1418_p3 = ((icmp_ln50_reg_3753[0:0] == 1'b1) ? 5'd0 : trunc_ln53_reg_3743);

assign select_ln49_5_fu_1429_p3 = ((icmp_ln50_reg_3753[0:0] == 1'b1) ? icmp_ln51_reg_3718 : icmp_ln51_1_fu_1424_p2);

assign select_ln49_fu_1377_p3 = ((icmp_ln50_reg_3753[0:0] == 1'b1) ? 32'd0 : j_reg_687);

assign select_ln50_1_fu_1451_p3 = ((select_ln49_5_fu_1429_p3[0:0] == 1'b1) ? tmp_mid1_fu_1445_p2 : select_ln49_3_fu_1413_p3);

assign select_ln50_2_fu_1463_p3 = ((select_ln49_5_fu_1429_p3[0:0] == 1'b1) ? trunc_ln53_1_fu_1459_p1 : select_ln49_4_fu_1418_p3);

assign select_ln50_3_fu_1481_p3 = ((select_ln49_5_fu_1429_p3[0:0] == 1'b1) ? add_ln50_fu_1435_p2 : select_ln49_fu_1377_p3);

assign select_ln50_4_fu_1644_p3 = ((icmp_ln50_reg_3753[0:0] == 1'b1) ? 64'd1 : add_ln50_1_fu_1638_p2);

assign select_ln50_fu_1497_p3 = ((or_ln50_fu_1493_p2[0:0] == 1'b1) ? 32'd0 : k_reg_699);

assign select_ln74_1_fu_3183_p3 = ((icmp_ln75_reg_4749[0:0] == 1'b1) ? grp_fu_3475_p2 : empty_58_reg_4729);

assign select_ln74_2_fu_3075_p3 = ((icmp_ln75_fu_3050_p2[0:0] == 1'b1) ? trunc_ln74_4_fu_3067_p1 : trunc_ln74_5_fu_3071_p1);

assign select_ln74_3_fu_3212_p3 = ((icmp_ln75_reg_4749[0:0] == 1'b1) ? 13'd0 : empty_59_reg_4734);

assign select_ln74_4_fu_3188_p3 = ((icmp_ln75_reg_4749[0:0] == 1'b1) ? grp_fu_3475_p2 : empty_60_reg_4744);

assign select_ln74_5_fu_3088_p3 = ((icmp_ln75_fu_3050_p2[0:0] == 1'b1) ? icmp_ln77_reg_4642 : icmp_ln77_1_fu_3083_p2);

assign select_ln74_6_fu_3100_p3 = ((icmp_ln75_fu_3050_p2[0:0] == 1'b1) ? icmp_ln76_reg_4705 : icmp_ln76_1_fu_3095_p2);

assign select_ln74_7_fu_3107_p3 = ((icmp_ln75_fu_3050_p2[0:0] == 1'b1) ? add_ln74_2_fu_3044_p2 : f_reg_1029);

assign select_ln74_fu_3055_p3 = ((icmp_ln75_fu_3050_p2[0:0] == 1'b1) ? 32'd0 : c_reg_1041);

assign select_ln75_1_fu_3218_p3 = ((select_ln74_6_reg_4769[0:0] == 1'b1) ? grp_fu_3482_p2 : select_ln74_3_fu_3212_p3);

assign select_ln75_2_fu_3152_p3 = ((or_ln75_fu_3140_p2[0:0] == 1'b1) ? 13'd0 : trunc_ln76_reg_4739);

assign select_ln75_3_fu_3193_p3 = ((select_ln74_6_reg_4769[0:0] == 1'b1) ? select_ln74_1_fu_3183_p3 : select_ln74_4_fu_3188_p3);

assign select_ln75_4_fu_3125_p3 = ((select_ln74_6_fu_3100_p3[0:0] == 1'b1) ? icmp_ln77_reg_4642 : select_ln74_5_fu_3088_p3);

assign select_ln75_5_fu_3132_p3 = ((select_ln74_6_fu_3100_p3[0:0] == 1'b1) ? add_ln75_fu_3115_p2 : select_ln74_fu_3055_p3);

assign select_ln75_6_fu_3302_p3 = ((icmp_ln75_reg_4749[0:0] == 1'b1) ? 96'd1 : add_ln75_1_fu_3296_p2);

assign select_ln75_fu_3144_p3 = ((or_ln75_fu_3140_p2[0:0] == 1'b1) ? 32'd0 : h_reg_1077);

assign select_ln76_1_fu_3169_p3 = ((select_ln75_4_reg_4787[0:0] == 1'b1) ? trunc_ln76_1_fu_3165_p1 : select_ln75_2_fu_3152_p3);

assign select_ln76_3_fu_3176_p3 = ((select_ln75_4_reg_4787[0:0] == 1'b1) ? add_ln76_fu_3159_p2 : select_ln75_fu_3144_p3);

assign select_ln76_4_fu_3289_p3 = ((or_ln75_reg_4800[0:0] == 1'b1) ? 64'd1 : add_ln76_1_fu_3283_p2);

assign select_ln76_fu_3237_p3 = ((or_ln76_1_fu_3232_p2[0:0] == 1'b1) ? 32'd0 : w_reg_1089);

assign select_ln97_1_fu_1811_p3 = ((icmp_ln98_reg_4021[0:0] == 1'b1) ? add_ln97_fu_1798_p2 : i_4_reg_767);

assign select_ln97_2_fu_1934_p3 = ((icmp_ln98_reg_4021[0:0] == 1'b1) ? 31'd0 : empty_72_reg_4013);

assign select_ln97_3_fu_1848_p3 = ((icmp_ln98_reg_4021[0:0] == 1'b1) ? 5'd0 : trunc_ln101_reg_4003);

assign select_ln97_4_fu_1859_p3 = ((icmp_ln98_reg_4021[0:0] == 1'b1) ? icmp_ln99_reg_3992 : icmp_ln99_1_fu_1854_p2);

assign select_ln97_fu_1804_p3 = ((icmp_ln98_reg_4021[0:0] == 1'b1) ? 32'd0 : j_1_reg_744);

assign select_ln98_1_fu_1940_p3 = ((select_ln97_4_reg_4047[0:0] == 1'b1) ? p_mid1100_reg_4084 : select_ln97_2_fu_1934_p3);

assign select_ln98_2_fu_1892_p3 = ((select_ln97_4_fu_1859_p3[0:0] == 1'b1) ? trunc_ln101_1_fu_1888_p1 : select_ln97_3_fu_1848_p3);

assign select_ln98_3_fu_1910_p3 = ((select_ln97_4_fu_1859_p3[0:0] == 1'b1) ? add_ln98_fu_1865_p2 : select_ln97_fu_1804_p3);

assign select_ln98_4_fu_2082_p3 = ((icmp_ln98_reg_4021[0:0] == 1'b1) ? 64'd1 : add_ln98_1_fu_2076_p2);

assign select_ln98_fu_1876_p3 = ((or_ln98_fu_1871_p2[0:0] == 1'b1) ? 32'd0 : k_1_reg_791);

assign sext_ln100_fu_1998_p1 = $signed(trunc_ln_fu_1988_p4);

assign sext_ln1118_1_fu_2250_p0 = dy_Dout_A;

assign sext_ln1118_1_fu_2250_p1 = sext_ln1118_1_fu_2250_p0;

assign sext_ln127_fu_2819_p1 = $signed(trunc_ln1_fu_2809_p4);

assign sext_ln144_1_fu_3376_p1 = $signed(trunc_ln144_1_fu_3367_p4);

assign sext_ln144_fu_3363_p1 = $signed(trunc_ln4_fu_3354_p4);

assign sext_ln52_fu_1560_p1 = $signed(trunc_ln5_fu_1550_p4);

assign sext_ln62_fu_1362_p1 = $signed(trunc_ln3_fu_1353_p4);

assign sext_ln92_fu_1679_p1 = $signed(trunc_ln7_fu_1670_p4);

assign sub_ln107_fu_2122_p2 = (add_ln107_fu_2117_p2 - FW_read_reg_3524);

assign sub_ln43_fu_1235_p2 = ($signed(empty_48_reg_3632) - $signed(empty_reg_3627));

assign sub_ln44_fu_1245_p2 = ($signed(W_read_reg_3559) - $signed(FW_read_reg_3524));

assign sub_ln74_fu_2957_p2 = (add_ln74_fu_2952_p2 - FW_read_reg_3524);

assign tmp11_fu_1509_p2 = (trunc_ln51_fu_1505_p1 + mul_ln50_reg_3808);

assign tmp2_fu_3268_p2 = (select_ln75_1_reg_4825 + trunc_ln79_fu_3264_p1);

assign tmp3_fu_1946_p2 = (mul_ln97_reg_4079 + empty_75_reg_4089);

assign tmp4_fu_2311_p2 = (trunc_ln108_reg_4225 + trunc_ln111_fu_2307_p1);

assign tmp4_mid1_fu_2369_p2 = (trunc_ln108_reg_4225 + trunc_ln111_1_fu_2365_p1);

assign tmp5_fu_2767_p2 = (mul_ln124_reg_4548 + empty_88_reg_4553);

assign tmp_10_fu_2404_p3 = {{add_ln1118_2_fu_2395_p2}, {2'd0}};

assign tmp_1_fu_1521_p3 = {{add_ln53_1_reg_3797}, {2'd0}};

assign tmp_2_fu_1392_p3 = {{trunc_ln49_2_reg_3769}, {2'd0}};

assign tmp_3_fu_1959_p3 = {{add_ln101_1_reg_4063}, {2'd0}};

assign tmp_4_fu_1538_p3 = {{empty_54_reg_3824}, {1'd0}};

assign tmp_5_fu_2682_p3 = {{trunc_ln124_reg_4508}, {2'd0}};

assign tmp_6_fu_2780_p3 = {{add_ln128_1_reg_4537}, {2'd0}};

assign tmp_7_fu_1826_p3 = {{trunc_ln97_2_fu_1818_p1}, {2'd0}};

assign tmp_8_fu_2797_p3 = {{empty_89_reg_4563}, {1'd0}};

assign tmp_9_fu_1976_p3 = {{empty_76_reg_4094}, {1'd0}};

assign tmp_fu_1321_p2 = (trunc_ln50_fu_1317_p1 + empty_51_reg_3732);

assign tmp_mid1_fu_1445_p2 = (trunc_ln50_1_fu_1441_p1 + select_ln49_1_fu_1384_p3);

assign tmp_s_fu_2189_p3 = {{trunc_ln107_2_reg_4213}, {2'd0}};

assign trunc_ln101_1_fu_1888_p1 = add_ln98_fu_1865_p2[4:0];

assign trunc_ln101_2_fu_2008_p1 = select_ln98_reg_4052[6:0];

assign trunc_ln101_3_fu_2021_p1 = add_ln101_3_fu_2015_p2[9:0];

assign trunc_ln101_4_fu_2025_p1 = add_ln101_3_fu_2015_p2[7:0];

assign trunc_ln101_5_fu_2058_p1 = l_1_reg_803[9:0];

assign trunc_ln101_fu_1765_p1 = j_1_reg_744[4:0];

assign trunc_ln107_2_fu_2167_p1 = select_ln107_1_fu_2155_p3[2:0];

assign trunc_ln107_fu_2114_p1 = W_read_reg_3559[12:0];

assign trunc_ln108_fu_2178_p1 = select_ln107_fu_2171_p3[12:0];

assign trunc_ln109_fu_2221_p1 = w_1_reg_848[12:0];

assign trunc_ln110_2_fu_2291_p1 = select_ln110_2_fu_2284_p3[4:0];

assign trunc_ln1118_1_fu_2452_p1 = add_ln1118_4_fu_2442_p2[7:0];

assign trunc_ln1118_2_fu_2471_p1 = select_ln111_fu_2431_p3[9:0];

assign trunc_ln1118_fu_2448_p1 = add_ln1118_4_fu_2442_p2[9:0];

assign trunc_ln111_1_fu_2365_p1 = add_ln111_fu_2359_p2[12:0];

assign trunc_ln111_fu_2307_p1 = ap_phi_mux_fh_1_phi_fu_909_p4[12:0];

assign trunc_ln113_fu_2467_p1 = select_ln111_fu_2431_p3[12:0];

assign trunc_ln124_fu_2634_p1 = select_ln124_1_fu_2626_p3[2:0];

assign trunc_ln125_1_fu_2715_p1 = add_ln125_fu_2709_p2[30:0];

assign trunc_ln126_fu_2664_p1 = select_ln125_fu_2656_p3[30:0];

assign trunc_ln128_1_fu_2719_p1 = add_ln125_fu_2709_p2[4:0];

assign trunc_ln128_2_fu_2829_p1 = select_ln125_reg_4521[6:0];

assign trunc_ln128_3_fu_2842_p1 = add_ln128_3_fu_2836_p2[9:0];

assign trunc_ln128_4_fu_2846_p1 = add_ln128_3_fu_2836_p2[7:0];

assign trunc_ln128_5_fu_2879_p1 = l_2_reg_985[9:0];

assign trunc_ln128_fu_2606_p1 = j_2_reg_939[4:0];

assign trunc_ln136_fu_2922_p1 = i_6_reg_996[2:0];

assign trunc_ln144_1_fu_3367_p4 = {{debug_dx_read_reg_3596[31:1]}};

assign trunc_ln1_fu_2809_p4 = {{empty_90_fu_2804_p2[31:1]}};

assign trunc_ln3_fu_1353_p4 = {{b_read_reg_3611[31:1]}};

assign trunc_ln44_fu_1249_p1 = sub_ln44_fu_1245_p2[12:0];

assign trunc_ln49_1_fu_1295_p1 = C_read_reg_3575[30:0];

assign trunc_ln49_2_fu_1349_p1 = select_ln49_2_fu_1341_p3[2:0];

assign trunc_ln49_fu_1292_p1 = FH_read_reg_3545[30:0];

assign trunc_ln4_fu_3354_p4 = {{debug_x_read_reg_3601[31:1]}};

assign trunc_ln50_1_fu_1441_p1 = add_ln50_fu_1435_p2[30:0];

assign trunc_ln50_fu_1317_p1 = j_reg_687[30:0];

assign trunc_ln51_fu_1505_p1 = select_ln50_fu_1497_p3[30:0];

assign trunc_ln53_1_fu_1459_p1 = add_ln50_fu_1435_p2[4:0];

assign trunc_ln53_2_fu_1570_p1 = select_ln50_reg_3813[6:0];

assign trunc_ln53_3_fu_1583_p1 = add_ln53_3_fu_1577_p2[9:0];

assign trunc_ln53_4_fu_1587_p1 = add_ln53_3_fu_1577_p2[7:0];

assign trunc_ln53_5_fu_1620_p1 = l_reg_711[9:0];

assign trunc_ln53_fu_1326_p1 = j_reg_687[4:0];

assign trunc_ln5_fu_1550_p4 = {{empty_55_fu_1545_p2[31:1]}};

assign trunc_ln63_fu_1662_p1 = i_1_reg_722[2:0];

assign trunc_ln71_fu_2943_p1 = i_2_reg_1007[12:0];

assign trunc_ln727_1_fu_2380_p1 = add_ln111_fu_2359_p2[6:0];

assign trunc_ln727_fu_2321_p1 = ap_phi_mux_fh_1_phi_fu_909_p4[6:0];

assign trunc_ln74_1_fu_2992_p1 = F_read_reg_3586[30:0];

assign trunc_ln74_4_fu_3067_p1 = add_ln74_2_fu_3044_p2[2:0];

assign trunc_ln74_5_fu_3071_p1 = f_reg_1029[2:0];

assign trunc_ln74_fu_3008_p1 = W_read_reg_3559[12:0];

assign trunc_ln75_1_fu_3121_p1 = add_ln75_fu_3115_p2[12:0];

assign trunc_ln76_1_fu_3165_p1 = add_ln76_fu_3159_p2[12:0];

assign trunc_ln76_fu_3035_p1 = h_reg_1077[12:0];

assign trunc_ln77_fu_3245_p1 = select_ln76_fu_3237_p3[12:0];

assign trunc_ln79_fu_3264_p1 = fh_reg_1111[12:0];

assign trunc_ln7_fu_1670_p4 = {{db_read_reg_3606[31:1]}};

assign trunc_ln81_fu_3328_p1 = fw_reg_1122[12:0];

assign trunc_ln92_fu_1690_p1 = F_read_reg_3586[30:0];

assign trunc_ln93_fu_1704_p1 = i_3_reg_733[2:0];

assign trunc_ln97_2_fu_1818_p1 = select_ln97_1_fu_1811_p3[2:0];

assign trunc_ln97_fu_1736_p1 = FW_read_reg_3524[30:0];

assign trunc_ln98_1_fu_1884_p1 = add_ln98_fu_1865_p2[30:0];

assign trunc_ln99_fu_1918_p1 = select_ln98_fu_1876_p3[30:0];

assign trunc_ln_fu_1988_p4 = {{empty_77_fu_1983_p2[31:1]}};

assign x_Addr_A = x_Addr_A_orig << 32'd1;

assign x_Clk_A = ap_clk;

assign x_Din_A = 16'd0;

assign x_Rst_A = ap_rst_n_inv;

assign x_WEN_A = 2'd0;

assign y_Addr_A = y_Addr_A_orig << 32'd1;

assign y_Clk_A = ap_clk;

assign y_Rst_A = ap_rst_n_inv;

assign zext_ln101_1_fu_1834_p1 = tmp_7_fu_1826_p3;

assign zext_ln101_2_fu_1900_p1 = select_ln98_2_fu_1892_p3;

assign zext_ln101_3_fu_1956_p1 = add_ln101_1_reg_4063;

assign zext_ln101_4_fu_1966_p1 = tmp_3_fu_1959_p3;

assign zext_ln101_5_fu_2011_p1 = trunc_ln101_2_fu_2008_p1;

assign zext_ln101_6_fu_2067_p1 = add_ln101_5_reg_4119_pp3_iter1_reg;

assign zext_ln101_fu_1822_p1 = trunc_ln97_2_fu_1818_p1;

assign zext_ln107_fu_2182_p1 = trunc_ln107_2_reg_4213;

assign zext_ln108_fu_2206_p1 = add_ln1118_1_fu_2200_p2;

assign zext_ln1116_fu_3337_p1 = add_ln1116_fu_3332_p2;

assign zext_ln1118_1_fu_2186_p1 = trunc_ln107_2_reg_4213;

assign zext_ln1118_2_fu_2196_p1 = tmp_s_fu_2189_p3;

assign zext_ln1118_3_fu_2392_p1 = trunc_ln110_2_reg_4327_pp4_iter1_reg;

assign zext_ln1118_4_fu_2400_p1 = add_ln1118_2_fu_2395_p2;

assign zext_ln1118_5_fu_2412_p1 = tmp_10_fu_2404_p3;

assign zext_ln1118_6_fu_2439_p1 = select_ln111_1_reg_4374;

assign zext_ln1118_7_fu_2498_p1 = add_ln1118_6_reg_4414;

assign zext_ln1118_fu_2507_p1 = add_ln1118_fu_2503_p2;

assign zext_ln125_fu_2699_p1 = add_ln128_fu_2693_p2;

assign zext_ln128_1_fu_2689_p1 = tmp_5_fu_2682_p3;

assign zext_ln128_2_fu_2730_p1 = select_ln125_2_fu_2723_p3;

assign zext_ln128_3_fu_2777_p1 = add_ln128_1_reg_4537;

assign zext_ln128_4_fu_2787_p1 = tmp_6_fu_2780_p3;

assign zext_ln128_5_fu_2832_p1 = trunc_ln128_2_fu_2829_p1;

assign zext_ln128_6_fu_2888_p1 = add_ln128_5_fu_2883_p2;

assign zext_ln128_fu_2679_p1 = trunc_ln124_reg_4508;

assign zext_ln136_fu_2926_p1 = trunc_ln136_fu_2922_p1;

assign zext_ln50_fu_1409_p1 = add_ln53_fu_1403_p2;

assign zext_ln53_1_fu_1399_p1 = tmp_2_fu_1392_p3;

assign zext_ln53_2_fu_1471_p1 = select_ln50_2_fu_1463_p3;

assign zext_ln53_3_fu_1518_p1 = add_ln53_1_reg_3797;

assign zext_ln53_4_fu_1528_p1 = tmp_1_fu_1521_p3;

assign zext_ln53_5_fu_1573_p1 = trunc_ln53_2_fu_1570_p1;

assign zext_ln53_6_fu_1629_p1 = add_ln53_5_reg_3849_pp0_iter1_reg;

assign zext_ln53_fu_1389_p1 = trunc_ln49_2_reg_3769;

assign zext_ln63_fu_1666_p1 = trunc_ln63_reg_3878_pp1_iter1_reg;

assign zext_ln71_fu_2947_p1 = trunc_ln71_fu_2943_p1;

assign zext_ln74_fu_3224_p1 = select_ln74_2_reg_4764;

assign zext_ln78_fu_3249_p1 = $unsigned(grp_fu_3487_p3);

assign zext_ln93_fu_1708_p1 = trunc_ln93_reg_3912_pp2_iter1_reg;

assign zext_ln98_fu_1844_p1 = add_ln101_fu_1838_p2;

always @ (posedge ap_clk) begin
    cast95_reg_3927[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln108_reg_4238[6] <= 1'b0;
end

endmodule //conv_combined
