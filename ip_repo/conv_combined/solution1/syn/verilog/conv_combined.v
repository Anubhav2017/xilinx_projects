// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv_combined_conv_combined,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=12264,HLS_SYN_LUT=10737,HLS_VERSION=2020_2}" *)

module conv_combined (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        x_Addr_A,
        x_EN_A,
        x_WEN_A,
        x_Din_A,
        x_Dout_A,
        x_Clk_A,
        x_Rst_A,
        dx_Addr_A,
        dx_EN_A,
        dx_WEN_A,
        dx_Din_A,
        dx_Dout_A,
        dx_Clk_A,
        dx_Rst_A,
        y_Addr_A,
        y_EN_A,
        y_WEN_A,
        y_Din_A,
        y_Dout_A,
        y_Clk_A,
        y_Rst_A,
        dy_Addr_A,
        dy_EN_A,
        dy_WEN_A,
        dy_Din_A,
        dy_Dout_A,
        dy_Clk_A,
        dy_Rst_A,
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 121'd1;
parameter    ap_ST_fsm_state2 = 121'd2;
parameter    ap_ST_fsm_state3 = 121'd4;
parameter    ap_ST_fsm_state4 = 121'd8;
parameter    ap_ST_fsm_state5 = 121'd16;
parameter    ap_ST_fsm_state6 = 121'd32;
parameter    ap_ST_fsm_state7 = 121'd64;
parameter    ap_ST_fsm_state8 = 121'd128;
parameter    ap_ST_fsm_state9 = 121'd256;
parameter    ap_ST_fsm_state10 = 121'd512;
parameter    ap_ST_fsm_state11 = 121'd1024;
parameter    ap_ST_fsm_state12 = 121'd2048;
parameter    ap_ST_fsm_state13 = 121'd4096;
parameter    ap_ST_fsm_state14 = 121'd8192;
parameter    ap_ST_fsm_state15 = 121'd16384;
parameter    ap_ST_fsm_state16 = 121'd32768;
parameter    ap_ST_fsm_state17 = 121'd65536;
parameter    ap_ST_fsm_state18 = 121'd131072;
parameter    ap_ST_fsm_state19 = 121'd262144;
parameter    ap_ST_fsm_state20 = 121'd524288;
parameter    ap_ST_fsm_state21 = 121'd1048576;
parameter    ap_ST_fsm_state22 = 121'd2097152;
parameter    ap_ST_fsm_state23 = 121'd4194304;
parameter    ap_ST_fsm_state24 = 121'd8388608;
parameter    ap_ST_fsm_state25 = 121'd16777216;
parameter    ap_ST_fsm_state26 = 121'd33554432;
parameter    ap_ST_fsm_state27 = 121'd67108864;
parameter    ap_ST_fsm_pp0_stage0 = 121'd134217728;
parameter    ap_ST_fsm_state31 = 121'd268435456;
parameter    ap_ST_fsm_state32 = 121'd536870912;
parameter    ap_ST_fsm_state33 = 121'd1073741824;
parameter    ap_ST_fsm_state34 = 121'd2147483648;
parameter    ap_ST_fsm_state35 = 121'd4294967296;
parameter    ap_ST_fsm_state36 = 121'd8589934592;
parameter    ap_ST_fsm_state37 = 121'd17179869184;
parameter    ap_ST_fsm_pp1_stage0 = 121'd34359738368;
parameter    ap_ST_fsm_state40 = 121'd68719476736;
parameter    ap_ST_fsm_state41 = 121'd137438953472;
parameter    ap_ST_fsm_state42 = 121'd274877906944;
parameter    ap_ST_fsm_state43 = 121'd549755813888;
parameter    ap_ST_fsm_state44 = 121'd1099511627776;
parameter    ap_ST_fsm_state45 = 121'd2199023255552;
parameter    ap_ST_fsm_state46 = 121'd4398046511104;
parameter    ap_ST_fsm_pp2_stage0 = 121'd8796093022208;
parameter    ap_ST_fsm_state49 = 121'd17592186044416;
parameter    ap_ST_fsm_state50 = 121'd35184372088832;
parameter    ap_ST_fsm_state51 = 121'd70368744177664;
parameter    ap_ST_fsm_state52 = 121'd140737488355328;
parameter    ap_ST_fsm_state53 = 121'd281474976710656;
parameter    ap_ST_fsm_state54 = 121'd562949953421312;
parameter    ap_ST_fsm_state55 = 121'd1125899906842624;
parameter    ap_ST_fsm_state56 = 121'd2251799813685248;
parameter    ap_ST_fsm_state57 = 121'd4503599627370496;
parameter    ap_ST_fsm_state58 = 121'd9007199254740992;
parameter    ap_ST_fsm_state59 = 121'd18014398509481984;
parameter    ap_ST_fsm_state60 = 121'd36028797018963968;
parameter    ap_ST_fsm_state61 = 121'd72057594037927936;
parameter    ap_ST_fsm_state62 = 121'd144115188075855872;
parameter    ap_ST_fsm_state63 = 121'd288230376151711744;
parameter    ap_ST_fsm_state64 = 121'd576460752303423488;
parameter    ap_ST_fsm_state65 = 121'd1152921504606846976;
parameter    ap_ST_fsm_state66 = 121'd2305843009213693952;
parameter    ap_ST_fsm_state67 = 121'd4611686018427387904;
parameter    ap_ST_fsm_state68 = 121'd9223372036854775808;
parameter    ap_ST_fsm_state69 = 121'd18446744073709551616;
parameter    ap_ST_fsm_pp3_stage0 = 121'd36893488147419103232;
parameter    ap_ST_fsm_state73 = 121'd73786976294838206464;
parameter    ap_ST_fsm_state74 = 121'd147573952589676412928;
parameter    ap_ST_fsm_state75 = 121'd295147905179352825856;
parameter    ap_ST_fsm_state76 = 121'd590295810358705651712;
parameter    ap_ST_fsm_state77 = 121'd1180591620717411303424;
parameter    ap_ST_fsm_state78 = 121'd2361183241434822606848;
parameter    ap_ST_fsm_state79 = 121'd4722366482869645213696;
parameter    ap_ST_fsm_state80 = 121'd9444732965739290427392;
parameter    ap_ST_fsm_state81 = 121'd18889465931478580854784;
parameter    ap_ST_fsm_state82 = 121'd37778931862957161709568;
parameter    ap_ST_fsm_state83 = 121'd75557863725914323419136;
parameter    ap_ST_fsm_state84 = 121'd151115727451828646838272;
parameter    ap_ST_fsm_state85 = 121'd302231454903657293676544;
parameter    ap_ST_fsm_state86 = 121'd604462909807314587353088;
parameter    ap_ST_fsm_pp4_stage0 = 121'd1208925819614629174706176;
parameter    ap_ST_fsm_pp4_stage1 = 121'd2417851639229258349412352;
parameter    ap_ST_fsm_state100 = 121'd4835703278458516698824704;
parameter    ap_ST_fsm_state101 = 121'd9671406556917033397649408;
parameter    ap_ST_fsm_state102 = 121'd19342813113834066795298816;
parameter    ap_ST_fsm_state103 = 121'd38685626227668133590597632;
parameter    ap_ST_fsm_state104 = 121'd77371252455336267181195264;
parameter    ap_ST_fsm_state105 = 121'd154742504910672534362390528;
parameter    ap_ST_fsm_state106 = 121'd309485009821345068724781056;
parameter    ap_ST_fsm_state107 = 121'd618970019642690137449562112;
parameter    ap_ST_fsm_state108 = 121'd1237940039285380274899124224;
parameter    ap_ST_fsm_pp5_stage0 = 121'd2475880078570760549798248448;
parameter    ap_ST_fsm_state112 = 121'd4951760157141521099596496896;
parameter    ap_ST_fsm_state113 = 121'd9903520314283042199192993792;
parameter    ap_ST_fsm_state114 = 121'd19807040628566084398385987584;
parameter    ap_ST_fsm_state115 = 121'd39614081257132168796771975168;
parameter    ap_ST_fsm_state116 = 121'd79228162514264337593543950336;
parameter    ap_ST_fsm_pp6_stage0 = 121'd158456325028528675187087900672;
parameter    ap_ST_fsm_state119 = 121'd316912650057057350374175801344;
parameter    ap_ST_fsm_state120 = 121'd633825300114114700748351602688;
parameter    ap_ST_fsm_state121 = 121'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state122 = 121'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state123 = 121'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state124 = 121'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state125 = 121'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state126 = 121'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state127 = 121'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state128 = 121'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state129 = 121'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state130 = 121'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state131 = 121'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state132 = 121'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state133 = 121'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state134 = 121'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state135 = 121'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state136 = 121'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state137 = 121'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state138 = 121'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_pp7_stage0 = 121'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state142 = 121'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state143 = 121'd1329227995784915872903807060280344576;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
output  [31:0] x_Addr_A;
output   x_EN_A;
output  [1:0] x_WEN_A;
output  [15:0] x_Din_A;
input  [15:0] x_Dout_A;
output   x_Clk_A;
output   x_Rst_A;
output  [31:0] dx_Addr_A;
output   dx_EN_A;
output  [1:0] dx_WEN_A;
output  [15:0] dx_Din_A;
input  [15:0] dx_Dout_A;
output   dx_Clk_A;
output   dx_Rst_A;
output  [31:0] y_Addr_A;
output   y_EN_A;
output  [1:0] y_WEN_A;
output  [15:0] y_Din_A;
input  [15:0] y_Dout_A;
output   y_Clk_A;
output   y_Rst_A;
output  [31:0] dy_Addr_A;
output   dy_EN_A;
output  [1:0] dy_WEN_A;
output  [15:0] dy_Din_A;
input  [15:0] dy_Dout_A;
output   dy_Clk_A;
output   dy_Rst_A;
input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1:0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
output   interrupt;

reg x_EN_A;
reg dx_EN_A;
reg[1:0] dx_WEN_A;
reg y_EN_A;
reg[1:0] y_WEN_A;
reg[15:0] y_Din_A;
reg dy_EN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [120:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] wt;
wire   [31:0] dwt;
wire   [31:0] b;
wire   [31:0] db;
wire   [31:0] F;
wire   [31:0] C;
wire   [31:0] H;
wire   [31:0] W;
wire   [31:0] FH;
wire   [31:0] FW;
wire    fwprop;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state21;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln48_reg_3784;
wire    ap_CS_fsm_state11;
reg   [0:0] icmp_ln45_1_reg_3649;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln58_reg_3813;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln61_reg_3865;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln90_reg_4119;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state108;
reg    gmem_blk_n_W;
reg    ap_enable_reg_pp5_iter2;
wire    ap_block_pp5_stage0;
reg   [0:0] icmp_ln117_reg_4633;
reg   [0:0] icmp_ln117_reg_4633_pp5_iter1_reg;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state116;
reg   [0:0] cmp147403_reg_3959;
wire    ap_CS_fsm_state102;
reg   [0:0] icmp_ln114_reg_4528;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter1;
wire    ap_block_pp6_stage0;
reg   [0:0] icmp_ln125_reg_4662;
wire    ap_CS_fsm_state123;
reg   [0:0] icmp_ln45_reg_3578;
reg   [0:0] fwprop_read_reg_3454;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg   [31:0] gmem_AWADDR;
reg   [31:0] gmem_AWLEN;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg   [15:0] gmem_WDATA;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
reg   [31:0] gmem_ARLEN;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [15:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [30:0] l_reg_600;
reg   [30:0] i_1_reg_611;
reg   [30:0] i_2_reg_622;
reg   [30:0] l_1_reg_764;
reg   [95:0] indvar_flatten134_reg_830;
reg   [31:0] c_1_reg_842;
reg   [63:0] indvar_flatten103_reg_854;
reg   [31:0] fh_1_reg_865;
reg   [31:0] fw_1_reg_876;
reg   [30:0] l_2_reg_944;
reg   [30:0] i_5_reg_955;
reg   [30:0] fw_reg_1055;
reg   [15:0] empty_62_reg_1066;
wire   [31:0] grp_fu_1115_p2;
reg   [31:0] reg_1134;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state77;
(* use_dsp48 = "no" *) wire  signed [9:0] grp_fu_1120_p2;
reg  signed [9:0] reg_1138;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state130;
reg   [31:0] FW_read_reg_3458;
reg   [31:0] FH_read_reg_3479;
reg   [31:0] W_read_reg_3493;
reg   [31:0] H_read_reg_3502;
reg   [31:0] C_read_reg_3507;
reg   [31:0] F_read_reg_3517;
reg   [31:0] db_read_reg_3528;
reg   [31:0] b_read_reg_3533;
reg   [31:0] dwt_read_reg_3538;
reg   [31:0] wt_read_reg_3544;
wire   [9:0] empty_fu_1142_p1;
reg   [9:0] empty_reg_3549;
wire  signed [9:0] empty_43_fu_1146_p1;
reg  signed [9:0] empty_43_reg_3554;
(* use_dsp48 = "no" *) wire  signed [9:0] outH_fu_1154_p2;
reg  signed [9:0] outH_reg_3562;
wire    ap_CS_fsm_state2;
wire   [9:0] trunc_ln42_fu_1164_p1;
reg   [9:0] trunc_ln42_reg_3568;
wire   [31:0] outW_fu_1168_p2;
reg   [31:0] outW_reg_3573;
wire   [0:0] icmp_ln45_fu_1174_p2;
wire   [63:0] grp_fu_1185_p2;
reg   [63:0] bound_reg_3592;
wire    ap_CS_fsm_state3;
wire   [30:0] empty_44_fu_1191_p1;
reg   [30:0] empty_44_reg_3598;
wire    ap_CS_fsm_state4;
wire   [0:0] grp_fu_1091_p2;
reg   [0:0] cmp57433_reg_3614;
wire    ap_CS_fsm_state8;
wire  signed [30:0] trunc_ln45_fu_1207_p1;
reg  signed [30:0] trunc_ln45_reg_3618;
wire  signed [30:0] trunc_ln45_1_fu_1210_p1;
reg  signed [30:0] trunc_ln45_1_reg_3623;
wire  signed [30:0] empty_45_fu_1213_p1;
reg  signed [30:0] empty_45_reg_3629;
wire   [94:0] grp_fu_1201_p2;
reg   [94:0] bound4_reg_3634;
wire   [0:0] grp_fu_1096_p2;
reg   [0:0] icmp_ln47_reg_3639;
wire   [94:0] add_ln45_1_fu_1216_p2;
reg   [94:0] add_ln45_1_reg_3644;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln45_1_fu_1227_p2;
wire   [30:0] grp_fu_1222_p2;
reg   [30:0] empty_46_reg_3653;
wire    ap_CS_fsm_state10;
wire   [30:0] tmp_fu_1236_p2;
reg   [30:0] tmp_reg_3659;
wire   [3:0] trunc_ln49_fu_1241_p1;
reg   [3:0] trunc_ln49_reg_3664;
wire  signed [30:0] add_ln45_fu_1245_p2;
reg  signed [30:0] add_ln45_reg_3669;
wire   [0:0] icmp_ln46_fu_1251_p2;
reg   [0:0] icmp_ln46_reg_3674;
wire   [30:0] select_ln45_2_fu_1256_p3;
reg   [30:0] select_ln45_2_reg_3685;
wire   [1:0] trunc_ln45_2_fu_1264_p1;
reg   [1:0] trunc_ln45_2_reg_3690;
wire   [30:0] grp_fu_1288_p2;
reg   [30:0] p_mid1_reg_3720;
wire    ap_CS_fsm_state13;
wire   [0:0] select_ln45_5_fu_1344_p3;
reg   [0:0] select_ln45_5_reg_3726;
wire    ap_CS_fsm_state14;
wire  signed [30:0] select_ln46_1_fu_1366_p3;
reg  signed [30:0] select_ln46_1_reg_3731;
wire  signed [5:0] add_ln49_fu_1390_p2;
reg  signed [5:0] add_ln49_reg_3736;
wire   [31:0] select_ln46_3_fu_1396_p3;
reg   [31:0] select_ln46_3_reg_3742;
wire   [30:0] grp_fu_1404_p2;
reg   [30:0] mul_ln46_reg_3747;
wire    ap_CS_fsm_state16;
wire   [31:0] select_ln46_fu_1412_p3;
reg   [31:0] select_ln46_reg_3752;
wire    ap_CS_fsm_state17;
wire  signed [30:0] tmp11_fu_1424_p2;
reg  signed [30:0] tmp11_reg_3758;
wire   [30:0] grp_fu_1429_p2;
reg   [30:0] empty_49_reg_3763;
wire    ap_CS_fsm_state19;
reg   [31:0] gmem_addr_2_reg_3768;
wire    ap_CS_fsm_state20;
wire   [7:0] add_ln49_3_fu_1514_p2;
reg   [7:0] add_ln49_3_reg_3774;
wire   [30:0] add_ln48_fu_1520_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state28_pp0_stage0_iter0;
reg    ap_block_state29_pp0_stage0_iter1;
wire    ap_block_state30_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln48_fu_1530_p2;
reg   [0:0] icmp_ln48_reg_3784_pp0_iter1_reg;
wire   [7:0] add_ln49_4_fu_1539_p2;
reg   [7:0] add_ln49_4_reg_3788;
reg   [7:0] add_ln49_4_reg_3788_pp0_iter1_reg;
reg   [15:0] gmem_addr_2_read_reg_3793;
wire   [31:0] add_ln47_fu_1548_p2;
wire    ap_CS_fsm_state31;
wire   [63:0] select_ln46_4_fu_1559_p3;
wire   [30:0] add_ln58_fu_1566_p2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state38_pp1_stage0_iter0;
reg    ap_block_state39_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln58_fu_1572_p2;
wire   [1:0] trunc_ln59_fu_1577_p1;
reg   [1:0] trunc_ln59_reg_3817;
reg   [15:0] bbuf_V_2_load_reg_3821;
reg   [15:0] bbuf_V_2_1_load_reg_3826;
reg   [15:0] bbuf_V_2_3_load_reg_3831;
wire   [30:0] add_ln61_fu_1616_p2;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state47_pp2_stage0_iter0;
reg    ap_block_state48_pp2_stage0_iter1;
reg    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln61_fu_1622_p2;
wire   [1:0] trunc_ln62_fu_1627_p1;
reg   [1:0] trunc_ln62_reg_3869;
reg   [15:0] dbbuf_V_2_1_load_reg_3873;
reg   [15:0] dbbuf_V_2_3_load_reg_3878;
reg   [15:0] dbbuf_V_2_5_load_reg_3883;
wire   [63:0] cast60_fu_1658_p1;
reg   [63:0] cast60_reg_3893;
wire   [31:0] sub_ln68_fu_1672_p2;
reg   [31:0] sub_ln68_reg_3899;
wire   [0:0] icmp_ln71_fu_1677_p2;
reg   [0:0] icmp_ln71_reg_3905;
wire   [63:0] grp_fu_1661_p2;
reg   [63:0] bound61_reg_3910;
wire    ap_CS_fsm_state50;
wire   [30:0] empty_65_fu_1682_p1;
reg   [30:0] empty_65_reg_3917;
wire    ap_CS_fsm_state51;
wire  signed [30:0] trunc_ln87_fu_1698_p1;
reg  signed [30:0] trunc_ln87_reg_3933;
wire    ap_CS_fsm_state52;
wire  signed [30:0] grp_fu_1704_p2;
reg  signed [30:0] empty_66_reg_3945;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
wire  signed [30:0] grp_fu_1713_p2;
reg  signed [30:0] empty_67_reg_3963;
wire   [94:0] grp_fu_1692_p2;
reg   [94:0] bound72_reg_3969;
reg   [0:0] icmp_ln89_reg_3975;
wire    ap_CS_fsm_state56;
wire   [3:0] trunc_ln91_fu_1727_p1;
reg   [3:0] trunc_ln91_reg_3986;
wire   [94:0] add_ln87_1_fu_1731_p2;
reg   [94:0] add_ln87_1_reg_3991;
wire    ap_CS_fsm_state57;
wire   [30:0] grp_fu_1722_p2;
reg   [30:0] empty_68_reg_3996;
wire   [0:0] icmp_ln88_fu_1742_p2;
reg   [0:0] icmp_ln88_reg_4004;
wire   [0:0] icmp_ln87_fu_1737_p2;
wire   [0:0] cmp176388_fu_1747_p2;
reg   [0:0] cmp176388_reg_4036;
wire  signed [30:0] select_ln87_1_fu_1788_p3;
reg  signed [30:0] select_ln87_1_reg_4045;
wire    ap_CS_fsm_state58;
wire   [0:0] select_ln87_4_fu_1836_p3;
reg   [0:0] select_ln87_4_reg_4051;
wire   [31:0] select_ln88_fu_1853_p3;
reg   [31:0] select_ln88_reg_4056;
wire  signed [30:0] trunc_ln88_1_fu_1861_p1;
reg  signed [30:0] trunc_ln88_1_reg_4062;
wire  signed [5:0] add_ln91_fu_1881_p2;
reg  signed [5:0] add_ln91_reg_4067;
wire   [31:0] select_ln88_3_fu_1887_p3;
reg   [31:0] select_ln88_3_reg_4073;
wire  signed [30:0] trunc_ln89_fu_1895_p1;
reg  signed [30:0] trunc_ln89_reg_4078;
wire   [30:0] grp_fu_1899_p2;
reg   [30:0] mul_ln87_reg_4083;
wire    ap_CS_fsm_state60;
wire   [30:0] grp_fu_1903_p2;
reg   [30:0] p_mid165_reg_4088;
wire   [30:0] grp_fu_1907_p2;
reg   [30:0] empty_71_reg_4093;
wire   [30:0] empty_72_fu_1927_p2;
reg   [30:0] empty_72_reg_4098;
wire    ap_CS_fsm_state61;
reg   [31:0] gmem_addr_4_reg_4103;
wire    ap_CS_fsm_state62;
wire   [7:0] add_ln91_3_fu_2014_p2;
reg   [7:0] add_ln91_3_reg_4109;
wire   [30:0] add_ln90_fu_2020_p2;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state70_pp3_stage0_iter0;
reg    ap_block_state71_pp3_stage0_iter1;
wire    ap_block_state72_pp3_stage0_iter2;
reg    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln90_fu_2030_p2;
reg   [0:0] icmp_ln90_reg_4119_pp3_iter1_reg;
wire   [7:0] add_ln91_4_fu_2039_p2;
reg   [7:0] add_ln91_4_reg_4123;
reg   [7:0] add_ln91_4_reg_4123_pp3_iter1_reg;
reg   [15:0] gmem_addr_4_read_reg_4128;
wire   [31:0] add_ln89_fu_2048_p2;
wire    ap_CS_fsm_state73;
wire   [63:0] select_ln88_4_fu_2059_p3;
wire   [63:0] grp_fu_1755_p2;
reg   [63:0] bound95_reg_4143;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state78;
wire  signed [9:0] trunc_ln97_fu_2091_p1;
reg  signed [9:0] trunc_ln97_reg_4169;
wire   [31:0] sub_ln97_fu_2099_p2;
reg   [31:0] sub_ln97_reg_4174;
wire   [95:0] grp_fu_2072_p2;
reg   [95:0] bound108_reg_4179;
wire   [62:0] grp_fu_2085_p2;
reg   [62:0] bound139_reg_4184;
wire   [0:0] icmp_ln102_fu_2104_p2;
reg   [0:0] icmp_ln102_reg_4189;
wire   [62:0] add_ln97_4_fu_2109_p2;
reg   [62:0] add_ln97_4_reg_4194;
wire    ap_CS_fsm_state80;
wire   [0:0] icmp_ln98_fu_2142_p2;
reg   [0:0] icmp_ln98_reg_4202;
wire   [0:0] icmp_ln97_fu_2131_p2;
wire   [30:0] select_ln97_1_fu_2148_p3;
reg   [30:0] select_ln97_1_reg_4207;
wire   [1:0] select_ln97_2_fu_2164_p3;
reg   [1:0] select_ln97_2_reg_4217;
wire   [0:0] select_ln97_3_fu_2178_p3;
reg   [0:0] select_ln97_3_reg_4224;
wire   [0:0] select_ln97_4_fu_2192_p3;
reg   [0:0] select_ln97_4_reg_4230;
wire   [31:0] select_ln97_fu_2200_p3;
reg   [31:0] select_ln97_reg_4237;
wire    ap_CS_fsm_state82;
wire   [9:0] trunc_ln98_fu_2207_p1;
reg   [9:0] trunc_ln98_reg_4243;
wire  signed [5:0] sext_ln703_fu_2231_p1;
reg  signed [5:0] sext_ln703_reg_4250;
wire    ap_CS_fsm_state83;
wire   [9:0] empty_81_fu_2235_p2;
reg   [9:0] empty_81_reg_4255;
wire   [15:0] tmp_2_fu_2240_p5;
wire   [5:0] empty_75_fu_2251_p1;
reg   [5:0] empty_75_reg_4265;
wire   [31:0] add_ln99_fu_2254_p2;
reg   [31:0] add_ln99_reg_4272;
wire    ap_CS_fsm_state84;
wire   [9:0] trunc_ln99_fu_2265_p1;
reg   [9:0] trunc_ln99_reg_4280;
wire   [0:0] icmp_ln99_fu_2260_p2;
wire   [7:0] trunc_ln104_fu_2279_p1;
reg   [7:0] trunc_ln104_reg_4290;
wire   [31:0] add_ln98_fu_2343_p2;
reg  signed [15:0] r_V_reg_4300;
wire    ap_CS_fsm_state86;
wire  signed [28:0] sext_ln1118_1_fu_2348_p1;
reg  signed [28:0] sext_ln1118_1_reg_4305;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state87_pp4_stage0_iter0;
wire    ap_block_state89_pp4_stage0_iter1;
wire    ap_block_state91_pp4_stage0_iter2;
wire    ap_block_state93_pp4_stage0_iter3;
wire    ap_block_state95_pp4_stage0_iter4;
wire    ap_block_state97_pp4_stage0_iter5;
wire    ap_block_state99_pp4_stage0_iter6;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln100_fu_2356_p2;
reg   [0:0] icmp_ln100_reg_4316;
reg   [0:0] icmp_ln100_reg_4316_pp4_iter1_reg;
reg   [0:0] icmp_ln100_reg_4316_pp4_iter2_reg;
reg   [0:0] icmp_ln100_reg_4316_pp4_iter3_reg;
reg   [0:0] icmp_ln100_reg_4316_pp4_iter4_reg;
reg   [0:0] icmp_ln100_reg_4316_pp4_iter5_reg;
wire   [31:0] add_ln100_fu_2361_p2;
reg   [31:0] add_ln100_reg_4320;
wire   [95:0] add_ln100_1_fu_2371_p2;
reg   [95:0] add_ln100_1_reg_4330;
wire    ap_CS_fsm_pp4_stage1;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state88_pp4_stage1_iter0;
wire    ap_block_state90_pp4_stage1_iter1;
wire    ap_block_state92_pp4_stage1_iter2;
wire    ap_block_state94_pp4_stage1_iter3;
wire    ap_block_state96_pp4_stage1_iter4;
wire    ap_block_state98_pp4_stage1_iter5;
wire    ap_block_pp4_stage1_11001;
wire   [0:0] icmp_ln101_fu_2377_p2;
reg   [0:0] icmp_ln101_reg_4335;
wire   [31:0] select_ln100_1_fu_2382_p3;
reg   [31:0] select_ln100_1_reg_4347;
wire   [3:0] trunc_ln100_2_fu_2389_p1;
reg   [3:0] trunc_ln100_2_reg_4352;
wire   [63:0] add_ln101_2_fu_2393_p2;
reg   [63:0] add_ln101_2_reg_4357;
wire   [9:0] trunc_ln101_fu_2399_p1;
reg   [9:0] trunc_ln101_reg_4362;
wire   [5:0] trunc_ln727_fu_2403_p1;
reg   [5:0] trunc_ln727_reg_4367;
wire   [31:0] select_ln100_fu_2407_p3;
reg   [31:0] select_ln100_reg_4373;
wire  signed [5:0] add_ln1118_3_fu_2417_p2;
reg  signed [5:0] add_ln1118_3_reg_4378;
wire   [31:0] add_ln101_fu_2422_p2;
reg   [31:0] add_ln101_reg_4384;
wire   [5:0] trunc_ln727_1_fu_2428_p1;
reg   [5:0] trunc_ln727_1_reg_4390;
wire   [63:0] select_ln101_5_fu_2432_p3;
reg   [63:0] select_ln101_5_reg_4396;
reg    ap_enable_reg_pp4_iter1;
wire   [31:0] select_ln101_fu_2505_p3;
reg   [31:0] select_ln101_reg_4401;
wire   [7:0] trunc_ln727_2_fu_2539_p1;
reg   [7:0] trunc_ln727_2_reg_4406;
wire   [5:0] trunc_ln727_3_fu_2543_p1;
reg   [5:0] trunc_ln727_3_reg_4411;
wire   [7:0] add_ln1118_7_fu_2585_p2;
reg   [7:0] add_ln1118_7_reg_4416;
wire   [31:0] select_ln101_4_fu_2599_p3;
reg   [31:0] select_ln101_4_reg_4426;
wire   [9:0] trunc_ln103_fu_2605_p1;
reg   [9:0] trunc_ln103_reg_4431;
reg   [9:0] trunc_ln103_reg_4431_pp4_iter2_reg;
wire   [7:0] trunc_ln727_4_fu_2609_p1;
reg   [7:0] trunc_ln727_4_reg_4436;
wire   [7:0] add_ln727_2_fu_2625_p2;
reg   [7:0] add_ln727_2_reg_4442;
reg   [7:0] add_ln727_2_reg_4442_pp4_iter3_reg;
reg   [7:0] add_ln727_2_reg_4442_pp4_iter4_reg;
wire   [31:0] add_ln102_fu_2644_p2;
reg   [31:0] add_ln102_reg_4452;
reg    ap_enable_reg_pp4_iter2;
wire   [15:0] wbuf_V_q0;
reg  signed [15:0] wbuf_V_load_reg_4457;
reg   [9:0] dx_addr_reg_4472;
reg   [9:0] dx_addr_reg_4472_pp4_iter4_reg;
wire   [0:0] addr_cmp_fu_2665_p2;
reg   [0:0] addr_cmp_reg_4477;
reg  signed [15:0] x_load_1_reg_4482;
reg    ap_enable_reg_pp4_iter4;
reg   [7:0] dwbuf_V_addr_2_reg_4497;
wire   [15:0] add_ln703_fu_2734_p2;
wire    ap_CS_fsm_state100;
wire   [94:0] add_ln114_1_fu_2739_p2;
reg   [94:0] add_ln114_1_reg_4513;
wire    ap_CS_fsm_state101;
wire   [3:0] trunc_ln118_fu_2754_p1;
reg   [3:0] trunc_ln118_reg_4523;
wire   [0:0] icmp_ln114_fu_2758_p2;
wire   [30:0] grp_fu_2749_p2;
reg   [30:0] empty_82_reg_4532;
wire   [0:0] icmp_ln115_fu_2769_p2;
reg   [0:0] icmp_ln115_reg_4537;
wire  signed [30:0] select_ln114_1_fu_2774_p3;
reg  signed [30:0] select_ln114_1_reg_4545;
reg    ap_block_state102_io;
wire   [1:0] trunc_ln114_fu_2782_p1;
reg   [1:0] trunc_ln114_reg_4551;
wire   [0:0] select_ln114_4_fu_2791_p3;
reg   [0:0] select_ln114_4_reg_4557;
wire   [31:0] select_ln115_fu_2804_p3;
reg   [31:0] select_ln115_reg_4564;
wire  signed [30:0] trunc_ln116_fu_2812_p1;
reg  signed [30:0] trunc_ln116_reg_4570;
wire  signed [30:0] trunc_ln115_1_fu_2874_p1;
reg  signed [30:0] trunc_ln115_1_reg_4581;
wire    ap_CS_fsm_state103;
wire  signed [5:0] add_ln118_fu_2893_p2;
reg  signed [5:0] add_ln118_reg_4586;
wire   [31:0] select_ln115_3_fu_2899_p3;
reg   [31:0] select_ln115_3_reg_4592;
wire   [30:0] grp_fu_2834_p2;
reg   [30:0] mul_ln114_reg_4597;
wire    ap_CS_fsm_state104;
wire   [30:0] grp_fu_2906_p2;
reg   [30:0] empty_86_reg_4602;
wire   [30:0] grp_fu_2910_p2;
reg   [30:0] p_mid1154_reg_4607;
wire    ap_CS_fsm_state105;
wire   [30:0] empty_87_fu_2930_p2;
reg   [30:0] empty_87_reg_4612;
wire    ap_CS_fsm_state106;
reg   [31:0] gmem_addr_5_reg_4617;
wire    ap_CS_fsm_state107;
wire   [7:0] add_ln118_3_fu_3017_p2;
reg   [7:0] add_ln118_3_reg_4623;
wire   [30:0] add_ln117_fu_3023_p2;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state109_pp5_stage0_iter0;
wire    ap_block_state110_pp5_stage0_iter1;
wire    ap_block_state111_pp5_stage0_iter2;
reg    ap_block_state111_io;
reg    ap_block_pp5_stage0_11001;
wire   [0:0] icmp_ln117_fu_3033_p2;
wire   [15:0] dwbuf_V_q1;
reg   [15:0] dwbuf_V_load_reg_4642;
reg    ap_enable_reg_pp5_iter1;
wire   [31:0] add_ln116_fu_3052_p2;
wire   [63:0] select_ln115_4_fu_3063_p3;
wire   [30:0] add_ln125_fu_3070_p2;
reg    ap_enable_reg_pp6_iter0;
wire    ap_block_state117_pp6_stage0_iter0;
wire    ap_block_state118_pp6_stage0_iter1;
reg    ap_block_state118_io;
reg    ap_block_pp6_stage0_11001;
wire   [0:0] icmp_ln125_fu_3076_p2;
wire   [15:0] tmp_3_fu_3085_p5;
reg   [15:0] tmp_3_reg_4666;
wire    ap_CS_fsm_state124;
wire   [63:0] grp_fu_3104_p2;
reg   [63:0] bound26_reg_4681;
wire    ap_CS_fsm_state125;
wire    ap_CS_fsm_state126;
reg   [0:0] cmp106321_reg_4697;
wire  signed [9:0] trunc_ln68_fu_3122_p1;
reg  signed [9:0] trunc_ln68_reg_4701;
wire   [30:0] trunc_ln68_1_fu_3125_p1;
reg   [30:0] trunc_ln68_1_reg_4706;
wire   [95:0] grp_fu_3116_p2;
reg   [95:0] bound40_reg_4711;
wire   [30:0] add_ln68_2_fu_3128_p2;
reg   [30:0] add_ln68_2_reg_4716;
wire    ap_CS_fsm_state131;
wire   [9:0] empty_57_fu_3147_p2;
reg   [9:0] empty_57_reg_4724;
wire   [0:0] icmp_ln68_fu_3134_p2;
wire   [15:0] tmp_1_fu_3152_p5;
reg   [15:0] tmp_1_reg_4731;
wire   [95:0] add_ln69_1_fu_3164_p2;
reg   [95:0] add_ln69_1_reg_4737;
wire    ap_CS_fsm_state132;
wire   [9:0] trunc_ln70_fu_3170_p1;
reg   [9:0] trunc_ln70_reg_4742;
wire   [9:0] empty_58_fu_3174_p2;
reg   [9:0] empty_58_reg_4747;
wire   [0:0] icmp_ln70_fu_3190_p2;
reg   [0:0] icmp_ln70_reg_4755;
wire   [0:0] icmp_ln69_fu_3179_p2;
wire   [31:0] select_ln69_1_fu_3203_p3;
reg   [31:0] select_ln69_1_reg_4763;
wire  signed [9:0] trunc_ln69_fu_3211_p1;
reg  signed [9:0] trunc_ln69_reg_4768;
wire   [0:0] select_ln69_4_fu_3220_p3;
reg   [0:0] select_ln69_4_reg_4773;
wire   [9:0] trunc_ln70_1_fu_3233_p1;
reg   [9:0] trunc_ln70_1_reg_4780;
wire   [31:0] select_ln70_3_fu_3237_p3;
reg   [31:0] select_ln70_3_reg_4786;
wire   [9:0] select_ln70_1_fu_3256_p3;
reg   [9:0] select_ln70_1_reg_4791;
wire    ap_CS_fsm_state133;
wire   [31:0] select_ln70_fu_3277_p3;
reg   [31:0] select_ln70_reg_4801;
wire    ap_CS_fsm_state135;
wire   [9:0] trunc_ln71_fu_3285_p1;
reg   [9:0] trunc_ln71_reg_4806;
wire   [9:0] mul_ln69_fu_3289_p2;
reg   [9:0] mul_ln69_reg_4812;
wire    ap_CS_fsm_state136;
reg   [9:0] y_addr_reg_4817;
wire   [31:0] add_ln73_fu_3297_p2;
reg   [31:0] add_ln73_reg_4822;
wire    ap_CS_fsm_state137;
wire  signed [9:0] empty_60_fu_3317_p2;
reg  signed [9:0] empty_60_reg_4830;
wire   [0:0] icmp_ln73_fu_3303_p2;
wire   [31:0] add_ln71_fu_3322_p2;
wire   [63:0] select_ln70_4_fu_3333_p3;
wire   [9:0] add_ln75_fu_3344_p2;
reg   [9:0] add_ln75_reg_4845;
wire    ap_CS_fsm_state138;
wire   [30:0] add_ln74_fu_3349_p2;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter0;
wire    ap_block_state139_pp7_stage0_iter0;
wire    ap_block_state140_pp7_stage0_iter1;
wire    ap_block_state141_pp7_stage0_iter2;
wire    ap_block_pp7_stage0_11001;
wire   [0:0] icmp_ln74_fu_3359_p2;
reg   [0:0] icmp_ln74_reg_4855;
reg   [0:0] icmp_ln74_reg_4855_pp7_iter1_reg;
wire   [15:0] add_ln703_1_fu_3378_p2;
reg    ap_enable_reg_pp7_iter2;
wire    ap_CS_fsm_state27;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state28;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state37;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
wire    ap_CS_fsm_state46;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_flush_enable;
wire    ap_CS_fsm_state69;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state70;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_pp4_stage1_subdone;
reg    ap_condition_pp4_flush_enable;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter1_state90;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter5;
reg    ap_enable_reg_pp4_iter6;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state109;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state117;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_flush_enable;
reg    ap_enable_reg_pp7_iter1;
reg   [7:0] wbuf_V_address0;
reg    wbuf_V_ce0;
reg    wbuf_V_we0;
reg   [7:0] dwbuf_V_address0;
reg    dwbuf_V_ce0;
reg    dwbuf_V_we0;
reg   [15:0] dwbuf_V_d0;
reg   [7:0] dwbuf_V_address1;
reg    dwbuf_V_ce1;
reg   [94:0] indvar_flatten21_reg_541;
reg  signed [30:0] i_reg_552;
reg   [63:0] indvar_flatten_reg_564;
reg   [31:0] j_reg_576;
reg   [31:0] k_reg_588;
reg   [15:0] dbbuf_V_2_2_reg_633;
reg   [15:0] dbbuf_V_1_2_reg_645;
reg   [15:0] dbbuf_V_0_2_reg_657;
reg   [15:0] bbuf_V_2_2_reg_669;
reg   [15:0] bbuf_V_1_2_reg_681;
reg   [15:0] bbuf_V_0_2_reg_693;
reg   [31:0] j_1_reg_705;
reg   [94:0] indvar_flatten90_reg_717;
reg   [30:0] i_3_reg_728;
reg   [63:0] indvar_flatten67_reg_740;
reg   [31:0] k_1_reg_752;
reg   [62:0] indvar_flatten145_reg_775;
reg   [30:0] f_1_reg_786;
reg   [31:0] h_1_reg_797;
reg   [31:0] w_1_reg_809;
reg   [15:0] dbbuf_V_2_9_reg_820;
reg   [95:0] ap_phi_mux_indvar_flatten134_phi_fu_834_p4;
wire    ap_block_pp4_stage0;
reg   [31:0] ap_phi_mux_c_1_phi_fu_846_p4;
reg   [63:0] ap_phi_mux_indvar_flatten103_phi_fu_858_p4;
wire    ap_block_pp4_stage1;
reg   [31:0] ap_phi_mux_fh_1_phi_fu_869_p4;
reg   [31:0] ap_phi_mux_fw_1_phi_fu_880_p4;
reg   [94:0] indvar_flatten179_reg_887;
reg    ap_block_state116;
reg   [31:0] j_2_reg_898;
reg   [30:0] i_4_reg_910;
reg   [63:0] indvar_flatten156_reg_921;
reg   [31:0] k_2_reg_933;
reg   [30:0] f_reg_966;
reg   [95:0] indvar_flatten56_reg_977;
reg   [31:0] c_reg_988;
reg   [63:0] indvar_flatten35_reg_999;
reg   [31:0] h_reg_1011;
reg   [31:0] w_reg_1022;
reg   [15:0] empty_59_reg_1034;
wire    ap_CS_fsm_state143;
reg   [31:0] fh_reg_1044;
reg   [15:0] empty_64_reg_1078;
wire    ap_CS_fsm_state142;
wire   [31:0] zext_ln49_4_fu_1544_p1;
wire   [31:0] zext_ln91_4_fu_2044_p1;
wire   [31:0] p_cast46_fu_2274_p1;
wire   [31:0] zext_ln1118_5_fu_2639_p1;
wire   [31:0] zext_ln1118_fu_2653_p1;
wire   [31:0] zext_ln727_1_fu_2712_p1;
wire   [31:0] zext_ln118_4_fu_3047_p1;
wire   [31:0] zext_ln72_fu_3293_p1;
wire   [31:0] zext_ln1116_fu_3373_p1;
wire    ap_block_pp7_stage0;
wire  signed [31:0] sext_ln58_fu_1277_p1;
wire  signed [31:0] sext_ln48_fu_1475_p1;
wire  signed [31:0] sext_ln61_fu_1605_p1;
wire  signed [31:0] sext_ln90_fu_1975_p1;
wire  signed [31:0] sext_ln125_fu_2816_p1;
wire  signed [31:0] sext_ln117_fu_2978_p1;
reg    ap_block_state11_io;
reg    ap_predicate_op871_writeresp_state123;
reg    ap_block_state123;
wire    ap_block_pp5_stage0_01001;
wire    ap_block_pp6_stage0_01001;
reg   [31:0] reuse_addr_reg_fu_240;
reg   [15:0] reuse_reg_fu_244;
reg   [15:0] bbuf_V_2_fu_256;
reg   [15:0] bbuf_V_2_1_fu_260;
reg   [15:0] bbuf_V_2_3_fu_264;
reg   [15:0] dbbuf_V_2_1_fu_268;
reg   [15:0] dbbuf_V_2_3_fu_272;
reg   [15:0] dbbuf_V_2_5_fu_276;
reg   [15:0] dbbuf_V_0_3_fu_280;
wire   [15:0] dbbuf_V_0_7_fu_2321_p3;
reg   [15:0] dbbuf_V_0_4_fu_284;
wire   [15:0] dbbuf_V_0_6_fu_2314_p3;
reg   [15:0] dbbuf_V_2_4_fu_288;
wire   [15:0] dbbuf_V_2_8_fu_2300_p3;
wire    ap_CS_fsm_state85;
reg   [31:0] x_Addr_A_orig;
reg   [31:0] dx_Addr_A_orig;
reg   [31:0] y_Addr_A_orig;
wire   [31:0] grp_fu_1110_p2;
wire   [9:0] sub_ln41_fu_1150_p2;
wire   [31:0] sub_ln42_fu_1160_p2;
wire   [31:0] grp_fu_1185_p0;
wire   [31:0] grp_fu_1185_p1;
wire   [30:0] grp_fu_1201_p0;
wire   [63:0] grp_fu_1201_p1;
wire   [30:0] trunc_ln46_fu_1232_p1;
wire   [30:0] trunc_ln3_fu_1268_p4;
wire    ap_CS_fsm_state12;
wire   [3:0] tmp_5_fu_1307_p3;
wire   [4:0] zext_ln49_1_fu_1314_p1;
wire   [4:0] zext_ln49_fu_1304_p1;
wire   [4:0] sub_ln49_fu_1318_p2;
wire   [0:0] icmp_ln47_1_fu_1339_p2;
wire   [31:0] select_ln45_fu_1292_p3;
wire   [31:0] add_ln46_fu_1350_p2;
wire   [30:0] trunc_ln46_1_fu_1356_p1;
wire   [30:0] select_ln45_1_fu_1299_p3;
wire   [30:0] tmp_mid1_fu_1360_p2;
wire   [30:0] select_ln45_3_fu_1328_p3;
wire   [3:0] trunc_ln49_1_fu_1374_p1;
wire   [3:0] select_ln45_4_fu_1333_p3;
wire   [3:0] select_ln46_2_fu_1378_p3;
wire  signed [5:0] sext_ln46_fu_1324_p1;
wire   [5:0] zext_ln49_2_fu_1386_p1;
wire    ap_CS_fsm_state15;
wire   [0:0] or_ln46_fu_1408_p2;
wire   [30:0] trunc_ln47_fu_1420_p1;
wire    ap_CS_fsm_state18;
wire   [7:0] tmp_4_fu_1436_p3;
wire  signed [29:0] sext_ln49_1_fu_1443_p1;
wire  signed [29:0] sext_ln49_fu_1433_p1;
wire   [31:0] tmp_7_fu_1453_p3;
wire   [31:0] empty_50_fu_1460_p2;
wire   [30:0] trunc_ln5_fu_1465_p4;
wire   [5:0] trunc_ln49_2_fu_1485_p1;
wire   [29:0] add_ln49_1_fu_1447_p2;
wire   [29:0] zext_ln49_3_fu_1488_p1;
wire   [29:0] add_ln49_2_fu_1492_p2;
wire   [5:0] trunc_ln49_4_fu_1502_p1;
wire   [7:0] p_shl1_cast_fu_1506_p3;
wire   [7:0] trunc_ln49_3_fu_1498_p1;
wire   [31:0] l_cast_fu_1526_p1;
wire   [7:0] trunc_ln49_5_fu_1535_p1;
wire   [63:0] add_ln46_1_fu_1553_p2;
wire   [30:0] grp_fu_1101_p4;
wire   [31:0] grp_fu_1661_p0;
wire   [31:0] grp_fu_1661_p1;
wire   [31:0] add_ln68_fu_1667_p2;
wire   [30:0] grp_fu_1692_p0;
wire   [63:0] grp_fu_1692_p1;
wire  signed [30:0] grp_fu_1704_p0;
wire  signed [30:0] grp_fu_1704_p1;
wire  signed [30:0] grp_fu_1713_p1;
wire  signed [30:0] grp_fu_1722_p0;
wire   [31:0] grp_fu_1755_p0;
wire   [31:0] grp_fu_1755_p1;
wire   [30:0] add_ln87_fu_1775_p2;
wire   [1:0] trunc_ln87_3_fu_1795_p1;
wire   [3:0] tmp_s_fu_1803_p3;
wire   [4:0] zext_ln91_1_fu_1811_p1;
wire   [4:0] zext_ln91_fu_1799_p1;
wire   [4:0] sub_ln91_fu_1815_p2;
wire   [0:0] icmp_ln89_1_fu_1831_p2;
wire   [31:0] select_ln87_fu_1781_p3;
wire   [0:0] or_ln88_fu_1848_p2;
wire   [31:0] add_ln88_fu_1842_p2;
wire   [3:0] trunc_ln91_1_fu_1865_p1;
wire   [3:0] select_ln87_3_fu_1825_p3;
wire   [3:0] select_ln88_2_fu_1869_p3;
wire  signed [5:0] sext_ln88_fu_1821_p1;
wire   [5:0] zext_ln91_2_fu_1877_p1;
wire    ap_CS_fsm_state59;
wire   [30:0] select_ln87_2_fu_1911_p3;
wire   [30:0] tmp18_fu_1923_p2;
wire   [30:0] select_ln88_1_fu_1917_p3;
wire   [7:0] tmp_6_fu_1936_p3;
wire  signed [29:0] sext_ln91_1_fu_1943_p1;
wire  signed [29:0] sext_ln91_fu_1933_p1;
wire   [31:0] tmp_8_fu_1953_p3;
wire   [31:0] empty_73_fu_1960_p2;
wire   [30:0] trunc_ln_fu_1965_p4;
wire   [5:0] trunc_ln91_2_fu_1985_p1;
wire   [29:0] add_ln91_1_fu_1947_p2;
wire   [29:0] zext_ln91_3_fu_1988_p1;
wire   [29:0] add_ln91_2_fu_1992_p2;
wire   [5:0] trunc_ln91_4_fu_2002_p1;
wire   [7:0] p_shl3_cast_fu_2006_p3;
wire   [7:0] trunc_ln91_3_fu_1998_p1;
wire   [31:0] l_1_cast_fu_2026_p1;
wire   [7:0] trunc_ln91_5_fu_2035_p1;
wire   [63:0] add_ln88_1_fu_2053_p2;
wire   [31:0] grp_fu_2072_p0;
wire   [63:0] grp_fu_2072_p1;
wire   [30:0] grp_fu_2085_p0;
wire   [31:0] grp_fu_2085_p1;
wire   [31:0] add_ln97_fu_2094_p2;
wire   [1:0] empty_74_fu_2115_p1;
wire   [30:0] add_ln97_2_fu_2136_p2;
wire   [1:0] empty_79_fu_2160_p1;
wire   [0:0] icmp_ln703_2_fu_2172_p2;
wire   [0:0] icmp_ln703_fu_2119_p2;
wire   [0:0] icmp_ln703_3_fu_2186_p2;
wire   [0:0] icmp_ln703_1_fu_2125_p2;
wire   [3:0] tmp_9_fu_2214_p3;
wire   [4:0] zext_ln1118_2_fu_2221_p1;
wire   [4:0] zext_ln1118_1_fu_2211_p1;
wire   [4:0] sub_ln1118_fu_2225_p2;
wire  signed [9:0] grp_fu_3384_p3;
wire   [9:0] empty_76_fu_2269_p2;
wire   [15:0] dbbuf_V_2_fu_2293_p3;
wire   [15:0] dbbuf_V_0_fu_2307_p3;
wire  signed [15:0] sext_ln1118_1_fu_2348_p0;
wire   [5:0] zext_ln1118_3_fu_2414_p1;
wire  signed [9:0] grp_fu_3392_p3;
wire   [7:0] tmp_13_fu_2449_p3;
wire  signed [29:0] sext_ln1118_4_fu_2456_p1;
wire  signed [29:0] sext_ln1118_3_fu_2446_p1;
wire  signed [9:0] grp_fu_3400_p3;
wire   [5:0] add_ln1118_fu_2442_p2;
(* use_dsp48 = "no" *) wire   [9:0] empty_78_fu_2438_p2;
wire   [0:0] icmp_ln102_1_fu_2489_p2;
wire   [0:0] select_ln100_6_fu_2494_p3;
wire   [0:0] or_ln101_fu_2500_p2;
wire   [9:0] select_ln100_2_fu_2466_p3;
wire   [9:0] trunc_ln101_1_fu_2513_p1;
wire   [5:0] select_ln100_3_fu_2471_p3;
wire   [5:0] select_ln101_1_fu_2522_p3;
wire   [29:0] add_ln1118_4_fu_2460_p2;
wire   [29:0] zext_ln727_fu_2529_p1;
wire   [29:0] add_ln727_fu_2533_p2;
wire   [5:0] add_ln1118_5_fu_2547_p2;
wire   [5:0] select_ln100_4_fu_2477_p3;
wire   [5:0] select_ln101_2_fu_2551_p3;
wire   [29:0] zext_ln1118_4_fu_2559_p1;
wire   [29:0] add_ln1118_6_fu_2563_p2;
wire   [5:0] trunc_ln1118_1_fu_2573_p1;
wire   [7:0] p_shl8_cast_fu_2577_p3;
wire   [7:0] trunc_ln1118_fu_2569_p1;
wire   [9:0] p_mid199_fu_2516_p2;
wire   [9:0] select_ln100_5_fu_2483_p3;
wire   [7:0] p_shl7_cast_fu_2613_p3;
wire   [7:0] add_ln727_1_fu_2620_p2;
wire   [7:0] add_ln1118_2_fu_2630_p2;
wire   [7:0] add_ln1118_8_fu_2634_p2;
wire  signed [9:0] grp_fu_3408_p3;
(* use_dsp48 = "no" *) wire   [9:0] add_ln1118_1_fu_2649_p2;
wire   [15:0] lhs_2_fu_2679_p3;
wire  signed [28:0] grp_fu_3415_p3;
wire  signed [28:0] grp_fu_3423_p3;
wire  signed [30:0] grp_fu_2749_p0;
wire   [30:0] add_ln114_fu_2763_p2;
wire   [0:0] icmp_ln116_fu_2786_p2;
wire   [0:0] or_ln115_fu_2798_p2;
wire   [3:0] tmp_10_fu_2841_p3;
wire   [4:0] zext_ln118_1_fu_2848_p1;
wire   [4:0] zext_ln118_fu_2838_p1;
wire   [4:0] sub_ln118_fu_2852_p2;
wire   [31:0] select_ln114_fu_2827_p3;
wire   [31:0] add_ln115_fu_2868_p2;
wire   [3:0] trunc_ln118_1_fu_2878_p1;
wire   [3:0] select_ln114_3_fu_2862_p3;
wire   [3:0] select_ln115_2_fu_2882_p3;
wire  signed [5:0] sext_ln115_fu_2858_p1;
wire   [5:0] zext_ln118_2_fu_2889_p1;
wire   [30:0] select_ln114_2_fu_2914_p3;
wire   [30:0] tmp20_fu_2926_p2;
wire   [30:0] select_ln115_1_fu_2920_p3;
wire   [7:0] tmp_11_fu_2939_p3;
wire  signed [29:0] sext_ln118_1_fu_2946_p1;
wire  signed [29:0] sext_ln118_fu_2936_p1;
wire   [31:0] tmp_12_fu_2956_p3;
wire   [31:0] empty_88_fu_2963_p2;
wire   [30:0] trunc_ln2_fu_2968_p4;
wire   [5:0] trunc_ln118_2_fu_2988_p1;
wire   [29:0] add_ln118_1_fu_2950_p2;
wire   [29:0] zext_ln118_3_fu_2991_p1;
wire   [29:0] add_ln118_2_fu_2995_p2;
wire   [5:0] trunc_ln118_4_fu_3005_p1;
wire   [7:0] p_shl5_cast_fu_3009_p3;
wire   [7:0] trunc_ln118_3_fu_3001_p1;
wire   [31:0] l_2_cast_fu_3029_p1;
wire   [7:0] trunc_ln118_5_fu_3038_p1;
wire   [7:0] add_ln118_4_fu_3042_p2;
wire   [63:0] add_ln115_1_fu_3057_p2;
wire   [1:0] tmp_3_fu_3085_p4;
wire   [31:0] grp_fu_3104_p0;
wire   [31:0] grp_fu_3104_p1;
wire   [31:0] grp_fu_3116_p0;
wire   [63:0] grp_fu_3116_p1;
wire  signed [9:0] empty_57_fu_3147_p0;
wire   [1:0] tmp_1_fu_3152_p4;
wire   [31:0] add_ln69_fu_3184_p2;
wire   [0:0] icmp_ln71_1_fu_3215_p2;
wire   [31:0] select_ln69_fu_3195_p3;
wire   [31:0] add_ln70_fu_3227_p2;
wire   [9:0] select_ln69_2_fu_3245_p3;
wire   [9:0] p_mid131_fu_3262_p2;
wire   [9:0] select_ln69_3_fu_3251_p3;
wire   [0:0] or_ln70_fu_3273_p2;
wire  signed [9:0] grp_fu_3431_p3;
wire   [9:0] trunc_ln73_fu_3308_p1;
wire   [9:0] tmp17_fu_3312_p2;
wire   [63:0] add_ln70_1_fu_3327_p2;
wire   [9:0] empty_61_fu_3340_p2;
wire   [31:0] fw_cast_fu_3355_p1;
wire   [9:0] trunc_ln75_fu_3364_p1;
wire   [9:0] add_ln1116_fu_3368_p2;
wire  signed [9:0] grp_fu_3384_p0;
wire   [9:0] grp_fu_3384_p2;
wire  signed [9:0] grp_fu_3392_p0;
wire  signed [9:0] grp_fu_3400_p0;
wire  signed [9:0] grp_fu_3408_p0;
wire  signed [15:0] grp_fu_3415_p1;
wire   [28:0] grp_fu_3415_p2;
wire  signed [15:0] grp_fu_3423_p1;
wire   [28:0] grp_fu_3423_p2;
wire  signed [9:0] grp_fu_3431_p0;
wire   [9:0] grp_fu_3431_p2;
reg    grp_fu_2749_ce;
reg   [120:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
wire   [63:0] grp_fu_1185_p00;
wire   [63:0] grp_fu_1185_p10;
wire   [94:0] grp_fu_1201_p00;
wire   [94:0] grp_fu_1201_p10;
wire   [63:0] grp_fu_1661_p00;
wire   [63:0] grp_fu_1661_p10;
wire   [94:0] grp_fu_1692_p00;
wire   [94:0] grp_fu_1692_p10;
wire   [63:0] grp_fu_1755_p10;
wire   [95:0] grp_fu_2072_p00;
wire   [95:0] grp_fu_2072_p10;
wire   [62:0] grp_fu_2085_p00;
wire   [62:0] grp_fu_2085_p10;
wire   [63:0] grp_fu_3104_p00;
wire   [63:0] grp_fu_3104_p10;
wire   [95:0] grp_fu_3116_p00;
wire   [95:0] grp_fu_3116_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 121'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp4_iter6 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
end

conv_combined_CRTL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
CRTL_BUS_s_axi_U(
    .AWVALID(s_axi_CRTL_BUS_AWVALID),
    .AWREADY(s_axi_CRTL_BUS_AWREADY),
    .AWADDR(s_axi_CRTL_BUS_AWADDR),
    .WVALID(s_axi_CRTL_BUS_WVALID),
    .WREADY(s_axi_CRTL_BUS_WREADY),
    .WDATA(s_axi_CRTL_BUS_WDATA),
    .WSTRB(s_axi_CRTL_BUS_WSTRB),
    .ARVALID(s_axi_CRTL_BUS_ARVALID),
    .ARREADY(s_axi_CRTL_BUS_ARREADY),
    .ARADDR(s_axi_CRTL_BUS_ARADDR),
    .RVALID(s_axi_CRTL_BUS_RVALID),
    .RREADY(s_axi_CRTL_BUS_RREADY),
    .RDATA(s_axi_CRTL_BUS_RDATA),
    .RRESP(s_axi_CRTL_BUS_RRESP),
    .BVALID(s_axi_CRTL_BUS_BVALID),
    .BREADY(s_axi_CRTL_BUS_BREADY),
    .BRESP(s_axi_CRTL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .wt(wt),
    .dwt(dwt),
    .b(b),
    .db(db),
    .F(F),
    .C(C),
    .H(H),
    .W(W),
    .FH(FH),
    .FW(FW),
    .fwprop(fwprop),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

conv_combined_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(gmem_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(gmem_AWLEN),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(gmem_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

conv_combined_wbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
wbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(wbuf_V_address0),
    .ce0(wbuf_V_ce0),
    .we0(wbuf_V_we0),
    .d0(gmem_addr_2_read_reg_3793),
    .q0(wbuf_V_q0)
);

conv_combined_dwbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
dwbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dwbuf_V_address0),
    .ce0(dwbuf_V_ce0),
    .we0(dwbuf_V_we0),
    .d0(dwbuf_V_d0),
    .address1(dwbuf_V_address1),
    .ce1(dwbuf_V_ce1),
    .q1(dwbuf_V_q1)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1185_p0),
    .din1(grp_fu_1185_p1),
    .ce(1'b1),
    .dout(grp_fu_1185_p2)
);

conv_combined_mul_31ns_64ns_95_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
mul_31ns_64ns_95_5_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1201_p0),
    .din1(grp_fu_1201_p1),
    .ce(1'b1),
    .dout(grp_fu_1201_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(i_reg_552),
    .din1(trunc_ln45_1_reg_3623),
    .ce(1'b1),
    .dout(grp_fu_1222_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(add_ln45_reg_3669),
    .din1(trunc_ln45_1_reg_3623),
    .ce(1'b1),
    .dout(grp_fu_1288_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln46_1_reg_3731),
    .din1(trunc_ln45_reg_3618),
    .ce(1'b1),
    .dout(grp_fu_1404_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp11_reg_3758),
    .din1(empty_45_reg_3629),
    .ce(1'b1),
    .dout(grp_fu_1429_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1661_p0),
    .din1(grp_fu_1661_p1),
    .ce(1'b1),
    .dout(grp_fu_1661_p2)
);

conv_combined_mul_31ns_64ns_95_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
mul_31ns_64ns_95_5_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1692_p0),
    .din1(grp_fu_1692_p1),
    .ce(1'b1),
    .dout(grp_fu_1692_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1704_p0),
    .din1(grp_fu_1704_p1),
    .ce(1'b1),
    .dout(grp_fu_1704_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(empty_66_reg_3945),
    .din1(grp_fu_1713_p1),
    .ce(1'b1),
    .dout(grp_fu_1713_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1722_p0),
    .din1(empty_66_reg_3945),
    .ce(1'b1),
    .dout(grp_fu_1722_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1755_p0),
    .din1(grp_fu_1755_p1),
    .ce(1'b1),
    .dout(grp_fu_1755_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln87_1_reg_4045),
    .din1(empty_67_reg_3963),
    .ce(1'b1),
    .dout(grp_fu_1899_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln88_1_reg_4062),
    .din1(empty_66_reg_3945),
    .ce(1'b1),
    .dout(grp_fu_1903_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln89_reg_4078),
    .din1(trunc_ln87_reg_3933),
    .ce(1'b1),
    .dout(grp_fu_1907_p2)
);

conv_combined_mul_32ns_64ns_96_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 96 ))
mul_32ns_64ns_96_5_1_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2072_p0),
    .din1(grp_fu_2072_p1),
    .ce(1'b1),
    .dout(grp_fu_2072_p2)
);

conv_combined_mul_31ns_32ns_63_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_31ns_32ns_63_2_1_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2085_p0),
    .din1(grp_fu_2085_p1),
    .ce(1'b1),
    .dout(grp_fu_2085_p2)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U18(
    .din0(grp_fu_3384_p3),
    .din1(reg_1138),
    .dout(empty_81_fu_2235_p2)
);

conv_combined_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U19(
    .din0(dbbuf_V_0_3_fu_280),
    .din1(dbbuf_V_0_4_fu_284),
    .din2(dbbuf_V_2_4_fu_288),
    .din3(select_ln97_2_reg_4217),
    .dout(tmp_2_fu_2240_p5)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2749_p0),
    .din1(empty_66_reg_3945),
    .ce(grp_fu_2749_ce),
    .dout(grp_fu_2749_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln114_1_reg_4545),
    .din1(empty_67_reg_3963),
    .ce(1'b1),
    .dout(grp_fu_2834_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln116_reg_4570),
    .din1(trunc_ln87_reg_3933),
    .ce(1'b1),
    .dout(grp_fu_2906_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln115_1_reg_4581),
    .din1(empty_66_reg_3945),
    .ce(1'b1),
    .dout(grp_fu_2910_p2)
);

conv_combined_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U24(
    .din0(dbbuf_V_0_3_fu_280),
    .din1(dbbuf_V_0_4_fu_284),
    .din2(dbbuf_V_2_4_fu_288),
    .din3(tmp_3_fu_3085_p4),
    .dout(tmp_3_fu_3085_p5)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3104_p0),
    .din1(grp_fu_3104_p1),
    .ce(1'b1),
    .dout(grp_fu_3104_p2)
);

conv_combined_mul_32ns_64ns_96_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 96 ))
mul_32ns_64ns_96_5_1_U26(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3116_p0),
    .din1(grp_fu_3116_p1),
    .ce(1'b1),
    .dout(grp_fu_3116_p2)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U27(
    .din0(empty_57_fu_3147_p0),
    .din1(outH_reg_3562),
    .dout(empty_57_fu_3147_p2)
);

conv_combined_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U28(
    .din0(bbuf_V_0_2_reg_693),
    .din1(bbuf_V_1_2_reg_681),
    .din2(bbuf_V_2_2_reg_669),
    .din3(tmp_1_fu_3152_p4),
    .dout(tmp_1_fu_3152_p5)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U29(
    .din0(trunc_ln69_reg_4768),
    .din1(empty_43_reg_3554),
    .dout(mul_ln69_fu_3289_p2)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U30(
    .din0(empty_60_reg_4830),
    .din1(trunc_ln68_reg_4701),
    .dout(empty_61_fu_3340_p2)
);

conv_combined_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3384_p0),
    .din1(outH_reg_3562),
    .din2(grp_fu_3384_p2),
    .ce(1'b1),
    .dout(grp_fu_3384_p3)
);

conv_combined_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3392_p0),
    .din1(empty_43_reg_3554),
    .din2(trunc_ln98_reg_4243),
    .ce(1'b1),
    .dout(grp_fu_3392_p3)
);

conv_combined_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3400_p0),
    .din1(empty_43_reg_3554),
    .din2(trunc_ln98_reg_4243),
    .ce(1'b1),
    .dout(grp_fu_3400_p3)
);

conv_combined_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3408_p0),
    .din1(trunc_ln97_reg_4169),
    .din2(trunc_ln99_reg_4280),
    .ce(1'b1),
    .dout(grp_fu_3408_p3)
);

conv_combined_mac_muladd_16s_16s_29ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
mac_muladd_16s_16s_29ns_29_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(wbuf_V_load_reg_4457),
    .din1(grp_fu_3415_p1),
    .din2(grp_fu_3415_p2),
    .ce(1'b1),
    .dout(grp_fu_3415_p3)
);

conv_combined_mac_muladd_16s_16s_29ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
mac_muladd_16s_16s_29ns_29_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(x_load_1_reg_4482),
    .din1(grp_fu_3423_p1),
    .din2(grp_fu_3423_p2),
    .ce(1'b1),
    .dout(grp_fu_3423_p3)
);

conv_combined_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3431_p0),
    .din1(reg_1138),
    .din2(grp_fu_3431_p2),
    .ce(1'b1),
    .dout(grp_fu_3431_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state28))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state28)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state28);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp2_flush_enable)) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state46)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state46)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state70))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state70)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state70);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp4_flush_enable)) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state86)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            if ((1'b1 == ap_condition_pp4_exit_iter1_state90)) begin
                ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter6 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b0)) | ((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
            ap_enable_reg_pp4_iter6 <= ap_enable_reg_pp4_iter5;
        end else if ((1'b1 == ap_CS_fsm_state86)) begin
            ap_enable_reg_pp4_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state109) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state108))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state109)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state109);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state108))) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state117))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if (((icmp_ln114_reg_4528 == 1'd1) & (1'b0 == ap_block_state102_io) & (1'b1 == ap_CS_fsm_state102))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state117))) begin
            ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state117);
        end else if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end else if (((icmp_ln114_reg_4528 == 1'd1) & (1'b0 == ap_block_state102_io) & (1'b1 == ap_CS_fsm_state102))) begin
            ap_enable_reg_pp6_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp7_flush_enable)) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state138) & (cmp106321_reg_4697 == 1'd1))) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end else if (((1'b1 == ap_CS_fsm_state138) & (cmp106321_reg_4697 == 1'd1))) begin
            ap_enable_reg_pp7_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln100_reg_4316 == 1'd0))) begin
        c_1_reg_842 <= select_ln100_1_reg_4347;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        c_1_reg_842 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) & (icmp_ln73_fu_3303_p2 == 1'd1))) begin
        c_reg_988 <= select_ln69_1_reg_4763;
    end else if (((1'b1 == ap_CS_fsm_state131) & (icmp_ln68_fu_3134_p2 == 1'd0))) begin
        c_reg_988 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_1737_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        dbbuf_V_0_3_fu_280 <= dbbuf_V_0_2_reg_657;
    end else if (((cmp176388_reg_4036 == 1'd1) & (1'b1 == ap_CS_fsm_state84) & (icmp_ln99_fu_2260_p2 == 1'd1))) begin
        dbbuf_V_0_3_fu_280 <= dbbuf_V_0_7_fu_2321_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_1737_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        dbbuf_V_0_4_fu_284 <= dbbuf_V_1_2_reg_645;
    end else if (((cmp176388_reg_4036 == 1'd1) & (1'b1 == ap_CS_fsm_state84) & (icmp_ln99_fu_2260_p2 == 1'd1))) begin
        dbbuf_V_0_4_fu_284 <= dbbuf_V_0_6_fu_2314_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_1737_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        dbbuf_V_2_4_fu_288 <= dbbuf_V_2_2_reg_633;
    end else if (((cmp176388_reg_4036 == 1'd1) & (1'b1 == ap_CS_fsm_state84) & (icmp_ln99_fu_2260_p2 == 1'd1))) begin
        dbbuf_V_2_4_fu_288 <= dbbuf_V_2_8_fu_2300_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp176388_reg_4036 == 1'd1) & (1'b1 == ap_CS_fsm_state83))) begin
        dbbuf_V_2_9_reg_820 <= tmp_2_fu_2240_p5;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        dbbuf_V_2_9_reg_820 <= add_ln703_fu_2734_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        empty_59_reg_1034 <= tmp_1_reg_4731;
    end else if ((1'b1 == ap_CS_fsm_state143)) begin
        empty_59_reg_1034 <= empty_64_reg_1078;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state138) & (cmp106321_reg_4697 == 1'd1))) begin
        empty_62_reg_1066 <= empty_59_reg_1034;
    end else if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter2 == 1'b1) & (icmp_ln74_reg_4855_pp7_iter1_reg == 1'd0))) begin
        empty_62_reg_1066 <= add_ln703_1_fu_3378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state138) & (cmp106321_reg_4697 == 1'd0))) begin
        empty_64_reg_1078 <= empty_59_reg_1034;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        empty_64_reg_1078 <= empty_62_reg_1066;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) & ((cmp176388_reg_4036 == 1'd0) | (icmp_ln99_fu_2260_p2 == 1'd1)))) begin
        f_1_reg_786 <= select_ln97_1_reg_4207;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        f_1_reg_786 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        f_reg_966 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state132) & (icmp_ln69_fu_3179_p2 == 1'd1))) begin
        f_reg_966 <= add_ln68_2_reg_4716;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln100_reg_4316_pp4_iter1_reg == 1'd0))) begin
        fh_1_reg_865 <= select_ln101_4_reg_4426;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        fh_1_reg_865 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        fh_reg_1044 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state143)) begin
        fh_reg_1044 <= add_ln73_reg_4822;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln100_reg_4316_pp4_iter2_reg == 1'd0))) begin
        fw_1_reg_876 <= add_ln102_reg_4452;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        fw_1_reg_876 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state138) & (cmp106321_reg_4697 == 1'd1))) begin
        fw_reg_1055 <= 31'd0;
    end else if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln74_fu_3359_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        fw_reg_1055 <= add_ln74_fu_3349_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) & ((cmp176388_reg_4036 == 1'd0) | (icmp_ln99_fu_2260_p2 == 1'd1)))) begin
        h_1_reg_797 <= add_ln98_fu_2343_p2;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        h_1_reg_797 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) & (icmp_ln73_fu_3303_p2 == 1'd1))) begin
        h_reg_1011 <= select_ln70_3_reg_4786;
    end else if (((1'b1 == ap_CS_fsm_state131) & (icmp_ln68_fu_3134_p2 == 1'd0))) begin
        h_reg_1011 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_fu_1572_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_1_reg_611 <= add_ln58_fu_1566_p2;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        i_1_reg_611 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_fu_1622_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_2_reg_622 <= add_ln61_fu_1616_p2;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        i_2_reg_622 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        i_3_reg_728 <= select_ln87_1_reg_4045;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        i_3_reg_728 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln97_fu_2131_p2 == 1'd1))) begin
        i_4_reg_910 <= 31'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147403_reg_3959 == 1'd1)) & (1'b1 == ap_CS_fsm_state116))) begin
        i_4_reg_910 <= select_ln114_1_reg_4545;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_reg_4528 == 1'd1) & (1'b0 == ap_block_state102_io) & (1'b1 == ap_CS_fsm_state102))) begin
        i_5_reg_955 <= 31'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln125_fu_3076_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        i_5_reg_955 <= add_ln125_fu_3070_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_reg_552 <= select_ln45_2_reg_3685;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_reg_552 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln100_reg_4316_pp4_iter1_reg == 1'd0))) begin
        indvar_flatten103_reg_854 <= select_ln101_5_reg_4396;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        indvar_flatten103_reg_854 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln100_reg_4316 == 1'd0))) begin
        indvar_flatten134_reg_830 <= add_ln100_1_reg_4330;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        indvar_flatten134_reg_830 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) & ((cmp176388_reg_4036 == 1'd0) | (icmp_ln99_fu_2260_p2 == 1'd1)))) begin
        indvar_flatten145_reg_775 <= add_ln97_4_reg_4194;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        indvar_flatten145_reg_775 <= 63'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln97_fu_2131_p2 == 1'd1))) begin
        indvar_flatten156_reg_921 <= 64'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147403_reg_3959 == 1'd1)) & (1'b1 == ap_CS_fsm_state116))) begin
        indvar_flatten156_reg_921 <= select_ln115_4_fu_3063_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln97_fu_2131_p2 == 1'd1))) begin
        indvar_flatten179_reg_887 <= 95'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147403_reg_3959 == 1'd1)) & (1'b1 == ap_CS_fsm_state116))) begin
        indvar_flatten179_reg_887 <= add_ln114_1_reg_4513;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten21_reg_541 <= add_ln45_1_reg_3644;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten21_reg_541 <= 95'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) & (icmp_ln73_fu_3303_p2 == 1'd1))) begin
        indvar_flatten35_reg_999 <= select_ln70_4_fu_3333_p3;
    end else if (((1'b1 == ap_CS_fsm_state131) & (icmp_ln68_fu_3134_p2 == 1'd0))) begin
        indvar_flatten35_reg_999 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) & (icmp_ln73_fu_3303_p2 == 1'd1))) begin
        indvar_flatten56_reg_977 <= add_ln69_1_reg_4737;
    end else if (((1'b1 == ap_CS_fsm_state131) & (icmp_ln68_fu_3134_p2 == 1'd0))) begin
        indvar_flatten56_reg_977 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        indvar_flatten67_reg_740 <= select_ln88_4_fu_2059_p3;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        indvar_flatten67_reg_740 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        indvar_flatten90_reg_717 <= add_ln87_1_reg_3991;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        indvar_flatten90_reg_717 <= 95'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten_reg_564 <= select_ln46_4_fu_1559_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten_reg_564 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        j_1_reg_705 <= select_ln88_3_reg_4073;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        j_1_reg_705 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln97_fu_2131_p2 == 1'd1))) begin
        j_2_reg_898 <= 32'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147403_reg_3959 == 1'd1)) & (1'b1 == ap_CS_fsm_state116))) begin
        j_2_reg_898 <= select_ln115_3_reg_4592;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        j_reg_576 <= select_ln46_3_reg_3742;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        j_reg_576 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        k_1_reg_752 <= add_ln89_fu_2048_p2;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        k_1_reg_752 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln97_fu_2131_p2 == 1'd1))) begin
        k_2_reg_933 <= 32'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147403_reg_3959 == 1'd1)) & (1'b1 == ap_CS_fsm_state116))) begin
        k_2_reg_933 <= add_ln116_fu_3052_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        k_reg_588 <= add_ln47_fu_1548_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_reg_588 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        l_1_reg_764 <= 31'd0;
    end else if (((icmp_ln90_fu_2030_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        l_1_reg_764 <= add_ln90_fu_2020_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state108))) begin
        l_2_reg_944 <= 31'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln117_fu_3033_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        l_2_reg_944 <= add_ln117_fu_3023_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        l_reg_600 <= 31'd0;
    end else if (((icmp_ln48_fu_1530_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        l_reg_600 <= add_ln48_fu_1520_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp176388_reg_4036 == 1'd1) & (1'b1 == ap_CS_fsm_state84) & (icmp_ln99_fu_2260_p2 == 1'd0))) begin
        reuse_addr_reg_fu_240 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1) & (icmp_ln100_reg_4316_pp4_iter2_reg == 1'd0))) begin
        reuse_addr_reg_fu_240 <= zext_ln1118_fu_2653_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp176388_reg_4036 == 1'd1) & (1'b1 == ap_CS_fsm_state84) & (icmp_ln99_fu_2260_p2 == 1'd0))) begin
        reuse_reg_fu_244 <= 16'd0;
    end else if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter4 == 1'b1) & (icmp_ln100_reg_4316_pp4_iter4_reg == 1'd0))) begin
        reuse_reg_fu_244 <= {{grp_fu_3415_p3[28:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((cmp176388_reg_4036 == 1'd1) & (1'b1 == ap_CS_fsm_state83))) begin
        w_1_reg_809 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        w_1_reg_809 <= add_ln99_reg_4272;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) & (icmp_ln73_fu_3303_p2 == 1'd1))) begin
        w_reg_1022 <= add_ln71_fu_3322_p2;
    end else if (((1'b1 == ap_CS_fsm_state131) & (icmp_ln68_fu_3134_p2 == 1'd0))) begin
        w_reg_1022 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        C_read_reg_3507 <= C;
        FH_read_reg_3479 <= FH;
        FW_read_reg_3458 <= FW;
        F_read_reg_3517 <= F;
        H_read_reg_3502 <= H;
        W_read_reg_3493 <= W;
        b_read_reg_3533 <= b;
        db_read_reg_3528 <= db;
        dwt_read_reg_3538 <= dwt;
        empty_43_reg_3554 <= empty_43_fu_1146_p1;
        empty_reg_3549 <= empty_fu_1142_p1;
        fwprop_read_reg_3454 <= fwprop;
        wt_read_reg_3544 <= wt;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        add_ln100_1_reg_4330 <= add_ln100_1_fu_2371_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln100_fu_2356_p2 == 1'd0))) begin
        add_ln100_reg_4320 <= add_ln100_fu_2361_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln100_reg_4316 == 1'd0))) begin
        add_ln101_2_reg_4357 <= add_ln101_2_fu_2393_p2;
        icmp_ln101_reg_4335 <= icmp_ln101_fu_2377_p2;
        trunc_ln100_2_reg_4352 <= trunc_ln100_2_fu_2389_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln100_reg_4316 == 1'd0))) begin
        add_ln101_reg_4384 <= add_ln101_fu_2422_p2;
        add_ln1118_3_reg_4378 <= add_ln1118_3_fu_2417_p2;
        select_ln100_reg_4373 <= select_ln100_fu_2407_p3;
        trunc_ln727_1_reg_4390 <= trunc_ln727_1_fu_2428_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln100_reg_4316_pp4_iter1_reg == 1'd0))) begin
        add_ln102_reg_4452 <= add_ln102_fu_2644_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln100_reg_4316_pp4_iter1_reg == 1'd0))) begin
        add_ln1118_7_reg_4416 <= add_ln1118_7_fu_2585_p2;
        select_ln101_reg_4401 <= select_ln101_fu_2505_p3;
        trunc_ln103_reg_4431 <= trunc_ln103_fu_2605_p1;
        trunc_ln727_2_reg_4406 <= trunc_ln727_2_fu_2539_p1;
        trunc_ln727_3_reg_4411 <= trunc_ln727_3_fu_2543_p1;
        trunc_ln727_4_reg_4436 <= trunc_ln727_4_fu_2609_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        add_ln114_1_reg_4513 <= add_ln114_1_fu_2739_p2;
        icmp_ln114_reg_4528 <= icmp_ln114_fu_2758_p2;
        trunc_ln118_reg_4523 <= trunc_ln118_fu_2754_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp147403_reg_3959 == 1'd1) & (1'b1 == ap_CS_fsm_state107))) begin
        add_ln118_3_reg_4623 <= add_ln118_3_fu_3017_p2;
        gmem_addr_5_reg_4617 <= sext_ln117_fu_2978_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        add_ln118_reg_4586 <= add_ln118_fu_2893_p2;
        select_ln115_3_reg_4592 <= select_ln115_3_fu_2899_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln45_1_reg_3644 <= add_ln45_1_fu_1216_p2;
        icmp_ln45_1_reg_3649 <= icmp_ln45_1_fu_1227_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_1_reg_3649 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        add_ln45_reg_3669 <= add_ln45_fu_1245_p2;
        icmp_ln46_reg_3674 <= icmp_ln46_fu_1251_p2;
        select_ln45_2_reg_3685 <= select_ln45_2_fu_1256_p3;
        trunc_ln45_2_reg_3690 <= trunc_ln45_2_fu_1264_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp57433_reg_3614 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        add_ln49_3_reg_3774 <= add_ln49_3_fu_1514_p2;
        gmem_addr_2_reg_3768 <= sext_ln48_fu_1475_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_fu_1530_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln49_4_reg_3788 <= add_ln49_4_fu_1539_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln49_4_reg_3788_pp0_iter1_reg <= add_ln49_4_reg_3788;
        icmp_ln48_reg_3784 <= icmp_ln48_fu_1530_p2;
        icmp_ln48_reg_3784_pp0_iter1_reg <= icmp_ln48_reg_3784;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln49_reg_3736 <= add_ln49_fu_1390_p2;
        select_ln45_5_reg_3726 <= select_ln45_5_fu_1344_p3;
        select_ln46_1_reg_3731 <= select_ln46_1_fu_1366_p3;
        select_ln46_3_reg_3742 <= select_ln46_3_fu_1396_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state131)) begin
        add_ln68_2_reg_4716 <= add_ln68_2_fu_3128_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        add_ln69_1_reg_4737 <= add_ln69_1_fu_3164_p2;
        empty_58_reg_4747 <= empty_58_fu_3174_p2;
        trunc_ln70_reg_4742 <= trunc_ln70_fu_3170_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln100_reg_4316_pp4_iter1_reg == 1'd0))) begin
        add_ln727_2_reg_4442 <= add_ln727_2_fu_2625_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        add_ln727_2_reg_4442_pp4_iter3_reg <= add_ln727_2_reg_4442;
        add_ln727_2_reg_4442_pp4_iter4_reg <= add_ln727_2_reg_4442_pp4_iter3_reg;
        dx_addr_reg_4472_pp4_iter4_reg <= dx_addr_reg_4472;
        icmp_ln100_reg_4316 <= icmp_ln100_fu_2356_p2;
        icmp_ln100_reg_4316_pp4_iter1_reg <= icmp_ln100_reg_4316;
        icmp_ln100_reg_4316_pp4_iter2_reg <= icmp_ln100_reg_4316_pp4_iter1_reg;
        icmp_ln100_reg_4316_pp4_iter3_reg <= icmp_ln100_reg_4316_pp4_iter2_reg;
        icmp_ln100_reg_4316_pp4_iter4_reg <= icmp_ln100_reg_4316_pp4_iter3_reg;
        icmp_ln100_reg_4316_pp4_iter5_reg <= icmp_ln100_reg_4316_pp4_iter4_reg;
        trunc_ln727_reg_4367 <= trunc_ln727_fu_2403_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state137)) begin
        add_ln73_reg_4822 <= add_ln73_fu_3297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state138) & (cmp106321_reg_4697 == 1'd1))) begin
        add_ln75_reg_4845 <= add_ln75_fu_3344_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        add_ln87_1_reg_3991 <= add_ln87_1_fu_1731_p2;
        empty_68_reg_3996 <= grp_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp147403_reg_3959 == 1'd1) & (1'b1 == ap_CS_fsm_state62))) begin
        add_ln91_3_reg_4109 <= add_ln91_3_fu_2014_p2;
        gmem_addr_4_reg_4103 <= sext_ln90_fu_1975_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_fu_2030_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln91_4_reg_4123 <= add_ln91_4_fu_2039_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln91_4_reg_4123_pp3_iter1_reg <= add_ln91_4_reg_4123;
        icmp_ln90_reg_4119 <= icmp_ln90_fu_2030_p2;
        icmp_ln90_reg_4119_pp3_iter1_reg <= icmp_ln90_reg_4119;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        add_ln91_reg_4067 <= add_ln91_fu_1881_p2;
        select_ln87_1_reg_4045 <= select_ln87_1_fu_1788_p3;
        select_ln87_4_reg_4051 <= select_ln87_4_fu_1836_p3;
        select_ln88_3_reg_4073 <= select_ln88_3_fu_1887_p3;
        select_ln88_reg_4056 <= select_ln88_fu_1853_p3;
        trunc_ln88_1_reg_4062 <= trunc_ln88_1_fu_1861_p1;
        trunc_ln89_reg_4078 <= trunc_ln89_fu_1895_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        add_ln97_4_reg_4194 <= add_ln97_4_fu_2109_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp176388_reg_4036 == 1'd1) & (1'b1 == ap_CS_fsm_state84))) begin
        add_ln99_reg_4272 <= add_ln99_fu_2254_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln100_reg_4316_pp4_iter2_reg == 1'd0))) begin
        addr_cmp_reg_4477 <= addr_cmp_fu_2665_p2;
        dx_addr_reg_4472 <= zext_ln1118_fu_2653_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_3578 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        bbuf_V_0_2_reg_693 <= bbuf_V_2_load_reg_3821;
        bbuf_V_1_2_reg_681 <= bbuf_V_2_1_load_reg_3826;
        bbuf_V_2_2_reg_669 <= bbuf_V_2_3_load_reg_3831;
        dbbuf_V_0_2_reg_657 <= dbbuf_V_2_1_load_reg_3873;
        dbbuf_V_1_2_reg_645 <= dbbuf_V_2_3_load_reg_3878;
        dbbuf_V_2_2_reg_633 <= dbbuf_V_2_5_load_reg_3883;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln59_reg_3817 == 2'd1) & (icmp_ln58_reg_3813 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        bbuf_V_2_1_fu_260 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        bbuf_V_2_1_load_reg_3826 <= bbuf_V_2_1_fu_260;
        bbuf_V_2_3_load_reg_3831 <= bbuf_V_2_3_fu_264;
        bbuf_V_2_load_reg_3821 <= bbuf_V_2_fu_256;
    end
end

always @ (posedge ap_clk) begin
    if ((~(trunc_ln59_reg_3817 == 2'd1) & ~(trunc_ln59_reg_3817 == 2'd0) & (icmp_ln58_reg_3813 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        bbuf_V_2_3_fu_264 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln59_reg_3817 == 2'd0) & (icmp_ln58_reg_3813 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        bbuf_V_2_fu_256 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        bound108_reg_4179 <= grp_fu_2072_p2;
        bound139_reg_4184 <= grp_fu_2085_p2;
        icmp_ln102_reg_4189 <= icmp_ln102_fu_2104_p2;
        sub_ln97_reg_4174 <= sub_ln97_fu_2099_p2;
        trunc_ln97_reg_4169 <= trunc_ln97_fu_2091_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        bound26_reg_4681 <= grp_fu_3104_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        bound40_reg_4711 <= grp_fu_3116_p2;
        cmp106321_reg_4697 <= grp_fu_1091_p2;
        trunc_ln68_1_reg_4706 <= trunc_ln68_1_fu_3125_p1;
        trunc_ln68_reg_4701 <= trunc_ln68_fu_3122_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        bound4_reg_3634 <= grp_fu_1201_p2;
        cmp57433_reg_3614 <= grp_fu_1091_p2;
        empty_45_reg_3629 <= empty_45_fu_1213_p1;
        icmp_ln47_reg_3639 <= grp_fu_1096_p2;
        trunc_ln45_1_reg_3623 <= trunc_ln45_1_fu_1210_p1;
        trunc_ln45_reg_3618 <= trunc_ln45_fu_1207_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        bound61_reg_3910 <= grp_fu_1661_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bound72_reg_3969 <= grp_fu_1692_p2;
        cmp147403_reg_3959 <= grp_fu_1091_p2;
        empty_67_reg_3963 <= grp_fu_1713_p2;
        icmp_ln89_reg_3975 <= grp_fu_1096_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        bound95_reg_4143 <= grp_fu_1755_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bound_reg_3592 <= grp_fu_1185_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((fwprop_read_reg_3454 == 1'd0) & (icmp_ln45_reg_3578 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        cast60_reg_3893[31 : 0] <= cast60_fu_1658_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_1737_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        cmp176388_reg_4036 <= cmp176388_fu_1747_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln62_reg_3869 == 2'd0) & (icmp_ln61_reg_3865 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dbbuf_V_2_1_fu_268 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dbbuf_V_2_1_load_reg_3873 <= dbbuf_V_2_1_fu_268;
        dbbuf_V_2_3_load_reg_3878 <= dbbuf_V_2_3_fu_272;
        dbbuf_V_2_5_load_reg_3883 <= dbbuf_V_2_5_fu_276;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln62_reg_3869 == 2'd1) & (icmp_ln61_reg_3865 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dbbuf_V_2_3_fu_272 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~(trunc_ln62_reg_3869 == 2'd1) & ~(trunc_ln62_reg_3869 == 2'd0) & (icmp_ln61_reg_3865 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dbbuf_V_2_5_fu_276 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln100_reg_4316_pp4_iter4_reg == 1'd0))) begin
        dwbuf_V_addr_2_reg_4497 <= zext_ln727_1_fu_2712_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln117_reg_4633 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        dwbuf_V_load_reg_4642 <= dwbuf_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        empty_44_reg_3598 <= empty_44_fu_1191_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        empty_46_reg_3653 <= grp_fu_1222_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        empty_49_reg_3763 <= grp_fu_1429_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state131) & (icmp_ln68_fu_3134_p2 == 1'd0))) begin
        empty_57_reg_4724 <= empty_57_fu_3147_p2;
        tmp_1_reg_4731 <= tmp_1_fu_3152_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) & (icmp_ln73_fu_3303_p2 == 1'd0))) begin
        empty_60_reg_4830 <= empty_60_fu_3317_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        empty_65_reg_3917 <= empty_65_fu_1682_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        empty_66_reg_3945 <= grp_fu_1704_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        empty_71_reg_4093 <= grp_fu_1907_p2;
        mul_ln87_reg_4083 <= grp_fu_1899_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        empty_72_reg_4098 <= empty_72_fu_1927_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp176388_reg_4036 == 1'd1) & (1'b1 == ap_CS_fsm_state83))) begin
        empty_75_reg_4265 <= empty_75_fu_2251_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        empty_81_reg_4255 <= empty_81_fu_2235_p2;
        sext_ln703_reg_4250 <= sext_ln703_fu_2231_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        empty_82_reg_4532 <= grp_fu_2749_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        empty_86_reg_4602 <= grp_fu_2906_p2;
        mul_ln114_reg_4597 <= grp_fu_2834_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        empty_87_reg_4612 <= empty_87_fu_2930_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_reg_3784 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_addr_2_read_reg_3793 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_reg_4119 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        gmem_addr_4_read_reg_4128 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_reg_4528 == 1'd0) & (1'b1 == ap_CS_fsm_state102))) begin
        icmp_ln115_reg_4537 <= icmp_ln115_fu_2769_p2;
        select_ln114_4_reg_4557 <= select_ln114_4_fu_2791_p3;
        select_ln115_reg_4564 <= select_ln115_fu_2804_p3;
        trunc_ln114_reg_4551 <= trunc_ln114_fu_2782_p1;
        trunc_ln116_reg_4570 <= trunc_ln116_fu_2812_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln117_reg_4633 <= icmp_ln117_fu_3033_p2;
        icmp_ln117_reg_4633_pp5_iter1_reg <= icmp_ln117_reg_4633;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        icmp_ln125_reg_4662 <= icmp_ln125_fu_3076_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln45_reg_3578 <= icmp_ln45_fu_1174_p2;
        outH_reg_3562 <= outH_fu_1154_p2;
        outW_reg_3573 <= outW_fu_1168_p2;
        trunc_ln42_reg_3568 <= trunc_ln42_fu_1164_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln58_reg_3813 <= icmp_ln58_fu_1572_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln61_reg_3865 <= icmp_ln61_fu_1622_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state132) & (icmp_ln69_fu_3179_p2 == 1'd0))) begin
        icmp_ln70_reg_4755 <= icmp_ln70_fu_3190_p2;
        select_ln69_1_reg_4763 <= select_ln69_1_fu_3203_p3;
        select_ln69_4_reg_4773 <= select_ln69_4_fu_3220_p3;
        select_ln70_3_reg_4786 <= select_ln70_3_fu_3237_p3;
        trunc_ln69_reg_4768 <= trunc_ln69_fu_3211_p1;
        trunc_ln70_1_reg_4780 <= trunc_ln70_1_fu_3233_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((fwprop_read_reg_3454 == 1'd1) & (icmp_ln45_reg_3578 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        icmp_ln71_reg_3905 <= icmp_ln71_fu_1677_p2;
        sub_ln68_reg_3899 <= sub_ln68_fu_1672_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        icmp_ln74_reg_4855 <= icmp_ln74_fu_3359_p2;
        icmp_ln74_reg_4855_pp7_iter1_reg <= icmp_ln74_reg_4855;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_1737_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state57))) begin
        icmp_ln88_reg_4004 <= icmp_ln88_fu_1742_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln97_fu_2131_p2 == 1'd0))) begin
        icmp_ln98_reg_4202 <= icmp_ln98_fu_2142_p2;
        select_ln97_1_reg_4207 <= select_ln97_1_fu_2148_p3;
        select_ln97_2_reg_4217 <= select_ln97_2_fu_2164_p3;
        select_ln97_3_reg_4224 <= select_ln97_3_fu_2178_p3;
        select_ln97_4_reg_4230 <= select_ln97_4_fu_2192_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        mul_ln46_reg_3747 <= grp_fu_1404_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        mul_ln69_reg_4812 <= mul_ln69_fu_3289_p2;
        y_addr_reg_4817 <= zext_ln72_fu_3293_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state105) & (select_ln114_4_reg_4557 == 1'd1))) begin
        p_mid1154_reg_4607 <= grp_fu_2910_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln87_4_reg_4051 == 1'd1) & (1'b1 == ap_CS_fsm_state60))) begin
        p_mid165_reg_4088 <= grp_fu_1903_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_mid1_reg_3720 <= grp_fu_1288_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        r_V_reg_4300 <= dy_Dout_A;
        sext_ln1118_1_reg_4305 <= sext_ln1118_1_fu_2348_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state77) | ((fwprop_read_reg_3454 == 1'd1) & (icmp_ln45_reg_3578 == 1'd1) & (1'b1 == ap_CS_fsm_state49)))) begin
        reg_1134 <= grp_fu_1115_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state79))) begin
        reg_1138 <= grp_fu_1120_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln100_reg_4316 == 1'd0))) begin
        select_ln100_1_reg_4347 <= select_ln100_1_fu_2382_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln100_reg_4316_pp4_iter1_reg == 1'd0))) begin
        select_ln101_4_reg_4426 <= select_ln101_4_fu_2599_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln100_reg_4316 == 1'd0))) begin
        select_ln101_5_reg_4396 <= select_ln101_5_fu_2432_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_reg_4528 == 1'd0) & (1'b0 == ap_block_state102_io) & (1'b1 == ap_CS_fsm_state102))) begin
        select_ln114_1_reg_4545 <= select_ln114_1_fu_2774_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        select_ln46_reg_3752 <= select_ln46_fu_1412_p3;
        tmp11_reg_3758 <= tmp11_fu_1424_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state133)) begin
        select_ln70_1_reg_4791 <= select_ln70_1_fu_3256_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        select_ln70_reg_4801 <= select_ln70_fu_3277_p3;
        trunc_ln71_reg_4806 <= trunc_ln71_fu_3285_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        select_ln97_reg_4237 <= select_ln97_fu_2200_p3;
        trunc_ln98_reg_4243 <= trunc_ln98_fu_2207_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln125_fu_3076_p2 == 1'd0))) begin
        tmp_3_reg_4666 <= tmp_3_fu_3085_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_reg_3659 <= tmp_fu_1236_p2;
        trunc_ln49_reg_3664 <= trunc_ln49_fu_1241_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln101_reg_4335 == 1'd0))) begin
        trunc_ln101_reg_4362 <= trunc_ln101_fu_2399_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        trunc_ln103_reg_4431_pp4_iter2_reg <= trunc_ln103_reg_4431;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp176388_reg_4036 == 1'd1) & (1'b1 == ap_CS_fsm_state84) & (icmp_ln99_fu_2260_p2 == 1'd0))) begin
        trunc_ln104_reg_4290 <= trunc_ln104_fu_2279_p1;
        trunc_ln99_reg_4280 <= trunc_ln99_fu_2265_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state103) & (select_ln114_4_reg_4557 == 1'd1))) begin
        trunc_ln115_1_reg_4581 <= trunc_ln115_1_fu_2874_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_fu_1572_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln59_reg_3817 <= trunc_ln59_fu_1577_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_fu_1622_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        trunc_ln62_reg_3869 <= trunc_ln62_fu_1627_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        trunc_ln87_reg_3933 <= trunc_ln87_fu_1698_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        trunc_ln91_reg_3986 <= trunc_ln91_fu_1727_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln100_reg_4316_pp4_iter2_reg == 1'd0))) begin
        wbuf_V_load_reg_4457 <= wbuf_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1) & (icmp_ln100_reg_4316_pp4_iter3_reg == 1'd0))) begin
        x_load_1_reg_4482 <= x_Dout_A;
    end
end

always @ (*) begin
    if ((icmp_ln48_fu_1530_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1572_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln61_fu_1622_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_condition_pp2_flush_enable = 1'b1;
    end else begin
        ap_condition_pp2_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln90_fu_2030_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state70 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state70 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_condition_pp4_exit_iter1_state90 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter1_state90 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln100_reg_4316 == 1'd1))) begin
        ap_condition_pp4_flush_enable = 1'b1;
    end else begin
        ap_condition_pp4_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln117_fu_3033_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state109 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state109 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln125_fu_3076_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state117 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state117 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln74_fu_3359_p2 == 1'd1))) begin
        ap_condition_pp7_flush_enable = 1'b1;
    end else begin
        ap_condition_pp7_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((~((gmem_BVALID == 1'b0) & (ap_predicate_op871_writeresp_state123 == 1'b1)) & (1'b1 == ap_CS_fsm_state123))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter6 == 1'b0) & (ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln100_reg_4316 == 1'd0))) begin
        ap_phi_mux_c_1_phi_fu_846_p4 = select_ln100_1_reg_4347;
    end else begin
        ap_phi_mux_c_1_phi_fu_846_p4 = c_1_reg_842;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln100_reg_4316_pp4_iter1_reg == 1'd0))) begin
        ap_phi_mux_fh_1_phi_fu_869_p4 = select_ln101_4_reg_4426;
    end else begin
        ap_phi_mux_fh_1_phi_fu_869_p4 = fh_1_reg_865;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln100_reg_4316_pp4_iter2_reg == 1'd0))) begin
        ap_phi_mux_fw_1_phi_fu_880_p4 = add_ln102_reg_4452;
    end else begin
        ap_phi_mux_fw_1_phi_fu_880_p4 = fw_1_reg_876;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln100_reg_4316_pp4_iter1_reg == 1'd0))) begin
        ap_phi_mux_indvar_flatten103_phi_fu_858_p4 = select_ln101_5_reg_4396;
    end else begin
        ap_phi_mux_indvar_flatten103_phi_fu_858_p4 = indvar_flatten103_reg_854;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln100_reg_4316 == 1'd0))) begin
        ap_phi_mux_indvar_flatten134_phi_fu_834_p4 = add_ln100_1_reg_4330;
    end else begin
        ap_phi_mux_indvar_flatten134_phi_fu_834_p4 = indvar_flatten134_reg_830;
    end
end

always @ (*) begin
    if ((~((gmem_BVALID == 1'b0) & (ap_predicate_op871_writeresp_state123 == 1'b1)) & (1'b1 == ap_CS_fsm_state123))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        dwbuf_V_address0 = dwbuf_V_addr_2_reg_4497;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        dwbuf_V_address0 = zext_ln91_4_fu_2044_p1;
    end else begin
        dwbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        dwbuf_V_address1 = zext_ln118_4_fu_3047_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1))) begin
        dwbuf_V_address1 = zext_ln727_1_fu_2712_p1;
    end else begin
        dwbuf_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter6 == 1'b1)))) begin
        dwbuf_V_ce0 = 1'b1;
    end else begin
        dwbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1)))) begin
        dwbuf_V_ce1 = 1'b1;
    end else begin
        dwbuf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        dwbuf_V_d0 = {{grp_fu_3423_p3[28:13]}};
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        dwbuf_V_d0 = gmem_addr_4_read_reg_4128;
    end else begin
        dwbuf_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln90_reg_4119_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter6 == 1'b1) & (icmp_ln100_reg_4316_pp4_iter5_reg == 1'd0)))) begin
        dwbuf_V_we0 = 1'b1;
    end else begin
        dwbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter4 == 1'b1))) begin
        dx_Addr_A_orig = dx_addr_reg_4472_pp4_iter4_reg;
    end else if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1))) begin
        dx_Addr_A_orig = zext_ln1118_fu_2653_p1;
    end else begin
        dx_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter4 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1)))) begin
        dx_EN_A = 1'b1;
    end else begin
        dx_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter4 == 1'b1) & (icmp_ln100_reg_4316_pp4_iter4_reg == 1'd0))) begin
        dx_WEN_A = 2'd3;
    end else begin
        dx_WEN_A = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84))) begin
        dy_EN_A = 1'b1;
    end else begin
        dy_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state63))) begin
        gmem_ARADDR = gmem_addr_4_reg_4103;
    end else if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        gmem_ARADDR = sext_ln61_fu_1605_p1;
    end else if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        gmem_ARADDR = gmem_addr_2_reg_3768;
    end else if (((icmp_ln45_1_reg_3649 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
        gmem_ARADDR = sext_ln58_fu_1277_p1;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state63)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        gmem_ARLEN = FW_read_reg_3458;
    end else if ((((icmp_ln45_1_reg_3649 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state40)))) begin
        gmem_ARLEN = F_read_reg_3517;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln45_1_reg_3649 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state63)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state40)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state108))) begin
        gmem_AWADDR = gmem_addr_5_reg_4617;
    end else if (((icmp_ln114_reg_4528 == 1'd1) & (1'b0 == ap_block_state102_io) & (1'b1 == ap_CS_fsm_state102))) begin
        gmem_AWADDR = sext_ln125_fu_2816_p1;
    end else begin
        gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state108))) begin
        gmem_AWLEN = FW_read_reg_3458;
    end else if (((icmp_ln114_reg_4528 == 1'd1) & (1'b0 == ap_block_state102_io) & (1'b1 == ap_CS_fsm_state102))) begin
        gmem_AWLEN = F_read_reg_3517;
    end else begin
        gmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln114_reg_4528 == 1'd1) & (1'b0 == ap_block_state102_io) & (1'b1 == ap_CS_fsm_state102)) | ((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state108)))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((gmem_BVALID == 1'b0) & (ap_predicate_op871_writeresp_state123 == 1'b1)) & (1'b1 == ap_CS_fsm_state123) & (ap_predicate_op871_writeresp_state123 == 1'b1)) | (~((gmem_BVALID == 1'b0) & (cmp147403_reg_3959 == 1'd1)) & (cmp147403_reg_3959 == 1'd1) & (1'b1 == ap_CS_fsm_state116)))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln90_reg_4119 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln61_reg_3865 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln58_reg_3813 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln48_reg_3784 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_4662 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0_01001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        gmem_WDATA = tmp_3_reg_4666;
    end else if (((icmp_ln117_reg_4633_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_01001))) begin
        gmem_WDATA = dwbuf_V_load_reg_4642;
    end else begin
        gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln125_reg_4662 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((icmp_ln117_reg_4633_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state21) | ((icmp_ln45_1_reg_3649 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state108) | ((icmp_ln114_reg_4528 == 1'd1) & (1'b1 == ap_CS_fsm_state102)))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((fwprop_read_reg_3454 == 1'd0) & (icmp_ln45_reg_3578 == 1'd1) & (1'b1 == ap_CS_fsm_state123)) | ((cmp147403_reg_3959 == 1'd1) & (1'b1 == ap_CS_fsm_state116)))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln90_reg_4119 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln61_reg_3865 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln58_reg_3813 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln48_reg_3784 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln125_reg_4662 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((icmp_ln117_reg_4633_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0)))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | ((1'b0 == ap_block_state102_io) & (1'b1 == ap_CS_fsm_state102)))) begin
        grp_fu_2749_ce = 1'b1;
    end else begin
        grp_fu_2749_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        wbuf_V_address0 = zext_ln1118_5_fu_2639_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        wbuf_V_address0 = zext_ln49_4_fu_1544_p1;
    end else begin
        wbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1)))) begin
        wbuf_V_ce0 = 1'b1;
    end else begin
        wbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln48_reg_3784_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        wbuf_V_we0 = 1'b1;
    end else begin
        wbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        x_Addr_A_orig = zext_ln1116_fu_3373_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1))) begin
        x_Addr_A_orig = zext_ln1118_fu_2653_p1;
    end else begin
        x_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter2 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1)))) begin
        x_EN_A = 1'b1;
    end else begin
        x_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state142)) begin
        y_Addr_A_orig = y_addr_reg_4817;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        y_Addr_A_orig = zext_ln72_fu_3293_p1;
    end else begin
        y_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state142)) begin
        y_Din_A = empty_62_reg_1066;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        y_Din_A = tmp_1_reg_4731;
    end else begin
        y_Din_A = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state136))) begin
        y_EN_A = 1'b1;
    end else begin
        y_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state136))) begin
        y_WEN_A = 2'd3;
    end else begin
        y_WEN_A = 2'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln45_fu_1174_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln45_1_reg_3649 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else if (((icmp_ln45_1_reg_3649 == 1'd0) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((cmp57433_reg_3614 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln48_fu_1530_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln48_fu_1530_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((fwprop_read_reg_3454 == 1'd1) & (icmp_ln45_reg_3578 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state124;
            end else if (((icmp_ln45_reg_3578 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state123;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((icmp_ln87_fu_1737_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            if (((cmp147403_reg_3959 == 1'd0) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state63 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((icmp_ln90_fu_2030_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((icmp_ln90_fu_2030_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln97_fu_2131_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            if (((1'b1 == ap_CS_fsm_state84) & ((cmp176388_reg_4036 == 1'd0) | (icmp_ln99_fu_2260_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter6 == 1'b1) & (ap_enable_reg_pp4_iter5 == 1'b0)) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter6 == 1'b1) & (ap_enable_reg_pp4_iter5 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((~((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b0)) & (1'b0 == ap_block_pp4_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            if (((icmp_ln114_reg_4528 == 1'd1) & (1'b0 == ap_block_state102_io) & (1'b1 == ap_CS_fsm_state102))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((icmp_ln114_reg_4528 == 1'd0) & (1'b0 == ap_block_state102_io) & (1'b1 == ap_CS_fsm_state102))) begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            if (((cmp147403_reg_3959 == 1'd0) & (1'b1 == ap_CS_fsm_state107))) begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end
        end
        ap_ST_fsm_state108 : begin
            if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state108))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln117_fu_3033_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)) & ~((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0)) | ((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln117_fu_3033_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            if ((~((gmem_BVALID == 1'b0) & (cmp147403_reg_3959 == 1'd1)) & (1'b1 == ap_CS_fsm_state116))) begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end
        end
        ap_ST_fsm_pp6_stage0 : begin
            if (~((1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln125_fu_3076_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln125_fu_3076_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state119;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            if ((~((gmem_BVALID == 1'b0) & (ap_predicate_op871_writeresp_state123 == 1'b1)) & (1'b1 == ap_CS_fsm_state123))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state123;
            end
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            if (((1'b1 == ap_CS_fsm_state131) & (icmp_ln68_fu_3134_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state123;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state132;
            end
        end
        ap_ST_fsm_state132 : begin
            if (((1'b1 == ap_CS_fsm_state132) & (icmp_ln69_fu_3179_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state131;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state133;
            end
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            if (((1'b1 == ap_CS_fsm_state137) & (icmp_ln73_fu_3303_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state132;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state138;
            end
        end
        ap_ST_fsm_state138 : begin
            if (((1'b1 == ap_CS_fsm_state138) & (cmp106321_reg_4697 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state143;
            end
        end
        ap_ST_fsm_pp7_stage0 : begin
            if (~((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if (((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state142;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln100_1_fu_2371_p2 = (indvar_flatten134_reg_830 + 96'd1);

assign add_ln100_fu_2361_p2 = (ap_phi_mux_c_1_phi_fu_846_p4 + 32'd1);

assign add_ln101_2_fu_2393_p2 = (ap_phi_mux_indvar_flatten103_phi_fu_858_p4 + 64'd1);

assign add_ln101_fu_2422_p2 = (select_ln100_fu_2407_p3 + 32'd1);

assign add_ln102_fu_2644_p2 = (select_ln101_reg_4401 + 32'd1);

assign add_ln1116_fu_3368_p2 = (add_ln75_reg_4845 + trunc_ln75_fu_3364_p1);

assign add_ln1118_1_fu_2649_p2 = ($signed(grp_fu_3408_p3) + $signed(trunc_ln103_reg_4431_pp4_iter2_reg));

assign add_ln1118_2_fu_2630_p2 = (trunc_ln727_4_reg_4436 + trunc_ln104_reg_4290);

assign add_ln1118_3_fu_2417_p2 = ($signed(sext_ln703_reg_4250) + $signed(zext_ln1118_3_fu_2414_p1));

assign add_ln1118_4_fu_2460_p2 = ($signed(sext_ln1118_4_fu_2456_p1) + $signed(sext_ln1118_3_fu_2446_p1));

assign add_ln1118_5_fu_2547_p2 = (trunc_ln727_1_reg_4390 + empty_75_reg_4265);

assign add_ln1118_6_fu_2563_p2 = (add_ln1118_4_fu_2460_p2 + zext_ln1118_4_fu_2559_p1);

assign add_ln1118_7_fu_2585_p2 = (p_shl8_cast_fu_2577_p3 + trunc_ln1118_fu_2569_p1);

assign add_ln1118_8_fu_2634_p2 = (add_ln1118_7_reg_4416 + add_ln1118_2_fu_2630_p2);

assign add_ln1118_fu_2442_p2 = (trunc_ln727_reg_4367 + empty_75_reg_4265);

assign add_ln114_1_fu_2739_p2 = (indvar_flatten179_reg_887 + 95'd1);

assign add_ln114_fu_2763_p2 = (i_4_reg_910 + 31'd1);

assign add_ln115_1_fu_3057_p2 = (indvar_flatten156_reg_921 + 64'd1);

assign add_ln115_fu_2868_p2 = (select_ln114_fu_2827_p3 + 32'd1);

assign add_ln116_fu_3052_p2 = (select_ln115_reg_4564 + 32'd1);

assign add_ln117_fu_3023_p2 = (l_2_reg_944 + 31'd1);

assign add_ln118_1_fu_2950_p2 = ($signed(sext_ln118_1_fu_2946_p1) + $signed(sext_ln118_fu_2936_p1));

assign add_ln118_2_fu_2995_p2 = (add_ln118_1_fu_2950_p2 + zext_ln118_3_fu_2991_p1);

assign add_ln118_3_fu_3017_p2 = (p_shl5_cast_fu_3009_p3 + trunc_ln118_3_fu_3001_p1);

assign add_ln118_4_fu_3042_p2 = (add_ln118_3_reg_4623 + trunc_ln118_5_fu_3038_p1);

assign add_ln118_fu_2893_p2 = ($signed(sext_ln115_fu_2858_p1) + $signed(zext_ln118_2_fu_2889_p1));

assign add_ln125_fu_3070_p2 = (i_5_reg_955 + 31'd1);

assign add_ln45_1_fu_1216_p2 = (indvar_flatten21_reg_541 + 95'd1);

assign add_ln45_fu_1245_p2 = ($signed(i_reg_552) + $signed(31'd1));

assign add_ln46_1_fu_1553_p2 = (indvar_flatten_reg_564 + 64'd1);

assign add_ln46_fu_1350_p2 = (select_ln45_fu_1292_p3 + 32'd1);

assign add_ln47_fu_1548_p2 = (select_ln46_reg_3752 + 32'd1);

assign add_ln48_fu_1520_p2 = (l_reg_600 + 31'd1);

assign add_ln49_1_fu_1447_p2 = ($signed(sext_ln49_1_fu_1443_p1) + $signed(sext_ln49_fu_1433_p1));

assign add_ln49_2_fu_1492_p2 = (add_ln49_1_fu_1447_p2 + zext_ln49_3_fu_1488_p1);

assign add_ln49_3_fu_1514_p2 = (p_shl1_cast_fu_1506_p3 + trunc_ln49_3_fu_1498_p1);

assign add_ln49_4_fu_1539_p2 = (add_ln49_3_reg_3774 + trunc_ln49_5_fu_1535_p1);

assign add_ln49_fu_1390_p2 = ($signed(sext_ln46_fu_1324_p1) + $signed(zext_ln49_2_fu_1386_p1));

assign add_ln58_fu_1566_p2 = (i_1_reg_611 + 31'd1);

assign add_ln61_fu_1616_p2 = (i_2_reg_622 + 31'd1);

assign add_ln68_2_fu_3128_p2 = (f_reg_966 + 31'd1);

assign add_ln68_fu_1667_p2 = (W_read_reg_3493 + 32'd1);

assign add_ln69_1_fu_3164_p2 = (indvar_flatten56_reg_977 + 96'd1);

assign add_ln69_fu_3184_p2 = (c_reg_988 + 32'd1);

assign add_ln703_1_fu_3378_p2 = (x_Dout_A + empty_62_reg_1066);

assign add_ln703_fu_2734_p2 = ($signed(r_V_reg_4300) + $signed(dbbuf_V_2_9_reg_820));

assign add_ln70_1_fu_3327_p2 = (indvar_flatten35_reg_999 + 64'd1);

assign add_ln70_fu_3227_p2 = (select_ln69_fu_3195_p3 + 32'd1);

assign add_ln71_fu_3322_p2 = (select_ln70_reg_4801 + 32'd1);

assign add_ln727_1_fu_2620_p2 = (p_shl7_cast_fu_2613_p3 + trunc_ln727_2_reg_4406);

assign add_ln727_2_fu_2625_p2 = (add_ln727_1_fu_2620_p2 + trunc_ln727_4_reg_4436);

assign add_ln727_fu_2533_p2 = (add_ln1118_4_fu_2460_p2 + zext_ln727_fu_2529_p1);

assign add_ln73_fu_3297_p2 = (fh_reg_1044 + 32'd1);

assign add_ln74_fu_3349_p2 = (fw_reg_1055 + 31'd1);

assign add_ln75_fu_3344_p2 = (empty_61_fu_3340_p2 + trunc_ln71_reg_4806);

assign add_ln87_1_fu_1731_p2 = (indvar_flatten90_reg_717 + 95'd1);

assign add_ln87_fu_1775_p2 = (i_3_reg_728 + 31'd1);

assign add_ln88_1_fu_2053_p2 = (indvar_flatten67_reg_740 + 64'd1);

assign add_ln88_fu_1842_p2 = (select_ln87_fu_1781_p3 + 32'd1);

assign add_ln89_fu_2048_p2 = (select_ln88_reg_4056 + 32'd1);

assign add_ln90_fu_2020_p2 = (l_1_reg_764 + 31'd1);

assign add_ln91_1_fu_1947_p2 = ($signed(sext_ln91_1_fu_1943_p1) + $signed(sext_ln91_fu_1933_p1));

assign add_ln91_2_fu_1992_p2 = (add_ln91_1_fu_1947_p2 + zext_ln91_3_fu_1988_p1);

assign add_ln91_3_fu_2014_p2 = (p_shl3_cast_fu_2006_p3 + trunc_ln91_3_fu_1998_p1);

assign add_ln91_4_fu_2039_p2 = (add_ln91_3_reg_4109 + trunc_ln91_5_fu_2035_p1);

assign add_ln91_fu_1881_p2 = ($signed(sext_ln88_fu_1821_p1) + $signed(zext_ln91_2_fu_1877_p1));

assign add_ln97_2_fu_2136_p2 = (f_1_reg_786 + 31'd1);

assign add_ln97_4_fu_2109_p2 = (indvar_flatten145_reg_775 + 63'd1);

assign add_ln97_fu_2094_p2 = (W_read_reg_3493 + 32'd1);

assign add_ln98_fu_2343_p2 = (select_ln97_reg_4237 + 32'd1);

assign add_ln99_fu_2254_p2 = (w_1_reg_809 + 32'd1);

assign addr_cmp_fu_2665_p2 = ((reuse_addr_reg_fu_240 == zext_ln1118_fu_2653_p1) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln48_reg_3784 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln48_reg_3784 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln58_reg_3813 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln58_reg_3813 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln61_reg_3865 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln61_reg_3865 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln90_reg_4119 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln90_reg_4119 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_block_state111_io));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_block_state111_io));
end

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_block_state118_io));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_block_state118_io));
end

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state102_io = ((gmem_AWREADY == 1'b0) & (icmp_ln114_reg_4528 == 1'd1));
end

assign ap_block_state109_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state111_io = ((gmem_WREADY == 1'b0) & (icmp_ln117_reg_4633_pp5_iter1_reg == 1'd0));
end

assign ap_block_state111_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state116 = ((gmem_BVALID == 1'b0) & (cmp147403_reg_3959 == 1'd1));
end

assign ap_block_state117_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state118_io = ((gmem_WREADY == 1'b0) & (icmp_ln125_reg_4662 == 1'd0));
end

assign ap_block_state118_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((gmem_ARREADY == 1'b0) & (icmp_ln45_1_reg_3649 == 1'd1));
end

always @ (*) begin
    ap_block_state123 = ((gmem_BVALID == 1'b0) & (ap_predicate_op871_writeresp_state123 == 1'b1));
end

assign ap_block_state139_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state140_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp0_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln48_reg_3784 == 1'd0));
end

assign ap_block_state30_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state39_pp1_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln58_reg_3813 == 1'd0));
end

assign ap_block_state47_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state48_pp2_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln61_reg_3865 == 1'd0));
end

assign ap_block_state70_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state71_pp3_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln90_reg_4119 == 1'd0));
end

assign ap_block_state72_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp4_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp4_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp4_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp4_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp4_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp4_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp4_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

always @ (*) begin
    ap_predicate_op871_writeresp_state123 = ((fwprop_read_reg_3454 == 1'd0) & (icmp_ln45_reg_3578 == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cast60_fu_1658_p1 = FH_read_reg_3479;

assign cmp176388_fu_1747_p2 = (($signed(outW_reg_3573) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign dbbuf_V_0_6_fu_2314_p3 = ((select_ln97_4_reg_4230[0:0] == 1'b1) ? dbbuf_V_0_4_fu_284 : dbbuf_V_0_fu_2307_p3);

assign dbbuf_V_0_7_fu_2321_p3 = ((select_ln97_4_reg_4230[0:0] == 1'b1) ? dbbuf_V_2_9_reg_820 : dbbuf_V_0_3_fu_280);

assign dbbuf_V_0_fu_2307_p3 = ((select_ln97_3_reg_4224[0:0] == 1'b1) ? dbbuf_V_2_9_reg_820 : dbbuf_V_0_4_fu_284);

assign dbbuf_V_2_8_fu_2300_p3 = ((select_ln97_4_reg_4230[0:0] == 1'b1) ? dbbuf_V_2_4_fu_288 : dbbuf_V_2_fu_2293_p3);

assign dbbuf_V_2_fu_2293_p3 = ((select_ln97_3_reg_4224[0:0] == 1'b1) ? dbbuf_V_2_4_fu_288 : dbbuf_V_2_9_reg_820);

assign dx_Addr_A = dx_Addr_A_orig << 32'd1;

assign dx_Clk_A = ap_clk;

assign dx_Din_A = {{grp_fu_3415_p3[28:13]}};

assign dx_Rst_A = ap_rst_n_inv;

assign dy_Addr_A = p_cast46_fu_2274_p1 << 32'd1;

assign dy_Clk_A = ap_clk;

assign dy_Din_A = 16'd0;

assign dy_Rst_A = ap_rst_n_inv;

assign dy_WEN_A = 2'd0;

assign empty_43_fu_1146_p1 = H[9:0];

assign empty_44_fu_1191_p1 = F_read_reg_3517[30:0];

assign empty_45_fu_1213_p1 = FW_read_reg_3458[30:0];

assign empty_50_fu_1460_p2 = (tmp_7_fu_1453_p3 + wt_read_reg_3544);

assign empty_57_fu_3147_p0 = f_reg_966[9:0];

assign empty_58_fu_3174_p2 = (trunc_ln70_fu_3170_p1 + empty_57_reg_4724);

assign empty_60_fu_3317_p2 = (tmp17_fu_3312_p2 + select_ln70_1_reg_4791);

assign empty_65_fu_1682_p1 = F_read_reg_3517[30:0];

assign empty_72_fu_1927_p2 = (tmp18_fu_1923_p2 + select_ln88_1_fu_1917_p3);

assign empty_73_fu_1960_p2 = (tmp_8_fu_1953_p3 + dwt_read_reg_3538);

assign empty_74_fu_2115_p1 = f_1_reg_786[1:0];

assign empty_75_fu_2251_p1 = select_ln97_reg_4237[5:0];

assign empty_76_fu_2269_p2 = (trunc_ln99_fu_2265_p1 + empty_81_reg_4255);

assign empty_78_fu_2438_p2 = ($signed(grp_fu_3392_p3) + $signed(trunc_ln101_reg_4362));

assign empty_79_fu_2160_p1 = add_ln97_2_fu_2136_p2[1:0];

assign empty_87_fu_2930_p2 = (tmp20_fu_2926_p2 + select_ln115_1_fu_2920_p3);

assign empty_88_fu_2963_p2 = (tmp_12_fu_2956_p3 + dwt_read_reg_3538);

assign empty_fu_1142_p1 = FH[9:0];

assign fw_cast_fu_3355_p1 = fw_reg_1055;

assign grp_fu_1091_p2 = (($signed(FW_read_reg_3458) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign grp_fu_1096_p2 = ((FH_read_reg_3479 == 32'd0) ? 1'b1 : 1'b0);

assign grp_fu_1101_p4 = {{db_read_reg_3528[31:1]}};

assign grp_fu_1110_p2 = (H_read_reg_3502 + 32'd1);

assign grp_fu_1115_p2 = (grp_fu_1110_p2 - FH_read_reg_3479);

assign grp_fu_1120_p2 = (trunc_ln42_reg_3568 + 10'd1);

assign grp_fu_1185_p0 = grp_fu_1185_p00;

assign grp_fu_1185_p00 = C_read_reg_3507;

assign grp_fu_1185_p1 = grp_fu_1185_p10;

assign grp_fu_1185_p10 = FH_read_reg_3479;

assign grp_fu_1201_p0 = grp_fu_1201_p00;

assign grp_fu_1201_p00 = empty_44_fu_1191_p1;

assign grp_fu_1201_p1 = grp_fu_1201_p10;

assign grp_fu_1201_p10 = bound_reg_3592;

assign grp_fu_1661_p0 = grp_fu_1661_p00;

assign grp_fu_1661_p00 = C_read_reg_3507;

assign grp_fu_1661_p1 = grp_fu_1661_p10;

assign grp_fu_1661_p10 = FH_read_reg_3479;

assign grp_fu_1692_p0 = grp_fu_1692_p00;

assign grp_fu_1692_p00 = empty_65_fu_1682_p1;

assign grp_fu_1692_p1 = grp_fu_1692_p10;

assign grp_fu_1692_p10 = bound61_reg_3910;

assign grp_fu_1704_p0 = FW_read_reg_3458[30:0];

assign grp_fu_1704_p1 = FH_read_reg_3479[30:0];

assign grp_fu_1713_p1 = C_read_reg_3507[30:0];

assign grp_fu_1722_p0 = j_1_reg_705[30:0];

assign grp_fu_1755_p0 = cast60_reg_3893;

assign grp_fu_1755_p1 = grp_fu_1755_p10;

assign grp_fu_1755_p10 = FW_read_reg_3458;

assign grp_fu_2072_p0 = grp_fu_2072_p00;

assign grp_fu_2072_p00 = C_read_reg_3507;

assign grp_fu_2072_p1 = grp_fu_2072_p10;

assign grp_fu_2072_p10 = bound95_reg_4143;

assign grp_fu_2085_p0 = grp_fu_2085_p00;

assign grp_fu_2085_p00 = empty_65_reg_3917;

assign grp_fu_2085_p1 = grp_fu_2085_p10;

assign grp_fu_2085_p10 = reg_1134;

assign grp_fu_2749_p0 = j_2_reg_898[30:0];

assign grp_fu_3104_p0 = grp_fu_3104_p00;

assign grp_fu_3104_p00 = reg_1134;

assign grp_fu_3104_p1 = grp_fu_3104_p10;

assign grp_fu_3104_p10 = sub_ln68_reg_3899;

assign grp_fu_3116_p0 = grp_fu_3116_p00;

assign grp_fu_3116_p00 = C_read_reg_3507;

assign grp_fu_3116_p1 = grp_fu_3116_p10;

assign grp_fu_3116_p10 = bound26_reg_4681;

assign grp_fu_3384_p0 = select_ln97_1_fu_2148_p3[9:0];

assign grp_fu_3384_p2 = select_ln97_fu_2200_p3[9:0];

assign grp_fu_3392_p0 = ap_phi_mux_c_1_phi_fu_846_p4[9:0];

assign grp_fu_3400_p0 = add_ln100_fu_2361_p2[9:0];

assign grp_fu_3408_p0 = ((select_ln100_6_fu_2494_p3[0:0] == 1'b1) ? p_mid199_fu_2516_p2 : select_ln100_5_fu_2483_p3);

assign grp_fu_3415_p1 = sext_ln1118_1_reg_4305;

assign grp_fu_3415_p2 = {{lhs_2_fu_2679_p3}, {13'd0}};

assign grp_fu_3423_p1 = sext_ln1118_1_reg_4305;

assign grp_fu_3423_p2 = {{dwbuf_V_q1}, {13'd0}};

assign grp_fu_3431_p0 = ((select_ln69_4_reg_4773[0:0] == 1'b1) ? p_mid131_fu_3262_p2 : select_ln69_3_fu_3251_p3);

assign grp_fu_3431_p2 = select_ln70_fu_3277_p3[9:0];

assign icmp_ln100_fu_2356_p2 = ((ap_phi_mux_indvar_flatten134_phi_fu_834_p4 == bound108_reg_4179) ? 1'b1 : 1'b0);

assign icmp_ln101_fu_2377_p2 = ((ap_phi_mux_indvar_flatten103_phi_fu_858_p4 == bound95_reg_4143) ? 1'b1 : 1'b0);

assign icmp_ln102_1_fu_2489_p2 = ((ap_phi_mux_fw_1_phi_fu_880_p4 == FW_read_reg_3458) ? 1'b1 : 1'b0);

assign icmp_ln102_fu_2104_p2 = ((FW_read_reg_3458 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_2758_p2 = ((indvar_flatten179_reg_887 == bound72_reg_3969) ? 1'b1 : 1'b0);

assign icmp_ln115_fu_2769_p2 = ((indvar_flatten156_reg_921 == bound61_reg_3910) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_2786_p2 = ((k_2_reg_933 == FH_read_reg_3479) ? 1'b1 : 1'b0);

assign icmp_ln117_fu_3033_p2 = ((l_2_cast_fu_3029_p1 == FW_read_reg_3458) ? 1'b1 : 1'b0);

assign icmp_ln125_fu_3076_p2 = ((i_5_reg_955 == empty_65_reg_3917) ? 1'b1 : 1'b0);

assign icmp_ln45_1_fu_1227_p2 = ((indvar_flatten21_reg_541 == bound4_reg_3634) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_1174_p2 = (($signed(F_read_reg_3517) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_1251_p2 = ((indvar_flatten_reg_564 == bound_reg_3592) ? 1'b1 : 1'b0);

assign icmp_ln47_1_fu_1339_p2 = ((k_reg_588 == FH_read_reg_3479) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_1530_p2 = ((l_cast_fu_1526_p1 == FW_read_reg_3458) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_1572_p2 = ((i_1_reg_611 == empty_44_reg_3598) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_1622_p2 = ((i_2_reg_622 == empty_44_reg_3598) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_3134_p2 = ((f_reg_966 == trunc_ln68_1_reg_4706) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_3179_p2 = ((indvar_flatten56_reg_977 == bound40_reg_4711) ? 1'b1 : 1'b0);

assign icmp_ln703_1_fu_2125_p2 = ((empty_74_fu_2115_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln703_2_fu_2172_p2 = ((empty_79_fu_2160_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln703_3_fu_2186_p2 = ((empty_79_fu_2160_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln703_fu_2119_p2 = ((empty_74_fu_2115_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_3190_p2 = ((indvar_flatten35_reg_999 == bound26_reg_4681) ? 1'b1 : 1'b0);

assign icmp_ln71_1_fu_3215_p2 = ((w_reg_1022 == sub_ln68_reg_3899) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_1677_p2 = ((add_ln68_fu_1667_p2 == FW_read_reg_3458) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_3303_p2 = ((fh_reg_1044 == FH_read_reg_3479) ? 1'b1 : 1'b0);

assign icmp_ln74_fu_3359_p2 = ((fw_cast_fu_3355_p1 == FW_read_reg_3458) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_1737_p2 = ((indvar_flatten90_reg_717 == bound72_reg_3969) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_1742_p2 = ((indvar_flatten67_reg_740 == bound61_reg_3910) ? 1'b1 : 1'b0);

assign icmp_ln89_1_fu_1831_p2 = ((k_1_reg_752 == FH_read_reg_3479) ? 1'b1 : 1'b0);

assign icmp_ln90_fu_2030_p2 = ((l_1_cast_fu_2026_p1 == FW_read_reg_3458) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_2131_p2 = ((indvar_flatten145_reg_775 == bound139_reg_4184) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_2142_p2 = ((h_1_reg_797 == reg_1134) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_2260_p2 = ((w_1_reg_809 == sub_ln97_reg_4174) ? 1'b1 : 1'b0);

assign l_1_cast_fu_2026_p1 = l_1_reg_764;

assign l_2_cast_fu_3029_p1 = l_2_reg_944;

assign l_cast_fu_1526_p1 = l_reg_600;

assign lhs_2_fu_2679_p3 = ((addr_cmp_reg_4477[0:0] == 1'b1) ? reuse_reg_fu_244 : dx_Dout_A);

assign or_ln101_fu_2500_p2 = (select_ln100_6_fu_2494_p3 | icmp_ln101_reg_4335);

assign or_ln115_fu_2798_p2 = (select_ln114_4_fu_2791_p3 | icmp_ln115_fu_2769_p2);

assign or_ln46_fu_1408_p2 = (select_ln45_5_reg_3726 | icmp_ln46_reg_3674);

assign or_ln70_fu_3273_p2 = (select_ln69_4_reg_4773 | icmp_ln70_reg_4755);

assign or_ln88_fu_1848_p2 = (select_ln87_4_fu_1836_p3 | icmp_ln88_reg_4004);

assign outH_fu_1154_p2 = (sub_ln41_fu_1150_p2 + 10'd1);

assign outW_fu_1168_p2 = (sub_ln42_fu_1160_p2 + 32'd1);

assign p_cast46_fu_2274_p1 = empty_76_fu_2269_p2;

assign p_mid131_fu_3262_p2 = (trunc_ln70_1_reg_4780 + empty_57_reg_4724);

assign p_mid199_fu_2516_p2 = (select_ln100_2_fu_2466_p3 + trunc_ln101_1_fu_2513_p1);

assign p_shl1_cast_fu_1506_p3 = {{trunc_ln49_4_fu_1502_p1}, {2'd0}};

assign p_shl3_cast_fu_2006_p3 = {{trunc_ln91_4_fu_2002_p1}, {2'd0}};

assign p_shl5_cast_fu_3009_p3 = {{trunc_ln118_4_fu_3005_p1}, {2'd0}};

assign p_shl7_cast_fu_2613_p3 = {{trunc_ln727_3_reg_4411}, {2'd0}};

assign p_shl8_cast_fu_2577_p3 = {{trunc_ln1118_1_fu_2573_p1}, {2'd0}};

assign select_ln100_1_fu_2382_p3 = ((icmp_ln101_fu_2377_p2[0:0] == 1'b1) ? add_ln100_reg_4320 : c_1_reg_842);

assign select_ln100_2_fu_2466_p3 = ((icmp_ln101_reg_4335[0:0] == 1'b1) ? grp_fu_3400_p3 : grp_fu_3392_p3);

assign select_ln100_3_fu_2471_p3 = ((icmp_ln101_reg_4335[0:0] == 1'b1) ? 6'd0 : trunc_ln727_reg_4367);

assign select_ln100_4_fu_2477_p3 = ((icmp_ln101_reg_4335[0:0] == 1'b1) ? empty_75_reg_4265 : add_ln1118_fu_2442_p2);

assign select_ln100_5_fu_2483_p3 = ((icmp_ln101_reg_4335[0:0] == 1'b1) ? grp_fu_3400_p3 : empty_78_fu_2438_p2);

assign select_ln100_6_fu_2494_p3 = ((icmp_ln101_reg_4335[0:0] == 1'b1) ? icmp_ln102_reg_4189 : icmp_ln102_1_fu_2489_p2);

assign select_ln100_fu_2407_p3 = ((icmp_ln101_reg_4335[0:0] == 1'b1) ? 32'd0 : ap_phi_mux_fh_1_phi_fu_869_p4);

assign select_ln101_1_fu_2522_p3 = ((select_ln100_6_fu_2494_p3[0:0] == 1'b1) ? trunc_ln727_1_reg_4390 : select_ln100_3_fu_2471_p3);

assign select_ln101_2_fu_2551_p3 = ((select_ln100_6_fu_2494_p3[0:0] == 1'b1) ? add_ln1118_5_fu_2547_p2 : select_ln100_4_fu_2477_p3);

assign select_ln101_4_fu_2599_p3 = ((select_ln100_6_fu_2494_p3[0:0] == 1'b1) ? add_ln101_reg_4384 : select_ln100_reg_4373);

assign select_ln101_5_fu_2432_p3 = ((icmp_ln101_reg_4335[0:0] == 1'b1) ? 64'd1 : add_ln101_2_reg_4357);

assign select_ln101_fu_2505_p3 = ((or_ln101_fu_2500_p2[0:0] == 1'b1) ? 32'd0 : ap_phi_mux_fw_1_phi_fu_880_p4);

assign select_ln114_1_fu_2774_p3 = ((icmp_ln115_fu_2769_p2[0:0] == 1'b1) ? add_ln114_fu_2763_p2 : i_4_reg_910);

assign select_ln114_2_fu_2914_p3 = ((icmp_ln115_reg_4537[0:0] == 1'b1) ? 31'd0 : empty_82_reg_4532);

assign select_ln114_3_fu_2862_p3 = ((icmp_ln115_reg_4537[0:0] == 1'b1) ? 4'd0 : trunc_ln118_reg_4523);

assign select_ln114_4_fu_2791_p3 = ((icmp_ln115_fu_2769_p2[0:0] == 1'b1) ? icmp_ln89_reg_3975 : icmp_ln116_fu_2786_p2);

assign select_ln114_fu_2827_p3 = ((icmp_ln115_reg_4537[0:0] == 1'b1) ? 32'd0 : j_2_reg_898);

assign select_ln115_1_fu_2920_p3 = ((select_ln114_4_reg_4557[0:0] == 1'b1) ? p_mid1154_reg_4607 : select_ln114_2_fu_2914_p3);

assign select_ln115_2_fu_2882_p3 = ((select_ln114_4_reg_4557[0:0] == 1'b1) ? trunc_ln118_1_fu_2878_p1 : select_ln114_3_fu_2862_p3);

assign select_ln115_3_fu_2899_p3 = ((select_ln114_4_reg_4557[0:0] == 1'b1) ? add_ln115_fu_2868_p2 : select_ln114_fu_2827_p3);

assign select_ln115_4_fu_3063_p3 = ((icmp_ln115_reg_4537[0:0] == 1'b1) ? 64'd1 : add_ln115_1_fu_3057_p2);

assign select_ln115_fu_2804_p3 = ((or_ln115_fu_2798_p2[0:0] == 1'b1) ? 32'd0 : k_2_reg_933);

assign select_ln45_1_fu_1299_p3 = ((icmp_ln46_reg_3674[0:0] == 1'b1) ? p_mid1_reg_3720 : empty_46_reg_3653);

assign select_ln45_2_fu_1256_p3 = ((icmp_ln46_fu_1251_p2[0:0] == 1'b1) ? add_ln45_fu_1245_p2 : i_reg_552);

assign select_ln45_3_fu_1328_p3 = ((icmp_ln46_reg_3674[0:0] == 1'b1) ? p_mid1_reg_3720 : tmp_reg_3659);

assign select_ln45_4_fu_1333_p3 = ((icmp_ln46_reg_3674[0:0] == 1'b1) ? 4'd0 : trunc_ln49_reg_3664);

assign select_ln45_5_fu_1344_p3 = ((icmp_ln46_reg_3674[0:0] == 1'b1) ? icmp_ln47_reg_3639 : icmp_ln47_1_fu_1339_p2);

assign select_ln45_fu_1292_p3 = ((icmp_ln46_reg_3674[0:0] == 1'b1) ? 32'd0 : j_reg_576);

assign select_ln46_1_fu_1366_p3 = ((select_ln45_5_fu_1344_p3[0:0] == 1'b1) ? tmp_mid1_fu_1360_p2 : select_ln45_3_fu_1328_p3);

assign select_ln46_2_fu_1378_p3 = ((select_ln45_5_fu_1344_p3[0:0] == 1'b1) ? trunc_ln49_1_fu_1374_p1 : select_ln45_4_fu_1333_p3);

assign select_ln46_3_fu_1396_p3 = ((select_ln45_5_fu_1344_p3[0:0] == 1'b1) ? add_ln46_fu_1350_p2 : select_ln45_fu_1292_p3);

assign select_ln46_4_fu_1559_p3 = ((icmp_ln46_reg_3674[0:0] == 1'b1) ? 64'd1 : add_ln46_1_fu_1553_p2);

assign select_ln46_fu_1412_p3 = ((or_ln46_fu_1408_p2[0:0] == 1'b1) ? 32'd0 : k_reg_588);

assign select_ln69_1_fu_3203_p3 = ((icmp_ln70_fu_3190_p2[0:0] == 1'b1) ? add_ln69_fu_3184_p2 : c_reg_988);

assign select_ln69_2_fu_3245_p3 = ((icmp_ln70_reg_4755[0:0] == 1'b1) ? 10'd0 : trunc_ln70_reg_4742);

assign select_ln69_3_fu_3251_p3 = ((icmp_ln70_reg_4755[0:0] == 1'b1) ? empty_57_reg_4724 : empty_58_reg_4747);

assign select_ln69_4_fu_3220_p3 = ((icmp_ln70_fu_3190_p2[0:0] == 1'b1) ? icmp_ln71_reg_3905 : icmp_ln71_1_fu_3215_p2);

assign select_ln69_fu_3195_p3 = ((icmp_ln70_fu_3190_p2[0:0] == 1'b1) ? 32'd0 : h_reg_1011);

assign select_ln70_1_fu_3256_p3 = ((select_ln69_4_reg_4773[0:0] == 1'b1) ? trunc_ln70_1_reg_4780 : select_ln69_2_fu_3245_p3);

assign select_ln70_3_fu_3237_p3 = ((select_ln69_4_fu_3220_p3[0:0] == 1'b1) ? add_ln70_fu_3227_p2 : select_ln69_fu_3195_p3);

assign select_ln70_4_fu_3333_p3 = ((icmp_ln70_reg_4755[0:0] == 1'b1) ? 64'd1 : add_ln70_1_fu_3327_p2);

assign select_ln70_fu_3277_p3 = ((or_ln70_fu_3273_p2[0:0] == 1'b1) ? 32'd0 : w_reg_1022);

assign select_ln87_1_fu_1788_p3 = ((icmp_ln88_reg_4004[0:0] == 1'b1) ? add_ln87_fu_1775_p2 : i_3_reg_728);

assign select_ln87_2_fu_1911_p3 = ((icmp_ln88_reg_4004[0:0] == 1'b1) ? 31'd0 : empty_68_reg_3996);

assign select_ln87_3_fu_1825_p3 = ((icmp_ln88_reg_4004[0:0] == 1'b1) ? 4'd0 : trunc_ln91_reg_3986);

assign select_ln87_4_fu_1836_p3 = ((icmp_ln88_reg_4004[0:0] == 1'b1) ? icmp_ln89_reg_3975 : icmp_ln89_1_fu_1831_p2);

assign select_ln87_fu_1781_p3 = ((icmp_ln88_reg_4004[0:0] == 1'b1) ? 32'd0 : j_1_reg_705);

assign select_ln88_1_fu_1917_p3 = ((select_ln87_4_reg_4051[0:0] == 1'b1) ? p_mid165_reg_4088 : select_ln87_2_fu_1911_p3);

assign select_ln88_2_fu_1869_p3 = ((select_ln87_4_fu_1836_p3[0:0] == 1'b1) ? trunc_ln91_1_fu_1865_p1 : select_ln87_3_fu_1825_p3);

assign select_ln88_3_fu_1887_p3 = ((select_ln87_4_fu_1836_p3[0:0] == 1'b1) ? add_ln88_fu_1842_p2 : select_ln87_fu_1781_p3);

assign select_ln88_4_fu_2059_p3 = ((icmp_ln88_reg_4004[0:0] == 1'b1) ? 64'd1 : add_ln88_1_fu_2053_p2);

assign select_ln88_fu_1853_p3 = ((or_ln88_fu_1848_p2[0:0] == 1'b1) ? 32'd0 : k_1_reg_752);

assign select_ln97_1_fu_2148_p3 = ((icmp_ln98_fu_2142_p2[0:0] == 1'b1) ? add_ln97_2_fu_2136_p2 : f_1_reg_786);

assign select_ln97_2_fu_2164_p3 = ((icmp_ln98_fu_2142_p2[0:0] == 1'b1) ? empty_79_fu_2160_p1 : empty_74_fu_2115_p1);

assign select_ln97_3_fu_2178_p3 = ((icmp_ln98_fu_2142_p2[0:0] == 1'b1) ? icmp_ln703_2_fu_2172_p2 : icmp_ln703_fu_2119_p2);

assign select_ln97_4_fu_2192_p3 = ((icmp_ln98_fu_2142_p2[0:0] == 1'b1) ? icmp_ln703_3_fu_2186_p2 : icmp_ln703_1_fu_2125_p2);

assign select_ln97_fu_2200_p3 = ((icmp_ln98_reg_4202[0:0] == 1'b1) ? 32'd0 : h_1_reg_797);

assign sext_ln1118_1_fu_2348_p0 = dy_Dout_A;

assign sext_ln1118_1_fu_2348_p1 = sext_ln1118_1_fu_2348_p0;

assign sext_ln1118_3_fu_2446_p1 = add_ln1118_3_reg_4378;

assign sext_ln1118_4_fu_2456_p1 = $signed(tmp_13_fu_2449_p3);

assign sext_ln115_fu_2858_p1 = $signed(sub_ln118_fu_2852_p2);

assign sext_ln117_fu_2978_p1 = $signed(trunc_ln2_fu_2968_p4);

assign sext_ln118_1_fu_2946_p1 = $signed(tmp_11_fu_2939_p3);

assign sext_ln118_fu_2936_p1 = add_ln118_reg_4586;

assign sext_ln125_fu_2816_p1 = $signed(grp_fu_1101_p4);

assign sext_ln46_fu_1324_p1 = $signed(sub_ln49_fu_1318_p2);

assign sext_ln48_fu_1475_p1 = $signed(trunc_ln5_fu_1465_p4);

assign sext_ln49_1_fu_1443_p1 = $signed(tmp_4_fu_1436_p3);

assign sext_ln49_fu_1433_p1 = add_ln49_reg_3736;

assign sext_ln58_fu_1277_p1 = $signed(trunc_ln3_fu_1268_p4);

assign sext_ln61_fu_1605_p1 = $signed(grp_fu_1101_p4);

assign sext_ln703_fu_2231_p1 = $signed(sub_ln1118_fu_2225_p2);

assign sext_ln88_fu_1821_p1 = $signed(sub_ln91_fu_1815_p2);

assign sext_ln90_fu_1975_p1 = $signed(trunc_ln_fu_1965_p4);

assign sext_ln91_1_fu_1943_p1 = $signed(tmp_6_fu_1936_p3);

assign sext_ln91_fu_1933_p1 = add_ln91_reg_4067;

assign sub_ln1118_fu_2225_p2 = (zext_ln1118_2_fu_2221_p1 - zext_ln1118_1_fu_2211_p1);

assign sub_ln118_fu_2852_p2 = (zext_ln118_1_fu_2848_p1 - zext_ln118_fu_2838_p1);

assign sub_ln41_fu_1150_p2 = ($signed(empty_43_reg_3554) - $signed(empty_reg_3549));

assign sub_ln42_fu_1160_p2 = (W_read_reg_3493 - FW_read_reg_3458);

assign sub_ln49_fu_1318_p2 = (zext_ln49_1_fu_1314_p1 - zext_ln49_fu_1304_p1);

assign sub_ln68_fu_1672_p2 = (add_ln68_fu_1667_p2 - FW_read_reg_3458);

assign sub_ln91_fu_1815_p2 = (zext_ln91_1_fu_1811_p1 - zext_ln91_fu_1799_p1);

assign sub_ln97_fu_2099_p2 = (add_ln97_fu_2094_p2 - FW_read_reg_3458);

assign tmp11_fu_1424_p2 = (trunc_ln47_fu_1420_p1 + mul_ln46_reg_3747);

assign tmp17_fu_3312_p2 = (mul_ln69_reg_4812 + trunc_ln73_fu_3308_p1);

assign tmp18_fu_1923_p2 = (mul_ln87_reg_4083 + empty_71_reg_4093);

assign tmp20_fu_2926_p2 = (mul_ln114_reg_4597 + empty_86_reg_4602);

assign tmp_10_fu_2841_p3 = {{trunc_ln114_reg_4551}, {2'd0}};

assign tmp_11_fu_2939_p3 = {{add_ln118_reg_4586}, {2'd0}};

assign tmp_12_fu_2956_p3 = {{empty_87_reg_4612}, {1'd0}};

assign tmp_13_fu_2449_p3 = {{add_ln1118_3_reg_4378}, {2'd0}};

assign tmp_1_fu_3152_p4 = f_reg_966[1:0];

assign tmp_3_fu_3085_p4 = i_5_reg_955[1:0];

assign tmp_4_fu_1436_p3 = {{add_ln49_reg_3736}, {2'd0}};

assign tmp_5_fu_1307_p3 = {{trunc_ln45_2_reg_3690}, {2'd0}};

assign tmp_6_fu_1936_p3 = {{add_ln91_reg_4067}, {2'd0}};

assign tmp_7_fu_1453_p3 = {{empty_49_reg_3763}, {1'd0}};

assign tmp_8_fu_1953_p3 = {{empty_72_reg_4098}, {1'd0}};

assign tmp_9_fu_2214_p3 = {{select_ln97_2_reg_4217}, {2'd0}};

assign tmp_fu_1236_p2 = (trunc_ln46_fu_1232_p1 + empty_46_reg_3653);

assign tmp_mid1_fu_1360_p2 = (trunc_ln46_1_fu_1356_p1 + select_ln45_1_fu_1299_p3);

assign tmp_s_fu_1803_p3 = {{trunc_ln87_3_fu_1795_p1}, {2'd0}};

assign trunc_ln100_2_fu_2389_p1 = select_ln100_1_fu_2382_p3[3:0];

assign trunc_ln101_1_fu_2513_p1 = add_ln101_reg_4384[9:0];

assign trunc_ln101_fu_2399_p1 = ap_phi_mux_fh_1_phi_fu_869_p4[9:0];

assign trunc_ln103_fu_2605_p1 = select_ln101_fu_2505_p3[9:0];

assign trunc_ln104_fu_2279_p1 = w_1_reg_809[7:0];

assign trunc_ln1118_1_fu_2573_p1 = add_ln1118_6_fu_2563_p2[5:0];

assign trunc_ln1118_fu_2569_p1 = add_ln1118_6_fu_2563_p2[7:0];

assign trunc_ln114_fu_2782_p1 = select_ln114_1_fu_2774_p3[1:0];

assign trunc_ln115_1_fu_2874_p1 = add_ln115_fu_2868_p2[30:0];

assign trunc_ln116_fu_2812_p1 = select_ln115_fu_2804_p3[30:0];

assign trunc_ln118_1_fu_2878_p1 = add_ln115_fu_2868_p2[3:0];

assign trunc_ln118_2_fu_2988_p1 = select_ln115_reg_4564[5:0];

assign trunc_ln118_3_fu_3001_p1 = add_ln118_2_fu_2995_p2[7:0];

assign trunc_ln118_4_fu_3005_p1 = add_ln118_2_fu_2995_p2[5:0];

assign trunc_ln118_5_fu_3038_p1 = l_2_reg_944[7:0];

assign trunc_ln118_fu_2754_p1 = j_2_reg_898[3:0];

assign trunc_ln2_fu_2968_p4 = {{empty_88_fu_2963_p2[31:1]}};

assign trunc_ln3_fu_1268_p4 = {{b_read_reg_3533[31:1]}};

assign trunc_ln42_fu_1164_p1 = sub_ln42_fu_1160_p2[9:0];

assign trunc_ln45_1_fu_1210_p1 = C_read_reg_3507[30:0];

assign trunc_ln45_2_fu_1264_p1 = select_ln45_2_fu_1256_p3[1:0];

assign trunc_ln45_fu_1207_p1 = FH_read_reg_3479[30:0];

assign trunc_ln46_1_fu_1356_p1 = add_ln46_fu_1350_p2[30:0];

assign trunc_ln46_fu_1232_p1 = j_reg_576[30:0];

assign trunc_ln47_fu_1420_p1 = select_ln46_fu_1412_p3[30:0];

assign trunc_ln49_1_fu_1374_p1 = add_ln46_fu_1350_p2[3:0];

assign trunc_ln49_2_fu_1485_p1 = select_ln46_reg_3752[5:0];

assign trunc_ln49_3_fu_1498_p1 = add_ln49_2_fu_1492_p2[7:0];

assign trunc_ln49_4_fu_1502_p1 = add_ln49_2_fu_1492_p2[5:0];

assign trunc_ln49_5_fu_1535_p1 = l_reg_600[7:0];

assign trunc_ln49_fu_1241_p1 = j_reg_576[3:0];

assign trunc_ln59_fu_1577_p1 = i_1_reg_611[1:0];

assign trunc_ln5_fu_1465_p4 = {{empty_50_fu_1460_p2[31:1]}};

assign trunc_ln62_fu_1627_p1 = i_2_reg_622[1:0];

assign trunc_ln68_1_fu_3125_p1 = F_read_reg_3517[30:0];

assign trunc_ln68_fu_3122_p1 = W_read_reg_3493[9:0];

assign trunc_ln69_fu_3211_p1 = select_ln69_1_fu_3203_p3[9:0];

assign trunc_ln70_1_fu_3233_p1 = add_ln70_fu_3227_p2[9:0];

assign trunc_ln70_fu_3170_p1 = h_reg_1011[9:0];

assign trunc_ln71_fu_3285_p1 = select_ln70_fu_3277_p3[9:0];

assign trunc_ln727_1_fu_2428_p1 = add_ln101_fu_2422_p2[5:0];

assign trunc_ln727_2_fu_2539_p1 = add_ln727_fu_2533_p2[7:0];

assign trunc_ln727_3_fu_2543_p1 = add_ln727_fu_2533_p2[5:0];

assign trunc_ln727_4_fu_2609_p1 = select_ln101_fu_2505_p3[7:0];

assign trunc_ln727_fu_2403_p1 = ap_phi_mux_fh_1_phi_fu_869_p4[5:0];

assign trunc_ln73_fu_3308_p1 = fh_reg_1044[9:0];

assign trunc_ln75_fu_3364_p1 = fw_reg_1055[9:0];

assign trunc_ln87_3_fu_1795_p1 = select_ln87_1_fu_1788_p3[1:0];

assign trunc_ln87_fu_1698_p1 = FW_read_reg_3458[30:0];

assign trunc_ln88_1_fu_1861_p1 = add_ln88_fu_1842_p2[30:0];

assign trunc_ln89_fu_1895_p1 = select_ln88_fu_1853_p3[30:0];

assign trunc_ln91_1_fu_1865_p1 = add_ln88_fu_1842_p2[3:0];

assign trunc_ln91_2_fu_1985_p1 = select_ln88_reg_4056[5:0];

assign trunc_ln91_3_fu_1998_p1 = add_ln91_2_fu_1992_p2[7:0];

assign trunc_ln91_4_fu_2002_p1 = add_ln91_2_fu_1992_p2[5:0];

assign trunc_ln91_5_fu_2035_p1 = l_1_reg_764[7:0];

assign trunc_ln91_fu_1727_p1 = j_1_reg_705[3:0];

assign trunc_ln97_fu_2091_p1 = W_read_reg_3493[9:0];

assign trunc_ln98_fu_2207_p1 = select_ln97_fu_2200_p3[9:0];

assign trunc_ln99_fu_2265_p1 = w_1_reg_809[9:0];

assign trunc_ln_fu_1965_p4 = {{empty_73_fu_1960_p2[31:1]}};

assign x_Addr_A = x_Addr_A_orig << 32'd1;

assign x_Clk_A = ap_clk;

assign x_Din_A = 16'd0;

assign x_Rst_A = ap_rst_n_inv;

assign x_WEN_A = 2'd0;

assign y_Addr_A = y_Addr_A_orig << 32'd1;

assign y_Clk_A = ap_clk;

assign y_Rst_A = ap_rst_n_inv;

assign zext_ln1116_fu_3373_p1 = add_ln1116_fu_3368_p2;

assign zext_ln1118_1_fu_2211_p1 = select_ln97_2_reg_4217;

assign zext_ln1118_2_fu_2221_p1 = tmp_9_fu_2214_p3;

assign zext_ln1118_3_fu_2414_p1 = trunc_ln100_2_reg_4352;

assign zext_ln1118_4_fu_2559_p1 = select_ln101_2_fu_2551_p3;

assign zext_ln1118_5_fu_2639_p1 = add_ln1118_8_fu_2634_p2;

assign zext_ln1118_fu_2653_p1 = add_ln1118_1_fu_2649_p2;

assign zext_ln118_1_fu_2848_p1 = tmp_10_fu_2841_p3;

assign zext_ln118_2_fu_2889_p1 = select_ln115_2_fu_2882_p3;

assign zext_ln118_3_fu_2991_p1 = trunc_ln118_2_fu_2988_p1;

assign zext_ln118_4_fu_3047_p1 = add_ln118_4_fu_3042_p2;

assign zext_ln118_fu_2838_p1 = trunc_ln114_reg_4551;

assign zext_ln49_1_fu_1314_p1 = tmp_5_fu_1307_p3;

assign zext_ln49_2_fu_1386_p1 = select_ln46_2_fu_1378_p3;

assign zext_ln49_3_fu_1488_p1 = trunc_ln49_2_fu_1485_p1;

assign zext_ln49_4_fu_1544_p1 = add_ln49_4_reg_3788_pp0_iter1_reg;

assign zext_ln49_fu_1304_p1 = trunc_ln45_2_reg_3690;

assign zext_ln727_1_fu_2712_p1 = add_ln727_2_reg_4442_pp4_iter4_reg;

assign zext_ln727_fu_2529_p1 = select_ln101_1_fu_2522_p3;

assign zext_ln72_fu_3293_p1 = $unsigned(grp_fu_3431_p3);

assign zext_ln91_1_fu_1811_p1 = tmp_s_fu_1803_p3;

assign zext_ln91_2_fu_1877_p1 = select_ln88_2_fu_1869_p3;

assign zext_ln91_3_fu_1988_p1 = trunc_ln91_2_fu_1985_p1;

assign zext_ln91_4_fu_2044_p1 = add_ln91_4_reg_4123_pp3_iter1_reg;

assign zext_ln91_fu_1799_p1 = trunc_ln87_3_fu_1795_p1;

always @ (posedge ap_clk) begin
    cast60_reg_3893[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //conv_combined
