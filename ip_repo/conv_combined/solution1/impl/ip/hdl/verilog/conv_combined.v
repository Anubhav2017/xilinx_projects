// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv_combined_conv_combined,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=13030,HLS_SYN_LUT=11419,HLS_VERSION=2020_2}" *)

module conv_combined (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        x_Addr_A,
        x_EN_A,
        x_WEN_A,
        x_Din_A,
        x_Dout_A,
        x_Clk_A,
        x_Rst_A,
        dx_Addr_A,
        dx_EN_A,
        dx_WEN_A,
        dx_Din_A,
        dx_Dout_A,
        dx_Clk_A,
        dx_Rst_A,
        y_Addr_A,
        y_EN_A,
        y_WEN_A,
        y_Din_A,
        y_Dout_A,
        y_Clk_A,
        y_Rst_A,
        dy_Addr_A,
        dy_EN_A,
        dy_WEN_A,
        dy_Din_A,
        dy_Dout_A,
        dy_Clk_A,
        dy_Rst_A,
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 112'd1;
parameter    ap_ST_fsm_state2 = 112'd2;
parameter    ap_ST_fsm_state3 = 112'd4;
parameter    ap_ST_fsm_state4 = 112'd8;
parameter    ap_ST_fsm_state5 = 112'd16;
parameter    ap_ST_fsm_state6 = 112'd32;
parameter    ap_ST_fsm_state7 = 112'd64;
parameter    ap_ST_fsm_state8 = 112'd128;
parameter    ap_ST_fsm_state9 = 112'd256;
parameter    ap_ST_fsm_state10 = 112'd512;
parameter    ap_ST_fsm_state11 = 112'd1024;
parameter    ap_ST_fsm_state12 = 112'd2048;
parameter    ap_ST_fsm_state13 = 112'd4096;
parameter    ap_ST_fsm_state14 = 112'd8192;
parameter    ap_ST_fsm_state15 = 112'd16384;
parameter    ap_ST_fsm_state16 = 112'd32768;
parameter    ap_ST_fsm_state17 = 112'd65536;
parameter    ap_ST_fsm_state18 = 112'd131072;
parameter    ap_ST_fsm_state19 = 112'd262144;
parameter    ap_ST_fsm_state20 = 112'd524288;
parameter    ap_ST_fsm_state21 = 112'd1048576;
parameter    ap_ST_fsm_state22 = 112'd2097152;
parameter    ap_ST_fsm_state23 = 112'd4194304;
parameter    ap_ST_fsm_state24 = 112'd8388608;
parameter    ap_ST_fsm_state25 = 112'd16777216;
parameter    ap_ST_fsm_state26 = 112'd33554432;
parameter    ap_ST_fsm_state27 = 112'd67108864;
parameter    ap_ST_fsm_pp0_stage0 = 112'd134217728;
parameter    ap_ST_fsm_state31 = 112'd268435456;
parameter    ap_ST_fsm_pp1_stage0 = 112'd536870912;
parameter    ap_ST_fsm_pp1_stage1 = 112'd1073741824;
parameter    ap_ST_fsm_state43 = 112'd2147483648;
parameter    ap_ST_fsm_state44 = 112'd4294967296;
parameter    ap_ST_fsm_state45 = 112'd8589934592;
parameter    ap_ST_fsm_state46 = 112'd17179869184;
parameter    ap_ST_fsm_state47 = 112'd34359738368;
parameter    ap_ST_fsm_state48 = 112'd68719476736;
parameter    ap_ST_fsm_state49 = 112'd137438953472;
parameter    ap_ST_fsm_state50 = 112'd274877906944;
parameter    ap_ST_fsm_state51 = 112'd549755813888;
parameter    ap_ST_fsm_state52 = 112'd1099511627776;
parameter    ap_ST_fsm_state53 = 112'd2199023255552;
parameter    ap_ST_fsm_state54 = 112'd4398046511104;
parameter    ap_ST_fsm_state55 = 112'd8796093022208;
parameter    ap_ST_fsm_state56 = 112'd17592186044416;
parameter    ap_ST_fsm_state57 = 112'd35184372088832;
parameter    ap_ST_fsm_state58 = 112'd70368744177664;
parameter    ap_ST_fsm_state59 = 112'd140737488355328;
parameter    ap_ST_fsm_state60 = 112'd281474976710656;
parameter    ap_ST_fsm_state61 = 112'd562949953421312;
parameter    ap_ST_fsm_state62 = 112'd1125899906842624;
parameter    ap_ST_fsm_state63 = 112'd2251799813685248;
parameter    ap_ST_fsm_pp2_stage0 = 112'd4503599627370496;
parameter    ap_ST_fsm_state67 = 112'd9007199254740992;
parameter    ap_ST_fsm_state68 = 112'd18014398509481984;
parameter    ap_ST_fsm_state69 = 112'd36028797018963968;
parameter    ap_ST_fsm_state70 = 112'd72057594037927936;
parameter    ap_ST_fsm_state71 = 112'd144115188075855872;
parameter    ap_ST_fsm_state72 = 112'd288230376151711744;
parameter    ap_ST_fsm_state73 = 112'd576460752303423488;
parameter    ap_ST_fsm_state74 = 112'd1152921504606846976;
parameter    ap_ST_fsm_state75 = 112'd2305843009213693952;
parameter    ap_ST_fsm_state76 = 112'd4611686018427387904;
parameter    ap_ST_fsm_state77 = 112'd9223372036854775808;
parameter    ap_ST_fsm_state78 = 112'd18446744073709551616;
parameter    ap_ST_fsm_state79 = 112'd36893488147419103232;
parameter    ap_ST_fsm_state80 = 112'd73786976294838206464;
parameter    ap_ST_fsm_pp3_stage0 = 112'd147573952589676412928;
parameter    ap_ST_fsm_pp3_stage1 = 112'd295147905179352825856;
parameter    ap_ST_fsm_state94 = 112'd590295810358705651712;
parameter    ap_ST_fsm_state95 = 112'd1180591620717411303424;
parameter    ap_ST_fsm_state96 = 112'd2361183241434822606848;
parameter    ap_ST_fsm_state97 = 112'd4722366482869645213696;
parameter    ap_ST_fsm_state98 = 112'd9444732965739290427392;
parameter    ap_ST_fsm_state99 = 112'd18889465931478580854784;
parameter    ap_ST_fsm_state100 = 112'd37778931862957161709568;
parameter    ap_ST_fsm_state101 = 112'd75557863725914323419136;
parameter    ap_ST_fsm_state102 = 112'd151115727451828646838272;
parameter    ap_ST_fsm_pp4_stage0 = 112'd302231454903657293676544;
parameter    ap_ST_fsm_state106 = 112'd604462909807314587353088;
parameter    ap_ST_fsm_state107 = 112'd1208925819614629174706176;
parameter    ap_ST_fsm_state108 = 112'd2417851639229258349412352;
parameter    ap_ST_fsm_state109 = 112'd4835703278458516698824704;
parameter    ap_ST_fsm_state110 = 112'd9671406556917033397649408;
parameter    ap_ST_fsm_pp5_stage0 = 112'd19342813113834066795298816;
parameter    ap_ST_fsm_state114 = 112'd38685626227668133590597632;
parameter    ap_ST_fsm_state115 = 112'd77371252455336267181195264;
parameter    ap_ST_fsm_state116 = 112'd154742504910672534362390528;
parameter    ap_ST_fsm_state117 = 112'd309485009821345068724781056;
parameter    ap_ST_fsm_state118 = 112'd618970019642690137449562112;
parameter    ap_ST_fsm_state119 = 112'd1237940039285380274899124224;
parameter    ap_ST_fsm_state120 = 112'd2475880078570760549798248448;
parameter    ap_ST_fsm_state121 = 112'd4951760157141521099596496896;
parameter    ap_ST_fsm_state122 = 112'd9903520314283042199192993792;
parameter    ap_ST_fsm_state123 = 112'd19807040628566084398385987584;
parameter    ap_ST_fsm_state124 = 112'd39614081257132168796771975168;
parameter    ap_ST_fsm_state125 = 112'd79228162514264337593543950336;
parameter    ap_ST_fsm_state126 = 112'd158456325028528675187087900672;
parameter    ap_ST_fsm_state127 = 112'd316912650057057350374175801344;
parameter    ap_ST_fsm_state128 = 112'd633825300114114700748351602688;
parameter    ap_ST_fsm_state129 = 112'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state130 = 112'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state131 = 112'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state132 = 112'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state133 = 112'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state134 = 112'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state135 = 112'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state136 = 112'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state137 = 112'd324518553658426726783156020576256;
parameter    ap_ST_fsm_pp6_stage0 = 112'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state140 = 112'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state141 = 112'd2596148429267413814265248164610048;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
output  [31:0] x_Addr_A;
output   x_EN_A;
output  [1:0] x_WEN_A;
output  [15:0] x_Din_A;
input  [15:0] x_Dout_A;
output   x_Clk_A;
output   x_Rst_A;
output  [31:0] dx_Addr_A;
output   dx_EN_A;
output  [1:0] dx_WEN_A;
output  [15:0] dx_Din_A;
input  [15:0] dx_Dout_A;
output   dx_Clk_A;
output   dx_Rst_A;
output  [31:0] y_Addr_A;
output   y_EN_A;
output  [1:0] y_WEN_A;
output  [15:0] y_Din_A;
input  [15:0] y_Dout_A;
output   y_Clk_A;
output   y_Rst_A;
output  [31:0] dy_Addr_A;
output   dy_EN_A;
output  [1:0] dy_WEN_A;
output  [15:0] dy_Din_A;
input  [15:0] dy_Dout_A;
output   dy_Clk_A;
output   dy_Rst_A;
input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1:0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
output   interrupt;

reg x_EN_A;
reg dx_EN_A;
reg[1:0] dx_WEN_A;
reg y_EN_A;
reg[1:0] y_WEN_A;
reg[15:0] y_Din_A;
reg dy_EN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [111:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] wt;
wire   [31:0] dwt;
wire   [31:0] b;
wire   [31:0] db;
wire   [31:0] F;
wire   [31:0] C;
wire   [31:0] H;
wire   [31:0] W;
wire   [31:0] FH;
wire   [31:0] FW;
wire    fwprop;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state21;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln48_reg_3640;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage1;
reg   [0:0] icmp_ln58_reg_3669;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter4;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln58_reg_3669_pp1_iter3_reg;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] icmp_ln58_reg_3669_pp1_iter4_reg;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln88_reg_3913;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state102;
reg    gmem_blk_n_W;
reg    ap_enable_reg_pp4_iter2;
wire    ap_block_pp4_stage0;
reg   [0:0] icmp_ln115_reg_4410;
reg   [0:0] icmp_ln115_reg_4410_pp4_iter1_reg;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state110;
reg   [0:0] cmp144403_reg_3774;
wire    ap_CS_fsm_state96;
reg   [0:0] icmp_ln112_reg_4305;
reg    ap_enable_reg_pp5_iter2;
wire    ap_block_pp5_stage0;
reg   [0:0] icmp_ln123_reg_4439;
reg   [0:0] icmp_ln123_reg_4439_pp5_iter1_reg;
wire    ap_CS_fsm_state118;
reg   [0:0] icmp_ln45_reg_3447;
reg   [0:0] fwprop_read_reg_3323;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg   [31:0] gmem_AWADDR;
reg   [31:0] gmem_AWLEN;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg   [15:0] gmem_WDATA;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
reg   [31:0] gmem_ARLEN;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [15:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [30:0] l_reg_618;
reg   [30:0] i_1_reg_629;
reg   [30:0] l_1_reg_699;
reg   [95:0] indvar_flatten168_reg_766;
reg   [31:0] c_1_reg_777;
reg   [63:0] indvar_flatten137_reg_789;
reg   [31:0] fh_1_reg_800;
reg   [31:0] fw_1_reg_811;
reg   [30:0] l_2_reg_879;
reg   [30:0] i_4_reg_890;
reg   [30:0] fw_reg_1003;
reg   [15:0] empty_56_reg_1014;
wire   [31:0] grp_fu_1063_p2;
reg   [31:0] reg_1073;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state71;
(* use_dsp48 = "no" *) wire  signed [9:0] grp_fu_1068_p2;
reg  signed [9:0] reg_1077;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state130;
wire   [15:0] dbbuf_V_q0;
reg   [15:0] reg_1081;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_state111_pp5_stage0_iter0;
wire    ap_block_state112_pp5_stage0_iter1;
wire    ap_block_state113_pp5_stage0_iter2;
reg    ap_block_state113_io;
reg    ap_block_pp5_stage0_11001;
reg   [31:0] FW_read_reg_3327;
reg   [31:0] FH_read_reg_3348;
reg   [31:0] W_read_reg_3362;
reg   [31:0] H_read_reg_3371;
reg   [31:0] C_read_reg_3376;
reg   [31:0] F_read_reg_3386;
reg   [31:0] db_read_reg_3395;
reg   [31:0] b_read_reg_3400;
reg   [31:0] dwt_read_reg_3405;
reg   [31:0] wt_read_reg_3411;
wire   [9:0] empty_fu_1087_p1;
reg   [9:0] empty_reg_3416;
wire  signed [9:0] empty_41_fu_1091_p1;
reg  signed [9:0] empty_41_reg_3421;
(* use_dsp48 = "no" *) wire  signed [9:0] outH_fu_1099_p2;
reg  signed [9:0] outH_reg_3430;
wire    ap_CS_fsm_state2;
wire   [9:0] trunc_ln42_fu_1109_p1;
reg   [9:0] trunc_ln42_reg_3437;
wire   [31:0] outW_fu_1113_p2;
reg   [31:0] outW_reg_3442;
wire   [0:0] icmp_ln45_fu_1119_p2;
wire   [63:0] grp_fu_1130_p2;
reg   [63:0] bound_reg_3461;
wire    ap_CS_fsm_state3;
wire   [30:0] empty_42_fu_1136_p1;
reg   [30:0] empty_42_reg_3467;
wire    ap_CS_fsm_state4;
wire   [0:0] grp_fu_1039_p2;
reg   [0:0] cmp57428_reg_3482;
wire    ap_CS_fsm_state8;
wire  signed [30:0] trunc_ln45_fu_1152_p1;
reg  signed [30:0] trunc_ln45_reg_3486;
wire  signed [30:0] trunc_ln45_1_fu_1155_p1;
reg  signed [30:0] trunc_ln45_1_reg_3491;
wire  signed [30:0] empty_43_fu_1158_p1;
reg  signed [30:0] empty_43_reg_3497;
wire   [94:0] grp_fu_1146_p2;
reg   [94:0] bound4_reg_3502;
wire   [0:0] grp_fu_1044_p2;
reg   [0:0] icmp_ln47_reg_3507;
wire   [94:0] add_ln45_1_fu_1161_p2;
reg   [94:0] add_ln45_1_reg_3512;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln45_1_fu_1172_p2;
reg   [0:0] icmp_ln45_1_reg_3517;
wire   [30:0] grp_fu_1167_p2;
reg   [30:0] empty_44_reg_3521;
wire    ap_CS_fsm_state10;
wire   [30:0] tmp_fu_1181_p2;
reg   [30:0] tmp_reg_3527;
wire    ap_CS_fsm_state11;
wire   [4:0] trunc_ln49_fu_1186_p1;
reg   [4:0] trunc_ln49_reg_3532;
wire  signed [30:0] add_ln45_fu_1190_p2;
reg  signed [30:0] add_ln45_reg_3537;
wire   [0:0] icmp_ln46_fu_1196_p2;
reg   [0:0] icmp_ln46_reg_3542;
wire   [30:0] select_ln45_2_fu_1201_p3;
reg   [30:0] select_ln45_2_reg_3552;
wire   [2:0] trunc_ln45_2_fu_1209_p1;
reg   [2:0] trunc_ln45_2_reg_3557;
wire   [0:0] select_ln45_5_fu_1218_p3;
reg   [0:0] select_ln45_5_reg_3563;
wire  signed [31:0] sext_ln58_fu_1234_p1;
reg  signed [31:0] sext_ln58_reg_3571;
wire  signed [31:0] sext_ln58_1_fu_1238_p1;
reg  signed [31:0] sext_ln58_1_reg_3576;
wire   [30:0] grp_fu_1242_p2;
reg   [30:0] p_mid1_reg_3581;
wire    ap_CS_fsm_state13;
wire  signed [30:0] select_ln46_1_fu_1309_p3;
reg  signed [30:0] select_ln46_1_reg_3587;
wire    ap_CS_fsm_state14;
wire   [6:0] add_ln49_1_fu_1331_p2;
reg   [6:0] add_ln49_1_reg_3592;
wire   [31:0] select_ln46_3_fu_1337_p3;
reg   [31:0] select_ln46_3_reg_3598;
wire   [30:0] grp_fu_1344_p2;
reg   [30:0] mul_ln46_reg_3603;
wire    ap_CS_fsm_state16;
wire   [31:0] select_ln46_fu_1352_p3;
reg   [31:0] select_ln46_reg_3608;
wire    ap_CS_fsm_state17;
wire  signed [30:0] tmp11_fu_1364_p2;
reg  signed [30:0] tmp11_reg_3614;
wire   [30:0] grp_fu_1369_p2;
reg   [30:0] empty_47_reg_3619;
wire    ap_CS_fsm_state19;
reg   [31:0] gmem_addr_2_reg_3624;
wire    ap_CS_fsm_state20;
wire   [9:0] add_ln49_4_fu_1454_p2;
reg   [9:0] add_ln49_4_reg_3630;
wire   [30:0] add_ln48_fu_1460_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state28_pp0_stage0_iter0;
reg    ap_block_state29_pp0_stage0_iter1;
wire    ap_block_state30_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln48_fu_1470_p2;
reg   [0:0] icmp_ln48_reg_3640_pp0_iter1_reg;
wire   [9:0] add_ln49_5_fu_1479_p2;
reg   [9:0] add_ln49_5_reg_3644;
reg   [9:0] add_ln49_5_reg_3644_pp0_iter1_reg;
reg   [15:0] gmem_addr_2_read_reg_3649;
wire   [31:0] add_ln47_fu_1488_p2;
wire    ap_CS_fsm_state31;
wire   [63:0] select_ln46_4_fu_1499_p3;
wire   [30:0] add_ln58_fu_1506_p2;
reg   [30:0] add_ln58_reg_3664;
wire    ap_block_state32_pp1_stage0_iter0;
wire    ap_block_state34_pp1_stage0_iter1;
reg    ap_block_state34_io;
wire    ap_block_state36_pp1_stage0_iter2;
wire    ap_block_state38_pp1_stage0_iter3;
reg    ap_block_state40_pp1_stage0_iter4;
wire    ap_block_state42_pp1_stage0_iter5;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln58_fu_1512_p2;
reg   [0:0] icmp_ln58_reg_3669_pp1_iter1_reg;
reg   [0:0] icmp_ln58_reg_3669_pp1_iter2_reg;
wire   [31:0] zext_ln59_fu_1517_p1;
reg   [31:0] zext_ln59_reg_3673;
reg   [31:0] zext_ln59_reg_3673_pp1_iter1_reg;
reg   [31:0] zext_ln59_reg_3673_pp1_iter2_reg;
reg   [31:0] zext_ln59_reg_3673_pp1_iter3_reg;
reg   [31:0] zext_ln59_reg_3673_pp1_iter4_reg;
reg   [31:0] gmem_addr_reg_3680;
reg   [31:0] gmem_addr_1_reg_3686;
wire    ap_block_state33_pp1_stage1_iter0;
reg    ap_block_state33_io;
wire    ap_block_state35_pp1_stage1_iter1;
wire    ap_block_state37_pp1_stage1_iter2;
wire    ap_block_state39_pp1_stage1_iter3;
reg    ap_block_state41_pp1_stage1_iter4;
reg    ap_block_pp1_stage1_11001;
reg   [15:0] gmem_addr_read_reg_3692;
reg   [15:0] gmem_addr_1_read_reg_3697;
wire   [63:0] cast94_fu_1545_p1;
reg   [63:0] cast94_reg_3707;
wire   [31:0] sub_ln66_fu_1559_p2;
reg   [31:0] sub_ln66_reg_3713;
wire   [0:0] icmp_ln69_fu_1564_p2;
reg   [0:0] icmp_ln69_reg_3719;
wire   [63:0] grp_fu_1548_p2;
reg   [63:0] bound95_reg_3725;
wire    ap_CS_fsm_state44;
wire   [30:0] empty_59_fu_1569_p1;
reg   [30:0] empty_59_reg_3732;
wire    ap_CS_fsm_state45;
wire  signed [30:0] trunc_ln85_fu_1585_p1;
reg  signed [30:0] trunc_ln85_reg_3748;
wire    ap_CS_fsm_state46;
wire  signed [30:0] grp_fu_1591_p2;
reg  signed [30:0] empty_60_reg_3760;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state49;
wire  signed [30:0] grp_fu_1600_p2;
reg  signed [30:0] empty_61_reg_3778;
wire   [94:0] grp_fu_1579_p2;
reg   [94:0] bound106_reg_3784;
reg   [0:0] icmp_ln87_reg_3790;
wire    ap_CS_fsm_state50;
wire   [4:0] trunc_ln89_fu_1614_p1;
reg   [4:0] trunc_ln89_reg_3801;
wire   [94:0] add_ln85_1_fu_1618_p2;
reg   [94:0] add_ln85_1_reg_3806;
wire    ap_CS_fsm_state51;
wire   [30:0] grp_fu_1609_p2;
reg   [30:0] empty_62_reg_3811;
wire   [0:0] icmp_ln86_fu_1629_p2;
reg   [0:0] icmp_ln86_reg_3819;
wire   [0:0] icmp_ln85_fu_1624_p2;
wire   [0:0] cmp173388_fu_1634_p2;
reg   [0:0] cmp173388_reg_3830;
wire  signed [30:0] select_ln85_1_fu_1660_p3;
reg  signed [30:0] select_ln85_1_reg_3839;
wire    ap_CS_fsm_state52;
wire   [0:0] select_ln85_4_fu_1708_p3;
reg   [0:0] select_ln85_4_reg_3845;
wire   [31:0] select_ln86_fu_1725_p3;
reg   [31:0] select_ln86_reg_3850;
wire  signed [30:0] trunc_ln86_1_fu_1733_p1;
reg  signed [30:0] trunc_ln86_1_reg_3856;
wire   [6:0] add_ln89_1_fu_1753_p2;
reg   [6:0] add_ln89_1_reg_3861;
wire   [31:0] select_ln86_3_fu_1759_p3;
reg   [31:0] select_ln86_3_reg_3867;
wire  signed [30:0] trunc_ln87_fu_1767_p1;
reg  signed [30:0] trunc_ln87_reg_3872;
wire   [30:0] grp_fu_1771_p2;
reg   [30:0] mul_ln85_reg_3877;
wire    ap_CS_fsm_state54;
wire   [30:0] grp_fu_1775_p2;
reg   [30:0] p_mid199_reg_3882;
wire   [30:0] grp_fu_1779_p2;
reg   [30:0] empty_65_reg_3887;
wire   [30:0] empty_66_fu_1799_p2;
reg   [30:0] empty_66_reg_3892;
wire    ap_CS_fsm_state55;
reg   [31:0] gmem_addr_4_reg_3897;
wire    ap_CS_fsm_state56;
wire   [9:0] add_ln89_4_fu_1886_p2;
reg   [9:0] add_ln89_4_reg_3903;
wire   [30:0] add_ln88_fu_1892_p2;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state64_pp2_stage0_iter0;
reg    ap_block_state65_pp2_stage0_iter1;
wire    ap_block_state66_pp2_stage0_iter2;
reg    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln88_fu_1902_p2;
reg   [0:0] icmp_ln88_reg_3913_pp2_iter1_reg;
wire   [9:0] add_ln89_5_fu_1911_p2;
reg   [9:0] add_ln89_5_reg_3917;
reg   [9:0] add_ln89_5_reg_3917_pp2_iter1_reg;
reg   [15:0] gmem_addr_4_read_reg_3922;
wire   [31:0] add_ln87_fu_1920_p2;
wire    ap_CS_fsm_state67;
wire   [63:0] select_ln86_4_fu_1931_p3;
wire   [63:0] grp_fu_1642_p2;
reg   [63:0] bound129_reg_3937;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state72;
wire  signed [9:0] trunc_ln95_fu_1963_p1;
reg  signed [9:0] trunc_ln95_reg_3963;
wire   [31:0] sub_ln95_fu_1971_p2;
reg   [31:0] sub_ln95_reg_3968;
wire   [95:0] grp_fu_1944_p2;
reg   [95:0] bound142_reg_3973;
wire   [62:0] grp_fu_1957_p2;
reg   [62:0] bound175_reg_3978;
wire   [0:0] icmp_ln100_fu_1976_p2;
reg   [0:0] icmp_ln100_reg_3983;
wire   [62:0] add_ln95_4_fu_1981_p2;
reg   [62:0] add_ln95_4_reg_3988;
wire    ap_CS_fsm_state74;
wire   [0:0] icmp_ln96_fu_1998_p2;
reg   [0:0] icmp_ln96_reg_3996;
wire   [0:0] icmp_ln95_fu_1987_p2;
wire   [30:0] select_ln95_1_fu_2004_p3;
reg   [30:0] select_ln95_1_reg_4001;
wire   [2:0] trunc_ln95_2_fu_2016_p1;
reg   [2:0] trunc_ln95_2_reg_4011;
wire   [31:0] select_ln95_fu_2020_p3;
reg   [31:0] select_ln95_reg_4018;
wire    ap_CS_fsm_state76;
wire   [9:0] trunc_ln96_fu_2027_p1;
reg   [9:0] trunc_ln96_reg_4024;
wire   [6:0] zext_ln96_fu_2055_p1;
reg   [6:0] zext_ln96_reg_4031;
wire    ap_CS_fsm_state77;
wire   [9:0] empty_74_fu_2059_p2;
reg   [9:0] empty_74_reg_4036;
reg   [2:0] dbbuf_V_addr_1_reg_4041;
wire   [6:0] empty_68_fu_2064_p1;
reg   [6:0] empty_68_reg_4046;
wire   [31:0] add_ln97_fu_2067_p2;
reg   [31:0] add_ln97_reg_4053;
wire    ap_CS_fsm_state79;
wire   [9:0] trunc_ln97_fu_2078_p1;
reg   [9:0] trunc_ln97_reg_4061;
wire   [0:0] icmp_ln97_fu_2073_p2;
wire   [31:0] add_ln96_fu_2102_p2;
reg  signed [15:0] r_V_reg_4077;
wire    ap_CS_fsm_state80;
wire  signed [22:0] sext_ln1118_1_fu_2107_p1;
reg  signed [22:0] sext_ln1118_1_reg_4082;
wire   [95:0] add_ln98_1_fu_2111_p2;
reg   [95:0] add_ln98_1_reg_4088;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state81_pp3_stage0_iter0;
wire    ap_block_state83_pp3_stage0_iter1;
wire    ap_block_state85_pp3_stage0_iter2;
wire    ap_block_state87_pp3_stage0_iter3;
wire    ap_block_state89_pp3_stage0_iter4;
wire    ap_block_state91_pp3_stage0_iter5;
wire    ap_block_state93_pp3_stage0_iter6;
wire    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln98_fu_2121_p2;
reg   [0:0] icmp_ln98_reg_4098;
reg   [0:0] icmp_ln98_reg_4098_pp3_iter1_reg;
reg   [0:0] icmp_ln98_reg_4098_pp3_iter2_reg;
reg   [0:0] icmp_ln98_reg_4098_pp3_iter3_reg;
reg   [0:0] icmp_ln98_reg_4098_pp3_iter4_reg;
reg   [0:0] icmp_ln98_reg_4098_pp3_iter5_reg;
wire   [31:0] add_ln98_fu_2126_p2;
reg   [31:0] add_ln98_reg_4102;
wire   [0:0] icmp_ln99_fu_2136_p2;
reg   [0:0] icmp_ln99_reg_4112;
wire    ap_CS_fsm_pp3_stage1;
wire    ap_block_state82_pp3_stage1_iter0;
wire    ap_block_state84_pp3_stage1_iter1;
wire    ap_block_state86_pp3_stage1_iter2;
wire    ap_block_state88_pp3_stage1_iter3;
wire    ap_block_state90_pp3_stage1_iter4;
wire    ap_block_state92_pp3_stage1_iter5;
wire    ap_block_pp3_stage1_11001;
wire   [31:0] select_ln98_1_fu_2141_p3;
reg   [31:0] select_ln98_1_reg_4124;
wire   [4:0] trunc_ln98_2_fu_2148_p1;
reg   [4:0] trunc_ln98_2_reg_4129;
wire   [63:0] add_ln99_2_fu_2152_p2;
reg   [63:0] add_ln99_2_reg_4134;
wire   [9:0] trunc_ln99_fu_2158_p1;
reg   [9:0] trunc_ln99_reg_4139;
wire   [6:0] trunc_ln727_fu_2162_p1;
reg   [6:0] trunc_ln727_reg_4144;
wire   [31:0] select_ln98_fu_2166_p3;
reg   [31:0] select_ln98_reg_4150;
wire   [31:0] add_ln99_fu_2173_p2;
reg   [31:0] add_ln99_reg_4155;
wire   [6:0] trunc_ln727_1_fu_2179_p1;
reg   [6:0] trunc_ln727_1_reg_4161;
wire   [63:0] select_ln99_5_fu_2183_p3;
reg   [63:0] select_ln99_5_reg_4167;
reg    ap_enable_reg_pp3_iter1;
wire   [31:0] select_ln99_fu_2266_p3;
reg   [31:0] select_ln99_reg_4172;
wire   [9:0] trunc_ln727_2_fu_2300_p1;
reg   [9:0] trunc_ln727_2_reg_4177;
wire   [7:0] trunc_ln727_3_fu_2304_p1;
reg   [7:0] trunc_ln727_3_reg_4182;
wire   [9:0] add_ln1118_8_fu_2346_p2;
reg   [9:0] add_ln1118_8_reg_4187;
wire   [31:0] select_ln99_4_fu_2360_p3;
reg   [31:0] select_ln99_4_reg_4197;
wire   [9:0] trunc_ln101_fu_2366_p1;
reg   [9:0] trunc_ln101_reg_4202;
reg   [9:0] trunc_ln101_reg_4202_pp3_iter2_reg;
wire   [9:0] add_ln727_2_fu_2382_p2;
reg   [9:0] add_ln727_2_reg_4209;
reg   [9:0] add_ln727_2_reg_4209_pp3_iter3_reg;
reg   [9:0] add_ln727_2_reg_4209_pp3_iter4_reg;
wire   [31:0] add_ln100_fu_2401_p2;
reg   [31:0] add_ln100_reg_4219;
reg    ap_enable_reg_pp3_iter2;
wire   [15:0] wbuf_V_q0;
reg  signed [15:0] wbuf_V_load_reg_4224;
(* use_dsp48 = "no" *) wire   [9:0] add_ln1118_1_fu_2406_p2;
reg   [9:0] add_ln1118_1_reg_4229;
reg   [9:0] dx_addr_reg_4244;
reg   [9:0] dx_addr_reg_4244_pp3_iter4_reg;
wire   [0:0] addr_cmp_fu_2421_p2;
reg   [0:0] addr_cmp_reg_4249;
reg  signed [15:0] x_load_1_reg_4254;
reg    ap_enable_reg_pp3_iter4;
reg   [15:0] trunc_ln708_1_reg_4269;
reg   [9:0] dwbuf_V_addr_2_reg_4274;
wire   [15:0] add_ln703_fu_2489_p2;
wire    ap_CS_fsm_state94;
wire   [94:0] add_ln112_1_fu_2494_p2;
reg   [94:0] add_ln112_1_reg_4290;
wire    ap_CS_fsm_state95;
wire   [4:0] trunc_ln116_fu_2509_p1;
reg   [4:0] trunc_ln116_reg_4300;
wire   [0:0] icmp_ln112_fu_2513_p2;
wire   [30:0] grp_fu_2504_p2;
reg   [30:0] empty_75_reg_4309;
wire   [0:0] icmp_ln113_fu_2524_p2;
reg   [0:0] icmp_ln113_reg_4314;
wire  signed [30:0] select_ln112_1_fu_2529_p3;
reg  signed [30:0] select_ln112_1_reg_4322;
reg    ap_block_state96_io;
wire   [2:0] trunc_ln112_fu_2537_p1;
reg   [2:0] trunc_ln112_reg_4328;
wire   [0:0] select_ln112_4_fu_2546_p3;
reg   [0:0] select_ln112_4_reg_4334;
wire   [31:0] select_ln113_fu_2559_p3;
reg   [31:0] select_ln113_reg_4341;
wire  signed [30:0] trunc_ln114_fu_2567_p1;
reg  signed [30:0] trunc_ln114_reg_4347;
wire  signed [30:0] trunc_ln113_1_fu_2629_p1;
reg  signed [30:0] trunc_ln113_1_reg_4358;
wire    ap_CS_fsm_state97;
wire   [6:0] add_ln116_1_fu_2648_p2;
reg   [6:0] add_ln116_1_reg_4363;
wire   [31:0] select_ln113_3_fu_2654_p3;
reg   [31:0] select_ln113_3_reg_4369;
wire   [30:0] grp_fu_2589_p2;
reg   [30:0] mul_ln112_reg_4374;
wire    ap_CS_fsm_state98;
wire   [30:0] grp_fu_2661_p2;
reg   [30:0] empty_79_reg_4379;
wire   [30:0] grp_fu_2665_p2;
reg   [30:0] p_mid1190_reg_4384;
wire    ap_CS_fsm_state99;
wire   [30:0] empty_80_fu_2685_p2;
reg   [30:0] empty_80_reg_4389;
wire    ap_CS_fsm_state100;
reg   [31:0] gmem_addr_5_reg_4394;
wire    ap_CS_fsm_state101;
wire   [9:0] add_ln116_4_fu_2772_p2;
reg   [9:0] add_ln116_4_reg_4400;
wire   [30:0] add_ln115_fu_2778_p2;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state103_pp4_stage0_iter0;
wire    ap_block_state104_pp4_stage0_iter1;
wire    ap_block_state105_pp4_stage0_iter2;
reg    ap_block_state105_io;
reg    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln115_fu_2788_p2;
wire   [15:0] dwbuf_V_q1;
reg   [15:0] dwbuf_V_load_reg_4419;
reg    ap_enable_reg_pp4_iter1;
wire   [31:0] add_ln114_fu_2807_p2;
wire   [63:0] select_ln113_4_fu_2818_p3;
wire   [30:0] add_ln123_fu_2825_p2;
reg    ap_enable_reg_pp5_iter0;
wire   [0:0] icmp_ln123_fu_2831_p2;
wire    ap_CS_fsm_state119;
wire   [63:0] grp_fu_2852_p2;
reg   [63:0] bound26_reg_4458;
wire    ap_CS_fsm_state120;
wire    ap_CS_fsm_state121;
wire   [95:0] grp_fu_2864_p2;
reg   [95:0] bound40_reg_4475;
wire    ap_CS_fsm_state125;
wire    ap_CS_fsm_state126;
reg   [0:0] cmp103321_reg_4491;
wire  signed [9:0] trunc_ln66_fu_2886_p1;
reg  signed [9:0] trunc_ln66_reg_4495;
wire   [126:0] grp_fu_2880_p2;
reg   [126:0] bound62_reg_4500;
wire   [0:0] icmp_ln68_fu_2889_p2;
reg   [0:0] icmp_ln68_reg_4505;
wire   [126:0] add_ln66_4_fu_2894_p2;
reg   [126:0] add_ln66_4_reg_4510;
wire    ap_CS_fsm_state131;
wire   [9:0] empty_50_fu_2904_p2;
reg   [9:0] empty_50_reg_4515;
wire   [9:0] empty_51_fu_2913_p2;
reg   [9:0] empty_51_reg_4520;
wire   [9:0] trunc_ln68_fu_2918_p1;
reg   [9:0] trunc_ln68_reg_4525;
wire   [9:0] empty_52_fu_2922_p2;
reg   [9:0] empty_52_reg_4530;
wire   [0:0] icmp_ln67_fu_2939_p2;
reg   [0:0] icmp_ln67_reg_4538;
wire   [0:0] icmp_ln66_fu_2928_p2;
wire   [9:0] p_mid170_fu_2956_p2;
reg   [9:0] p_mid170_reg_4547;
wire   [2:0] select_ln66_2_fu_2969_p3;
reg   [2:0] select_ln66_2_reg_4553;
wire   [0:0] select_ln66_6_fu_2994_p3;
reg   [0:0] select_ln66_6_reg_4558;
wire   [30:0] select_ln66_7_fu_3001_p3;
reg   [30:0] select_ln66_7_reg_4565;
wire   [0:0] or_ln67_fu_3015_p2;
reg   [0:0] or_ln67_reg_4570;
wire  signed [9:0] trunc_ln67_1_fu_3021_p1;
reg  signed [9:0] trunc_ln67_1_reg_4577;
wire   [0:0] select_ln67_4_fu_3025_p3;
reg   [0:0] select_ln67_4_reg_4582;
wire   [31:0] select_ln67_5_fu_3032_p3;
reg   [31:0] select_ln67_5_reg_4590;
wire   [9:0] select_ln67_1_fu_3067_p3;
reg   [9:0] select_ln67_1_reg_4595;
wire    ap_CS_fsm_state132;
wire   [9:0] select_ln68_1_fu_3097_p3;
reg   [9:0] select_ln68_1_reg_4600;
wire   [31:0] select_ln68_3_fu_3117_p3;
reg   [31:0] select_ln68_3_reg_4610;
wire    ap_CS_fsm_state134;
wire   [31:0] select_ln68_fu_3137_p3;
reg   [31:0] select_ln68_reg_4620;
wire   [9:0] trunc_ln69_fu_3145_p1;
reg   [9:0] trunc_ln69_reg_4625;
wire   [15:0] bbuf_V_q0;
wire    ap_CS_fsm_state135;
reg   [9:0] y_addr_reg_4636;
wire   [31:0] add_ln71_fu_3153_p2;
reg   [31:0] add_ln71_reg_4641;
wire    ap_CS_fsm_state136;
wire  signed [9:0] empty_54_fu_3173_p2;
reg  signed [9:0] empty_54_reg_4649;
wire   [0:0] icmp_ln71_fu_3159_p2;
wire   [31:0] add_ln69_fu_3178_p2;
wire   [63:0] select_ln68_4_fu_3189_p3;
wire   [95:0] select_ln67_6_fu_3202_p3;
wire   [9:0] add_ln73_fu_3213_p2;
reg   [9:0] add_ln73_reg_4669;
wire    ap_CS_fsm_state137;
wire   [30:0] add_ln72_fu_3218_p2;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter0;
wire    ap_block_state138_pp6_stage0_iter0;
wire    ap_block_state139_pp6_stage0_iter1;
wire    ap_block_pp6_stage0_11001;
wire   [0:0] icmp_ln72_fu_3228_p2;
reg   [0:0] icmp_ln72_reg_4679;
wire   [15:0] add_ln703_1_fu_3247_p2;
reg    ap_enable_reg_pp6_iter1;
wire    ap_CS_fsm_state27;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state28;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state32;
reg    ap_block_pp1_stage1_subdone;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter5;
wire    ap_CS_fsm_state63;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state64;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_pp3_stage1_subdone;
reg    ap_condition_pp3_flush_enable;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter1_state84;
reg    ap_enable_reg_pp3_iter3;
reg    ap_enable_reg_pp3_iter5;
reg    ap_enable_reg_pp3_iter6;
reg    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state103;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state111;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_flush_enable;
reg   [9:0] wbuf_V_address0;
reg    wbuf_V_ce0;
reg    wbuf_V_we0;
reg   [9:0] dwbuf_V_address0;
reg    dwbuf_V_ce0;
reg    dwbuf_V_we0;
reg   [15:0] dwbuf_V_d0;
reg   [9:0] dwbuf_V_address1;
reg    dwbuf_V_ce1;
reg   [2:0] bbuf_V_address0;
reg    bbuf_V_ce0;
reg    bbuf_V_we0;
reg   [2:0] dbbuf_V_address0;
reg    dbbuf_V_ce0;
reg    dbbuf_V_we0;
reg   [15:0] dbbuf_V_d0;
reg   [94:0] indvar_flatten21_reg_559;
reg  signed [30:0] i_reg_570;
reg   [63:0] indvar_flatten_reg_582;
reg   [31:0] j_reg_594;
reg   [31:0] k_reg_606;
reg   [30:0] ap_phi_mux_i_1_phi_fu_633_p4;
reg   [31:0] j_1_reg_640;
reg   [94:0] indvar_flatten124_reg_652;
reg   [30:0] i_2_reg_663;
reg   [63:0] indvar_flatten101_reg_675;
reg   [31:0] k_1_reg_687;
reg   [62:0] indvar_flatten181_reg_710;
reg   [30:0] f_1_reg_721;
reg   [31:0] h_1_reg_732;
reg   [31:0] w_1_reg_744;
reg   [15:0] empty_69_reg_755;
reg   [95:0] ap_phi_mux_indvar_flatten168_phi_fu_770_p4;
wire    ap_block_pp3_stage0;
reg   [31:0] ap_phi_mux_c_1_phi_fu_781_p4;
reg   [63:0] ap_phi_mux_indvar_flatten137_phi_fu_793_p4;
wire    ap_block_pp3_stage1;
reg   [31:0] ap_phi_mux_fh_1_phi_fu_804_p4;
reg   [31:0] ap_phi_mux_fw_1_phi_fu_815_p4;
reg   [94:0] indvar_flatten215_reg_822;
reg    ap_block_state110;
reg   [31:0] j_2_reg_833;
reg   [30:0] i_3_reg_845;
reg   [63:0] indvar_flatten192_reg_856;
reg   [31:0] k_2_reg_868;
reg   [126:0] indvar_flatten90_reg_901;
reg   [30:0] f_reg_912;
reg   [95:0] indvar_flatten56_reg_923;
reg   [31:0] c_reg_935;
reg   [63:0] indvar_flatten35_reg_946;
reg   [31:0] h_reg_958;
reg   [31:0] w_reg_970;
reg   [15:0] empty_53_reg_982;
wire    ap_CS_fsm_state141;
reg   [31:0] fh_reg_992;
reg   [15:0] empty_58_reg_1026;
wire    ap_CS_fsm_state140;
wire   [31:0] zext_ln49_6_fu_1484_p1;
wire   [31:0] zext_ln89_6_fu_1916_p1;
wire   [31:0] zext_ln95_fu_2031_p1;
wire   [31:0] p_cast30_fu_2087_p1;
wire   [31:0] zext_ln1118_7_fu_2396_p1;
wire   [31:0] zext_ln1118_fu_2413_p1;
wire   [31:0] zext_ln727_1_fu_2467_p1;
wire   [31:0] zext_ln116_6_fu_2802_p1;
wire   [31:0] zext_ln124_fu_2840_p1;
wire   [31:0] zext_ln66_fu_3124_p1;
wire   [31:0] zext_ln70_fu_3149_p1;
wire   [31:0] zext_ln1116_fu_3242_p1;
wire    ap_block_pp6_stage0;
wire  signed [31:0] sext_ln48_fu_1415_p1;
wire   [31:0] add_ln59_fu_1521_p2;
wire   [31:0] add_ln60_fu_1532_p2;
wire  signed [31:0] sext_ln88_fu_1847_p1;
wire  signed [31:0] sext_ln123_fu_2571_p1;
wire  signed [31:0] sext_ln115_fu_2733_p1;
reg    ap_predicate_op806_writeresp_state118;
reg    ap_block_state118;
wire    ap_block_pp4_stage0_01001;
wire    ap_block_pp5_stage0_01001;
reg   [31:0] reuse_addr_reg_fu_238;
reg   [15:0] reuse_reg_fu_242;
reg   [31:0] x_Addr_A_orig;
reg   [31:0] dx_Addr_A_orig;
reg   [31:0] y_Addr_A_orig;
wire   [31:0] grp_fu_1058_p2;
wire   [9:0] sub_ln41_fu_1095_p2;
wire   [31:0] sub_ln42_fu_1105_p2;
wire   [31:0] grp_fu_1130_p0;
wire   [31:0] grp_fu_1130_p1;
wire   [30:0] grp_fu_1146_p0;
wire   [63:0] grp_fu_1146_p1;
wire   [30:0] trunc_ln46_fu_1177_p1;
wire   [0:0] icmp_ln47_1_fu_1213_p2;
wire   [30:0] trunc_ln3_fu_1225_p4;
wire   [30:0] grp_fu_1049_p4;
wire    ap_CS_fsm_state12;
wire   [4:0] tmp_2_fu_1261_p3;
wire   [5:0] zext_ln49_1_fu_1268_p1;
wire   [5:0] zext_ln49_fu_1258_p1;
wire   [5:0] add_ln49_fu_1272_p2;
wire   [31:0] select_ln45_fu_1246_p3;
wire   [31:0] add_ln46_fu_1293_p2;
wire   [30:0] trunc_ln46_1_fu_1299_p1;
wire   [30:0] select_ln45_1_fu_1253_p3;
wire   [30:0] tmp_mid1_fu_1303_p2;
wire   [30:0] select_ln45_3_fu_1282_p3;
wire   [4:0] trunc_ln49_1_fu_1316_p1;
wire   [4:0] select_ln45_4_fu_1287_p3;
wire   [4:0] select_ln46_2_fu_1320_p3;
wire   [6:0] zext_ln46_fu_1278_p1;
wire   [6:0] zext_ln49_2_fu_1327_p1;
wire    ap_CS_fsm_state15;
wire   [0:0] or_ln46_fu_1348_p2;
wire   [30:0] trunc_ln47_fu_1360_p1;
wire    ap_CS_fsm_state18;
wire   [8:0] tmp_1_fu_1376_p3;
wire   [29:0] zext_ln49_4_fu_1383_p1;
wire   [29:0] zext_ln49_3_fu_1373_p1;
wire   [31:0] tmp_4_fu_1393_p3;
wire   [31:0] empty_48_fu_1400_p2;
wire   [30:0] trunc_ln5_fu_1405_p4;
wire   [6:0] trunc_ln49_2_fu_1425_p1;
wire   [29:0] add_ln49_2_fu_1387_p2;
wire   [29:0] zext_ln49_5_fu_1428_p1;
wire   [29:0] add_ln49_3_fu_1432_p2;
wire   [7:0] trunc_ln49_4_fu_1442_p1;
wire   [9:0] p_shl1_cast_fu_1446_p3;
wire   [9:0] trunc_ln49_3_fu_1438_p1;
wire   [31:0] l_cast_fu_1466_p1;
wire   [9:0] trunc_ln49_5_fu_1475_p1;
wire   [63:0] add_ln46_1_fu_1493_p2;
wire   [31:0] grp_fu_1548_p0;
wire   [31:0] grp_fu_1548_p1;
wire   [31:0] add_ln66_fu_1554_p2;
wire   [30:0] grp_fu_1579_p0;
wire   [63:0] grp_fu_1579_p1;
wire  signed [30:0] grp_fu_1591_p0;
wire  signed [30:0] grp_fu_1591_p1;
wire  signed [30:0] grp_fu_1600_p1;
wire  signed [30:0] grp_fu_1609_p0;
wire   [31:0] grp_fu_1642_p0;
wire   [31:0] grp_fu_1642_p1;
wire   [30:0] add_ln85_fu_1647_p2;
wire   [2:0] trunc_ln85_3_fu_1667_p1;
wire   [4:0] tmp_7_fu_1675_p3;
wire   [5:0] zext_ln89_1_fu_1683_p1;
wire   [5:0] zext_ln89_fu_1671_p1;
wire   [5:0] add_ln89_fu_1687_p2;
wire   [0:0] icmp_ln87_1_fu_1703_p2;
wire   [31:0] select_ln85_fu_1653_p3;
wire   [0:0] or_ln86_fu_1720_p2;
wire   [31:0] add_ln86_fu_1714_p2;
wire   [4:0] trunc_ln89_1_fu_1737_p1;
wire   [4:0] select_ln85_3_fu_1697_p3;
wire   [4:0] select_ln86_2_fu_1741_p3;
wire   [6:0] zext_ln86_fu_1693_p1;
wire   [6:0] zext_ln89_2_fu_1749_p1;
wire    ap_CS_fsm_state53;
wire   [30:0] select_ln85_2_fu_1783_p3;
wire   [30:0] tmp2_fu_1795_p2;
wire   [30:0] select_ln86_1_fu_1789_p3;
wire   [8:0] tmp_3_fu_1808_p3;
wire   [29:0] zext_ln89_4_fu_1815_p1;
wire   [29:0] zext_ln89_3_fu_1805_p1;
wire   [31:0] tmp_9_fu_1825_p3;
wire   [31:0] empty_67_fu_1832_p2;
wire   [30:0] trunc_ln_fu_1837_p4;
wire   [6:0] trunc_ln89_2_fu_1857_p1;
wire   [29:0] add_ln89_2_fu_1819_p2;
wire   [29:0] zext_ln89_5_fu_1860_p1;
wire   [29:0] add_ln89_3_fu_1864_p2;
wire   [7:0] trunc_ln89_4_fu_1874_p1;
wire   [9:0] p_shl3_cast_fu_1878_p3;
wire   [9:0] trunc_ln89_3_fu_1870_p1;
wire   [31:0] l_1_cast_fu_1898_p1;
wire   [9:0] trunc_ln89_5_fu_1907_p1;
wire   [63:0] add_ln86_1_fu_1925_p2;
wire   [31:0] grp_fu_1944_p0;
wire   [63:0] grp_fu_1944_p1;
wire   [30:0] grp_fu_1957_p0;
wire   [31:0] grp_fu_1957_p1;
wire   [31:0] add_ln95_fu_1966_p2;
wire   [30:0] add_ln95_2_fu_1992_p2;
wire   [4:0] tmp_s_fu_2038_p3;
wire   [5:0] zext_ln1118_2_fu_2045_p1;
wire   [5:0] zext_ln1118_1_fu_2035_p1;
wire   [5:0] add_ln1118_3_fu_2049_p2;
wire  signed [9:0] grp_fu_3253_p3;
wire   [9:0] empty_70_fu_2082_p2;
wire  signed [15:0] sext_ln1118_1_fu_2107_p0;
wire  signed [9:0] grp_fu_3261_p3;
wire   [6:0] zext_ln1118_3_fu_2197_p1;
wire   [6:0] add_ln1118_4_fu_2200_p2;
wire   [8:0] tmp_10_fu_2209_p3;
wire   [29:0] zext_ln1118_5_fu_2217_p1;
wire   [29:0] zext_ln1118_4_fu_2205_p1;
wire  signed [9:0] grp_fu_3269_p3;
wire   [6:0] add_ln1118_fu_2193_p2;
(* use_dsp48 = "no" *) wire   [9:0] empty_72_fu_2189_p2;
wire   [0:0] icmp_ln100_1_fu_2250_p2;
wire   [0:0] select_ln98_6_fu_2255_p3;
wire   [0:0] or_ln99_fu_2261_p2;
wire   [9:0] select_ln98_2_fu_2227_p3;
wire   [9:0] trunc_ln99_1_fu_2274_p1;
wire   [6:0] select_ln98_3_fu_2232_p3;
wire   [6:0] select_ln99_1_fu_2283_p3;
wire   [29:0] add_ln1118_5_fu_2221_p2;
wire   [29:0] zext_ln727_fu_2290_p1;
wire   [29:0] add_ln727_fu_2294_p2;
wire   [6:0] add_ln1118_6_fu_2308_p2;
wire   [6:0] select_ln98_4_fu_2238_p3;
wire   [6:0] select_ln99_2_fu_2312_p3;
wire   [29:0] zext_ln1118_6_fu_2320_p1;
wire   [29:0] add_ln1118_7_fu_2324_p2;
wire   [7:0] trunc_ln1118_1_fu_2334_p1;
wire   [9:0] p_shl8_cast_fu_2338_p3;
wire   [9:0] trunc_ln1118_fu_2330_p1;
wire   [9:0] p_mid1133_fu_2277_p2;
wire   [9:0] select_ln98_5_fu_2244_p3;
wire   [9:0] p_shl7_cast_fu_2370_p3;
wire   [9:0] add_ln727_1_fu_2377_p2;
wire   [9:0] add_ln1118_2_fu_2387_p2;
wire   [9:0] add_ln1118_9_fu_2391_p2;
wire  signed [9:0] grp_fu_3277_p3;
wire   [15:0] lhs_2_fu_2435_p3;
wire  signed [22:0] grp_fu_3284_p3;
wire  signed [22:0] grp_fu_3292_p3;
wire  signed [30:0] grp_fu_2504_p0;
wire   [30:0] add_ln112_fu_2518_p2;
wire   [0:0] icmp_ln114_fu_2541_p2;
wire   [0:0] or_ln113_fu_2553_p2;
wire   [4:0] tmp_5_fu_2596_p3;
wire   [5:0] zext_ln116_1_fu_2603_p1;
wire   [5:0] zext_ln116_fu_2593_p1;
wire   [5:0] add_ln116_fu_2607_p2;
wire   [31:0] select_ln112_fu_2582_p3;
wire   [31:0] add_ln113_fu_2623_p2;
wire   [4:0] trunc_ln116_1_fu_2633_p1;
wire   [4:0] select_ln112_3_fu_2617_p3;
wire   [4:0] select_ln113_2_fu_2637_p3;
wire   [6:0] zext_ln113_fu_2613_p1;
wire   [6:0] zext_ln116_2_fu_2644_p1;
wire   [30:0] select_ln112_2_fu_2669_p3;
wire   [30:0] tmp4_fu_2681_p2;
wire   [30:0] select_ln113_1_fu_2675_p3;
wire   [8:0] tmp_6_fu_2694_p3;
wire   [29:0] zext_ln116_4_fu_2701_p1;
wire   [29:0] zext_ln116_3_fu_2691_p1;
wire   [31:0] tmp_8_fu_2711_p3;
wire   [31:0] empty_81_fu_2718_p2;
wire   [30:0] trunc_ln2_fu_2723_p4;
wire   [6:0] trunc_ln116_2_fu_2743_p1;
wire   [29:0] add_ln116_2_fu_2705_p2;
wire   [29:0] zext_ln116_5_fu_2746_p1;
wire   [29:0] add_ln116_3_fu_2750_p2;
wire   [7:0] trunc_ln116_4_fu_2760_p1;
wire   [9:0] p_shl5_cast_fu_2764_p3;
wire   [9:0] trunc_ln116_3_fu_2756_p1;
wire   [31:0] l_2_cast_fu_2784_p1;
wire   [9:0] trunc_ln116_5_fu_2793_p1;
wire   [9:0] add_ln116_5_fu_2797_p2;
wire   [63:0] add_ln113_1_fu_2812_p2;
wire   [2:0] trunc_ln124_fu_2836_p1;
wire   [31:0] grp_fu_2852_p0;
wire   [31:0] grp_fu_2852_p1;
wire   [31:0] grp_fu_2864_p0;
wire   [63:0] grp_fu_2864_p1;
wire   [30:0] trunc_ln66_1_fu_2870_p1;
wire   [30:0] grp_fu_2880_p0;
wire   [95:0] grp_fu_2880_p1;
wire  signed [9:0] empty_50_fu_2904_p0;
wire  signed [9:0] empty_51_fu_2913_p0;
wire   [30:0] add_ln66_2_fu_2933_p2;
wire  signed [9:0] p_mid170_fu_2956_p0;
wire   [2:0] trunc_ln66_4_fu_2961_p1;
wire   [2:0] trunc_ln66_5_fu_2965_p1;
wire   [0:0] icmp_ln69_1_fu_2977_p2;
wire   [0:0] icmp_ln68_1_fu_2989_p2;
wire   [31:0] select_ln66_fu_2944_p3;
wire   [31:0] add_ln67_fu_3009_p2;
wire   [0:0] select_ln66_5_fu_2982_p3;
wire   [9:0] p_mid146_fu_3063_p2;
wire   [9:0] select_ln66_3_fu_3045_p3;
wire   [9:0] select_ln66_1_fu_3040_p3;
wire   [9:0] select_ln66_4_fu_3051_p3;
wire   [31:0] select_ln67_fu_3056_p3;
wire   [31:0] add_ln68_fu_3087_p2;
wire   [9:0] trunc_ln68_1_fu_3093_p1;
wire   [9:0] select_ln67_2_fu_3074_p3;
wire   [9:0] p_mid131_fu_3104_p2;
wire   [9:0] select_ln67_3_fu_3080_p3;
wire   [0:0] or_ln68_fu_3128_p2;
wire   [0:0] or_ln68_1_fu_3132_p2;
wire  signed [9:0] grp_fu_3300_p3;
wire   [9:0] trunc_ln71_fu_3164_p1;
wire   [9:0] tmp1_fu_3168_p2;
wire   [63:0] add_ln68_1_fu_3183_p2;
wire   [95:0] add_ln67_1_fu_3196_p2;
wire   [9:0] empty_55_fu_3209_p2;
wire   [31:0] fw_cast_fu_3224_p1;
wire   [9:0] trunc_ln73_fu_3233_p1;
wire   [9:0] add_ln1116_fu_3237_p2;
wire  signed [9:0] grp_fu_3253_p0;
wire   [9:0] grp_fu_3253_p2;
wire  signed [9:0] grp_fu_3261_p0;
wire  signed [9:0] grp_fu_3269_p0;
wire  signed [9:0] grp_fu_3277_p0;
wire  signed [15:0] grp_fu_3284_p1;
wire   [22:0] grp_fu_3284_p2;
wire  signed [15:0] grp_fu_3292_p1;
wire   [22:0] grp_fu_3292_p2;
wire  signed [9:0] grp_fu_3300_p0;
wire   [9:0] grp_fu_3300_p2;
reg    grp_fu_2504_ce;
reg   [111:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
wire   [63:0] grp_fu_1130_p00;
wire   [63:0] grp_fu_1130_p10;
wire   [94:0] grp_fu_1146_p00;
wire   [94:0] grp_fu_1146_p10;
wire   [63:0] grp_fu_1548_p00;
wire   [63:0] grp_fu_1548_p10;
wire   [94:0] grp_fu_1579_p00;
wire   [94:0] grp_fu_1579_p10;
wire   [63:0] grp_fu_1642_p10;
wire   [95:0] grp_fu_1944_p00;
wire   [95:0] grp_fu_1944_p10;
wire   [62:0] grp_fu_1957_p00;
wire   [62:0] grp_fu_1957_p10;
wire   [63:0] grp_fu_2852_p00;
wire   [63:0] grp_fu_2852_p10;
wire   [95:0] grp_fu_2864_p00;
wire   [95:0] grp_fu_2864_p10;
wire   [126:0] grp_fu_2880_p00;
wire   [126:0] grp_fu_2880_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 112'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
end

conv_combined_CRTL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
CRTL_BUS_s_axi_U(
    .AWVALID(s_axi_CRTL_BUS_AWVALID),
    .AWREADY(s_axi_CRTL_BUS_AWREADY),
    .AWADDR(s_axi_CRTL_BUS_AWADDR),
    .WVALID(s_axi_CRTL_BUS_WVALID),
    .WREADY(s_axi_CRTL_BUS_WREADY),
    .WDATA(s_axi_CRTL_BUS_WDATA),
    .WSTRB(s_axi_CRTL_BUS_WSTRB),
    .ARVALID(s_axi_CRTL_BUS_ARVALID),
    .ARREADY(s_axi_CRTL_BUS_ARREADY),
    .ARADDR(s_axi_CRTL_BUS_ARADDR),
    .RVALID(s_axi_CRTL_BUS_RVALID),
    .RREADY(s_axi_CRTL_BUS_RREADY),
    .RDATA(s_axi_CRTL_BUS_RDATA),
    .RRESP(s_axi_CRTL_BUS_RRESP),
    .BVALID(s_axi_CRTL_BUS_BVALID),
    .BREADY(s_axi_CRTL_BUS_BREADY),
    .BRESP(s_axi_CRTL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .wt(wt),
    .dwt(dwt),
    .b(b),
    .db(db),
    .F(F),
    .C(C),
    .H(H),
    .W(W),
    .FH(FH),
    .FW(FW),
    .fwprop(fwprop),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

conv_combined_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(gmem_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(gmem_AWLEN),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(gmem_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

conv_combined_wbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 625 ),
    .AddressWidth( 10 ))
wbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(wbuf_V_address0),
    .ce0(wbuf_V_ce0),
    .we0(wbuf_V_we0),
    .d0(gmem_addr_2_read_reg_3649),
    .q0(wbuf_V_q0)
);

conv_combined_dwbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 625 ),
    .AddressWidth( 10 ))
dwbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dwbuf_V_address0),
    .ce0(dwbuf_V_ce0),
    .we0(dwbuf_V_we0),
    .d0(dwbuf_V_d0),
    .address1(dwbuf_V_address1),
    .ce1(dwbuf_V_ce1),
    .q1(dwbuf_V_q1)
);

conv_combined_bbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
bbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bbuf_V_address0),
    .ce0(bbuf_V_ce0),
    .we0(bbuf_V_we0),
    .d0(gmem_addr_read_reg_3692),
    .q0(bbuf_V_q0)
);

conv_combined_bbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dbbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dbbuf_V_address0),
    .ce0(dbbuf_V_ce0),
    .we0(dbbuf_V_we0),
    .d0(dbbuf_V_d0),
    .q0(dbbuf_V_q0)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1130_p0),
    .din1(grp_fu_1130_p1),
    .ce(1'b1),
    .dout(grp_fu_1130_p2)
);

conv_combined_mul_31ns_64ns_95_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
mul_31ns_64ns_95_5_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1146_p0),
    .din1(grp_fu_1146_p1),
    .ce(1'b1),
    .dout(grp_fu_1146_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(i_reg_570),
    .din1(trunc_ln45_1_reg_3491),
    .ce(1'b1),
    .dout(grp_fu_1167_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(add_ln45_reg_3537),
    .din1(trunc_ln45_1_reg_3491),
    .ce(1'b1),
    .dout(grp_fu_1242_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln46_1_reg_3587),
    .din1(trunc_ln45_reg_3486),
    .ce(1'b1),
    .dout(grp_fu_1344_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp11_reg_3614),
    .din1(empty_43_reg_3497),
    .ce(1'b1),
    .dout(grp_fu_1369_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1548_p0),
    .din1(grp_fu_1548_p1),
    .ce(1'b1),
    .dout(grp_fu_1548_p2)
);

conv_combined_mul_31ns_64ns_95_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
mul_31ns_64ns_95_5_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1579_p0),
    .din1(grp_fu_1579_p1),
    .ce(1'b1),
    .dout(grp_fu_1579_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1591_p0),
    .din1(grp_fu_1591_p1),
    .ce(1'b1),
    .dout(grp_fu_1591_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(empty_60_reg_3760),
    .din1(grp_fu_1600_p1),
    .ce(1'b1),
    .dout(grp_fu_1600_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1609_p0),
    .din1(empty_60_reg_3760),
    .ce(1'b1),
    .dout(grp_fu_1609_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1642_p0),
    .din1(grp_fu_1642_p1),
    .ce(1'b1),
    .dout(grp_fu_1642_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln85_1_reg_3839),
    .din1(empty_61_reg_3778),
    .ce(1'b1),
    .dout(grp_fu_1771_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln86_1_reg_3856),
    .din1(empty_60_reg_3760),
    .ce(1'b1),
    .dout(grp_fu_1775_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln87_reg_3872),
    .din1(trunc_ln85_reg_3748),
    .ce(1'b1),
    .dout(grp_fu_1779_p2)
);

conv_combined_mul_32ns_64ns_96_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 96 ))
mul_32ns_64ns_96_5_1_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1944_p0),
    .din1(grp_fu_1944_p1),
    .ce(1'b1),
    .dout(grp_fu_1944_p2)
);

conv_combined_mul_31ns_32ns_63_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_31ns_32ns_63_2_1_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1957_p0),
    .din1(grp_fu_1957_p1),
    .ce(1'b1),
    .dout(grp_fu_1957_p2)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U18(
    .din0(grp_fu_3253_p3),
    .din1(reg_1077),
    .dout(empty_74_fu_2059_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2504_p0),
    .din1(empty_60_reg_3760),
    .ce(grp_fu_2504_ce),
    .dout(grp_fu_2504_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln112_1_reg_4322),
    .din1(empty_61_reg_3778),
    .ce(1'b1),
    .dout(grp_fu_2589_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln114_reg_4347),
    .din1(trunc_ln85_reg_3748),
    .ce(1'b1),
    .dout(grp_fu_2661_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln113_1_reg_4358),
    .din1(empty_60_reg_3760),
    .ce(1'b1),
    .dout(grp_fu_2665_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2852_p0),
    .din1(grp_fu_2852_p1),
    .ce(1'b1),
    .dout(grp_fu_2852_p2)
);

conv_combined_mul_32ns_64ns_96_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 96 ))
mul_32ns_64ns_96_5_1_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2864_p0),
    .din1(grp_fu_2864_p1),
    .ce(1'b1),
    .dout(grp_fu_2864_p2)
);

conv_combined_mul_31ns_96ns_127_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 96 ),
    .dout_WIDTH( 127 ))
mul_31ns_96ns_127_5_1_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2880_p0),
    .din1(grp_fu_2880_p1),
    .ce(1'b1),
    .dout(grp_fu_2880_p2)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U26(
    .din0(empty_50_fu_2904_p0),
    .din1(outH_reg_3430),
    .dout(empty_50_fu_2904_p2)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U27(
    .din0(empty_51_fu_2913_p0),
    .din1(empty_41_reg_3421),
    .dout(empty_51_fu_2913_p2)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U28(
    .din0(p_mid170_fu_2956_p0),
    .din1(outH_reg_3430),
    .dout(p_mid170_fu_2956_p2)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U29(
    .din0(trunc_ln67_1_reg_4577),
    .din1(empty_41_reg_3421),
    .dout(p_mid146_fu_3063_p2)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U30(
    .din0(empty_54_reg_4649),
    .din1(trunc_ln66_reg_4495),
    .dout(empty_55_fu_3209_p2)
);

conv_combined_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3253_p0),
    .din1(outH_reg_3430),
    .din2(grp_fu_3253_p2),
    .ce(1'b1),
    .dout(grp_fu_3253_p3)
);

conv_combined_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3261_p0),
    .din1(empty_41_reg_3421),
    .din2(trunc_ln96_reg_4024),
    .ce(1'b1),
    .dout(grp_fu_3261_p3)
);

conv_combined_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3269_p0),
    .din1(empty_41_reg_3421),
    .din2(trunc_ln96_reg_4024),
    .ce(1'b1),
    .dout(grp_fu_3269_p3)
);

conv_combined_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3277_p0),
    .din1(trunc_ln95_reg_3963),
    .din2(trunc_ln97_reg_4061),
    .ce(1'b1),
    .dout(grp_fu_3277_p3)
);

conv_combined_mac_muladd_16s_16s_23ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 23 ))
mac_muladd_16s_16s_23ns_23_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(wbuf_V_load_reg_4224),
    .din1(grp_fu_3284_p1),
    .din2(grp_fu_3284_p2),
    .ce(1'b1),
    .dout(grp_fu_3284_p3)
);

conv_combined_mac_muladd_16s_16s_23ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 23 ))
mac_muladd_16s_16s_23ns_23_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(x_load_1_reg_4254),
    .din1(grp_fu_3292_p1),
    .din2(grp_fu_3292_p2),
    .ce(1'b1),
    .dout(grp_fu_3292_p3)
);

conv_combined_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3300_p0),
    .din1(reg_1077),
    .din2(grp_fu_3300_p2),
    .ce(1'b1),
    .dout(grp_fu_3300_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state28))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state28)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state28);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state32))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln45_1_reg_3517 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp1_iter4 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end else if (((icmp_ln45_1_reg_3517 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp1_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state64))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state63)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state64)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state64);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state63)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp3_flush_enable)) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state80)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage1_subdone) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage1_subdone) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
            if ((1'b1 == ap_condition_pp3_exit_iter1_state84)) begin
                ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage1_subdone) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage1_subdone) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage1_subdone) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter5 == 1'b0)) | ((1'b0 == ap_block_pp3_stage1_subdone) & (1'b1 == ap_CS_fsm_pp3_stage1)))) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end else if ((1'b1 == ap_CS_fsm_state80)) begin
            ap_enable_reg_pp3_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state103) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state102))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state103)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state103);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end else if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state102))) begin
            ap_enable_reg_pp4_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_condition_pp5_exit_iter0_state111))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((icmp_ln112_reg_4305 == 1'd1) & (1'b0 == ap_block_state96_io) & (1'b1 == ap_CS_fsm_state96))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state111)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state111);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if (((icmp_ln112_reg_4305 == 1'd1) & (1'b0 == ap_block_state96_io) & (1'b1 == ap_CS_fsm_state96))) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp6_flush_enable)) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state137) & (cmp103321_reg_4491 == 1'd1))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end else if (((1'b1 == ap_CS_fsm_state137) & (cmp103321_reg_4491 == 1'd1))) begin
            ap_enable_reg_pp6_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln98_reg_4098 == 1'd0))) begin
        c_1_reg_777 <= select_ln98_1_reg_4124;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        c_1_reg_777 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (icmp_ln71_fu_3159_p2 == 1'd1))) begin
        c_reg_935 <= select_ln67_5_reg_4590;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        c_reg_935 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        empty_53_reg_982 <= bbuf_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        empty_53_reg_982 <= empty_58_reg_1026;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) & (cmp103321_reg_4491 == 1'd1))) begin
        empty_56_reg_1014 <= empty_53_reg_982;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln72_reg_4679 == 1'd0))) begin
        empty_56_reg_1014 <= add_ln703_1_fu_3247_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) & (cmp103321_reg_4491 == 1'd0))) begin
        empty_58_reg_1026 <= empty_53_reg_982;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        empty_58_reg_1026 <= empty_56_reg_1014;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        empty_69_reg_755 <= dbbuf_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        empty_69_reg_755 <= add_ln703_fu_2489_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & ((cmp173388_reg_3830 == 1'd0) | (icmp_ln97_fu_2073_p2 == 1'd1)))) begin
        f_1_reg_721 <= select_ln95_1_reg_4001;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        f_1_reg_721 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (icmp_ln71_fu_3159_p2 == 1'd1))) begin
        f_reg_912 <= select_ln66_7_reg_4565;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        f_reg_912 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln98_reg_4098_pp3_iter1_reg == 1'd0))) begin
        fh_1_reg_800 <= select_ln99_4_reg_4197;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        fh_1_reg_800 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        fh_reg_992 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        fh_reg_992 <= add_ln71_reg_4641;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln98_reg_4098_pp3_iter2_reg == 1'd0))) begin
        fw_1_reg_811 <= add_ln100_reg_4219;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        fw_1_reg_811 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) & (cmp103321_reg_4491 == 1'd1))) begin
        fw_reg_1003 <= 31'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln72_fu_3228_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        fw_reg_1003 <= add_ln72_fu_3218_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & ((cmp173388_reg_3830 == 1'd0) | (icmp_ln97_fu_2073_p2 == 1'd1)))) begin
        h_1_reg_732 <= add_ln96_fu_2102_p2;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        h_1_reg_732 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (icmp_ln71_fu_3159_p2 == 1'd1))) begin
        h_reg_958 <= select_ln68_3_reg_4610;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        h_reg_958 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_1_reg_3517 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        i_1_reg_629 <= 31'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln58_reg_3669 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_1_reg_629 <= add_ln58_reg_3664;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        i_2_reg_663 <= select_ln85_1_reg_3839;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        i_2_reg_663 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state74) & (icmp_ln95_fu_1987_p2 == 1'd1))) begin
        i_3_reg_845 <= 31'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp144403_reg_3774 == 1'd1)) & (1'b1 == ap_CS_fsm_state110))) begin
        i_3_reg_845 <= select_ln112_1_reg_4322;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln112_reg_4305 == 1'd1) & (1'b0 == ap_block_state96_io) & (1'b1 == ap_CS_fsm_state96))) begin
        i_4_reg_890 <= 31'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln123_fu_2831_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        i_4_reg_890 <= add_ln123_fu_2825_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_reg_570 <= select_ln45_2_reg_3552;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_reg_570 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        indvar_flatten101_reg_675 <= select_ln86_4_fu_1931_p3;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        indvar_flatten101_reg_675 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        indvar_flatten124_reg_652 <= add_ln85_1_reg_3806;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        indvar_flatten124_reg_652 <= 95'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln98_reg_4098_pp3_iter1_reg == 1'd0))) begin
        indvar_flatten137_reg_789 <= select_ln99_5_reg_4167;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        indvar_flatten137_reg_789 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln98_reg_4098 == 1'd0))) begin
        indvar_flatten168_reg_766 <= add_ln98_1_reg_4088;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        indvar_flatten168_reg_766 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & ((cmp173388_reg_3830 == 1'd0) | (icmp_ln97_fu_2073_p2 == 1'd1)))) begin
        indvar_flatten181_reg_710 <= add_ln95_4_reg_3988;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        indvar_flatten181_reg_710 <= 63'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state74) & (icmp_ln95_fu_1987_p2 == 1'd1))) begin
        indvar_flatten192_reg_856 <= 64'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp144403_reg_3774 == 1'd1)) & (1'b1 == ap_CS_fsm_state110))) begin
        indvar_flatten192_reg_856 <= select_ln113_4_fu_2818_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state74) & (icmp_ln95_fu_1987_p2 == 1'd1))) begin
        indvar_flatten215_reg_822 <= 95'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp144403_reg_3774 == 1'd1)) & (1'b1 == ap_CS_fsm_state110))) begin
        indvar_flatten215_reg_822 <= add_ln112_1_reg_4290;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten21_reg_559 <= add_ln45_1_reg_3512;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten21_reg_559 <= 95'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (icmp_ln71_fu_3159_p2 == 1'd1))) begin
        indvar_flatten35_reg_946 <= select_ln68_4_fu_3189_p3;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        indvar_flatten35_reg_946 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (icmp_ln71_fu_3159_p2 == 1'd1))) begin
        indvar_flatten56_reg_923 <= select_ln67_6_fu_3202_p3;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        indvar_flatten56_reg_923 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (icmp_ln71_fu_3159_p2 == 1'd1))) begin
        indvar_flatten90_reg_901 <= add_ln66_4_reg_4510;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        indvar_flatten90_reg_901 <= 127'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten_reg_582 <= select_ln46_4_fu_1499_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten_reg_582 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        j_1_reg_640 <= select_ln86_3_reg_3867;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        j_1_reg_640 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state74) & (icmp_ln95_fu_1987_p2 == 1'd1))) begin
        j_2_reg_833 <= 32'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp144403_reg_3774 == 1'd1)) & (1'b1 == ap_CS_fsm_state110))) begin
        j_2_reg_833 <= select_ln113_3_reg_4369;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        j_reg_594 <= select_ln46_3_reg_3598;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        j_reg_594 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        k_1_reg_687 <= add_ln87_fu_1920_p2;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        k_1_reg_687 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state74) & (icmp_ln95_fu_1987_p2 == 1'd1))) begin
        k_2_reg_868 <= 32'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp144403_reg_3774 == 1'd1)) & (1'b1 == ap_CS_fsm_state110))) begin
        k_2_reg_868 <= add_ln114_fu_2807_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        k_reg_606 <= add_ln47_fu_1488_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_reg_606 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        l_1_reg_699 <= 31'd0;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln88_fu_1902_p2 == 1'd0))) begin
        l_1_reg_699 <= add_ln88_fu_1892_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state102))) begin
        l_2_reg_879 <= 31'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln115_fu_2788_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        l_2_reg_879 <= add_ln115_fu_2778_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        l_reg_618 <= 31'd0;
    end else if (((icmp_ln48_fu_1470_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        l_reg_618 <= add_ln48_fu_1460_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp173388_reg_3830 == 1'd1) & (1'b1 == ap_CS_fsm_state79) & (icmp_ln97_fu_2073_p2 == 1'd0))) begin
        reuse_addr_reg_fu_238 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter3 == 1'b1) & (icmp_ln98_reg_4098_pp3_iter3_reg == 1'd0))) begin
        reuse_addr_reg_fu_238 <= zext_ln1118_fu_2413_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp173388_reg_3830 == 1'd1) & (1'b1 == ap_CS_fsm_state79) & (icmp_ln97_fu_2073_p2 == 1'd0))) begin
        reuse_reg_fu_242 <= 16'd0;
    end else if (((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln98_reg_4098_pp3_iter4_reg == 1'd0))) begin
        reuse_reg_fu_242 <= {{grp_fu_3284_p3[22:7]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        w_1_reg_744 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        w_1_reg_744 <= add_ln97_reg_4053;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (icmp_ln71_fu_3159_p2 == 1'd1))) begin
        w_reg_970 <= add_ln69_fu_3178_p2;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        w_reg_970 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        C_read_reg_3376 <= C;
        FH_read_reg_3348 <= FH;
        FW_read_reg_3327 <= FW;
        F_read_reg_3386 <= F;
        H_read_reg_3371 <= H;
        W_read_reg_3362 <= W;
        b_read_reg_3400 <= b;
        db_read_reg_3395 <= db;
        dwt_read_reg_3405 <= dwt;
        empty_41_reg_3421 <= empty_41_fu_1091_p1;
        empty_reg_3416 <= empty_fu_1087_p1;
        fwprop_read_reg_3323 <= fwprop;
        wt_read_reg_3411 <= wt;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln98_reg_4098_pp3_iter1_reg == 1'd0))) begin
        add_ln100_reg_4219 <= add_ln100_fu_2401_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln98_reg_4098_pp3_iter2_reg == 1'd0))) begin
        add_ln1118_1_reg_4229 <= add_ln1118_1_fu_2406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (icmp_ln98_reg_4098_pp3_iter1_reg == 1'd0))) begin
        add_ln1118_8_reg_4187 <= add_ln1118_8_fu_2346_p2;
        select_ln99_reg_4172 <= select_ln99_fu_2266_p3;
        trunc_ln101_reg_4202 <= trunc_ln101_fu_2366_p1;
        trunc_ln727_2_reg_4177 <= trunc_ln727_2_fu_2300_p1;
        trunc_ln727_3_reg_4182 <= trunc_ln727_3_fu_2304_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        add_ln112_1_reg_4290 <= add_ln112_1_fu_2494_p2;
        icmp_ln112_reg_4305 <= icmp_ln112_fu_2513_p2;
        trunc_ln116_reg_4300 <= trunc_ln116_fu_2509_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        add_ln116_1_reg_4363 <= add_ln116_1_fu_2648_p2;
        select_ln113_3_reg_4369 <= select_ln113_3_fu_2654_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp144403_reg_3774 == 1'd1) & (1'b1 == ap_CS_fsm_state101))) begin
        add_ln116_4_reg_4400 <= add_ln116_4_fu_2772_p2;
        gmem_addr_5_reg_4394 <= sext_ln115_fu_2733_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln45_1_reg_3512 <= add_ln45_1_fu_1161_p2;
        icmp_ln45_1_reg_3517 <= icmp_ln45_1_fu_1172_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_1_reg_3517 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        add_ln45_reg_3537 <= add_ln45_fu_1190_p2;
        icmp_ln46_reg_3542 <= icmp_ln46_fu_1196_p2;
        select_ln45_2_reg_3552 <= select_ln45_2_fu_1201_p3;
        select_ln45_5_reg_3563 <= select_ln45_5_fu_1218_p3;
        trunc_ln45_2_reg_3557 <= trunc_ln45_2_fu_1209_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln49_1_reg_3592 <= add_ln49_1_fu_1331_p2;
        select_ln46_1_reg_3587 <= select_ln46_1_fu_1309_p3;
        select_ln46_3_reg_3598 <= select_ln46_3_fu_1337_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp57428_reg_3482 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        add_ln49_4_reg_3630 <= add_ln49_4_fu_1454_p2;
        gmem_addr_2_reg_3624 <= sext_ln48_fu_1415_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_fu_1470_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln49_5_reg_3644 <= add_ln49_5_fu_1479_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln49_5_reg_3644_pp0_iter1_reg <= add_ln49_5_reg_3644;
        icmp_ln48_reg_3640 <= icmp_ln48_fu_1470_p2;
        icmp_ln48_reg_3640_pp0_iter1_reg <= icmp_ln48_reg_3640;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln58_reg_3664 <= add_ln58_fu_1506_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state131)) begin
        add_ln66_4_reg_4510 <= add_ln66_4_fu_2894_p2;
        empty_50_reg_4515 <= empty_50_fu_2904_p2;
        empty_51_reg_4520 <= empty_51_fu_2913_p2;
        empty_52_reg_4530 <= empty_52_fu_2922_p2;
        trunc_ln68_reg_4525 <= trunc_ln68_fu_2918_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        add_ln71_reg_4641 <= add_ln71_fu_3153_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln98_reg_4098_pp3_iter1_reg == 1'd0))) begin
        add_ln727_2_reg_4209 <= add_ln727_2_fu_2382_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln727_2_reg_4209_pp3_iter3_reg <= add_ln727_2_reg_4209;
        add_ln727_2_reg_4209_pp3_iter4_reg <= add_ln727_2_reg_4209_pp3_iter3_reg;
        icmp_ln98_reg_4098 <= icmp_ln98_fu_2121_p2;
        icmp_ln98_reg_4098_pp3_iter1_reg <= icmp_ln98_reg_4098;
        icmp_ln98_reg_4098_pp3_iter2_reg <= icmp_ln98_reg_4098_pp3_iter1_reg;
        icmp_ln98_reg_4098_pp3_iter3_reg <= icmp_ln98_reg_4098_pp3_iter2_reg;
        icmp_ln98_reg_4098_pp3_iter4_reg <= icmp_ln98_reg_4098_pp3_iter3_reg;
        icmp_ln98_reg_4098_pp3_iter5_reg <= icmp_ln98_reg_4098_pp3_iter4_reg;
        trunc_ln727_reg_4144 <= trunc_ln727_fu_2162_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) & (cmp103321_reg_4491 == 1'd1))) begin
        add_ln73_reg_4669 <= add_ln73_fu_3213_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        add_ln85_1_reg_3806 <= add_ln85_1_fu_1618_p2;
        empty_62_reg_3811 <= grp_fu_1609_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        add_ln89_1_reg_3861 <= add_ln89_1_fu_1753_p2;
        select_ln85_1_reg_3839 <= select_ln85_1_fu_1660_p3;
        select_ln85_4_reg_3845 <= select_ln85_4_fu_1708_p3;
        select_ln86_3_reg_3867 <= select_ln86_3_fu_1759_p3;
        select_ln86_reg_3850 <= select_ln86_fu_1725_p3;
        trunc_ln86_1_reg_3856 <= trunc_ln86_1_fu_1733_p1;
        trunc_ln87_reg_3872 <= trunc_ln87_fu_1767_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp144403_reg_3774 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        add_ln89_4_reg_3903 <= add_ln89_4_fu_1886_p2;
        gmem_addr_4_reg_3897 <= sext_ln88_fu_1847_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln88_fu_1902_p2 == 1'd0))) begin
        add_ln89_5_reg_3917 <= add_ln89_5_fu_1911_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln89_5_reg_3917_pp2_iter1_reg <= add_ln89_5_reg_3917;
        icmp_ln88_reg_3913 <= icmp_ln88_fu_1902_p2;
        icmp_ln88_reg_3913_pp2_iter1_reg <= icmp_ln88_reg_3913;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        add_ln95_4_reg_3988 <= add_ln95_4_fu_1981_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp173388_reg_3830 == 1'd1) & (1'b1 == ap_CS_fsm_state79))) begin
        add_ln97_reg_4053 <= add_ln97_fu_2067_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        add_ln98_1_reg_4088 <= add_ln98_1_fu_2111_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln98_fu_2121_p2 == 1'd0))) begin
        add_ln98_reg_4102 <= add_ln98_fu_2126_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (icmp_ln98_reg_4098 == 1'd0))) begin
        add_ln99_2_reg_4134 <= add_ln99_2_fu_2152_p2;
        icmp_ln99_reg_4112 <= icmp_ln99_fu_2136_p2;
        trunc_ln98_2_reg_4129 <= trunc_ln98_2_fu_2148_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln98_reg_4098 == 1'd0))) begin
        add_ln99_reg_4155 <= add_ln99_fu_2173_p2;
        select_ln98_reg_4150 <= select_ln98_fu_2166_p3;
        trunc_ln727_1_reg_4161 <= trunc_ln727_1_fu_2179_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (icmp_ln98_reg_4098_pp3_iter3_reg == 1'd0))) begin
        addr_cmp_reg_4249 <= addr_cmp_fu_2421_p2;
        dx_addr_reg_4244 <= zext_ln1118_fu_2413_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        bound106_reg_3784 <= grp_fu_1579_p2;
        cmp144403_reg_3774 <= grp_fu_1039_p2;
        empty_61_reg_3778 <= grp_fu_1600_p2;
        icmp_ln87_reg_3790 <= grp_fu_1044_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        bound129_reg_3937 <= grp_fu_1642_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        bound142_reg_3973 <= grp_fu_1944_p2;
        bound175_reg_3978 <= grp_fu_1957_p2;
        icmp_ln100_reg_3983 <= icmp_ln100_fu_1976_p2;
        sub_ln95_reg_3968 <= sub_ln95_fu_1971_p2;
        trunc_ln95_reg_3963 <= trunc_ln95_fu_1963_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        bound26_reg_4458 <= grp_fu_2852_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        bound40_reg_4475 <= grp_fu_2864_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        bound4_reg_3502 <= grp_fu_1146_p2;
        cmp57428_reg_3482 <= grp_fu_1039_p2;
        empty_43_reg_3497 <= empty_43_fu_1158_p1;
        icmp_ln47_reg_3507 <= grp_fu_1044_p2;
        trunc_ln45_1_reg_3491 <= trunc_ln45_1_fu_1155_p1;
        trunc_ln45_reg_3486 <= trunc_ln45_fu_1152_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        bound62_reg_4500 <= grp_fu_2880_p2;
        cmp103321_reg_4491 <= grp_fu_1039_p2;
        icmp_ln68_reg_4505 <= icmp_ln68_fu_2889_p2;
        trunc_ln66_reg_4495 <= trunc_ln66_fu_2886_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        bound95_reg_3725 <= grp_fu_1548_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bound_reg_3461 <= grp_fu_1130_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((fwprop_read_reg_3323 == 1'd0) & (icmp_ln45_reg_3447 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
        cast94_reg_3707[31 : 0] <= cast94_fu_1545_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln85_fu_1624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51))) begin
        cmp173388_reg_3830 <= cmp173388_fu_1634_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp173388_reg_3830 == 1'd1) & (1'b1 == ap_CS_fsm_state77))) begin
        dbbuf_V_addr_1_reg_4041 <= zext_ln95_fu_2031_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln98_reg_4098_pp3_iter4_reg == 1'd0))) begin
        dwbuf_V_addr_2_reg_4274 <= zext_ln727_1_fu_2467_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln115_reg_4410 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        dwbuf_V_load_reg_4419 <= dwbuf_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
        dx_addr_reg_4244_pp3_iter4_reg <= dx_addr_reg_4244;
        trunc_ln101_reg_4202_pp3_iter2_reg <= trunc_ln101_reg_4202;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        empty_42_reg_3467 <= empty_42_fu_1136_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        empty_44_reg_3521 <= grp_fu_1167_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        empty_47_reg_3619 <= grp_fu_1369_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (icmp_ln71_fu_3159_p2 == 1'd0))) begin
        empty_54_reg_4649 <= empty_54_fu_3173_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        empty_59_reg_3732 <= empty_59_fu_1569_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        empty_60_reg_3760 <= grp_fu_1591_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        empty_65_reg_3887 <= grp_fu_1779_p2;
        mul_ln85_reg_3877 <= grp_fu_1771_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        empty_66_reg_3892 <= empty_66_fu_1799_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        empty_68_reg_4046 <= empty_68_fu_2064_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        empty_74_reg_4036 <= empty_74_fu_2059_p2;
        zext_ln96_reg_4031[5 : 0] <= zext_ln96_fu_2055_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        empty_75_reg_4309 <= grp_fu_2504_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        empty_79_reg_4379 <= grp_fu_2661_p2;
        mul_ln112_reg_4374 <= grp_fu_2589_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        empty_80_reg_4389 <= empty_80_fu_2685_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_reg_3669_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        gmem_addr_1_read_reg_3697 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_reg_3669 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        gmem_addr_1_reg_3686 <= add_ln60_fu_1532_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_reg_3640 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_addr_2_read_reg_3649 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_reg_3913 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        gmem_addr_4_read_reg_3922 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_reg_3669_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        gmem_addr_read_reg_3692 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_fu_1512_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        gmem_addr_reg_3680 <= add_ln59_fu_1521_p2;
        zext_ln59_reg_3673[30 : 0] <= zext_ln59_fu_1517_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln112_reg_4305 == 1'd0) & (1'b1 == ap_CS_fsm_state96))) begin
        icmp_ln113_reg_4314 <= icmp_ln113_fu_2524_p2;
        select_ln112_4_reg_4334 <= select_ln112_4_fu_2546_p3;
        select_ln113_reg_4341 <= select_ln113_fu_2559_p3;
        trunc_ln112_reg_4328 <= trunc_ln112_fu_2537_p1;
        trunc_ln114_reg_4347 <= trunc_ln114_fu_2567_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln115_reg_4410 <= icmp_ln115_fu_2788_p2;
        icmp_ln115_reg_4410_pp4_iter1_reg <= icmp_ln115_reg_4410;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln123_reg_4439 <= icmp_ln123_fu_2831_p2;
        icmp_ln123_reg_4439_pp5_iter1_reg <= icmp_ln123_reg_4439;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln45_reg_3447 <= icmp_ln45_fu_1119_p2;
        outH_reg_3430 <= outH_fu_1099_p2;
        outW_reg_3442 <= outW_fu_1113_p2;
        trunc_ln42_reg_3437 <= trunc_ln42_fu_1109_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln58_reg_3669 <= icmp_ln58_fu_1512_p2;
        icmp_ln58_reg_3669_pp1_iter1_reg <= icmp_ln58_reg_3669;
        icmp_ln58_reg_3669_pp1_iter2_reg <= icmp_ln58_reg_3669_pp1_iter1_reg;
        icmp_ln58_reg_3669_pp1_iter3_reg <= icmp_ln58_reg_3669_pp1_iter2_reg;
        icmp_ln58_reg_3669_pp1_iter4_reg <= icmp_ln58_reg_3669_pp1_iter3_reg;
        zext_ln59_reg_3673_pp1_iter1_reg[30 : 0] <= zext_ln59_reg_3673[30 : 0];
        zext_ln59_reg_3673_pp1_iter2_reg[30 : 0] <= zext_ln59_reg_3673_pp1_iter1_reg[30 : 0];
        zext_ln59_reg_3673_pp1_iter3_reg[30 : 0] <= zext_ln59_reg_3673_pp1_iter2_reg[30 : 0];
        zext_ln59_reg_3673_pp1_iter4_reg[30 : 0] <= zext_ln59_reg_3673_pp1_iter3_reg[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state131) & (icmp_ln66_fu_2928_p2 == 1'd0))) begin
        icmp_ln67_reg_4538 <= icmp_ln67_fu_2939_p2;
        or_ln67_reg_4570 <= or_ln67_fu_3015_p2;
        p_mid170_reg_4547 <= p_mid170_fu_2956_p2;
        select_ln66_2_reg_4553 <= select_ln66_2_fu_2969_p3;
        select_ln66_6_reg_4558 <= select_ln66_6_fu_2994_p3;
        select_ln66_7_reg_4565 <= select_ln66_7_fu_3001_p3;
        select_ln67_4_reg_4582 <= select_ln67_4_fu_3025_p3;
        select_ln67_5_reg_4590 <= select_ln67_5_fu_3032_p3;
        trunc_ln67_1_reg_4577 <= trunc_ln67_1_fu_3021_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((fwprop_read_reg_3323 == 1'd1) & (icmp_ln45_reg_3447 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
        icmp_ln69_reg_3719 <= icmp_ln69_fu_1564_p2;
        sub_ln66_reg_3713 <= sub_ln66_fu_1559_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        icmp_ln72_reg_4679 <= icmp_ln72_fu_3228_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln85_fu_1624_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state51))) begin
        icmp_ln86_reg_3819 <= icmp_ln86_fu_1629_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state74) & (icmp_ln95_fu_1987_p2 == 1'd0))) begin
        icmp_ln96_reg_3996 <= icmp_ln96_fu_1998_p2;
        select_ln95_1_reg_4001 <= select_ln95_1_fu_2004_p3;
        trunc_ln95_2_reg_4011 <= trunc_ln95_2_fu_2016_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        mul_ln46_reg_3603 <= grp_fu_1344_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state99) & (select_ln112_4_reg_4334 == 1'd1))) begin
        p_mid1190_reg_4384 <= grp_fu_2665_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln85_4_reg_3845 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
        p_mid199_reg_3882 <= grp_fu_1775_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_mid1_reg_3581 <= grp_fu_1242_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        r_V_reg_4077 <= dy_Dout_A;
        sext_ln1118_1_reg_4082 <= sext_ln1118_1_fu_2107_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state71) | ((fwprop_read_reg_3323 == 1'd1) & (icmp_ln45_reg_3447 == 1'd1) & (1'b1 == ap_CS_fsm_state43)))) begin
        reg_1073 <= grp_fu_1063_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state73))) begin
        reg_1077 <= grp_fu_1068_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) | ((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln123_reg_4439 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        reg_1081 <= dbbuf_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln112_reg_4305 == 1'd0) & (1'b0 == ap_block_state96_io) & (1'b1 == ap_CS_fsm_state96))) begin
        select_ln112_1_reg_4322 <= select_ln112_1_fu_2529_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        select_ln46_reg_3608 <= select_ln46_fu_1352_p3;
        tmp11_reg_3614 <= tmp11_fu_1364_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        select_ln67_1_reg_4595 <= select_ln67_1_fu_3067_p3;
        select_ln68_1_reg_4600 <= select_ln68_1_fu_3097_p3;
        select_ln68_3_reg_4610 <= select_ln68_3_fu_3117_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        select_ln68_reg_4620 <= select_ln68_fu_3137_p3;
        trunc_ln69_reg_4625 <= trunc_ln69_fu_3145_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        select_ln95_reg_4018 <= select_ln95_fu_2020_p3;
        trunc_ln96_reg_4024 <= trunc_ln96_fu_2027_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (icmp_ln98_reg_4098 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        select_ln98_1_reg_4124 <= select_ln98_1_fu_2141_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln98_reg_4098_pp3_iter1_reg == 1'd0))) begin
        select_ln99_4_reg_4197 <= select_ln99_4_fu_2360_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln98_reg_4098 == 1'd0))) begin
        select_ln99_5_reg_4167 <= select_ln99_5_fu_2183_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_1_reg_3517 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        sext_ln58_1_reg_3576 <= sext_ln58_1_fu_1238_p1;
        sext_ln58_reg_3571 <= sext_ln58_fu_1234_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_reg_3527 <= tmp_fu_1181_p2;
        trunc_ln49_reg_3532 <= trunc_ln49_fu_1186_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state97) & (select_ln112_4_reg_4334 == 1'd1))) begin
        trunc_ln113_1_reg_4358 <= trunc_ln113_1_fu_2629_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (icmp_ln98_reg_4098_pp3_iter4_reg == 1'd0))) begin
        trunc_ln708_1_reg_4269 <= {{grp_fu_3284_p3[22:7]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        trunc_ln85_reg_3748 <= trunc_ln85_fu_1585_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        trunc_ln89_reg_3801 <= trunc_ln89_fu_1614_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp173388_reg_3830 == 1'd1) & (1'b1 == ap_CS_fsm_state79) & (icmp_ln97_fu_2073_p2 == 1'd0))) begin
        trunc_ln97_reg_4061 <= trunc_ln97_fu_2078_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln99_reg_4112 == 1'd0))) begin
        trunc_ln99_reg_4139 <= trunc_ln99_fu_2158_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln98_reg_4098_pp3_iter2_reg == 1'd0))) begin
        wbuf_V_load_reg_4224 <= wbuf_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln98_reg_4098_pp3_iter3_reg == 1'd0))) begin
        x_load_1_reg_4254 <= x_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        y_addr_reg_4636 <= zext_ln70_fu_3149_p1;
    end
end

always @ (*) begin
    if ((icmp_ln48_fu_1470_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln58_fu_1512_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state32 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state32 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln88_fu_1902_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state64 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state64 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_condition_pp3_exit_iter1_state84 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter1_state84 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage1_subdone) & (1'b1 == ap_CS_fsm_pp3_stage1) & (icmp_ln98_reg_4098 == 1'd1))) begin
        ap_condition_pp3_flush_enable = 1'b1;
    end else begin
        ap_condition_pp3_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln115_fu_2788_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state103 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state103 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln123_fu_2831_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state111 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state111 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln72_fu_3228_p2 == 1'd1))) begin
        ap_condition_pp6_flush_enable = 1'b1;
    end else begin
        ap_condition_pp6_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((~((gmem_BVALID == 1'b0) & (ap_predicate_op806_writeresp_state118 == 1'b1)) & (1'b1 == ap_CS_fsm_state118))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln98_reg_4098 == 1'd0))) begin
        ap_phi_mux_c_1_phi_fu_781_p4 = select_ln98_1_reg_4124;
    end else begin
        ap_phi_mux_c_1_phi_fu_781_p4 = c_1_reg_777;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln98_reg_4098_pp3_iter1_reg == 1'd0))) begin
        ap_phi_mux_fh_1_phi_fu_804_p4 = select_ln99_4_reg_4197;
    end else begin
        ap_phi_mux_fh_1_phi_fu_804_p4 = fh_1_reg_800;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln98_reg_4098_pp3_iter2_reg == 1'd0))) begin
        ap_phi_mux_fw_1_phi_fu_815_p4 = add_ln100_reg_4219;
    end else begin
        ap_phi_mux_fw_1_phi_fu_815_p4 = fw_1_reg_811;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln58_reg_3669 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i_1_phi_fu_633_p4 = add_ln58_reg_3664;
    end else begin
        ap_phi_mux_i_1_phi_fu_633_p4 = i_1_reg_629;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln98_reg_4098_pp3_iter1_reg == 1'd0))) begin
        ap_phi_mux_indvar_flatten137_phi_fu_793_p4 = select_ln99_5_reg_4167;
    end else begin
        ap_phi_mux_indvar_flatten137_phi_fu_793_p4 = indvar_flatten137_reg_789;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln98_reg_4098 == 1'd0))) begin
        ap_phi_mux_indvar_flatten168_phi_fu_770_p4 = add_ln98_1_reg_4088;
    end else begin
        ap_phi_mux_indvar_flatten168_phi_fu_770_p4 = indvar_flatten168_reg_766;
    end
end

always @ (*) begin
    if ((~((gmem_BVALID == 1'b0) & (ap_predicate_op806_writeresp_state118 == 1'b1)) & (1'b1 == ap_CS_fsm_state118))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        bbuf_V_address0 = zext_ln66_fu_3124_p1;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        bbuf_V_address0 = zext_ln59_reg_3673_pp1_iter4_reg;
    end else begin
        bbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state134) | ((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        bbuf_V_ce0 = 1'b1;
    end else begin
        bbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_3669_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        bbuf_V_we0 = 1'b1;
    end else begin
        bbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        dbbuf_V_address0 = zext_ln124_fu_2840_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        dbbuf_V_address0 = dbbuf_V_addr_1_reg_4041;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        dbbuf_V_address0 = zext_ln95_fu_2031_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        dbbuf_V_address0 = zext_ln59_reg_3673_pp1_iter4_reg;
    end else begin
        dbbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state77) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
        dbbuf_V_ce0 = 1'b1;
    end else begin
        dbbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        dbbuf_V_d0 = empty_69_reg_755;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        dbbuf_V_d0 = gmem_addr_1_read_reg_3697;
    end else begin
        dbbuf_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln58_reg_3669_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((cmp173388_reg_3830 == 1'd1) & (1'b1 == ap_CS_fsm_state79) & (icmp_ln97_fu_2073_p2 == 1'd1)))) begin
        dbbuf_V_we0 = 1'b1;
    end else begin
        dbbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter6 == 1'b1))) begin
        dwbuf_V_address0 = dwbuf_V_addr_2_reg_4274;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        dwbuf_V_address0 = zext_ln89_6_fu_1916_p1;
    end else begin
        dwbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        dwbuf_V_address1 = zext_ln116_6_fu_2802_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter5 == 1'b1))) begin
        dwbuf_V_address1 = zext_ln727_1_fu_2467_p1;
    end else begin
        dwbuf_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter6 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
        dwbuf_V_ce0 = 1'b1;
    end else begin
        dwbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter5 == 1'b1)))) begin
        dwbuf_V_ce1 = 1'b1;
    end else begin
        dwbuf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter6 == 1'b1))) begin
        dwbuf_V_d0 = {{grp_fu_3292_p3[22:7]}};
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        dwbuf_V_d0 = gmem_addr_4_read_reg_3922;
    end else begin
        dwbuf_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (icmp_ln98_reg_4098_pp3_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln88_reg_3913_pp2_iter1_reg == 1'd0)))) begin
        dwbuf_V_we0 = 1'b1;
    end else begin
        dwbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter5 == 1'b1))) begin
        dx_Addr_A_orig = dx_addr_reg_4244_pp3_iter4_reg;
    end else if (((1'b0 == ap_block_pp3_stage1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        dx_Addr_A_orig = zext_ln1118_fu_2413_p1;
    end else begin
        dx_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter5 == 1'b1)))) begin
        dx_EN_A = 1'b1;
    end else begin
        dx_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter5 == 1'b1) & (icmp_ln98_reg_4098_pp3_iter4_reg == 1'd0))) begin
        dx_WEN_A = 2'd3;
    end else begin
        dx_WEN_A = 2'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        dy_EN_A = 1'b1;
    end else begin
        dy_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state57))) begin
        gmem_ARADDR = gmem_addr_4_reg_3897;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln58_reg_3669 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        gmem_ARADDR = gmem_addr_1_reg_3686;
    end else if (((icmp_ln58_reg_3669 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        gmem_ARADDR = gmem_addr_reg_3680;
    end else if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        gmem_ARADDR = gmem_addr_2_reg_3624;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln58_reg_3669 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln58_reg_3669 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        gmem_ARLEN = 32'd1;
    end else if ((((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state57)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        gmem_ARLEN = FW_read_reg_3327;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln58_reg_3669 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln58_reg_3669 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state57)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state102))) begin
        gmem_AWADDR = gmem_addr_5_reg_4394;
    end else if (((icmp_ln112_reg_4305 == 1'd1) & (1'b0 == ap_block_state96_io) & (1'b1 == ap_CS_fsm_state96))) begin
        gmem_AWADDR = sext_ln123_fu_2571_p1;
    end else begin
        gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state102))) begin
        gmem_AWLEN = FW_read_reg_3327;
    end else if (((icmp_ln112_reg_4305 == 1'd1) & (1'b0 == ap_block_state96_io) & (1'b1 == ap_CS_fsm_state96))) begin
        gmem_AWLEN = F_read_reg_3386;
    end else begin
        gmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln112_reg_4305 == 1'd1) & (1'b0 == ap_block_state96_io) & (1'b1 == ap_CS_fsm_state96)) | ((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state102)))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((gmem_BVALID == 1'b0) & (ap_predicate_op806_writeresp_state118 == 1'b1)) & (1'b1 == ap_CS_fsm_state118) & (ap_predicate_op806_writeresp_state118 == 1'b1)) | (~((gmem_BVALID == 1'b0) & (cmp144403_reg_3774 == 1'd1)) & (cmp144403_reg_3774 == 1'd1) & (1'b1 == ap_CS_fsm_state110)))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_3913 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln58_reg_3669_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((icmp_ln58_reg_3669_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln48_reg_3640 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln123_reg_4439_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_01001))) begin
        gmem_WDATA = reg_1081;
    end else if (((icmp_ln115_reg_4410_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_01001))) begin
        gmem_WDATA = dwbuf_V_load_reg_4419;
    end else begin
        gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln123_reg_4439_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((icmp_ln115_reg_4410_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state21) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln58_reg_3669 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln58_reg_3669 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state102) | ((icmp_ln112_reg_4305 == 1'd1) & (1'b1 == ap_CS_fsm_state96)))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((fwprop_read_reg_3323 == 1'd0) & (icmp_ln45_reg_3447 == 1'd1) & (1'b1 == ap_CS_fsm_state118)) | ((cmp144403_reg_3774 == 1'd1) & (1'b1 == ap_CS_fsm_state110)))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_3913 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln58_reg_3669_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((icmp_ln58_reg_3669_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln48_reg_3640 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln123_reg_4439_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((icmp_ln115_reg_4410_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0)))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | ((1'b0 == ap_block_state96_io) & (1'b1 == ap_CS_fsm_state96)))) begin
        grp_fu_2504_ce = 1'b1;
    end else begin
        grp_fu_2504_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        wbuf_V_address0 = zext_ln1118_7_fu_2396_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        wbuf_V_address0 = zext_ln49_6_fu_1484_p1;
    end else begin
        wbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        wbuf_V_ce0 = 1'b1;
    end else begin
        wbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln48_reg_3640_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        wbuf_V_we0 = 1'b1;
    end else begin
        wbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        x_Addr_A_orig = zext_ln1116_fu_3242_p1;
    end else if (((1'b0 == ap_block_pp3_stage1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        x_Addr_A_orig = zext_ln1118_fu_2413_p1;
    end else begin
        x_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter3 == 1'b1)))) begin
        x_EN_A = 1'b1;
    end else begin
        x_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        y_Addr_A_orig = y_addr_reg_4636;
    end else if ((1'b1 == ap_CS_fsm_state135)) begin
        y_Addr_A_orig = zext_ln70_fu_3149_p1;
    end else begin
        y_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        y_Din_A = empty_56_reg_1014;
    end else if ((1'b1 == ap_CS_fsm_state135)) begin
        y_Din_A = bbuf_V_q0;
    end else begin
        y_Din_A = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state135))) begin
        y_EN_A = 1'b1;
    end else begin
        y_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state135))) begin
        y_WEN_A = 2'd3;
    end else begin
        y_WEN_A = 2'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln45_fu_1119_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln45_1_reg_3517 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((cmp57428_reg_3482 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln48_fu_1470_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln48_fu_1470_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln58_fu_1512_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter4 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if ((((ap_enable_reg_pp1_iter4 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((icmp_ln58_fu_1512_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((fwprop_read_reg_3323 == 1'd1) & (icmp_ln45_reg_3447 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state119;
            end else if (((icmp_ln45_reg_3447 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if (((icmp_ln85_fu_1624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            if (((cmp144403_reg_3774 == 1'd0) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state57 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln88_fu_1902_p2 == 1'd1)) & ~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln88_fu_1902_p2 == 1'd1)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            if (((1'b1 == ap_CS_fsm_state74) & (icmp_ln95_fu_1987_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            if (((cmp173388_reg_3830 == 1'd0) & (1'b1 == ap_CS_fsm_state77))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            if (((1'b1 == ap_CS_fsm_state79) & ((cmp173388_reg_3830 == 1'd0) | (icmp_ln97_fu_2073_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (ap_enable_reg_pp3_iter5 == 1'b0)) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (ap_enable_reg_pp3_iter5 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((~((1'b0 == ap_block_pp3_stage1_subdone) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (ap_enable_reg_pp3_iter0 == 1'b0)) & (1'b0 == ap_block_pp3_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((1'b0 == ap_block_pp3_stage1_subdone) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            if (((icmp_ln112_reg_4305 == 1'd1) & (1'b0 == ap_block_state96_io) & (1'b1 == ap_CS_fsm_state96))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((icmp_ln112_reg_4305 == 1'd0) & (1'b0 == ap_block_state96_io) & (1'b1 == ap_CS_fsm_state96))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            if (((cmp144403_reg_3774 == 1'd0) & (1'b1 == ap_CS_fsm_state101))) begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end
        end
        ap_ST_fsm_state102 : begin
            if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state102))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln115_fu_2788_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)) & ~((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0)) | ((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln115_fu_2788_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            if ((~((gmem_BVALID == 1'b0) & (cmp144403_reg_3774 == 1'd1)) & (1'b1 == ap_CS_fsm_state110))) begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (icmp_ln123_fu_2831_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)) & ~((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) | ((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (icmp_ln123_fu_2831_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            if ((~((gmem_BVALID == 1'b0) & (ap_predicate_op806_writeresp_state118 == 1'b1)) & (1'b1 == ap_CS_fsm_state118))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            if (((1'b1 == ap_CS_fsm_state131) & (icmp_ln66_fu_2928_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state132;
            end
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            if (((1'b1 == ap_CS_fsm_state136) & (icmp_ln71_fu_3159_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state131;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state137;
            end
        end
        ap_ST_fsm_state137 : begin
            if (((1'b1 == ap_CS_fsm_state137) & (cmp103321_reg_4491 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state141;
            end
        end
        ap_ST_fsm_pp6_stage0 : begin
            if (~((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state140;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln100_fu_2401_p2 = (select_ln99_reg_4172 + 32'd1);

assign add_ln1116_fu_3237_p2 = (add_ln73_reg_4669 + trunc_ln73_fu_3233_p1);

assign add_ln1118_1_fu_2406_p2 = ($signed(grp_fu_3277_p3) + $signed(trunc_ln101_reg_4202_pp3_iter2_reg));

assign add_ln1118_2_fu_2387_p2 = (trunc_ln101_reg_4202 + trunc_ln97_reg_4061);

assign add_ln1118_3_fu_2049_p2 = (zext_ln1118_2_fu_2045_p1 + zext_ln1118_1_fu_2035_p1);

assign add_ln1118_4_fu_2200_p2 = (zext_ln96_reg_4031 + zext_ln1118_3_fu_2197_p1);

assign add_ln1118_5_fu_2221_p2 = (zext_ln1118_5_fu_2217_p1 + zext_ln1118_4_fu_2205_p1);

assign add_ln1118_6_fu_2308_p2 = (trunc_ln727_1_reg_4161 + empty_68_reg_4046);

assign add_ln1118_7_fu_2324_p2 = (add_ln1118_5_fu_2221_p2 + zext_ln1118_6_fu_2320_p1);

assign add_ln1118_8_fu_2346_p2 = (p_shl8_cast_fu_2338_p3 + trunc_ln1118_fu_2330_p1);

assign add_ln1118_9_fu_2391_p2 = (add_ln1118_8_reg_4187 + add_ln1118_2_fu_2387_p2);

assign add_ln1118_fu_2193_p2 = (trunc_ln727_reg_4144 + empty_68_reg_4046);

assign add_ln112_1_fu_2494_p2 = (indvar_flatten215_reg_822 + 95'd1);

assign add_ln112_fu_2518_p2 = (i_3_reg_845 + 31'd1);

assign add_ln113_1_fu_2812_p2 = (indvar_flatten192_reg_856 + 64'd1);

assign add_ln113_fu_2623_p2 = (select_ln112_fu_2582_p3 + 32'd1);

assign add_ln114_fu_2807_p2 = (select_ln113_reg_4341 + 32'd1);

assign add_ln115_fu_2778_p2 = (l_2_reg_879 + 31'd1);

assign add_ln116_1_fu_2648_p2 = (zext_ln113_fu_2613_p1 + zext_ln116_2_fu_2644_p1);

assign add_ln116_2_fu_2705_p2 = (zext_ln116_4_fu_2701_p1 + zext_ln116_3_fu_2691_p1);

assign add_ln116_3_fu_2750_p2 = (add_ln116_2_fu_2705_p2 + zext_ln116_5_fu_2746_p1);

assign add_ln116_4_fu_2772_p2 = (p_shl5_cast_fu_2764_p3 + trunc_ln116_3_fu_2756_p1);

assign add_ln116_5_fu_2797_p2 = (add_ln116_4_reg_4400 + trunc_ln116_5_fu_2793_p1);

assign add_ln116_fu_2607_p2 = (zext_ln116_1_fu_2603_p1 + zext_ln116_fu_2593_p1);

assign add_ln123_fu_2825_p2 = (i_4_reg_890 + 31'd1);

assign add_ln45_1_fu_1161_p2 = (indvar_flatten21_reg_559 + 95'd1);

assign add_ln45_fu_1190_p2 = ($signed(i_reg_570) + $signed(31'd1));

assign add_ln46_1_fu_1493_p2 = (indvar_flatten_reg_582 + 64'd1);

assign add_ln46_fu_1293_p2 = (select_ln45_fu_1246_p3 + 32'd1);

assign add_ln47_fu_1488_p2 = (select_ln46_reg_3608 + 32'd1);

assign add_ln48_fu_1460_p2 = (l_reg_618 + 31'd1);

assign add_ln49_1_fu_1331_p2 = (zext_ln46_fu_1278_p1 + zext_ln49_2_fu_1327_p1);

assign add_ln49_2_fu_1387_p2 = (zext_ln49_4_fu_1383_p1 + zext_ln49_3_fu_1373_p1);

assign add_ln49_3_fu_1432_p2 = (add_ln49_2_fu_1387_p2 + zext_ln49_5_fu_1428_p1);

assign add_ln49_4_fu_1454_p2 = (p_shl1_cast_fu_1446_p3 + trunc_ln49_3_fu_1438_p1);

assign add_ln49_5_fu_1479_p2 = (add_ln49_4_reg_3630 + trunc_ln49_5_fu_1475_p1);

assign add_ln49_fu_1272_p2 = (zext_ln49_1_fu_1268_p1 + zext_ln49_fu_1258_p1);

assign add_ln58_fu_1506_p2 = (ap_phi_mux_i_1_phi_fu_633_p4 + 31'd1);

assign add_ln59_fu_1521_p2 = ($signed(zext_ln59_fu_1517_p1) + $signed(sext_ln58_reg_3571));

assign add_ln60_fu_1532_p2 = ($signed(zext_ln59_reg_3673) + $signed(sext_ln58_1_reg_3576));

assign add_ln66_2_fu_2933_p2 = (f_reg_912 + 31'd1);

assign add_ln66_4_fu_2894_p2 = (indvar_flatten90_reg_901 + 127'd1);

assign add_ln66_fu_1554_p2 = (W_read_reg_3362 + 32'd1);

assign add_ln67_1_fu_3196_p2 = (indvar_flatten56_reg_923 + 96'd1);

assign add_ln67_fu_3009_p2 = (select_ln66_fu_2944_p3 + 32'd1);

assign add_ln68_1_fu_3183_p2 = (indvar_flatten35_reg_946 + 64'd1);

assign add_ln68_fu_3087_p2 = (select_ln67_fu_3056_p3 + 32'd1);

assign add_ln69_fu_3178_p2 = (select_ln68_reg_4620 + 32'd1);

assign add_ln703_1_fu_3247_p2 = (x_Dout_A + empty_56_reg_1014);

assign add_ln703_fu_2489_p2 = ($signed(r_V_reg_4077) + $signed(empty_69_reg_755));

assign add_ln71_fu_3153_p2 = (fh_reg_992 + 32'd1);

assign add_ln727_1_fu_2377_p2 = (p_shl7_cast_fu_2370_p3 + trunc_ln727_2_reg_4177);

assign add_ln727_2_fu_2382_p2 = (add_ln727_1_fu_2377_p2 + trunc_ln101_reg_4202);

assign add_ln727_fu_2294_p2 = (add_ln1118_5_fu_2221_p2 + zext_ln727_fu_2290_p1);

assign add_ln72_fu_3218_p2 = (fw_reg_1003 + 31'd1);

assign add_ln73_fu_3213_p2 = (empty_55_fu_3209_p2 + trunc_ln69_reg_4625);

assign add_ln85_1_fu_1618_p2 = (indvar_flatten124_reg_652 + 95'd1);

assign add_ln85_fu_1647_p2 = (i_2_reg_663 + 31'd1);

assign add_ln86_1_fu_1925_p2 = (indvar_flatten101_reg_675 + 64'd1);

assign add_ln86_fu_1714_p2 = (select_ln85_fu_1653_p3 + 32'd1);

assign add_ln87_fu_1920_p2 = (select_ln86_reg_3850 + 32'd1);

assign add_ln88_fu_1892_p2 = (l_1_reg_699 + 31'd1);

assign add_ln89_1_fu_1753_p2 = (zext_ln86_fu_1693_p1 + zext_ln89_2_fu_1749_p1);

assign add_ln89_2_fu_1819_p2 = (zext_ln89_4_fu_1815_p1 + zext_ln89_3_fu_1805_p1);

assign add_ln89_3_fu_1864_p2 = (add_ln89_2_fu_1819_p2 + zext_ln89_5_fu_1860_p1);

assign add_ln89_4_fu_1886_p2 = (p_shl3_cast_fu_1878_p3 + trunc_ln89_3_fu_1870_p1);

assign add_ln89_5_fu_1911_p2 = (add_ln89_4_reg_3903 + trunc_ln89_5_fu_1907_p1);

assign add_ln89_fu_1687_p2 = (zext_ln89_1_fu_1683_p1 + zext_ln89_fu_1671_p1);

assign add_ln95_2_fu_1992_p2 = (f_1_reg_721 + 31'd1);

assign add_ln95_4_fu_1981_p2 = (indvar_flatten181_reg_710 + 63'd1);

assign add_ln95_fu_1966_p2 = (W_read_reg_3362 + 32'd1);

assign add_ln96_fu_2102_p2 = (select_ln95_reg_4018 + 32'd1);

assign add_ln97_fu_2067_p2 = (w_1_reg_744 + 32'd1);

assign add_ln98_1_fu_2111_p2 = (ap_phi_mux_indvar_flatten168_phi_fu_770_p4 + 96'd1);

assign add_ln98_fu_2126_p2 = (ap_phi_mux_c_1_phi_fu_781_p4 + 32'd1);

assign add_ln99_2_fu_2152_p2 = (ap_phi_mux_indvar_flatten137_phi_fu_793_p4 + 64'd1);

assign add_ln99_fu_2173_p2 = (select_ln98_fu_2166_p3 + 32'd1);

assign addr_cmp_fu_2421_p2 = ((reuse_addr_reg_fu_238 == zext_ln1118_fu_2413_p1) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd74];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln48_reg_3640 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln48_reg_3640 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((gmem_RVALID == 1'b0) & (icmp_ln58_reg_3669_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_block_state34_io)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((gmem_RVALID == 1'b0) & (icmp_ln58_reg_3669_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_block_state34_io)));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_11001 = (((gmem_RVALID == 1'b0) & (icmp_ln58_reg_3669_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_block_state33_io)));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = (((gmem_RVALID == 1'b0) & (icmp_ln58_reg_3669_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_block_state33_io)));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln88_reg_3913 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln88_reg_3913 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage0_11001 = ((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_block_state105_io));
end

always @ (*) begin
    ap_block_pp4_stage0_subdone = ((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_block_state105_io));
end

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_block_state113_io));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_block_state113_io));
end

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state103_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state105_io = ((gmem_WREADY == 1'b0) & (icmp_ln115_reg_4410_pp4_iter1_reg == 1'd0));
end

assign ap_block_state105_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state110 = ((gmem_BVALID == 1'b0) & (cmp144403_reg_3774 == 1'd1));
end

assign ap_block_state111_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state113_io = ((gmem_WREADY == 1'b0) & (icmp_ln123_reg_4439_pp5_iter1_reg == 1'd0));
end

assign ap_block_state113_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state118 = ((gmem_BVALID == 1'b0) & (ap_predicate_op806_writeresp_state118 == 1'b1));
end

assign ap_block_state138_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp0_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln48_reg_3640 == 1'd0));
end

assign ap_block_state30_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state33_io = ((gmem_ARREADY == 1'b0) & (icmp_ln58_reg_3669 == 1'd0));
end

assign ap_block_state33_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state34_io = ((gmem_ARREADY == 1'b0) & (icmp_ln58_reg_3669 == 1'd0));
end

assign ap_block_state34_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp1_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp1_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state40_pp1_stage0_iter4 = ((gmem_RVALID == 1'b0) & (icmp_ln58_reg_3669_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state41_pp1_stage1_iter4 = ((gmem_RVALID == 1'b0) & (icmp_ln58_reg_3669_pp1_iter4_reg == 1'd0));
end

assign ap_block_state42_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state65_pp2_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln88_reg_3913 == 1'd0));
end

assign ap_block_state66_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp3_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp3_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp3_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp3_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp3_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp3_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp3_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state96_io = ((gmem_AWREADY == 1'b0) & (icmp_ln112_reg_4305 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

always @ (*) begin
    ap_predicate_op806_writeresp_state118 = ((fwprop_read_reg_3323 == 1'd0) & (icmp_ln45_reg_3447 == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cast94_fu_1545_p1 = FH_read_reg_3348;

assign cmp173388_fu_1634_p2 = (($signed(outW_reg_3442) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign dx_Addr_A = dx_Addr_A_orig << 32'd1;

assign dx_Clk_A = ap_clk;

assign dx_Din_A = trunc_ln708_1_reg_4269;

assign dx_Rst_A = ap_rst_n_inv;

assign dy_Addr_A = p_cast30_fu_2087_p1 << 32'd1;

assign dy_Clk_A = ap_clk;

assign dy_Din_A = 16'd0;

assign dy_Rst_A = ap_rst_n_inv;

assign dy_WEN_A = 2'd0;

assign empty_41_fu_1091_p1 = H[9:0];

assign empty_42_fu_1136_p1 = F_read_reg_3386[30:0];

assign empty_43_fu_1158_p1 = FW_read_reg_3327[30:0];

assign empty_48_fu_1400_p2 = (tmp_4_fu_1393_p3 + wt_read_reg_3411);

assign empty_50_fu_2904_p0 = f_reg_912[9:0];

assign empty_51_fu_2913_p0 = c_reg_935[9:0];

assign empty_52_fu_2922_p2 = (trunc_ln68_fu_2918_p1 + empty_50_fu_2904_p2);

assign empty_54_fu_3173_p2 = (tmp1_fu_3168_p2 + select_ln68_1_reg_4600);

assign empty_59_fu_1569_p1 = F_read_reg_3386[30:0];

assign empty_66_fu_1799_p2 = (tmp2_fu_1795_p2 + select_ln86_1_fu_1789_p3);

assign empty_67_fu_1832_p2 = (tmp_9_fu_1825_p3 + dwt_read_reg_3405);

assign empty_68_fu_2064_p1 = select_ln95_reg_4018[6:0];

assign empty_70_fu_2082_p2 = (trunc_ln97_fu_2078_p1 + empty_74_reg_4036);

assign empty_72_fu_2189_p2 = ($signed(grp_fu_3261_p3) + $signed(trunc_ln99_reg_4139));

assign empty_80_fu_2685_p2 = (tmp4_fu_2681_p2 + select_ln113_1_fu_2675_p3);

assign empty_81_fu_2718_p2 = (tmp_8_fu_2711_p3 + dwt_read_reg_3405);

assign empty_fu_1087_p1 = FH[9:0];

assign fw_cast_fu_3224_p1 = fw_reg_1003;

assign grp_fu_1039_p2 = (($signed(FW_read_reg_3327) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign grp_fu_1044_p2 = ((FH_read_reg_3348 == 32'd0) ? 1'b1 : 1'b0);

assign grp_fu_1049_p4 = {{db_read_reg_3395[31:1]}};

assign grp_fu_1058_p2 = (H_read_reg_3371 + 32'd1);

assign grp_fu_1063_p2 = (grp_fu_1058_p2 - FH_read_reg_3348);

assign grp_fu_1068_p2 = (trunc_ln42_reg_3437 + 10'd1);

assign grp_fu_1130_p0 = grp_fu_1130_p00;

assign grp_fu_1130_p00 = C_read_reg_3376;

assign grp_fu_1130_p1 = grp_fu_1130_p10;

assign grp_fu_1130_p10 = FH_read_reg_3348;

assign grp_fu_1146_p0 = grp_fu_1146_p00;

assign grp_fu_1146_p00 = empty_42_fu_1136_p1;

assign grp_fu_1146_p1 = grp_fu_1146_p10;

assign grp_fu_1146_p10 = bound_reg_3461;

assign grp_fu_1548_p0 = grp_fu_1548_p00;

assign grp_fu_1548_p00 = C_read_reg_3376;

assign grp_fu_1548_p1 = grp_fu_1548_p10;

assign grp_fu_1548_p10 = FH_read_reg_3348;

assign grp_fu_1579_p0 = grp_fu_1579_p00;

assign grp_fu_1579_p00 = empty_59_fu_1569_p1;

assign grp_fu_1579_p1 = grp_fu_1579_p10;

assign grp_fu_1579_p10 = bound95_reg_3725;

assign grp_fu_1591_p0 = FW_read_reg_3327[30:0];

assign grp_fu_1591_p1 = FH_read_reg_3348[30:0];

assign grp_fu_1600_p1 = C_read_reg_3376[30:0];

assign grp_fu_1609_p0 = j_1_reg_640[30:0];

assign grp_fu_1642_p0 = cast94_reg_3707;

assign grp_fu_1642_p1 = grp_fu_1642_p10;

assign grp_fu_1642_p10 = FW_read_reg_3327;

assign grp_fu_1944_p0 = grp_fu_1944_p00;

assign grp_fu_1944_p00 = C_read_reg_3376;

assign grp_fu_1944_p1 = grp_fu_1944_p10;

assign grp_fu_1944_p10 = bound129_reg_3937;

assign grp_fu_1957_p0 = grp_fu_1957_p00;

assign grp_fu_1957_p00 = empty_59_reg_3732;

assign grp_fu_1957_p1 = grp_fu_1957_p10;

assign grp_fu_1957_p10 = reg_1073;

assign grp_fu_2504_p0 = j_2_reg_833[30:0];

assign grp_fu_2852_p0 = grp_fu_2852_p00;

assign grp_fu_2852_p00 = reg_1073;

assign grp_fu_2852_p1 = grp_fu_2852_p10;

assign grp_fu_2852_p10 = sub_ln66_reg_3713;

assign grp_fu_2864_p0 = grp_fu_2864_p00;

assign grp_fu_2864_p00 = C_read_reg_3376;

assign grp_fu_2864_p1 = grp_fu_2864_p10;

assign grp_fu_2864_p10 = bound26_reg_4458;

assign grp_fu_2880_p0 = grp_fu_2880_p00;

assign grp_fu_2880_p00 = trunc_ln66_1_fu_2870_p1;

assign grp_fu_2880_p1 = grp_fu_2880_p10;

assign grp_fu_2880_p10 = bound40_reg_4475;

assign grp_fu_3253_p0 = select_ln95_1_fu_2004_p3[9:0];

assign grp_fu_3253_p2 = select_ln95_fu_2020_p3[9:0];

assign grp_fu_3261_p0 = ap_phi_mux_c_1_phi_fu_781_p4[9:0];

assign grp_fu_3269_p0 = add_ln98_fu_2126_p2[9:0];

assign grp_fu_3277_p0 = ((select_ln98_6_fu_2255_p3[0:0] == 1'b1) ? p_mid1133_fu_2277_p2 : select_ln98_5_fu_2244_p3);

assign grp_fu_3284_p1 = sext_ln1118_1_reg_4082;

assign grp_fu_3284_p2 = {{lhs_2_fu_2435_p3}, {7'd0}};

assign grp_fu_3292_p1 = sext_ln1118_1_reg_4082;

assign grp_fu_3292_p2 = {{dwbuf_V_q1}, {7'd0}};

assign grp_fu_3300_p0 = ((select_ln67_4_reg_4582[0:0] == 1'b1) ? p_mid131_fu_3104_p2 : select_ln67_3_fu_3080_p3);

assign grp_fu_3300_p2 = select_ln68_fu_3137_p3[9:0];

assign icmp_ln100_1_fu_2250_p2 = ((ap_phi_mux_fw_1_phi_fu_815_p4 == FW_read_reg_3327) ? 1'b1 : 1'b0);

assign icmp_ln100_fu_1976_p2 = ((FW_read_reg_3327 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_fu_2513_p2 = ((indvar_flatten215_reg_822 == bound106_reg_3784) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_2524_p2 = ((indvar_flatten192_reg_856 == bound95_reg_3725) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_2541_p2 = ((k_2_reg_868 == FH_read_reg_3348) ? 1'b1 : 1'b0);

assign icmp_ln115_fu_2788_p2 = ((l_2_cast_fu_2784_p1 == FW_read_reg_3327) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_2831_p2 = ((i_4_reg_890 == empty_59_reg_3732) ? 1'b1 : 1'b0);

assign icmp_ln45_1_fu_1172_p2 = ((indvar_flatten21_reg_559 == bound4_reg_3502) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_1119_p2 = (($signed(F_read_reg_3386) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_1196_p2 = ((indvar_flatten_reg_582 == bound_reg_3461) ? 1'b1 : 1'b0);

assign icmp_ln47_1_fu_1213_p2 = ((k_reg_606 == FH_read_reg_3348) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_1470_p2 = ((l_cast_fu_1466_p1 == FW_read_reg_3327) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_1512_p2 = ((ap_phi_mux_i_1_phi_fu_633_p4 == empty_42_reg_3467) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_2928_p2 = ((indvar_flatten90_reg_901 == bound62_reg_4500) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_2939_p2 = ((indvar_flatten56_reg_923 == bound40_reg_4475) ? 1'b1 : 1'b0);

assign icmp_ln68_1_fu_2989_p2 = ((indvar_flatten35_reg_946 == bound26_reg_4458) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_2889_p2 = ((bound26_reg_4458 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln69_1_fu_2977_p2 = ((w_reg_970 == sub_ln66_reg_3713) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_1564_p2 = ((add_ln66_fu_1554_p2 == FW_read_reg_3327) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_3159_p2 = ((fh_reg_992 == FH_read_reg_3348) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_3228_p2 = ((fw_cast_fu_3224_p1 == FW_read_reg_3327) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_1624_p2 = ((indvar_flatten124_reg_652 == bound106_reg_3784) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_1629_p2 = ((indvar_flatten101_reg_675 == bound95_reg_3725) ? 1'b1 : 1'b0);

assign icmp_ln87_1_fu_1703_p2 = ((k_1_reg_687 == FH_read_reg_3348) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_1902_p2 = ((l_1_cast_fu_1898_p1 == FW_read_reg_3327) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_1987_p2 = ((indvar_flatten181_reg_710 == bound175_reg_3978) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_1998_p2 = ((h_1_reg_732 == reg_1073) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_2073_p2 = ((w_1_reg_744 == sub_ln95_reg_3968) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_2121_p2 = ((ap_phi_mux_indvar_flatten168_phi_fu_770_p4 == bound142_reg_3973) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_2136_p2 = ((ap_phi_mux_indvar_flatten137_phi_fu_793_p4 == bound129_reg_3937) ? 1'b1 : 1'b0);

assign l_1_cast_fu_1898_p1 = l_1_reg_699;

assign l_2_cast_fu_2784_p1 = l_2_reg_879;

assign l_cast_fu_1466_p1 = l_reg_618;

assign lhs_2_fu_2435_p3 = ((addr_cmp_reg_4249[0:0] == 1'b1) ? reuse_reg_fu_242 : dx_Dout_A);

assign or_ln113_fu_2553_p2 = (select_ln112_4_fu_2546_p3 | icmp_ln113_fu_2524_p2);

assign or_ln46_fu_1348_p2 = (select_ln45_5_reg_3563 | icmp_ln46_reg_3542);

assign or_ln67_fu_3015_p2 = (select_ln66_6_fu_2994_p3 | icmp_ln67_fu_2939_p2);

assign or_ln68_1_fu_3132_p2 = (or_ln68_fu_3128_p2 | icmp_ln67_reg_4538);

assign or_ln68_fu_3128_p2 = (select_ln67_4_reg_4582 | select_ln66_6_reg_4558);

assign or_ln86_fu_1720_p2 = (select_ln85_4_fu_1708_p3 | icmp_ln86_reg_3819);

assign or_ln99_fu_2261_p2 = (select_ln98_6_fu_2255_p3 | icmp_ln99_reg_4112);

assign outH_fu_1099_p2 = (sub_ln41_fu_1095_p2 + 10'd1);

assign outW_fu_1113_p2 = (sub_ln42_fu_1105_p2 + 32'd1);

assign p_cast30_fu_2087_p1 = empty_70_fu_2082_p2;

assign p_mid1133_fu_2277_p2 = (select_ln98_2_fu_2227_p3 + trunc_ln99_1_fu_2274_p1);

assign p_mid131_fu_3104_p2 = (trunc_ln68_1_fu_3093_p1 + select_ln66_1_fu_3040_p3);

assign p_mid170_fu_2956_p0 = add_ln66_2_fu_2933_p2[9:0];

assign p_shl1_cast_fu_1446_p3 = {{trunc_ln49_4_fu_1442_p1}, {2'd0}};

assign p_shl3_cast_fu_1878_p3 = {{trunc_ln89_4_fu_1874_p1}, {2'd0}};

assign p_shl5_cast_fu_2764_p3 = {{trunc_ln116_4_fu_2760_p1}, {2'd0}};

assign p_shl7_cast_fu_2370_p3 = {{trunc_ln727_3_reg_4182}, {2'd0}};

assign p_shl8_cast_fu_2338_p3 = {{trunc_ln1118_1_fu_2334_p1}, {2'd0}};

assign select_ln112_1_fu_2529_p3 = ((icmp_ln113_fu_2524_p2[0:0] == 1'b1) ? add_ln112_fu_2518_p2 : i_3_reg_845);

assign select_ln112_2_fu_2669_p3 = ((icmp_ln113_reg_4314[0:0] == 1'b1) ? 31'd0 : empty_75_reg_4309);

assign select_ln112_3_fu_2617_p3 = ((icmp_ln113_reg_4314[0:0] == 1'b1) ? 5'd0 : trunc_ln116_reg_4300);

assign select_ln112_4_fu_2546_p3 = ((icmp_ln113_fu_2524_p2[0:0] == 1'b1) ? icmp_ln87_reg_3790 : icmp_ln114_fu_2541_p2);

assign select_ln112_fu_2582_p3 = ((icmp_ln113_reg_4314[0:0] == 1'b1) ? 32'd0 : j_2_reg_833);

assign select_ln113_1_fu_2675_p3 = ((select_ln112_4_reg_4334[0:0] == 1'b1) ? p_mid1190_reg_4384 : select_ln112_2_fu_2669_p3);

assign select_ln113_2_fu_2637_p3 = ((select_ln112_4_reg_4334[0:0] == 1'b1) ? trunc_ln116_1_fu_2633_p1 : select_ln112_3_fu_2617_p3);

assign select_ln113_3_fu_2654_p3 = ((select_ln112_4_reg_4334[0:0] == 1'b1) ? add_ln113_fu_2623_p2 : select_ln112_fu_2582_p3);

assign select_ln113_4_fu_2818_p3 = ((icmp_ln113_reg_4314[0:0] == 1'b1) ? 64'd1 : add_ln113_1_fu_2812_p2);

assign select_ln113_fu_2559_p3 = ((or_ln113_fu_2553_p2[0:0] == 1'b1) ? 32'd0 : k_2_reg_868);

assign select_ln45_1_fu_1253_p3 = ((icmp_ln46_reg_3542[0:0] == 1'b1) ? p_mid1_reg_3581 : empty_44_reg_3521);

assign select_ln45_2_fu_1201_p3 = ((icmp_ln46_fu_1196_p2[0:0] == 1'b1) ? add_ln45_fu_1190_p2 : i_reg_570);

assign select_ln45_3_fu_1282_p3 = ((icmp_ln46_reg_3542[0:0] == 1'b1) ? p_mid1_reg_3581 : tmp_reg_3527);

assign select_ln45_4_fu_1287_p3 = ((icmp_ln46_reg_3542[0:0] == 1'b1) ? 5'd0 : trunc_ln49_reg_3532);

assign select_ln45_5_fu_1218_p3 = ((icmp_ln46_fu_1196_p2[0:0] == 1'b1) ? icmp_ln47_reg_3507 : icmp_ln47_1_fu_1213_p2);

assign select_ln45_fu_1246_p3 = ((icmp_ln46_reg_3542[0:0] == 1'b1) ? 32'd0 : j_reg_594);

assign select_ln46_1_fu_1309_p3 = ((select_ln45_5_reg_3563[0:0] == 1'b1) ? tmp_mid1_fu_1303_p2 : select_ln45_3_fu_1282_p3);

assign select_ln46_2_fu_1320_p3 = ((select_ln45_5_reg_3563[0:0] == 1'b1) ? trunc_ln49_1_fu_1316_p1 : select_ln45_4_fu_1287_p3);

assign select_ln46_3_fu_1337_p3 = ((select_ln45_5_reg_3563[0:0] == 1'b1) ? add_ln46_fu_1293_p2 : select_ln45_fu_1246_p3);

assign select_ln46_4_fu_1499_p3 = ((icmp_ln46_reg_3542[0:0] == 1'b1) ? 64'd1 : add_ln46_1_fu_1493_p2);

assign select_ln46_fu_1352_p3 = ((or_ln46_fu_1348_p2[0:0] == 1'b1) ? 32'd0 : k_reg_606);

assign select_ln66_1_fu_3040_p3 = ((icmp_ln67_reg_4538[0:0] == 1'b1) ? p_mid170_reg_4547 : empty_50_reg_4515);

assign select_ln66_2_fu_2969_p3 = ((icmp_ln67_fu_2939_p2[0:0] == 1'b1) ? trunc_ln66_4_fu_2961_p1 : trunc_ln66_5_fu_2965_p1);

assign select_ln66_3_fu_3045_p3 = ((icmp_ln67_reg_4538[0:0] == 1'b1) ? 10'd0 : empty_51_reg_4520);

assign select_ln66_4_fu_3051_p3 = ((icmp_ln67_reg_4538[0:0] == 1'b1) ? p_mid170_reg_4547 : empty_52_reg_4530);

assign select_ln66_5_fu_2982_p3 = ((icmp_ln67_fu_2939_p2[0:0] == 1'b1) ? icmp_ln69_reg_3719 : icmp_ln69_1_fu_2977_p2);

assign select_ln66_6_fu_2994_p3 = ((icmp_ln67_fu_2939_p2[0:0] == 1'b1) ? icmp_ln68_reg_4505 : icmp_ln68_1_fu_2989_p2);

assign select_ln66_7_fu_3001_p3 = ((icmp_ln67_fu_2939_p2[0:0] == 1'b1) ? add_ln66_2_fu_2933_p2 : f_reg_912);

assign select_ln66_fu_2944_p3 = ((icmp_ln67_fu_2939_p2[0:0] == 1'b1) ? 32'd0 : c_reg_935);

assign select_ln67_1_fu_3067_p3 = ((select_ln66_6_reg_4558[0:0] == 1'b1) ? p_mid146_fu_3063_p2 : select_ln66_3_fu_3045_p3);

assign select_ln67_2_fu_3074_p3 = ((or_ln67_reg_4570[0:0] == 1'b1) ? 10'd0 : trunc_ln68_reg_4525);

assign select_ln67_3_fu_3080_p3 = ((select_ln66_6_reg_4558[0:0] == 1'b1) ? select_ln66_1_fu_3040_p3 : select_ln66_4_fu_3051_p3);

assign select_ln67_4_fu_3025_p3 = ((select_ln66_6_fu_2994_p3[0:0] == 1'b1) ? icmp_ln69_reg_3719 : select_ln66_5_fu_2982_p3);

assign select_ln67_5_fu_3032_p3 = ((select_ln66_6_fu_2994_p3[0:0] == 1'b1) ? add_ln67_fu_3009_p2 : select_ln66_fu_2944_p3);

assign select_ln67_6_fu_3202_p3 = ((icmp_ln67_reg_4538[0:0] == 1'b1) ? 96'd1 : add_ln67_1_fu_3196_p2);

assign select_ln67_fu_3056_p3 = ((or_ln67_reg_4570[0:0] == 1'b1) ? 32'd0 : h_reg_958);

assign select_ln68_1_fu_3097_p3 = ((select_ln67_4_reg_4582[0:0] == 1'b1) ? trunc_ln68_1_fu_3093_p1 : select_ln67_2_fu_3074_p3);

assign select_ln68_3_fu_3117_p3 = ((select_ln67_4_reg_4582[0:0] == 1'b1) ? add_ln68_fu_3087_p2 : select_ln67_fu_3056_p3);

assign select_ln68_4_fu_3189_p3 = ((or_ln67_reg_4570[0:0] == 1'b1) ? 64'd1 : add_ln68_1_fu_3183_p2);

assign select_ln68_fu_3137_p3 = ((or_ln68_1_fu_3132_p2[0:0] == 1'b1) ? 32'd0 : w_reg_970);

assign select_ln85_1_fu_1660_p3 = ((icmp_ln86_reg_3819[0:0] == 1'b1) ? add_ln85_fu_1647_p2 : i_2_reg_663);

assign select_ln85_2_fu_1783_p3 = ((icmp_ln86_reg_3819[0:0] == 1'b1) ? 31'd0 : empty_62_reg_3811);

assign select_ln85_3_fu_1697_p3 = ((icmp_ln86_reg_3819[0:0] == 1'b1) ? 5'd0 : trunc_ln89_reg_3801);

assign select_ln85_4_fu_1708_p3 = ((icmp_ln86_reg_3819[0:0] == 1'b1) ? icmp_ln87_reg_3790 : icmp_ln87_1_fu_1703_p2);

assign select_ln85_fu_1653_p3 = ((icmp_ln86_reg_3819[0:0] == 1'b1) ? 32'd0 : j_1_reg_640);

assign select_ln86_1_fu_1789_p3 = ((select_ln85_4_reg_3845[0:0] == 1'b1) ? p_mid199_reg_3882 : select_ln85_2_fu_1783_p3);

assign select_ln86_2_fu_1741_p3 = ((select_ln85_4_fu_1708_p3[0:0] == 1'b1) ? trunc_ln89_1_fu_1737_p1 : select_ln85_3_fu_1697_p3);

assign select_ln86_3_fu_1759_p3 = ((select_ln85_4_fu_1708_p3[0:0] == 1'b1) ? add_ln86_fu_1714_p2 : select_ln85_fu_1653_p3);

assign select_ln86_4_fu_1931_p3 = ((icmp_ln86_reg_3819[0:0] == 1'b1) ? 64'd1 : add_ln86_1_fu_1925_p2);

assign select_ln86_fu_1725_p3 = ((or_ln86_fu_1720_p2[0:0] == 1'b1) ? 32'd0 : k_1_reg_687);

assign select_ln95_1_fu_2004_p3 = ((icmp_ln96_fu_1998_p2[0:0] == 1'b1) ? add_ln95_2_fu_1992_p2 : f_1_reg_721);

assign select_ln95_fu_2020_p3 = ((icmp_ln96_reg_3996[0:0] == 1'b1) ? 32'd0 : h_1_reg_732);

assign select_ln98_1_fu_2141_p3 = ((icmp_ln99_fu_2136_p2[0:0] == 1'b1) ? add_ln98_reg_4102 : c_1_reg_777);

assign select_ln98_2_fu_2227_p3 = ((icmp_ln99_reg_4112[0:0] == 1'b1) ? grp_fu_3269_p3 : grp_fu_3261_p3);

assign select_ln98_3_fu_2232_p3 = ((icmp_ln99_reg_4112[0:0] == 1'b1) ? 7'd0 : trunc_ln727_reg_4144);

assign select_ln98_4_fu_2238_p3 = ((icmp_ln99_reg_4112[0:0] == 1'b1) ? empty_68_reg_4046 : add_ln1118_fu_2193_p2);

assign select_ln98_5_fu_2244_p3 = ((icmp_ln99_reg_4112[0:0] == 1'b1) ? grp_fu_3269_p3 : empty_72_fu_2189_p2);

assign select_ln98_6_fu_2255_p3 = ((icmp_ln99_reg_4112[0:0] == 1'b1) ? icmp_ln100_reg_3983 : icmp_ln100_1_fu_2250_p2);

assign select_ln98_fu_2166_p3 = ((icmp_ln99_reg_4112[0:0] == 1'b1) ? 32'd0 : ap_phi_mux_fh_1_phi_fu_804_p4);

assign select_ln99_1_fu_2283_p3 = ((select_ln98_6_fu_2255_p3[0:0] == 1'b1) ? trunc_ln727_1_reg_4161 : select_ln98_3_fu_2232_p3);

assign select_ln99_2_fu_2312_p3 = ((select_ln98_6_fu_2255_p3[0:0] == 1'b1) ? add_ln1118_6_fu_2308_p2 : select_ln98_4_fu_2238_p3);

assign select_ln99_4_fu_2360_p3 = ((select_ln98_6_fu_2255_p3[0:0] == 1'b1) ? add_ln99_reg_4155 : select_ln98_reg_4150);

assign select_ln99_5_fu_2183_p3 = ((icmp_ln99_reg_4112[0:0] == 1'b1) ? 64'd1 : add_ln99_2_reg_4134);

assign select_ln99_fu_2266_p3 = ((or_ln99_fu_2261_p2[0:0] == 1'b1) ? 32'd0 : ap_phi_mux_fw_1_phi_fu_815_p4);

assign sext_ln1118_1_fu_2107_p0 = dy_Dout_A;

assign sext_ln1118_1_fu_2107_p1 = sext_ln1118_1_fu_2107_p0;

assign sext_ln115_fu_2733_p1 = $signed(trunc_ln2_fu_2723_p4);

assign sext_ln123_fu_2571_p1 = $signed(grp_fu_1049_p4);

assign sext_ln48_fu_1415_p1 = $signed(trunc_ln5_fu_1405_p4);

assign sext_ln58_1_fu_1238_p1 = $signed(grp_fu_1049_p4);

assign sext_ln58_fu_1234_p1 = $signed(trunc_ln3_fu_1225_p4);

assign sext_ln88_fu_1847_p1 = $signed(trunc_ln_fu_1837_p4);

assign sub_ln41_fu_1095_p2 = ($signed(empty_41_reg_3421) - $signed(empty_reg_3416));

assign sub_ln42_fu_1105_p2 = (W_read_reg_3362 - FW_read_reg_3327);

assign sub_ln66_fu_1559_p2 = (add_ln66_fu_1554_p2 - FW_read_reg_3327);

assign sub_ln95_fu_1971_p2 = (add_ln95_fu_1966_p2 - FW_read_reg_3327);

assign tmp11_fu_1364_p2 = (trunc_ln47_fu_1360_p1 + mul_ln46_reg_3603);

assign tmp1_fu_3168_p2 = (select_ln67_1_reg_4595 + trunc_ln71_fu_3164_p1);

assign tmp2_fu_1795_p2 = (mul_ln85_reg_3877 + empty_65_reg_3887);

assign tmp4_fu_2681_p2 = (mul_ln112_reg_4374 + empty_79_reg_4379);

assign tmp_10_fu_2209_p3 = {{add_ln1118_4_fu_2200_p2}, {2'd0}};

assign tmp_1_fu_1376_p3 = {{add_ln49_1_reg_3592}, {2'd0}};

assign tmp_2_fu_1261_p3 = {{trunc_ln45_2_reg_3557}, {2'd0}};

assign tmp_3_fu_1808_p3 = {{add_ln89_1_reg_3861}, {2'd0}};

assign tmp_4_fu_1393_p3 = {{empty_47_reg_3619}, {1'd0}};

assign tmp_5_fu_2596_p3 = {{trunc_ln112_reg_4328}, {2'd0}};

assign tmp_6_fu_2694_p3 = {{add_ln116_1_reg_4363}, {2'd0}};

assign tmp_7_fu_1675_p3 = {{trunc_ln85_3_fu_1667_p1}, {2'd0}};

assign tmp_8_fu_2711_p3 = {{empty_80_reg_4389}, {1'd0}};

assign tmp_9_fu_1825_p3 = {{empty_66_reg_3892}, {1'd0}};

assign tmp_fu_1181_p2 = (trunc_ln46_fu_1177_p1 + empty_44_reg_3521);

assign tmp_mid1_fu_1303_p2 = (trunc_ln46_1_fu_1299_p1 + select_ln45_1_fu_1253_p3);

assign tmp_s_fu_2038_p3 = {{trunc_ln95_2_reg_4011}, {2'd0}};

assign trunc_ln101_fu_2366_p1 = select_ln99_fu_2266_p3[9:0];

assign trunc_ln1118_1_fu_2334_p1 = add_ln1118_7_fu_2324_p2[7:0];

assign trunc_ln1118_fu_2330_p1 = add_ln1118_7_fu_2324_p2[9:0];

assign trunc_ln112_fu_2537_p1 = select_ln112_1_fu_2529_p3[2:0];

assign trunc_ln113_1_fu_2629_p1 = add_ln113_fu_2623_p2[30:0];

assign trunc_ln114_fu_2567_p1 = select_ln113_fu_2559_p3[30:0];

assign trunc_ln116_1_fu_2633_p1 = add_ln113_fu_2623_p2[4:0];

assign trunc_ln116_2_fu_2743_p1 = select_ln113_reg_4341[6:0];

assign trunc_ln116_3_fu_2756_p1 = add_ln116_3_fu_2750_p2[9:0];

assign trunc_ln116_4_fu_2760_p1 = add_ln116_3_fu_2750_p2[7:0];

assign trunc_ln116_5_fu_2793_p1 = l_2_reg_879[9:0];

assign trunc_ln116_fu_2509_p1 = j_2_reg_833[4:0];

assign trunc_ln124_fu_2836_p1 = i_4_reg_890[2:0];

assign trunc_ln2_fu_2723_p4 = {{empty_81_fu_2718_p2[31:1]}};

assign trunc_ln3_fu_1225_p4 = {{b_read_reg_3400[31:1]}};

assign trunc_ln42_fu_1109_p1 = sub_ln42_fu_1105_p2[9:0];

assign trunc_ln45_1_fu_1155_p1 = C_read_reg_3376[30:0];

assign trunc_ln45_2_fu_1209_p1 = select_ln45_2_fu_1201_p3[2:0];

assign trunc_ln45_fu_1152_p1 = FH_read_reg_3348[30:0];

assign trunc_ln46_1_fu_1299_p1 = add_ln46_fu_1293_p2[30:0];

assign trunc_ln46_fu_1177_p1 = j_reg_594[30:0];

assign trunc_ln47_fu_1360_p1 = select_ln46_fu_1352_p3[30:0];

assign trunc_ln49_1_fu_1316_p1 = add_ln46_fu_1293_p2[4:0];

assign trunc_ln49_2_fu_1425_p1 = select_ln46_reg_3608[6:0];

assign trunc_ln49_3_fu_1438_p1 = add_ln49_3_fu_1432_p2[9:0];

assign trunc_ln49_4_fu_1442_p1 = add_ln49_3_fu_1432_p2[7:0];

assign trunc_ln49_5_fu_1475_p1 = l_reg_618[9:0];

assign trunc_ln49_fu_1186_p1 = j_reg_594[4:0];

assign trunc_ln5_fu_1405_p4 = {{empty_48_fu_1400_p2[31:1]}};

assign trunc_ln66_1_fu_2870_p1 = F_read_reg_3386[30:0];

assign trunc_ln66_4_fu_2961_p1 = add_ln66_2_fu_2933_p2[2:0];

assign trunc_ln66_5_fu_2965_p1 = f_reg_912[2:0];

assign trunc_ln66_fu_2886_p1 = W_read_reg_3362[9:0];

assign trunc_ln67_1_fu_3021_p1 = add_ln67_fu_3009_p2[9:0];

assign trunc_ln68_1_fu_3093_p1 = add_ln68_fu_3087_p2[9:0];

assign trunc_ln68_fu_2918_p1 = h_reg_958[9:0];

assign trunc_ln69_fu_3145_p1 = select_ln68_fu_3137_p3[9:0];

assign trunc_ln71_fu_3164_p1 = fh_reg_992[9:0];

assign trunc_ln727_1_fu_2179_p1 = add_ln99_fu_2173_p2[6:0];

assign trunc_ln727_2_fu_2300_p1 = add_ln727_fu_2294_p2[9:0];

assign trunc_ln727_3_fu_2304_p1 = add_ln727_fu_2294_p2[7:0];

assign trunc_ln727_fu_2162_p1 = ap_phi_mux_fh_1_phi_fu_804_p4[6:0];

assign trunc_ln73_fu_3233_p1 = fw_reg_1003[9:0];

assign trunc_ln85_3_fu_1667_p1 = select_ln85_1_fu_1660_p3[2:0];

assign trunc_ln85_fu_1585_p1 = FW_read_reg_3327[30:0];

assign trunc_ln86_1_fu_1733_p1 = add_ln86_fu_1714_p2[30:0];

assign trunc_ln87_fu_1767_p1 = select_ln86_fu_1725_p3[30:0];

assign trunc_ln89_1_fu_1737_p1 = add_ln86_fu_1714_p2[4:0];

assign trunc_ln89_2_fu_1857_p1 = select_ln86_reg_3850[6:0];

assign trunc_ln89_3_fu_1870_p1 = add_ln89_3_fu_1864_p2[9:0];

assign trunc_ln89_4_fu_1874_p1 = add_ln89_3_fu_1864_p2[7:0];

assign trunc_ln89_5_fu_1907_p1 = l_1_reg_699[9:0];

assign trunc_ln89_fu_1614_p1 = j_1_reg_640[4:0];

assign trunc_ln95_2_fu_2016_p1 = select_ln95_1_fu_2004_p3[2:0];

assign trunc_ln95_fu_1963_p1 = W_read_reg_3362[9:0];

assign trunc_ln96_fu_2027_p1 = select_ln95_fu_2020_p3[9:0];

assign trunc_ln97_fu_2078_p1 = w_1_reg_744[9:0];

assign trunc_ln98_2_fu_2148_p1 = select_ln98_1_fu_2141_p3[4:0];

assign trunc_ln99_1_fu_2274_p1 = add_ln99_reg_4155[9:0];

assign trunc_ln99_fu_2158_p1 = ap_phi_mux_fh_1_phi_fu_804_p4[9:0];

assign trunc_ln_fu_1837_p4 = {{empty_67_fu_1832_p2[31:1]}};

assign x_Addr_A = x_Addr_A_orig << 32'd1;

assign x_Clk_A = ap_clk;

assign x_Din_A = 16'd0;

assign x_Rst_A = ap_rst_n_inv;

assign x_WEN_A = 2'd0;

assign y_Addr_A = y_Addr_A_orig << 32'd1;

assign y_Clk_A = ap_clk;

assign y_Rst_A = ap_rst_n_inv;

assign zext_ln1116_fu_3242_p1 = add_ln1116_fu_3237_p2;

assign zext_ln1118_1_fu_2035_p1 = trunc_ln95_2_reg_4011;

assign zext_ln1118_2_fu_2045_p1 = tmp_s_fu_2038_p3;

assign zext_ln1118_3_fu_2197_p1 = trunc_ln98_2_reg_4129;

assign zext_ln1118_4_fu_2205_p1 = add_ln1118_4_fu_2200_p2;

assign zext_ln1118_5_fu_2217_p1 = tmp_10_fu_2209_p3;

assign zext_ln1118_6_fu_2320_p1 = select_ln99_2_fu_2312_p3;

assign zext_ln1118_7_fu_2396_p1 = add_ln1118_9_fu_2391_p2;

assign zext_ln1118_fu_2413_p1 = add_ln1118_1_reg_4229;

assign zext_ln113_fu_2613_p1 = add_ln116_fu_2607_p2;

assign zext_ln116_1_fu_2603_p1 = tmp_5_fu_2596_p3;

assign zext_ln116_2_fu_2644_p1 = select_ln113_2_fu_2637_p3;

assign zext_ln116_3_fu_2691_p1 = add_ln116_1_reg_4363;

assign zext_ln116_4_fu_2701_p1 = tmp_6_fu_2694_p3;

assign zext_ln116_5_fu_2746_p1 = trunc_ln116_2_fu_2743_p1;

assign zext_ln116_6_fu_2802_p1 = add_ln116_5_fu_2797_p2;

assign zext_ln116_fu_2593_p1 = trunc_ln112_reg_4328;

assign zext_ln124_fu_2840_p1 = trunc_ln124_fu_2836_p1;

assign zext_ln46_fu_1278_p1 = add_ln49_fu_1272_p2;

assign zext_ln49_1_fu_1268_p1 = tmp_2_fu_1261_p3;

assign zext_ln49_2_fu_1327_p1 = select_ln46_2_fu_1320_p3;

assign zext_ln49_3_fu_1373_p1 = add_ln49_1_reg_3592;

assign zext_ln49_4_fu_1383_p1 = tmp_1_fu_1376_p3;

assign zext_ln49_5_fu_1428_p1 = trunc_ln49_2_fu_1425_p1;

assign zext_ln49_6_fu_1484_p1 = add_ln49_5_reg_3644_pp0_iter1_reg;

assign zext_ln49_fu_1258_p1 = trunc_ln45_2_reg_3557;

assign zext_ln59_fu_1517_p1 = ap_phi_mux_i_1_phi_fu_633_p4;

assign zext_ln66_fu_3124_p1 = select_ln66_2_reg_4553;

assign zext_ln70_fu_3149_p1 = $unsigned(grp_fu_3300_p3);

assign zext_ln727_1_fu_2467_p1 = add_ln727_2_reg_4209_pp3_iter4_reg;

assign zext_ln727_fu_2290_p1 = select_ln99_1_fu_2283_p3;

assign zext_ln86_fu_1693_p1 = add_ln89_fu_1687_p2;

assign zext_ln89_1_fu_1683_p1 = tmp_7_fu_1675_p3;

assign zext_ln89_2_fu_1749_p1 = select_ln86_2_fu_1741_p3;

assign zext_ln89_3_fu_1805_p1 = add_ln89_1_reg_3861;

assign zext_ln89_4_fu_1815_p1 = tmp_3_fu_1808_p3;

assign zext_ln89_5_fu_1860_p1 = trunc_ln89_2_fu_1857_p1;

assign zext_ln89_6_fu_1916_p1 = add_ln89_5_reg_3917_pp2_iter1_reg;

assign zext_ln89_fu_1671_p1 = trunc_ln85_3_fu_1667_p1;

assign zext_ln95_fu_2031_p1 = trunc_ln95_2_reg_4011;

assign zext_ln96_fu_2055_p1 = add_ln1118_3_fu_2049_p2;

always @ (posedge ap_clk) begin
    zext_ln59_reg_3673[31] <= 1'b0;
    zext_ln59_reg_3673_pp1_iter1_reg[31] <= 1'b0;
    zext_ln59_reg_3673_pp1_iter2_reg[31] <= 1'b0;
    zext_ln59_reg_3673_pp1_iter3_reg[31] <= 1'b0;
    zext_ln59_reg_3673_pp1_iter4_reg[31] <= 1'b0;
    cast94_reg_3707[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln96_reg_4031[6] <= 1'b0;
end

endmodule //conv_combined
