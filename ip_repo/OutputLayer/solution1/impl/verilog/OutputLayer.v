// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="OutputLayer_OutputLayer,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=1783,HLS_SYN_LUT=2729,HLS_VERSION=2020_2}" *)

module OutputLayer (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        bram_y_Addr_A,
        bram_y_EN_A,
        bram_y_WEN_A,
        bram_y_Din_A,
        bram_y_Dout_A,
        bram_y_Clk_A,
        bram_y_Rst_A,
        bram_dy_Addr_A,
        bram_dy_EN_A,
        bram_dy_WEN_A,
        bram_dy_Din_A,
        bram_dy_Dout_A,
        bram_dy_Clk_A,
        bram_dy_Rst_A,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 50'd1;
parameter    ap_ST_fsm_state2 = 50'd2;
parameter    ap_ST_fsm_state3 = 50'd4;
parameter    ap_ST_fsm_state4 = 50'd8;
parameter    ap_ST_fsm_state5 = 50'd16;
parameter    ap_ST_fsm_state6 = 50'd32;
parameter    ap_ST_fsm_state7 = 50'd64;
parameter    ap_ST_fsm_state8 = 50'd128;
parameter    ap_ST_fsm_pp0_stage0 = 50'd256;
parameter    ap_ST_fsm_state12 = 50'd512;
parameter    ap_ST_fsm_pp1_stage0 = 50'd1024;
parameter    ap_ST_fsm_state23 = 50'd2048;
parameter    ap_ST_fsm_state24 = 50'd4096;
parameter    ap_ST_fsm_state25 = 50'd8192;
parameter    ap_ST_fsm_state26 = 50'd16384;
parameter    ap_ST_fsm_state27 = 50'd32768;
parameter    ap_ST_fsm_state28 = 50'd65536;
parameter    ap_ST_fsm_state29 = 50'd131072;
parameter    ap_ST_fsm_pp2_stage0 = 50'd262144;
parameter    ap_ST_fsm_state33 = 50'd524288;
parameter    ap_ST_fsm_state34 = 50'd1048576;
parameter    ap_ST_fsm_state35 = 50'd2097152;
parameter    ap_ST_fsm_state36 = 50'd4194304;
parameter    ap_ST_fsm_state37 = 50'd8388608;
parameter    ap_ST_fsm_state38 = 50'd16777216;
parameter    ap_ST_fsm_state39 = 50'd33554432;
parameter    ap_ST_fsm_state40 = 50'd67108864;
parameter    ap_ST_fsm_state41 = 50'd134217728;
parameter    ap_ST_fsm_state42 = 50'd268435456;
parameter    ap_ST_fsm_pp3_stage0 = 50'd536870912;
parameter    ap_ST_fsm_state46 = 50'd1073741824;
parameter    ap_ST_fsm_state47 = 50'd2147483648;
parameter    ap_ST_fsm_state48 = 50'd4294967296;
parameter    ap_ST_fsm_state49 = 50'd8589934592;
parameter    ap_ST_fsm_state50 = 50'd17179869184;
parameter    ap_ST_fsm_pp4_stage0 = 50'd34359738368;
parameter    ap_ST_fsm_state59 = 50'd68719476736;
parameter    ap_ST_fsm_pp5_stage0 = 50'd137438953472;
parameter    ap_ST_fsm_state63 = 50'd274877906944;
parameter    ap_ST_fsm_state64 = 50'd549755813888;
parameter    ap_ST_fsm_state65 = 50'd1099511627776;
parameter    ap_ST_fsm_state66 = 50'd2199023255552;
parameter    ap_ST_fsm_state67 = 50'd4398046511104;
parameter    ap_ST_fsm_state68 = 50'd8796093022208;
parameter    ap_ST_fsm_state69 = 50'd17592186044416;
parameter    ap_ST_fsm_state70 = 50'd35184372088832;
parameter    ap_ST_fsm_state71 = 50'd70368744177664;
parameter    ap_ST_fsm_state72 = 50'd140737488355328;
parameter    ap_ST_fsm_state73 = 50'd281474976710656;
parameter    ap_ST_fsm_state74 = 50'd562949953421312;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
output  [31:0] bram_y_Addr_A;
output   bram_y_EN_A;
output  [1:0] bram_y_WEN_A;
output  [15:0] bram_y_Din_A;
input  [15:0] bram_y_Dout_A;
output   bram_y_Clk_A;
output   bram_y_Rst_A;
output  [31:0] bram_dy_Addr_A;
output   bram_dy_EN_A;
output  [1:0] bram_dy_WEN_A;
output  [15:0] bram_dy_Din_A;
input  [15:0] bram_dy_Dout_A;
output   bram_dy_Clk_A;
output   bram_dy_Rst_A;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;

reg bram_y_EN_A;
reg[1:0] bram_y_WEN_A;
reg[15:0] bram_y_Din_A;
reg bram_dy_EN_A;
reg[1:0] bram_dy_WEN_A;
reg[15:0] bram_dy_Din_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [49:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] y;
wire   [31:0] dy;
wire   [31:0] dim;
wire    ddrtobram;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state2;
reg   [0:0] ddrtobram_read_reg_1046;
reg   [0:0] empty_38_reg_1088;
reg    gmem_blk_n_W;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_pp3_stage0;
reg   [0:0] exitcond2213_reg_1243;
reg   [0:0] exitcond2213_reg_1243_pp3_iter1_reg;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp4_stage0;
reg   [0:0] exitcondtmp_reg_1270;
reg    ap_enable_reg_pp4_iter2;
reg   [0:0] exitcondtmp_reg_1270_pp4_iter1_reg;
reg    ap_enable_reg_pp4_iter7;
reg   [0:0] exitcondtmp_reg_1270_pp4_iter6_reg;
wire    ap_CS_fsm_state59;
reg    ap_enable_reg_pp5_iter2;
wire    ap_block_pp5_stage0;
reg   [0:0] exitcond2011_reg_1311;
reg   [0:0] exitcond2011_reg_1311_pp5_iter1_reg;
wire    ap_CS_fsm_state67;
reg    gmem_blk_n_AR;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond2617_reg_1138;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond18tmp_reg_1166;
reg    ap_enable_reg_pp1_iter8;
reg   [0:0] exitcond18tmp_reg_1166_pp1_iter7_reg;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] exitcond2415_reg_1208;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state74;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg   [31:0] gmem_AWADDR;
reg   [31:0] gmem_AWLEN;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg   [15:0] gmem_WDATA;
reg   [1:0] gmem_WSTRB;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
reg   [31:0] gmem_ARLEN;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [15:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [62:0] loop_index3_reg_326;
reg   [0:0] residual_loop_index6_reg_337;
reg   [0:0] residual_loop_index6_reg_337_pp1_iter1_reg;
wire    ap_block_state13_pp1_stage0_iter0;
wire    ap_block_state14_pp1_stage0_iter1;
reg    ap_block_state14_io;
wire    ap_block_state15_pp1_stage0_iter2;
wire    ap_block_state16_pp1_stage0_iter3;
wire    ap_block_state17_pp1_stage0_iter4;
wire    ap_block_state18_pp1_stage0_iter5;
wire    ap_block_state19_pp1_stage0_iter6;
wire    ap_block_state20_pp1_stage0_iter7;
reg    ap_block_state21_pp1_stage0_iter8;
wire    ap_block_state22_pp1_stage0_iter9;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] residual_loop_index6_reg_337_pp1_iter2_reg;
reg   [0:0] residual_loop_index6_reg_337_pp1_iter3_reg;
reg   [0:0] residual_loop_index6_reg_337_pp1_iter4_reg;
reg   [0:0] residual_loop_index6_reg_337_pp1_iter5_reg;
reg   [0:0] residual_loop_index6_reg_337_pp1_iter6_reg;
reg   [0:0] residual_loop_index6_reg_337_pp1_iter7_reg;
reg   [0:0] residual_loop_index6_reg_337_pp1_iter8_reg;
reg   [62:0] loop_index_reg_349;
reg   [62:0] loop_index15_reg_360;
reg   [0:0] residual_loop_index18_reg_371;
reg   [62:0] loop_index9_reg_383;
reg   [31:0] dim_read_reg_1050;
reg   [31:0] dy_read_reg_1055;
reg   [31:0] y_read_reg_1063;
wire   [0:0] empty_fu_435_p1;
reg   [0:0] empty_reg_1072;
wire  signed [30:0] p_cast_fu_439_p4;
reg  signed [30:0] p_cast_reg_1079;
wire   [0:0] empty_38_fu_449_p2;
wire  signed [62:0] p_cast_cast_fu_455_p1;
reg  signed [62:0] p_cast_cast_reg_1092;
wire   [31:0] empty_36_fu_461_p2;
reg   [31:0] empty_36_reg_1100;
wire   [10:0] empty_37_fu_466_p1;
reg   [10:0] empty_37_reg_1110;
wire  signed [31:0] p_cast_cast39_fu_481_p1;
wire   [62:0] empty_58_fu_500_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state9_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] exitcond2617_fu_506_p2;
reg   [0:0] exitcond2617_reg_1138_pp0_iter1_reg;
wire   [9:0] empty_59_fu_511_p1;
reg   [9:0] empty_59_reg_1142;
reg   [9:0] empty_59_reg_1142_pp0_iter1_reg;
reg   [15:0] gmem_addr_1_read_reg_1147;
wire   [0:0] empty_82_fu_519_p1;
reg   [0:0] empty_82_reg_1152;
wire    ap_CS_fsm_state12;
wire   [0:0] empty_83_fu_522_p1;
reg   [0:0] empty_83_reg_1161;
wire   [0:0] exitcond18tmp_fu_525_p2;
reg   [0:0] exitcond18tmp_reg_1166_pp1_iter1_reg;
reg   [0:0] exitcond18tmp_reg_1166_pp1_iter2_reg;
reg   [0:0] exitcond18tmp_reg_1166_pp1_iter3_reg;
reg   [0:0] exitcond18tmp_reg_1166_pp1_iter4_reg;
reg   [0:0] exitcond18tmp_reg_1166_pp1_iter5_reg;
reg   [0:0] exitcond18tmp_reg_1166_pp1_iter6_reg;
reg   [0:0] exitcond18tmp_reg_1166_pp1_iter8_reg;
reg   [31:0] gmem_addr_3_reg_1170;
wire   [0:0] empty_69_fu_564_p2;
reg   [0:0] empty_69_reg_1176;
reg    ap_enable_reg_pp1_iter0;
reg   [15:0] gmem_addr_3_read_reg_1181;
wire   [0:0] empty_66_fu_570_p2;
reg   [0:0] empty_66_reg_1186;
wire  signed [31:0] p_cast_cast49_fu_673_p1;
wire   [62:0] empty_71_fu_677_p2;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state30_pp2_stage0_iter0;
reg    ap_block_state31_pp2_stage0_iter1;
wire    ap_block_state32_pp2_stage0_iter2;
reg    ap_block_pp2_stage0_11001;
wire   [0:0] exitcond2415_fu_683_p2;
reg   [0:0] exitcond2415_reg_1208_pp2_iter1_reg;
wire   [9:0] empty_72_fu_688_p1;
reg   [9:0] empty_72_reg_1212;
reg   [9:0] empty_72_reg_1212_pp2_iter1_reg;
reg   [15:0] gmem_addr_5_read_reg_1217;
reg   [31:0] gmem_addr_7_reg_1222;
wire    ap_CS_fsm_state33;
wire   [9:0] grp_fu_426_p4;
reg   [9:0] tmp_11_reg_1228;
reg   [15:0] gmem_addr_7_read_reg_1233;
wire   [62:0] empty_40_fu_771_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state43_pp3_stage0_iter0;
wire    ap_block_state44_pp3_stage0_iter1;
wire    ap_block_state45_pp3_stage0_iter2;
reg    ap_block_state45_io;
reg    ap_block_pp3_stage0_11001;
wire   [0:0] exitcond2213_fu_777_p2;
reg   [15:0] bram_y_load_reg_1252;
reg    ap_enable_reg_pp3_iter1;
wire   [0:0] empty_97_fu_791_p1;
reg   [0:0] empty_97_reg_1257;
wire   [0:0] empty_98_fu_794_p1;
reg   [0:0] empty_98_reg_1265;
wire   [0:0] exitcondtmp_fu_797_p2;
wire    ap_block_state51_pp4_stage0_iter0;
wire    ap_block_state52_pp4_stage0_iter1;
reg    ap_block_state52_io;
wire    ap_block_state53_pp4_stage0_iter2;
reg    ap_block_state53_io;
wire    ap_block_state54_pp4_stage0_iter3;
wire    ap_block_state55_pp4_stage0_iter4;
wire    ap_block_state56_pp4_stage0_iter5;
wire    ap_block_state57_pp4_stage0_iter6;
reg    ap_block_state58_pp4_stage0_iter7;
reg    ap_block_pp4_stage0_11001;
reg   [0:0] exitcondtmp_reg_1270_pp4_iter2_reg;
reg   [0:0] exitcondtmp_reg_1270_pp4_iter3_reg;
reg   [0:0] exitcondtmp_reg_1270_pp4_iter4_reg;
reg   [0:0] exitcondtmp_reg_1270_pp4_iter5_reg;
reg   [31:0] gmem_addr_2_reg_1279;
wire   [0:0] empty_53_fu_860_p2;
reg   [0:0] empty_53_reg_1285;
reg    ap_enable_reg_pp4_iter0;
wire   [1:0] empty_49_fu_911_p2;
reg   [1:0] empty_49_reg_1290;
wire   [15:0] empty_50_fu_929_p2;
reg   [15:0] empty_50_reg_1295;
wire   [62:0] empty_55_fu_950_p2;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state60_pp5_stage0_iter0;
wire    ap_block_state61_pp5_stage0_iter1;
wire    ap_block_state62_pp5_stage0_iter2;
reg    ap_block_state62_io;
reg    ap_block_pp5_stage0_11001;
wire   [0:0] exitcond2011_fu_956_p2;
reg   [15:0] bram_dy_load_reg_1320;
reg    ap_enable_reg_pp5_iter1;
reg   [31:0] gmem_addr_6_reg_1330;
wire   [1:0] empty_91_fu_1022_p2;
reg   [1:0] empty_91_reg_1336;
wire   [15:0] empty_92_fu_1040_p2;
reg   [15:0] empty_92_reg_1341;
wire    ap_CS_fsm_state8;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state13;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter9;
wire    ap_CS_fsm_state29;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state30;
reg    ap_enable_reg_pp2_iter2;
reg    ap_predicate_op114_readreq_state2;
reg    ap_predicate_op120_writereq_state2;
reg    ap_block_state2_io;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state43;
reg    ap_block_state50;
reg    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state51;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter4;
reg    ap_enable_reg_pp4_iter5;
reg    ap_enable_reg_pp4_iter6;
reg    ap_block_state59_io;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state60;
reg   [0:0] ap_phi_mux_residual_loop_index6_phi_fu_341_p4;
reg   [0:0] ap_phi_mux_residual_loop_index18_phi_fu_375_p4;
wire   [31:0] loop_index3_cast_cast_fu_515_p1;
wire   [31:0] p_cast24_cast_fu_657_p1;
wire   [31:0] loop_index_cast_cast_fu_692_p1;
wire   [31:0] p_cast37_cast_fu_767_p1;
wire    ap_CS_fsm_state42;
wire   [31:0] loop_index15_cast_cast_fu_786_p1;
wire   [31:0] p_cast15_cast_fu_821_p1;
wire   [31:0] loop_index9_cast_cast_fu_965_p1;
wire   [31:0] p_cast28_cast_fu_970_p1;
wire  signed [31:0] p_cast11_cast_fu_470_p1;
wire  signed [31:0] p_cast9_cast_fu_485_p1;
wire  signed [31:0] p_cast20_cast_fu_554_p1;
wire  signed [31:0] p_cast26_cast_fu_662_p1;
wire  signed [31:0] p_cast33_cast_fu_696_p1;
wire  signed [31:0] p_cast19_cast_fu_850_p1;
wire  signed [31:0] p_cast25_cast_fu_935_p1;
wire  signed [31:0] p_cast32_cast_fu_975_p1;
wire  signed [31:0] p_cast_cast38_fu_496_p1;
reg    ap_block_state23_io;
wire    ap_block_pp3_stage0_01001;
reg    ap_block_pp4_stage0_01001;
wire  signed [31:0] p_cast_cast48_fu_946_p1;
reg    ap_block_state67;
wire    ap_block_pp5_stage0_01001;
reg   [31:0] bram_y_Addr_A_orig;
wire   [15:0] empty_68_fu_640_p2;
wire   [1:0] empty_67_fu_622_p2;
reg   [31:0] bram_dy_Addr_A_orig;
wire   [15:0] empty_80_fu_760_p2;
wire   [1:0] empty_79_fu_742_p2;
wire   [31:0] grp_fu_412_p2;
wire   [31:0] p_cast8_fu_458_p1;
wire   [30:0] grp_fu_394_p4;
wire   [31:0] residual_loop_index6_cast44_fu_530_p1;
wire   [31:0] tmp4_fu_534_p2;
wire   [31:0] empty_62_fu_539_p2;
wire   [30:0] p_cast7_fu_544_p4;
wire   [10:0] residual_loop_index6_cast_fu_575_p1;
wire   [0:0] tmp5_fu_584_p2;
wire   [0:0] empty_63_fu_589_p2;
wire   [3:0] tmp_4_fu_594_p3;
wire   [15:0] p_cast45_fu_602_p1;
wire   [15:0] empty_64_fu_606_p2;
wire   [7:0] empty_65_fu_611_p1;
wire   [1:0] p_cast46_fu_619_p1;
wire   [3:0] tmp_5_fu_629_p3;
wire   [15:0] p_cast22_cast_fu_615_p1;
wire   [15:0] p_cast47_fu_636_p1;
wire   [10:0] empty_61_fu_579_p2;
wire   [9:0] tmp_6_fu_647_p4;
wire   [30:0] grp_fu_403_p4;
wire   [30:0] grp_fu_416_p4;
wire   [0:0] empty_73_fu_706_p1;
wire   [0:0] empty_76_fu_709_p2;
wire   [3:0] tmp_8_fu_714_p3;
wire   [15:0] p_cast55_fu_722_p1;
wire   [15:0] empty_77_fu_726_p2;
wire   [7:0] empty_78_fu_731_p1;
wire   [1:0] p_cast56_fu_739_p1;
wire   [3:0] tmp_10_fu_749_p3;
wire   [15:0] p_cast35_cast_fu_735_p1;
wire   [15:0] p_cast57_fu_756_p1;
wire   [9:0] empty_41_fu_782_p1;
wire   [10:0] residual_loop_index18_cast_fu_802_p1;
wire   [10:0] empty_43_fu_806_p2;
wire   [9:0] tmp_1_fu_811_p4;
wire   [31:0] residual_loop_index18_cast41_fu_826_p1;
wire   [31:0] tmp_fu_830_p2;
wire   [31:0] empty_47_fu_835_p2;
wire   [30:0] p_cast6_fu_840_p4;
wire   [0:0] empty_44_fu_866_p2;
wire   [3:0] tmp_2_fu_871_p3;
wire   [15:0] p_cast40_fu_879_p1;
wire   [15:0] empty_45_fu_883_p2;
wire   [7:0] empty_46_fu_889_p1;
wire   [0:0] tmp1_fu_897_p2;
wire   [0:0] empty_48_fu_902_p2;
wire   [1:0] p_cast42_fu_907_p1;
wire   [3:0] tmp_3_fu_917_p3;
wire   [15:0] p_cast17_cast_fu_893_p1;
wire   [15:0] p_cast43_fu_925_p1;
wire   [9:0] empty_56_fu_961_p1;
wire   [3:0] tmp_9_fu_988_p3;
wire   [15:0] p_cast50_fu_995_p1;
wire   [15:0] empty_87_fu_999_p2;
wire   [7:0] empty_88_fu_1005_p1;
wire   [0:0] empty_85_fu_985_p1;
wire   [0:0] empty_90_fu_1013_p2;
wire   [1:0] p_cast52_fu_1018_p1;
wire   [3:0] tmp_s_fu_1028_p3;
wire   [15:0] p_cast30_cast_fu_1009_p1;
wire   [15:0] p_cast53_fu_1036_p1;
reg   [49:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 50'd1;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter7 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp4_iter6 = 1'b0;
end

OutputLayer_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .y(y),
    .dy(dy),
    .dim(dim),
    .ddrtobram(ddrtobram),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

OutputLayer_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(gmem_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(gmem_AWLEN),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(gmem_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(gmem_WSTRB),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state9)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state13) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state13)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state13);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp1_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state30) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state30)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state30);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state43) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io) & (empty_38_reg_1088 == 1'd1) & (ddrtobram_read_reg_1046 == 1'd1))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state43)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state43);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io) & (empty_38_reg_1088 == 1'd1) & (ddrtobram_read_reg_1046 == 1'd1))) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state51) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((~((gmem_BVALID == 1'b0) & (empty_38_reg_1088 == 1'd1)) & (1'b1 == ap_CS_fsm_state50))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state51)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state51);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter6 <= ap_enable_reg_pp4_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter7 <= ap_enable_reg_pp4_iter6;
        end else if ((~((gmem_BVALID == 1'b0) & (empty_38_reg_1088 == 1'd1)) & (1'b1 == ap_CS_fsm_state50))) begin
            ap_enable_reg_pp4_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter0_state60) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == ap_block_state59_io) & (empty_38_reg_1088 == 1'd1))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state60)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state60);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == ap_block_state59_io) & (empty_38_reg_1088 == 1'd1))) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io) & (empty_38_reg_1088 == 1'd1) & (ddrtobram_read_reg_1046 == 1'd1))) begin
        loop_index15_reg_360 <= 63'd0;
    end else if (((exitcond2213_fu_777_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        loop_index15_reg_360 <= empty_40_fu_771_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        loop_index3_reg_326 <= 63'd0;
    end else if (((exitcond2617_fu_506_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        loop_index3_reg_326 <= empty_58_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == ap_block_state59_io) & (empty_38_reg_1088 == 1'd1))) begin
        loop_index9_reg_383 <= 63'd0;
    end else if (((exitcond2011_fu_956_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        loop_index9_reg_383 <= empty_55_fu_950_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        loop_index_reg_349 <= 63'd0;
    end else if (((exitcond2415_fu_683_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        loop_index_reg_349 <= empty_71_fu_677_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((gmem_BVALID == 1'b0) & (empty_38_reg_1088 == 1'd1)) & (1'b1 == ap_CS_fsm_state50))) begin
        residual_loop_index18_reg_371 <= 1'd0;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (exitcondtmp_reg_1270 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        residual_loop_index18_reg_371 <= empty_53_reg_1285;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        residual_loop_index6_reg_337 <= 1'd0;
    end else if (((exitcond18tmp_reg_1166 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        residual_loop_index6_reg_337 <= empty_69_reg_1176;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (exitcond2011_reg_1311 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        bram_dy_load_reg_1320 <= bram_dy_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond2213_reg_1243 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        bram_y_load_reg_1252 <= bram_y_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        ddrtobram_read_reg_1046 <= ddrtobram;
        dim_read_reg_1050 <= dim;
        dy_read_reg_1055 <= dy;
        empty_38_reg_1088 <= empty_38_fu_449_p2;
        empty_reg_1072 <= empty_fu_435_p1;
        p_cast_reg_1079 <= {{dim[31:1]}};
        y_read_reg_1063 <= y;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        empty_36_reg_1100 <= empty_36_fu_461_p2;
        empty_37_reg_1110 <= empty_37_fu_466_p1;
        p_cast_cast_reg_1092 <= p_cast_cast_fu_455_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (exitcondtmp_reg_1270 == 1'd1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        empty_49_reg_1290 <= empty_49_fu_911_p2;
        empty_50_reg_1295 <= empty_50_fu_929_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (exitcondtmp_fu_797_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        empty_53_reg_1285 <= empty_53_fu_860_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2617_fu_506_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_59_reg_1142 <= empty_59_fu_511_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_59_reg_1142_pp0_iter1_reg <= empty_59_reg_1142;
        exitcond2617_reg_1138 <= exitcond2617_fu_506_p2;
        exitcond2617_reg_1138_pp0_iter1_reg <= exitcond2617_reg_1138;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond18tmp_reg_1166_pp1_iter7_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        empty_66_reg_1186 <= empty_66_fu_570_p2;
        gmem_addr_3_read_reg_1181 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond18tmp_fu_525_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        empty_69_reg_1176 <= empty_69_fu_564_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2415_fu_683_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        empty_72_reg_1212 <= empty_72_fu_688_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        empty_72_reg_1212_pp2_iter1_reg <= empty_72_reg_1212;
        exitcond2415_reg_1208 <= exitcond2415_fu_683_p2;
        exitcond2415_reg_1208_pp2_iter1_reg <= exitcond2415_reg_1208;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        empty_82_reg_1152 <= empty_82_fu_519_p1;
        empty_83_reg_1161 <= empty_83_fu_522_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        empty_91_reg_1336 <= empty_91_fu_1022_p2;
        empty_92_reg_1341 <= empty_92_fu_1040_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        empty_97_reg_1257 <= empty_97_fu_791_p1;
        empty_98_reg_1265 <= empty_98_fu_794_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        exitcond18tmp_reg_1166 <= exitcond18tmp_fu_525_p2;
        exitcond18tmp_reg_1166_pp1_iter1_reg <= exitcond18tmp_reg_1166;
        residual_loop_index6_reg_337_pp1_iter1_reg <= residual_loop_index6_reg_337;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        exitcond18tmp_reg_1166_pp1_iter2_reg <= exitcond18tmp_reg_1166_pp1_iter1_reg;
        exitcond18tmp_reg_1166_pp1_iter3_reg <= exitcond18tmp_reg_1166_pp1_iter2_reg;
        exitcond18tmp_reg_1166_pp1_iter4_reg <= exitcond18tmp_reg_1166_pp1_iter3_reg;
        exitcond18tmp_reg_1166_pp1_iter5_reg <= exitcond18tmp_reg_1166_pp1_iter4_reg;
        exitcond18tmp_reg_1166_pp1_iter6_reg <= exitcond18tmp_reg_1166_pp1_iter5_reg;
        exitcond18tmp_reg_1166_pp1_iter7_reg <= exitcond18tmp_reg_1166_pp1_iter6_reg;
        exitcond18tmp_reg_1166_pp1_iter8_reg <= exitcond18tmp_reg_1166_pp1_iter7_reg;
        residual_loop_index6_reg_337_pp1_iter2_reg <= residual_loop_index6_reg_337_pp1_iter1_reg;
        residual_loop_index6_reg_337_pp1_iter3_reg <= residual_loop_index6_reg_337_pp1_iter2_reg;
        residual_loop_index6_reg_337_pp1_iter4_reg <= residual_loop_index6_reg_337_pp1_iter3_reg;
        residual_loop_index6_reg_337_pp1_iter5_reg <= residual_loop_index6_reg_337_pp1_iter4_reg;
        residual_loop_index6_reg_337_pp1_iter6_reg <= residual_loop_index6_reg_337_pp1_iter5_reg;
        residual_loop_index6_reg_337_pp1_iter7_reg <= residual_loop_index6_reg_337_pp1_iter6_reg;
        residual_loop_index6_reg_337_pp1_iter8_reg <= residual_loop_index6_reg_337_pp1_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        exitcond2011_reg_1311 <= exitcond2011_fu_956_p2;
        exitcond2011_reg_1311_pp5_iter1_reg <= exitcond2011_reg_1311;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        exitcond2213_reg_1243 <= exitcond2213_fu_777_p2;
        exitcond2213_reg_1243_pp3_iter1_reg <= exitcond2213_reg_1243;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        exitcondtmp_reg_1270 <= exitcondtmp_fu_797_p2;
        exitcondtmp_reg_1270_pp4_iter1_reg <= exitcondtmp_reg_1270;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        exitcondtmp_reg_1270_pp4_iter2_reg <= exitcondtmp_reg_1270_pp4_iter1_reg;
        exitcondtmp_reg_1270_pp4_iter3_reg <= exitcondtmp_reg_1270_pp4_iter2_reg;
        exitcondtmp_reg_1270_pp4_iter4_reg <= exitcondtmp_reg_1270_pp4_iter3_reg;
        exitcondtmp_reg_1270_pp4_iter5_reg <= exitcondtmp_reg_1270_pp4_iter4_reg;
        exitcondtmp_reg_1270_pp4_iter6_reg <= exitcondtmp_reg_1270_pp4_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2617_reg_1138 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_addr_1_read_reg_1147 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcondtmp_fu_797_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        gmem_addr_2_reg_1279 <= p_cast19_cast_fu_850_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond18tmp_fu_525_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        gmem_addr_3_reg_1170 <= p_cast20_cast_fu_554_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2415_reg_1208 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        gmem_addr_5_read_reg_1217 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((empty_reg_1072 == 1'd1) & (1'b1 == ap_CS_fsm_state67))) begin
        gmem_addr_6_reg_1330 <= p_cast32_cast_fu_975_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        gmem_addr_7_read_reg_1233 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((empty_reg_1072 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        gmem_addr_7_reg_1222 <= p_cast33_cast_fu_696_p1;
        tmp_11_reg_1228 <= {{empty_36_reg_1100[10:1]}};
    end
end

always @ (*) begin
    if ((exitcond2617_fu_506_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond18tmp_fu_525_p2 == 1'd0)) begin
        ap_condition_pp1_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2415_fu_683_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state30 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state30 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2213_fu_777_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state43 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state43 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcondtmp_fu_797_p2 == 1'd0)) begin
        ap_condition_pp4_exit_iter0_state51 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state51 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2011_fu_956_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state60 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state60 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter6 == 1'b0) & (ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter7 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (exitcondtmp_reg_1270 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        ap_phi_mux_residual_loop_index18_phi_fu_375_p4 = empty_53_reg_1285;
    end else begin
        ap_phi_mux_residual_loop_index18_phi_fu_375_p4 = residual_loop_index18_reg_371;
    end
end

always @ (*) begin
    if (((exitcond18tmp_reg_1166 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_residual_loop_index6_phi_fu_341_p4 = empty_69_reg_1176;
    end else begin
        ap_phi_mux_residual_loop_index6_phi_fu_341_p4 = residual_loop_index6_reg_337;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        bram_dy_Addr_A_orig = p_cast28_cast_fu_970_p1;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        bram_dy_Addr_A_orig = loop_index9_cast_cast_fu_965_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        bram_dy_Addr_A_orig = p_cast37_cast_fu_767_p1;
    end else if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        bram_dy_Addr_A_orig = loop_index_cast_cast_fu_692_p1;
    end else begin
        bram_dy_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        bram_dy_Din_A = empty_80_fu_760_p2;
    end else if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        bram_dy_Din_A = gmem_addr_5_read_reg_1217;
    end else begin
        bram_dy_Din_A = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | ((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | (~((gmem_BVALID == 1'b0) & (empty_38_reg_1088 == 1'd1)) & (1'b1 == ap_CS_fsm_state67)) | ((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        bram_dy_EN_A = 1'b1;
    end else begin
        bram_dy_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((empty_reg_1072 == 1'd1) & (1'b1 == ap_CS_fsm_state42) & (ddrtobram_read_reg_1046 == 1'd0))) begin
        bram_dy_WEN_A = empty_79_fu_742_p2;
    end else if (((ap_enable_reg_pp2_iter2 == 1'b1) & (exitcond2415_reg_1208_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        bram_dy_WEN_A = 2'd3;
    end else begin
        bram_dy_WEN_A = 2'd0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        bram_y_Addr_A_orig = p_cast15_cast_fu_821_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        bram_y_Addr_A_orig = loop_index15_cast_cast_fu_786_p1;
    end else if (((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        bram_y_Addr_A_orig = p_cast24_cast_fu_657_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        bram_y_Addr_A_orig = loop_index3_cast_cast_fu_515_p1;
    end else begin
        bram_y_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        bram_y_Din_A = empty_68_fu_640_p2;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        bram_y_Din_A = gmem_addr_1_read_reg_1147;
    end else begin
        bram_y_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        bram_y_EN_A = 1'b1;
    end else begin
        bram_y_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter9 == 1'b1) & (exitcond18tmp_reg_1166_pp1_iter8_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        bram_y_WEN_A = empty_67_fu_622_p2;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond2617_reg_1138_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bram_y_WEN_A = 2'd3;
    end else begin
        bram_y_WEN_A = 2'd0;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
        gmem_ARADDR = gmem_addr_7_reg_1222;
    end else if (((1'b1 == ap_CS_fsm_state23) & (1'b0 == ap_block_state23_io) & (empty_38_reg_1088 == 1'd1))) begin
        gmem_ARADDR = p_cast26_cast_fu_662_p1;
    end else if (((exitcond18tmp_reg_1166 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        gmem_ARADDR = gmem_addr_3_reg_1170;
    end else if (((ap_predicate_op114_readreq_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        gmem_ARADDR = p_cast11_cast_fu_470_p1;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) & (1'b0 == ap_block_state23_io) & (empty_38_reg_1088 == 1'd1))) begin
        gmem_ARLEN = p_cast_cast49_fu_673_p1;
    end else if ((((exitcond18tmp_reg_1166 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state34)))) begin
        gmem_ARLEN = 32'd1;
    end else if (((ap_predicate_op114_readreq_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        gmem_ARLEN = p_cast_cast39_fu_481_p1;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op114_readreq_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io)) | ((1'b1 == ap_CS_fsm_state23) & (1'b0 == ap_block_state23_io) & (empty_38_reg_1088 == 1'd1)) | ((exitcond18tmp_reg_1166 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state34)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
        gmem_AWADDR = gmem_addr_6_reg_1330;
    end else if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == ap_block_state59_io) & (empty_38_reg_1088 == 1'd1))) begin
        gmem_AWADDR = p_cast25_cast_fu_935_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (exitcondtmp_reg_1270 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        gmem_AWADDR = gmem_addr_2_reg_1279;
    end else if (((ap_predicate_op120_writereq_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        gmem_AWADDR = p_cast9_cast_fu_485_p1;
    end else begin
        gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == ap_block_state59_io) & (empty_38_reg_1088 == 1'd1))) begin
        gmem_AWLEN = p_cast_cast48_fu_946_p1;
    end else if ((((1'b1 == ap_CS_fsm_pp4_stage0) & (exitcondtmp_reg_1270 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state68)))) begin
        gmem_AWLEN = 32'd1;
    end else if (((ap_predicate_op120_writereq_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        gmem_AWLEN = p_cast_cast38_fu_496_p1;
    end else begin
        gmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op120_writereq_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io)) | ((1'b1 == ap_CS_fsm_state59) & (1'b0 == ap_block_state59_io) & (empty_38_reg_1088 == 1'd1)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (exitcondtmp_reg_1270 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state68)))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((gmem_BVALID == 1'b0) & (empty_38_reg_1088 == 1'd1)) & (1'b1 == ap_CS_fsm_state67) & (empty_38_reg_1088 == 1'd1)) | (~((gmem_BVALID == 1'b0) & (empty_38_reg_1088 == 1'd1)) & (1'b1 == ap_CS_fsm_state50) & (empty_38_reg_1088 == 1'd1)) | ((exitcondtmp_reg_1270_pp4_iter6_reg == 1'd1) & (ap_enable_reg_pp4_iter7 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state74)))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond2415_reg_1208 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((exitcond18tmp_reg_1166_pp1_iter7_reg == 1'd1) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((exitcond2617_reg_1138 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state41)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        gmem_WDATA = empty_92_reg_1341;
    end else if (((exitcond2011_reg_1311_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_01001))) begin
        gmem_WDATA = bram_dy_load_reg_1320;
    end else if (((exitcondtmp_reg_1270_pp4_iter1_reg == 1'd1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_01001))) begin
        gmem_WDATA = empty_50_reg_1295;
    end else if (((exitcond2213_reg_1243_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_01001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        gmem_WDATA = bram_y_load_reg_1252;
    end else begin
        gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        gmem_WSTRB = empty_91_reg_1336;
    end else if (((exitcondtmp_reg_1270_pp4_iter1_reg == 1'd1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_01001))) begin
        gmem_WSTRB = empty_49_reg_1290;
    end else if ((((exitcond2011_reg_1311_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_01001)) | ((exitcond2213_reg_1243_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_01001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        gmem_WSTRB = 2'd3;
    end else begin
        gmem_WSTRB = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond2011_reg_1311_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((exitcondtmp_reg_1270_pp4_iter1_reg == 1'd1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((exitcond2213_reg_1243_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state69)))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | ((1'b1 == ap_CS_fsm_state23) & (empty_38_reg_1088 == 1'd1)) | ((exitcond18tmp_reg_1166 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0)) | ((1'b1 == ap_CS_fsm_state2) & (empty_38_reg_1088 == 1'd1) & (ddrtobram_read_reg_1046 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | ((1'b1 == ap_CS_fsm_state59) & (empty_38_reg_1088 == 1'd1)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (exitcondtmp_reg_1270 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0)) | ((1'b1 == ap_CS_fsm_state2) & (empty_38_reg_1088 == 1'd1) & (ddrtobram_read_reg_1046 == 1'd1)))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state74) | ((1'b1 == ap_CS_fsm_state67) & (empty_38_reg_1088 == 1'd1)) | ((exitcondtmp_reg_1270_pp4_iter6_reg == 1'd1) & (ap_enable_reg_pp4_iter7 == 1'b1) & (1'b0 == ap_block_pp4_stage0)) | ((1'b1 == ap_CS_fsm_state50) & (empty_38_reg_1088 == 1'd1)))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((exitcond2415_reg_1208 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0)) | ((exitcond18tmp_reg_1166_pp1_iter7_reg == 1'd1) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b0 == ap_block_pp1_stage0)) | ((exitcond2617_reg_1138 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state69) | ((exitcond2011_reg_1311_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((exitcondtmp_reg_1270_pp4_iter1_reg == 1'd1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0)) | ((exitcond2213_reg_1243_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io) & (empty_38_reg_1088 == 1'd1) & (ddrtobram_read_reg_1046 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io) & (empty_38_reg_1088 == 1'd0) & (ddrtobram_read_reg_1046 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io) & (empty_38_reg_1088 == 1'd0) & (ddrtobram_read_reg_1046 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io) & (empty_38_reg_1088 == 1'd1) & (ddrtobram_read_reg_1046 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond2617_fu_506_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((exitcond2617_fu_506_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond18tmp_fu_525_p2 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter9 == 1'b1) & (ap_enable_reg_pp1_iter8 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter9 == 1'b1) & (ap_enable_reg_pp1_iter8 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond18tmp_fu_525_p2 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (1'b0 == ap_block_state23_io) & (empty_38_reg_1088 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else if (((1'b1 == ap_CS_fsm_state23) & (1'b0 == ap_block_state23_io) & (empty_38_reg_1088 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((exitcond2415_fu_683_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter2 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter2 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((exitcond2415_fu_683_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((empty_reg_1072 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (exitcond2213_fu_777_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (exitcond2213_fu_777_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            if ((~((gmem_BVALID == 1'b0) & (empty_38_reg_1088 == 1'd1)) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter0 == 1'b1) & (exitcondtmp_fu_797_p2 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)) & ~((ap_enable_reg_pp4_iter6 == 1'b0) & (ap_enable_reg_pp4_iter7 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((ap_enable_reg_pp4_iter6 == 1'b0) & (ap_enable_reg_pp4_iter7 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (exitcondtmp_fu_797_p2 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state59 : begin
            if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == ap_block_state59_io) & (empty_38_reg_1088 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == ap_block_state59_io) & (empty_38_reg_1088 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter1 == 1'b0) & (exitcond2011_fu_956_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) & ~((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter1 == 1'b0) & (exitcond2011_fu_956_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) | ((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            if ((~((gmem_BVALID == 1'b0) & (empty_38_reg_1088 == 1'd1)) & (empty_reg_1072 == 1'd1) & (1'b1 == ap_CS_fsm_state67))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else if ((~((gmem_BVALID == 1'b0) & (empty_38_reg_1088 == 1'd1)) & (empty_reg_1072 == 1'd0) & (1'b1 == ap_CS_fsm_state67))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state68 : begin
            if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state69 : begin
            if (((gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state69))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state74))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((gmem_RVALID == 1'b0) & (exitcond2617_reg_1138 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((gmem_RVALID == 1'b0) & (exitcond2617_reg_1138 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((gmem_RVALID == 1'b0) & (exitcond18tmp_reg_1166_pp1_iter7_reg == 1'd1) & (ap_enable_reg_pp1_iter8 == 1'b1)) | ((1'b1 == ap_block_state14_io) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((gmem_RVALID == 1'b0) & (exitcond18tmp_reg_1166_pp1_iter7_reg == 1'd1) & (ap_enable_reg_pp1_iter8 == 1'b1)) | ((1'b1 == ap_block_state14_io) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((gmem_RVALID == 1'b0) & (exitcond2415_reg_1208 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((gmem_RVALID == 1'b0) & (exitcond2415_reg_1208 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((1'b1 == ap_block_state45_io) & (ap_enable_reg_pp3_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((1'b1 == ap_block_state45_io) & (ap_enable_reg_pp3_iter2 == 1'b1));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage0_01001 = ((gmem_BVALID == 1'b0) & (exitcondtmp_reg_1270_pp4_iter6_reg == 1'd1) & (ap_enable_reg_pp4_iter7 == 1'b1));
end

always @ (*) begin
    ap_block_pp4_stage0_11001 = (((gmem_BVALID == 1'b0) & (exitcondtmp_reg_1270_pp4_iter6_reg == 1'd1) & (ap_enable_reg_pp4_iter7 == 1'b1)) | ((1'b1 == ap_block_state53_io) & (ap_enable_reg_pp4_iter2 == 1'b1)) | ((1'b1 == ap_block_state52_io) & (ap_enable_reg_pp4_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp4_stage0_subdone = (((gmem_BVALID == 1'b0) & (exitcondtmp_reg_1270_pp4_iter6_reg == 1'd1) & (ap_enable_reg_pp4_iter7 == 1'b1)) | ((1'b1 == ap_block_state53_io) & (ap_enable_reg_pp4_iter2 == 1'b1)) | ((1'b1 == ap_block_state52_io) & (ap_enable_reg_pp4_iter1 == 1'b1)));
end

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((1'b1 == ap_block_state62_io) & (ap_enable_reg_pp5_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((1'b1 == ap_block_state62_io) & (ap_enable_reg_pp5_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = ((gmem_RVALID == 1'b0) & (exitcond2617_reg_1138 == 1'd0));
end

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_io = ((gmem_ARREADY == 1'b0) & (exitcond18tmp_reg_1166 == 1'd1));
end

assign ap_block_state14_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state21_pp1_stage0_iter8 = ((gmem_RVALID == 1'b0) & (exitcond18tmp_reg_1166_pp1_iter7_reg == 1'd1));
end

assign ap_block_state22_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_io = ((gmem_ARREADY == 1'b0) & (empty_38_reg_1088 == 1'd1));
end

always @ (*) begin
    ap_block_state2_io = (((ap_predicate_op120_writereq_state2 == 1'b1) & (gmem_AWREADY == 1'b0)) | ((ap_predicate_op114_readreq_state2 == 1'b1) & (gmem_ARREADY == 1'b0)));
end

assign ap_block_state30_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state31_pp2_stage0_iter1 = ((gmem_RVALID == 1'b0) & (exitcond2415_reg_1208 == 1'd0));
end

assign ap_block_state32_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state45_io = ((gmem_WREADY == 1'b0) & (exitcond2213_reg_1243_pp3_iter1_reg == 1'd0));
end

assign ap_block_state45_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state50 = ((gmem_BVALID == 1'b0) & (empty_38_reg_1088 == 1'd1));
end

assign ap_block_state51_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state52_io = ((gmem_AWREADY == 1'b0) & (exitcondtmp_reg_1270 == 1'd1));
end

assign ap_block_state52_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state53_io = ((gmem_WREADY == 1'b0) & (exitcondtmp_reg_1270_pp4_iter1_reg == 1'd1));
end

assign ap_block_state53_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp4_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state58_pp4_stage0_iter7 = ((gmem_BVALID == 1'b0) & (exitcondtmp_reg_1270_pp4_iter6_reg == 1'd1));
end

always @ (*) begin
    ap_block_state59_io = ((gmem_AWREADY == 1'b0) & (empty_38_reg_1088 == 1'd1));
end

assign ap_block_state60_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state62_io = ((gmem_WREADY == 1'b0) & (exitcond2011_reg_1311_pp5_iter1_reg == 1'd0));
end

assign ap_block_state62_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state67 = ((gmem_BVALID == 1'b0) & (empty_38_reg_1088 == 1'd1));
end

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

always @ (*) begin
    ap_predicate_op114_readreq_state2 = ((empty_38_reg_1088 == 1'd1) & (ddrtobram_read_reg_1046 == 1'd0));
end

always @ (*) begin
    ap_predicate_op120_writereq_state2 = ((empty_38_reg_1088 == 1'd1) & (ddrtobram_read_reg_1046 == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bram_dy_Addr_A = bram_dy_Addr_A_orig << 32'd1;

assign bram_dy_Clk_A = ap_clk;

assign bram_dy_Rst_A = ap_rst_n_inv;

assign bram_y_Addr_A = bram_y_Addr_A_orig << 32'd1;

assign bram_y_Clk_A = ap_clk;

assign bram_y_Rst_A = ap_rst_n_inv;

assign empty_36_fu_461_p2 = (dim_read_reg_1050 - p_cast8_fu_458_p1);

assign empty_37_fu_466_p1 = empty_36_fu_461_p2[10:0];

assign empty_38_fu_449_p2 = ((p_cast_fu_439_p4 != 31'd0) ? 1'b1 : 1'b0);

assign empty_40_fu_771_p2 = (loop_index15_reg_360 + 63'd1);

assign empty_41_fu_782_p1 = loop_index15_reg_360[9:0];

assign empty_43_fu_806_p2 = (residual_loop_index18_cast_fu_802_p1 + empty_37_reg_1110);

assign empty_44_fu_866_p2 = (residual_loop_index18_reg_371 ^ empty_97_reg_1257);

assign empty_45_fu_883_p2 = bram_y_Dout_A >> p_cast40_fu_879_p1;

assign empty_46_fu_889_p1 = empty_45_fu_883_p2[7:0];

assign empty_47_fu_835_p2 = (tmp_fu_830_p2 + empty_36_reg_1100);

assign empty_48_fu_902_p2 = (tmp1_fu_897_p2 ^ empty_97_reg_1257);

assign empty_49_fu_911_p2 = 2'd1 << p_cast42_fu_907_p1;

assign empty_50_fu_929_p2 = p_cast17_cast_fu_893_p1 << p_cast43_fu_925_p1;

assign empty_53_fu_860_p2 = (ap_phi_mux_residual_loop_index18_phi_fu_375_p4 ^ 1'd1);

assign empty_55_fu_950_p2 = (loop_index9_reg_383 + 63'd1);

assign empty_56_fu_961_p1 = loop_index9_reg_383[9:0];

assign empty_58_fu_500_p2 = (loop_index3_reg_326 + 63'd1);

assign empty_59_fu_511_p1 = loop_index3_reg_326[9:0];

assign empty_61_fu_579_p2 = (residual_loop_index6_cast_fu_575_p1 + empty_37_reg_1110);

assign empty_62_fu_539_p2 = (tmp4_fu_534_p2 + empty_36_reg_1100);

assign empty_63_fu_589_p2 = (tmp5_fu_584_p2 ^ empty_82_reg_1152);

assign empty_64_fu_606_p2 = gmem_addr_3_read_reg_1181 >> p_cast45_fu_602_p1;

assign empty_65_fu_611_p1 = empty_64_fu_606_p2[7:0];

assign empty_66_fu_570_p2 = (residual_loop_index6_reg_337_pp1_iter7_reg ^ empty_82_reg_1152);

assign empty_67_fu_622_p2 = 2'd1 << p_cast46_fu_619_p1;

assign empty_68_fu_640_p2 = p_cast22_cast_fu_615_p1 << p_cast47_fu_636_p1;

assign empty_69_fu_564_p2 = (ap_phi_mux_residual_loop_index6_phi_fu_341_p4 ^ 1'd1);

assign empty_71_fu_677_p2 = (loop_index_reg_349 + 63'd1);

assign empty_72_fu_688_p1 = loop_index_reg_349[9:0];

assign empty_73_fu_706_p1 = dy_read_reg_1055[0:0];

assign empty_76_fu_709_p2 = (empty_82_reg_1152 ^ empty_73_fu_706_p1);

assign empty_77_fu_726_p2 = gmem_addr_7_read_reg_1233 >> p_cast55_fu_722_p1;

assign empty_78_fu_731_p1 = empty_77_fu_726_p2[7:0];

assign empty_79_fu_742_p2 = 2'd1 << p_cast56_fu_739_p1;

assign empty_80_fu_760_p2 = p_cast35_cast_fu_735_p1 << p_cast57_fu_756_p1;

assign empty_82_fu_519_p1 = empty_36_reg_1100[0:0];

assign empty_83_fu_522_p1 = y_read_reg_1063[0:0];

assign empty_85_fu_985_p1 = dy_read_reg_1055[0:0];

assign empty_87_fu_999_p2 = bram_dy_Dout_A >> p_cast50_fu_995_p1;

assign empty_88_fu_1005_p1 = empty_87_fu_999_p2[7:0];

assign empty_90_fu_1013_p2 = (empty_97_reg_1257 ^ empty_85_fu_985_p1);

assign empty_91_fu_1022_p2 = 2'd1 << p_cast52_fu_1018_p1;

assign empty_92_fu_1040_p2 = p_cast30_cast_fu_1009_p1 << p_cast53_fu_1036_p1;

assign empty_97_fu_791_p1 = empty_36_reg_1100[0:0];

assign empty_98_fu_794_p1 = y_read_reg_1063[0:0];

assign empty_fu_435_p1 = dim[0:0];

assign exitcond18tmp_fu_525_p2 = (empty_reg_1072 ^ ap_phi_mux_residual_loop_index6_phi_fu_341_p4);

assign exitcond2011_fu_956_p2 = ((loop_index9_reg_383 == p_cast_cast_reg_1092) ? 1'b1 : 1'b0);

assign exitcond2213_fu_777_p2 = ((loop_index15_reg_360 == p_cast_cast_reg_1092) ? 1'b1 : 1'b0);

assign exitcond2415_fu_683_p2 = ((loop_index_reg_349 == p_cast_cast_reg_1092) ? 1'b1 : 1'b0);

assign exitcond2617_fu_506_p2 = ((loop_index3_reg_326 == p_cast_cast_reg_1092) ? 1'b1 : 1'b0);

assign exitcondtmp_fu_797_p2 = (empty_reg_1072 ^ ap_phi_mux_residual_loop_index18_phi_fu_375_p4);

assign grp_fu_394_p4 = {{y_read_reg_1063[31:1]}};

assign grp_fu_403_p4 = {{dy_read_reg_1055[31:1]}};

assign grp_fu_412_p2 = (empty_36_reg_1100 + dy_read_reg_1055);

assign grp_fu_416_p4 = {{grp_fu_412_p2[31:1]}};

assign grp_fu_426_p4 = {{empty_36_reg_1100[10:1]}};

assign loop_index15_cast_cast_fu_786_p1 = empty_41_fu_782_p1;

assign loop_index3_cast_cast_fu_515_p1 = empty_59_reg_1142_pp0_iter1_reg;

assign loop_index9_cast_cast_fu_965_p1 = empty_56_fu_961_p1;

assign loop_index_cast_cast_fu_692_p1 = empty_72_reg_1212_pp2_iter1_reg;

assign p_cast11_cast_fu_470_p1 = $signed(grp_fu_394_p4);

assign p_cast15_cast_fu_821_p1 = tmp_1_fu_811_p4;

assign p_cast17_cast_fu_893_p1 = empty_46_fu_889_p1;

assign p_cast19_cast_fu_850_p1 = $signed(p_cast6_fu_840_p4);

assign p_cast20_cast_fu_554_p1 = $signed(p_cast7_fu_544_p4);

assign p_cast22_cast_fu_615_p1 = empty_65_fu_611_p1;

assign p_cast24_cast_fu_657_p1 = tmp_6_fu_647_p4;

assign p_cast25_cast_fu_935_p1 = $signed(grp_fu_403_p4);

assign p_cast26_cast_fu_662_p1 = $signed(grp_fu_403_p4);

assign p_cast28_cast_fu_970_p1 = grp_fu_426_p4;

assign p_cast30_cast_fu_1009_p1 = empty_88_fu_1005_p1;

assign p_cast32_cast_fu_975_p1 = $signed(grp_fu_416_p4);

assign p_cast33_cast_fu_696_p1 = $signed(grp_fu_416_p4);

assign p_cast35_cast_fu_735_p1 = empty_78_fu_731_p1;

assign p_cast37_cast_fu_767_p1 = tmp_11_reg_1228;

assign p_cast40_fu_879_p1 = tmp_2_fu_871_p3;

assign p_cast42_fu_907_p1 = empty_48_fu_902_p2;

assign p_cast43_fu_925_p1 = tmp_3_fu_917_p3;

assign p_cast45_fu_602_p1 = tmp_4_fu_594_p3;

assign p_cast46_fu_619_p1 = empty_66_reg_1186;

assign p_cast47_fu_636_p1 = tmp_5_fu_629_p3;

assign p_cast50_fu_995_p1 = tmp_9_fu_988_p3;

assign p_cast52_fu_1018_p1 = empty_90_fu_1013_p2;

assign p_cast53_fu_1036_p1 = tmp_s_fu_1028_p3;

assign p_cast55_fu_722_p1 = tmp_8_fu_714_p3;

assign p_cast56_fu_739_p1 = empty_82_reg_1152;

assign p_cast57_fu_756_p1 = tmp_10_fu_749_p3;

assign p_cast6_fu_840_p4 = {{empty_47_fu_835_p2[31:1]}};

assign p_cast7_fu_544_p4 = {{empty_62_fu_539_p2[31:1]}};

assign p_cast8_fu_458_p1 = empty_reg_1072;

assign p_cast9_cast_fu_485_p1 = $signed(grp_fu_394_p4);

assign p_cast_cast38_fu_496_p1 = p_cast_reg_1079;

assign p_cast_cast39_fu_481_p1 = p_cast_reg_1079;

assign p_cast_cast48_fu_946_p1 = p_cast_reg_1079;

assign p_cast_cast49_fu_673_p1 = p_cast_reg_1079;

assign p_cast_cast_fu_455_p1 = p_cast_reg_1079;

assign p_cast_fu_439_p4 = {{dim[31:1]}};

assign residual_loop_index18_cast41_fu_826_p1 = ap_phi_mux_residual_loop_index18_phi_fu_375_p4;

assign residual_loop_index18_cast_fu_802_p1 = ap_phi_mux_residual_loop_index18_phi_fu_375_p4;

assign residual_loop_index6_cast44_fu_530_p1 = ap_phi_mux_residual_loop_index6_phi_fu_341_p4;

assign residual_loop_index6_cast_fu_575_p1 = residual_loop_index6_reg_337_pp1_iter8_reg;

assign tmp1_fu_897_p2 = (residual_loop_index18_reg_371 ^ empty_98_reg_1265);

assign tmp4_fu_534_p2 = (residual_loop_index6_cast44_fu_530_p1 + y_read_reg_1063);

assign tmp5_fu_584_p2 = (residual_loop_index6_reg_337_pp1_iter8_reg ^ empty_83_reg_1161);

assign tmp_10_fu_749_p3 = {{empty_82_reg_1152}, {3'd0}};

assign tmp_1_fu_811_p4 = {{empty_43_fu_806_p2[10:1]}};

assign tmp_2_fu_871_p3 = {{empty_44_fu_866_p2}, {3'd0}};

assign tmp_3_fu_917_p3 = {{empty_48_fu_902_p2}, {3'd0}};

assign tmp_4_fu_594_p3 = {{empty_63_fu_589_p2}, {3'd0}};

assign tmp_5_fu_629_p3 = {{empty_66_reg_1186}, {3'd0}};

assign tmp_6_fu_647_p4 = {{empty_61_fu_579_p2[10:1]}};

assign tmp_8_fu_714_p3 = {{empty_76_fu_709_p2}, {3'd0}};

assign tmp_9_fu_988_p3 = {{empty_97_reg_1257}, {3'd0}};

assign tmp_fu_830_p2 = (residual_loop_index18_cast41_fu_826_p1 + y_read_reg_1063);

assign tmp_s_fu_1028_p3 = {{empty_90_fu_1013_p2}, {3'd0}};

endmodule //OutputLayer
