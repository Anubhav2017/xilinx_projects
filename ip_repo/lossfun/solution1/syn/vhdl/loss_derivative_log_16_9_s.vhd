-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity loss_derivative_log_16_9_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
    grp_fu_1007_p_din0 : OUT STD_LOGIC_VECTOR (28 downto 0);
    grp_fu_1007_p_din1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    grp_fu_1007_p_dout0 : IN STD_LOGIC_VECTOR (28 downto 0);
    grp_fu_1007_p_ce : OUT STD_LOGIC );
end;


architecture behav of loss_derivative_log_16_9_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv28_C000000 : STD_LOGIC_VECTOR (27 downto 0) := "1100000000000000000000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv28_2C5C85 : STD_LOGIC_VECTOR (27 downto 0) := "0000001011000101110010000101";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv15_4000 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal log_apfixed_reduce_log_inverse_lut_table_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal log_apfixed_reduce_log_inverse_lut_table_array_V_ce0 : STD_LOGIC;
    signal log_apfixed_reduce_log_inverse_lut_table_array_V_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_ce0 : STD_LOGIC;
    signal log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0 : STD_LOGIC;
    signal log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_1_reg_275 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_1_reg_275_pp0_iter2_reg : STD_LOGIC_VECTOR (28 downto 0);
    signal icmp_ln1497_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1668 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1668_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1668_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1668_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1668_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1668_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1668_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1668_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1668_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1668_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_fu_410_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_23_fu_444_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal icmp_ln731_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_26_fu_510_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln731_fu_502_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_27_fu_576_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln731_1_fu_568_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_28_fu_642_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln731_2_fu_634_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_29_fu_708_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln731_3_fu_700_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_30_fu_774_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln731_4_fu_766_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_31_fu_840_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln731_5_fu_832_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_32_fu_906_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln731_6_fu_898_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_33_fu_972_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln731_7_fu_964_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_34_fu_1038_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln731_8_fu_1030_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_35_fu_1104_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln731_9_fu_1096_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_36_fu_1170_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln731_10_fu_1162_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_37_fu_1236_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln731_11_fu_1228_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_38_fu_1292_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln731_12_fu_1284_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln731_13_fu_1332_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln731_fu_1318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln731_14_fu_1340_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal b_frac_tilde_inverse_V_reg_1815 : STD_LOGIC_VECTOR (5 downto 0);
    signal log_sum_V_reg_1820 : STD_LOGIC_VECTOR (21 downto 0);
    signal log_sum_V_reg_1820_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal log_sum_V_reg_1820_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal log_sum_V_reg_1820_pp0_iter5_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln1115_fu_1384_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_1387_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln1115_reg_1830 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_39_reg_1837 : STD_LOGIC_VECTOR (23 downto 0);
    signal a_reg_1843 : STD_LOGIC_VECTOR (3 downto 0);
    signal ret_V_3_fu_1480_p2 : STD_LOGIC_VECTOR (28 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of ret_V_3_fu_1480_p2 : signal is "no";
    signal ret_V_3_reg_1854 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_3_reg_1854_pp0_iter6_reg : STD_LOGIC_VECTOR (28 downto 0);
    signal add_ln703_fu_1497_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln703_reg_1869 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln703_reg_1869_pp0_iter7_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln703_reg_1869_pp0_iter8_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_44_reg_1874 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_s_reg_1879 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_46_reg_1884 : STD_LOGIC_VECTOR (21 downto 0);
    signal log_base_V_2_fu_1614_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal log_base_V_2_reg_1889 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Result_6_reg_1894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_r_V_1_reg_275 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_phi_reg_pp0_iter1_r_V_1_reg_275 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_phi_mux_index0_V_phi_fu_316_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter1_index0_V_reg_313 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_s_fu_1348_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_b_exp_012_reg_322 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter1_b_exp_012_reg_322 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter2_b_exp_012_reg_322 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter3_b_exp_012_reg_322 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter4_b_exp_012_reg_322 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter5_b_exp_012_reg_322 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter6_b_exp_012_reg_322 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter7_b_exp_012_reg_322 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter8_b_exp_012_reg_322 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_r_V_6_phi_fu_393_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_1_fu_1654_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter10_r_V_6_reg_389 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_r_V_6_reg_389 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_r_V_6_reg_389 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_r_V_6_reg_389 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_r_V_6_reg_389 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_r_V_6_reg_389 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_r_V_6_reg_389 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_r_V_6_reg_389 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_r_V_6_reg_389 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_r_V_6_reg_389 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter9_r_V_6_reg_389 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln534_fu_1378_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln534_1_fu_1489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln640_fu_406_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_fu_420_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln_fu_430_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_2_fu_464_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_1_fu_474_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_3_fu_488_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_456_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_1_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_fu_452_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_5_fu_530_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_2_fu_540_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_6_fu_554_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_522_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_1_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_2_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_1_fu_518_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_fu_596_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_3_fu_606_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_9_fu_620_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_588_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_2_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_3_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_2_fu_584_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_662_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_4_fu_672_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_11_fu_686_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_654_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_3_fu_694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_4_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_3_fu_650_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_13_fu_728_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_5_fu_738_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_14_fu_752_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_720_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_4_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_5_fu_746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_4_fu_716_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_16_fu_794_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_6_fu_804_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_17_fu_818_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_786_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_5_fu_826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_6_fu_812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_5_fu_782_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_19_fu_860_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_7_fu_870_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_20_fu_884_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_852_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_6_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_7_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_6_fu_848_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_926_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_8_fu_936_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_23_fu_950_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_918_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_7_fu_958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_8_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_7_fu_914_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_25_fu_992_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_9_fu_1002_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_26_fu_1016_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_984_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_8_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_9_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_8_fu_980_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_28_fu_1058_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_s_fu_1068_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_29_fu_1082_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_1050_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_9_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_10_fu_1076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_9_fu_1046_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_31_fu_1124_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_10_fu_1134_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_32_fu_1148_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_1116_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_10_fu_1156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_11_fu_1142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_10_fu_1112_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_34_fu_1190_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_11_fu_1200_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_35_fu_1214_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1182_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_11_fu_1222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_12_fu_1208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_12_fu_1178_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1298_13_fu_1244_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln1298_s_fu_1248_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_37_fu_1270_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_1256_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_12_fu_1278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_13_fu_1264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_14_fu_1300_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_1310_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_13_fu_1304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_39_fu_1324_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_1387_p0 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_1387_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_41_fu_1423_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal sf_fu_1432_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_40_fu_1416_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_1440_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal zext_ln1333_fu_1447_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_43_fu_1459_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal lhs_fu_1468_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln1192_fu_1476_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln1333_fu_1451_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal zext_ln251_fu_1493_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_fu_1506_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1659_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_45_fu_1521_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_25_fu_1534_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1115_1_fu_1530_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_25_fu_1534_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_25_fu_1534_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_fu_1506_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal lhs_V_fu_1560_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln1193_1_fu_1567_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1193_2_fu_1571_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_2_fu_1574_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln2_fu_1580_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_1594_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln703_fu_1601_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln708_fu_1590_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal add_ln703_1_fu_1608_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln703_1_fu_1605_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal shl_ln1_fu_1628_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_2_fu_1635_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal log_base_V_fu_1639_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_5_fu_1644_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1659_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1659_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1387_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to9 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1659_p00 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1659_p10 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_condition_218 : BOOLEAN;
    signal ap_condition_297 : BOOLEAN;
    signal ap_condition_300 : BOOLEAN;
    signal ap_condition_303 : BOOLEAN;
    signal ap_condition_306 : BOOLEAN;
    signal ap_condition_309 : BOOLEAN;
    signal ap_condition_312 : BOOLEAN;
    signal ap_condition_315 : BOOLEAN;
    signal ap_condition_318 : BOOLEAN;
    signal ap_condition_321 : BOOLEAN;
    signal ap_condition_324 : BOOLEAN;
    signal ap_condition_327 : BOOLEAN;
    signal ap_condition_330 : BOOLEAN;
    signal ap_condition_333 : BOOLEAN;
    signal ap_condition_336 : BOOLEAN;
    signal ap_condition_78 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component loss_derivative_mul_29s_6ns_29_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (28 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component loss_derivative_mul_5s_23ns_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component loss_derivative_mul_9ns_9ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component loss_derivative_mac_mulsub_24ns_4ns_29ns_29_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (28 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component loss_derivative_log_16_9_s_log_apfixed_reduce_log_inverse_lut_table_array_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component loss_derivative_log_16_9_s_log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component loss_derivative_log_16_9_s_log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mocud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    log_apfixed_reduce_log_inverse_lut_table_array_V_U : component loss_derivative_log_16_9_s_log_apfixed_reduce_log_inverse_lut_table_array_V
    generic map (
        DataWidth => 6,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => log_apfixed_reduce_log_inverse_lut_table_array_V_address0,
        ce0 => log_apfixed_reduce_log_inverse_lut_table_array_V_ce0,
        q0 => log_apfixed_reduce_log_inverse_lut_table_array_V_q0);

    log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_U : component loss_derivative_log_16_9_s_log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mbkb
    generic map (
        DataWidth => 22,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_address0,
        ce0 => log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_ce0,
        q0 => log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_q0);

    log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_U : component loss_derivative_log_16_9_s_log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mocud
    generic map (
        DataWidth => 18,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_address0,
        ce0 => log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0,
        q0 => log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_q0);

    mul_5s_23ns_28_1_1_U10 : component loss_derivative_mul_5s_23ns_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 23,
        dout_WIDTH => 28)
    port map (
        din0 => ap_phi_reg_pp0_iter8_b_exp_012_reg_322,
        din1 => r_V_fu_1506_p1,
        dout => r_V_fu_1506_p2);

    mul_9ns_9ns_18_1_1_U11 : component loss_derivative_mul_9ns_9ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        din0 => r_V_25_fu_1534_p0,
        din1 => r_V_25_fu_1534_p1,
        dout => r_V_25_fu_1534_p2);

    mac_mulsub_24ns_4ns_29ns_29_4_1_U12 : component loss_derivative_mac_mulsub_24ns_4ns_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 4,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1659_p0,
        din1 => grp_fu_1659_p1,
        din2 => ret_V_3_reg_1854_pp0_iter6_reg,
        ce => ap_const_logic_1,
        dout => grp_fu_1659_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_b_exp_012_reg_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_78)) then
                if ((ap_const_boolean_1 = ap_condition_336)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_322 <= ap_const_lv5_1A;
                elsif ((ap_const_boolean_1 = ap_condition_333)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_322 <= ap_const_lv5_1B;
                elsif ((ap_const_boolean_1 = ap_condition_330)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_322 <= ap_const_lv5_1C;
                elsif ((ap_const_boolean_1 = ap_condition_327)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_322 <= ap_const_lv5_1D;
                elsif ((ap_const_boolean_1 = ap_condition_324)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_322 <= ap_const_lv5_1E;
                elsif ((ap_const_boolean_1 = ap_condition_321)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_322 <= ap_const_lv5_1F;
                elsif ((ap_const_boolean_1 = ap_condition_318)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_322 <= ap_const_lv5_0;
                elsif ((ap_const_boolean_1 = ap_condition_315)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_322 <= ap_const_lv5_1;
                elsif ((ap_const_boolean_1 = ap_condition_312)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_322 <= ap_const_lv5_2;
                elsif ((ap_const_boolean_1 = ap_condition_309)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_322 <= ap_const_lv5_3;
                elsif ((ap_const_boolean_1 = ap_condition_306)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_322 <= ap_const_lv5_4;
                elsif ((ap_const_boolean_1 = ap_condition_303)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_322 <= ap_const_lv5_5;
                elsif ((ap_const_boolean_1 = ap_condition_300)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_322 <= ap_const_lv5_6;
                elsif ((ap_const_boolean_1 = ap_condition_297)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_322 <= ap_const_lv5_7;
                elsif (((icmp_ln731_fu_438_p2 = ap_const_lv1_1) and (icmp_ln1497_fu_400_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_322 <= ap_const_lv5_8;
                elsif ((ap_const_boolean_1 = ap_condition_218)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_322 <= select_ln731_13_fu_1332_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_322 <= ap_phi_reg_pp0_iter0_b_exp_012_reg_322;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_r_V_1_reg_275_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_78)) then
                if ((ap_const_boolean_1 = ap_condition_336)) then 
                    ap_phi_reg_pp0_iter1_r_V_1_reg_275 <= r_V_38_fu_1292_p3;
                elsif ((ap_const_boolean_1 = ap_condition_333)) then 
                    ap_phi_reg_pp0_iter1_r_V_1_reg_275 <= r_V_37_fu_1236_p3;
                elsif ((ap_const_boolean_1 = ap_condition_330)) then 
                    ap_phi_reg_pp0_iter1_r_V_1_reg_275 <= r_V_36_fu_1170_p3;
                elsif ((ap_const_boolean_1 = ap_condition_327)) then 
                    ap_phi_reg_pp0_iter1_r_V_1_reg_275 <= r_V_35_fu_1104_p3;
                elsif ((ap_const_boolean_1 = ap_condition_324)) then 
                    ap_phi_reg_pp0_iter1_r_V_1_reg_275 <= r_V_34_fu_1038_p3;
                elsif ((ap_const_boolean_1 = ap_condition_321)) then 
                    ap_phi_reg_pp0_iter1_r_V_1_reg_275 <= r_V_33_fu_972_p3;
                elsif ((ap_const_boolean_1 = ap_condition_318)) then 
                    ap_phi_reg_pp0_iter1_r_V_1_reg_275 <= r_V_32_fu_906_p3;
                elsif ((ap_const_boolean_1 = ap_condition_315)) then 
                    ap_phi_reg_pp0_iter1_r_V_1_reg_275 <= r_V_31_fu_840_p3;
                elsif ((ap_const_boolean_1 = ap_condition_312)) then 
                    ap_phi_reg_pp0_iter1_r_V_1_reg_275 <= r_V_30_fu_774_p3;
                elsif ((ap_const_boolean_1 = ap_condition_309)) then 
                    ap_phi_reg_pp0_iter1_r_V_1_reg_275 <= r_V_29_fu_708_p3;
                elsif ((ap_const_boolean_1 = ap_condition_306)) then 
                    ap_phi_reg_pp0_iter1_r_V_1_reg_275 <= r_V_28_fu_642_p3;
                elsif ((ap_const_boolean_1 = ap_condition_303)) then 
                    ap_phi_reg_pp0_iter1_r_V_1_reg_275 <= r_V_27_fu_576_p3;
                elsif ((ap_const_boolean_1 = ap_condition_300)) then 
                    ap_phi_reg_pp0_iter1_r_V_1_reg_275 <= r_V_26_fu_510_p3;
                elsif ((ap_const_boolean_1 = ap_condition_297)) then 
                    ap_phi_reg_pp0_iter1_r_V_1_reg_275 <= r_V_23_fu_444_p3;
                elsif (((icmp_ln731_fu_438_p2 = ap_const_lv1_1) and (icmp_ln1497_fu_400_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_r_V_1_reg_275 <= p_Result_5_fu_410_p4;
                elsif ((ap_const_boolean_1 = ap_condition_218)) then 
                    ap_phi_reg_pp0_iter1_r_V_1_reg_275 <= select_ln731_14_fu_1340_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_r_V_1_reg_275 <= ap_phi_reg_pp0_iter0_r_V_1_reg_275;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_r_V_6_reg_389_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_78)) then
                if ((icmp_ln1497_fu_400_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_r_V_6_reg_389 <= ap_const_lv16_8000;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_r_V_6_reg_389 <= ap_phi_reg_pp0_iter0_r_V_6_reg_389;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1497_reg_1668_pp0_iter3_reg = ap_const_lv1_0))) then
                a_reg_1843 <= grp_fu_1007_p_dout0(28 downto 25);
                mul_ln1115_reg_1830 <= grp_fu_1007_p_dout0;
                tmp_39_reg_1837 <= grp_fu_1007_p_dout0(28 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1497_reg_1668_pp0_iter5_reg = ap_const_lv1_0))) then
                add_ln703_reg_1869 <= add_ln703_fu_1497_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln703_reg_1869_pp0_iter7_reg <= add_ln703_reg_1869;
                add_ln703_reg_1869_pp0_iter8_reg <= add_ln703_reg_1869_pp0_iter7_reg;
                icmp_ln1497_reg_1668_pp0_iter2_reg <= icmp_ln1497_reg_1668_pp0_iter1_reg;
                icmp_ln1497_reg_1668_pp0_iter3_reg <= icmp_ln1497_reg_1668_pp0_iter2_reg;
                icmp_ln1497_reg_1668_pp0_iter4_reg <= icmp_ln1497_reg_1668_pp0_iter3_reg;
                icmp_ln1497_reg_1668_pp0_iter5_reg <= icmp_ln1497_reg_1668_pp0_iter4_reg;
                icmp_ln1497_reg_1668_pp0_iter6_reg <= icmp_ln1497_reg_1668_pp0_iter5_reg;
                icmp_ln1497_reg_1668_pp0_iter7_reg <= icmp_ln1497_reg_1668_pp0_iter6_reg;
                icmp_ln1497_reg_1668_pp0_iter8_reg <= icmp_ln1497_reg_1668_pp0_iter7_reg;
                icmp_ln1497_reg_1668_pp0_iter9_reg <= icmp_ln1497_reg_1668_pp0_iter8_reg;
                log_sum_V_reg_1820_pp0_iter3_reg <= log_sum_V_reg_1820;
                log_sum_V_reg_1820_pp0_iter4_reg <= log_sum_V_reg_1820_pp0_iter3_reg;
                log_sum_V_reg_1820_pp0_iter5_reg <= log_sum_V_reg_1820_pp0_iter4_reg;
                r_V_1_reg_275_pp0_iter2_reg <= r_V_1_reg_275;
                ret_V_3_reg_1854_pp0_iter6_reg <= ret_V_3_reg_1854;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter10_r_V_6_reg_389 <= ap_phi_reg_pp0_iter9_r_V_6_reg_389;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_b_exp_012_reg_322 <= ap_phi_reg_pp0_iter1_b_exp_012_reg_322;
                ap_phi_reg_pp0_iter2_r_V_6_reg_389 <= ap_phi_reg_pp0_iter1_r_V_6_reg_389;
                r_V_1_reg_275 <= ap_phi_reg_pp0_iter1_r_V_1_reg_275;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter3_b_exp_012_reg_322 <= ap_phi_reg_pp0_iter2_b_exp_012_reg_322;
                ap_phi_reg_pp0_iter3_r_V_6_reg_389 <= ap_phi_reg_pp0_iter2_r_V_6_reg_389;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter4_b_exp_012_reg_322 <= ap_phi_reg_pp0_iter3_b_exp_012_reg_322;
                ap_phi_reg_pp0_iter4_r_V_6_reg_389 <= ap_phi_reg_pp0_iter3_r_V_6_reg_389;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter5_b_exp_012_reg_322 <= ap_phi_reg_pp0_iter4_b_exp_012_reg_322;
                ap_phi_reg_pp0_iter5_r_V_6_reg_389 <= ap_phi_reg_pp0_iter4_r_V_6_reg_389;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter6_b_exp_012_reg_322 <= ap_phi_reg_pp0_iter5_b_exp_012_reg_322;
                ap_phi_reg_pp0_iter6_r_V_6_reg_389 <= ap_phi_reg_pp0_iter5_r_V_6_reg_389;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter7_b_exp_012_reg_322 <= ap_phi_reg_pp0_iter6_b_exp_012_reg_322;
                ap_phi_reg_pp0_iter7_r_V_6_reg_389 <= ap_phi_reg_pp0_iter6_r_V_6_reg_389;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter8_b_exp_012_reg_322 <= ap_phi_reg_pp0_iter7_b_exp_012_reg_322;
                ap_phi_reg_pp0_iter8_r_V_6_reg_389 <= ap_phi_reg_pp0_iter7_r_V_6_reg_389;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter9_r_V_6_reg_389 <= ap_phi_reg_pp0_iter8_r_V_6_reg_389;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1497_reg_1668_pp0_iter1_reg = ap_const_lv1_0))) then
                b_frac_tilde_inverse_V_reg_1815 <= log_apfixed_reduce_log_inverse_lut_table_array_V_q0;
                log_sum_V_reg_1820 <= log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1497_reg_1668 <= icmp_ln1497_fu_400_p2;
                icmp_ln1497_reg_1668_pp0_iter1_reg <= icmp_ln1497_reg_1668;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1497_reg_1668_pp0_iter8_reg = ap_const_lv1_0))) then
                log_base_V_2_reg_1889 <= log_base_V_2_fu_1614_p2;
                p_Result_6_reg_1894 <= log_base_V_2_fu_1614_p2(28 downto 28);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1497_reg_1668_pp0_iter7_reg = ap_const_lv1_0))) then
                r_V_s_reg_1879 <= r_V_25_fu_1534_p2(17 downto 1);
                tmp_44_reg_1874 <= grp_fu_1659_p3(28 downto 14);
                tmp_46_reg_1884 <= r_V_fu_1506_p2(27 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1497_reg_1668_pp0_iter4_reg = ap_const_lv1_0))) then
                ret_V_3_reg_1854 <= ret_V_3_fu_1480_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln703_1_fu_1608_p2 <= std_logic_vector(signed(sext_ln703_fu_1601_p1) + signed(sext_ln708_fu_1590_p1));
    add_ln703_fu_1497_p2 <= std_logic_vector(unsigned(zext_ln251_fu_1493_p1) + unsigned(log_sum_V_reg_1820_pp0_iter5_reg));
    and_ln731_10_fu_1134_p3 <= (tmp_31_fu_1124_p4 & ap_const_lv26_0);
    and_ln731_11_fu_1200_p3 <= (tmp_34_fu_1190_p4 & ap_const_lv26_0);
    and_ln731_1_fu_474_p3 <= (tmp_2_fu_464_p4 & ap_const_lv26_0);
    and_ln731_2_fu_540_p3 <= (tmp_5_fu_530_p4 & ap_const_lv26_0);
    and_ln731_3_fu_606_p3 <= (tmp_8_fu_596_p4 & ap_const_lv26_0);
    and_ln731_4_fu_672_p3 <= (tmp_s_fu_662_p4 & ap_const_lv26_0);
    and_ln731_5_fu_738_p3 <= (tmp_13_fu_728_p4 & ap_const_lv26_0);
    and_ln731_6_fu_804_p3 <= (tmp_16_fu_794_p4 & ap_const_lv26_0);
    and_ln731_7_fu_870_p3 <= (tmp_19_fu_860_p4 & ap_const_lv26_0);
    and_ln731_8_fu_936_p3 <= (tmp_22_fu_926_p4 & ap_const_lv26_0);
    and_ln731_9_fu_1002_p3 <= (tmp_25_fu_992_p4 & ap_const_lv26_0);
    and_ln731_fu_1318_p2 <= (xor_ln731_13_fu_1304_p2 and tmp_38_fu_1310_p3);
    and_ln731_s_fu_1068_p3 <= (tmp_28_fu_1058_p4 & ap_const_lv26_0);
    and_ln_fu_430_p3 <= (tmp_fu_420_p4 & ap_const_lv26_0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_218_assign_proc : process(icmp_ln1497_fu_400_p2, icmp_ln731_fu_438_p2, select_ln731_fu_502_p3, select_ln731_1_fu_568_p3, select_ln731_2_fu_634_p3, select_ln731_3_fu_700_p3, select_ln731_4_fu_766_p3, select_ln731_5_fu_832_p3, select_ln731_6_fu_898_p3, select_ln731_7_fu_964_p3, select_ln731_8_fu_1030_p3, select_ln731_9_fu_1096_p3, select_ln731_10_fu_1162_p3, select_ln731_11_fu_1228_p3, select_ln731_12_fu_1284_p3, and_ln731_fu_1318_p2)
    begin
                ap_condition_218 <= ((select_ln731_12_fu_1284_p3 = ap_const_lv1_0) and (select_ln731_11_fu_1228_p3 = ap_const_lv1_0) and (select_ln731_10_fu_1162_p3 = ap_const_lv1_0) and (select_ln731_9_fu_1096_p3 = ap_const_lv1_0) and (select_ln731_8_fu_1030_p3 = ap_const_lv1_0) and (select_ln731_7_fu_964_p3 = ap_const_lv1_0) and (select_ln731_6_fu_898_p3 = ap_const_lv1_0) and (select_ln731_5_fu_832_p3 = ap_const_lv1_0) and (select_ln731_4_fu_766_p3 = ap_const_lv1_0) and (select_ln731_3_fu_700_p3 = ap_const_lv1_0) and (select_ln731_2_fu_634_p3 = ap_const_lv1_0) and (select_ln731_1_fu_568_p3 = ap_const_lv1_0) and (select_ln731_fu_502_p3 = ap_const_lv1_0) and (icmp_ln731_fu_438_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln731_fu_1318_p2) and (icmp_ln1497_fu_400_p2 = ap_const_lv1_0));
    end process;


    ap_condition_297_assign_proc : process(icmp_ln1497_fu_400_p2, icmp_ln731_fu_438_p2, select_ln731_fu_502_p3)
    begin
                ap_condition_297 <= ((select_ln731_fu_502_p3 = ap_const_lv1_1) and (icmp_ln731_fu_438_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_400_p2 = ap_const_lv1_0));
    end process;


    ap_condition_300_assign_proc : process(icmp_ln1497_fu_400_p2, icmp_ln731_fu_438_p2, select_ln731_fu_502_p3, select_ln731_1_fu_568_p3)
    begin
                ap_condition_300 <= ((select_ln731_1_fu_568_p3 = ap_const_lv1_1) and (select_ln731_fu_502_p3 = ap_const_lv1_0) and (icmp_ln731_fu_438_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_400_p2 = ap_const_lv1_0));
    end process;


    ap_condition_303_assign_proc : process(icmp_ln1497_fu_400_p2, icmp_ln731_fu_438_p2, select_ln731_fu_502_p3, select_ln731_1_fu_568_p3, select_ln731_2_fu_634_p3)
    begin
                ap_condition_303 <= ((select_ln731_2_fu_634_p3 = ap_const_lv1_1) and (select_ln731_1_fu_568_p3 = ap_const_lv1_0) and (select_ln731_fu_502_p3 = ap_const_lv1_0) and (icmp_ln731_fu_438_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_400_p2 = ap_const_lv1_0));
    end process;


    ap_condition_306_assign_proc : process(icmp_ln1497_fu_400_p2, icmp_ln731_fu_438_p2, select_ln731_fu_502_p3, select_ln731_1_fu_568_p3, select_ln731_2_fu_634_p3, select_ln731_3_fu_700_p3)
    begin
                ap_condition_306 <= ((select_ln731_3_fu_700_p3 = ap_const_lv1_1) and (select_ln731_2_fu_634_p3 = ap_const_lv1_0) and (select_ln731_1_fu_568_p3 = ap_const_lv1_0) and (select_ln731_fu_502_p3 = ap_const_lv1_0) and (icmp_ln731_fu_438_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_400_p2 = ap_const_lv1_0));
    end process;


    ap_condition_309_assign_proc : process(icmp_ln1497_fu_400_p2, icmp_ln731_fu_438_p2, select_ln731_fu_502_p3, select_ln731_1_fu_568_p3, select_ln731_2_fu_634_p3, select_ln731_3_fu_700_p3, select_ln731_4_fu_766_p3)
    begin
                ap_condition_309 <= ((select_ln731_4_fu_766_p3 = ap_const_lv1_1) and (select_ln731_3_fu_700_p3 = ap_const_lv1_0) and (select_ln731_2_fu_634_p3 = ap_const_lv1_0) and (select_ln731_1_fu_568_p3 = ap_const_lv1_0) and (select_ln731_fu_502_p3 = ap_const_lv1_0) and (icmp_ln731_fu_438_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_400_p2 = ap_const_lv1_0));
    end process;


    ap_condition_312_assign_proc : process(icmp_ln1497_fu_400_p2, icmp_ln731_fu_438_p2, select_ln731_fu_502_p3, select_ln731_1_fu_568_p3, select_ln731_2_fu_634_p3, select_ln731_3_fu_700_p3, select_ln731_4_fu_766_p3, select_ln731_5_fu_832_p3)
    begin
                ap_condition_312 <= ((select_ln731_5_fu_832_p3 = ap_const_lv1_1) and (select_ln731_4_fu_766_p3 = ap_const_lv1_0) and (select_ln731_3_fu_700_p3 = ap_const_lv1_0) and (select_ln731_2_fu_634_p3 = ap_const_lv1_0) and (select_ln731_1_fu_568_p3 = ap_const_lv1_0) and (select_ln731_fu_502_p3 = ap_const_lv1_0) and (icmp_ln731_fu_438_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_400_p2 = ap_const_lv1_0));
    end process;


    ap_condition_315_assign_proc : process(icmp_ln1497_fu_400_p2, icmp_ln731_fu_438_p2, select_ln731_fu_502_p3, select_ln731_1_fu_568_p3, select_ln731_2_fu_634_p3, select_ln731_3_fu_700_p3, select_ln731_4_fu_766_p3, select_ln731_5_fu_832_p3, select_ln731_6_fu_898_p3)
    begin
                ap_condition_315 <= ((select_ln731_6_fu_898_p3 = ap_const_lv1_1) and (select_ln731_5_fu_832_p3 = ap_const_lv1_0) and (select_ln731_4_fu_766_p3 = ap_const_lv1_0) and (select_ln731_3_fu_700_p3 = ap_const_lv1_0) and (select_ln731_2_fu_634_p3 = ap_const_lv1_0) and (select_ln731_1_fu_568_p3 = ap_const_lv1_0) and (select_ln731_fu_502_p3 = ap_const_lv1_0) and (icmp_ln731_fu_438_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_400_p2 = ap_const_lv1_0));
    end process;


    ap_condition_318_assign_proc : process(icmp_ln1497_fu_400_p2, icmp_ln731_fu_438_p2, select_ln731_fu_502_p3, select_ln731_1_fu_568_p3, select_ln731_2_fu_634_p3, select_ln731_3_fu_700_p3, select_ln731_4_fu_766_p3, select_ln731_5_fu_832_p3, select_ln731_6_fu_898_p3, select_ln731_7_fu_964_p3)
    begin
                ap_condition_318 <= ((select_ln731_7_fu_964_p3 = ap_const_lv1_1) and (select_ln731_6_fu_898_p3 = ap_const_lv1_0) and (select_ln731_5_fu_832_p3 = ap_const_lv1_0) and (select_ln731_4_fu_766_p3 = ap_const_lv1_0) and (select_ln731_3_fu_700_p3 = ap_const_lv1_0) and (select_ln731_2_fu_634_p3 = ap_const_lv1_0) and (select_ln731_1_fu_568_p3 = ap_const_lv1_0) and (select_ln731_fu_502_p3 = ap_const_lv1_0) and (icmp_ln731_fu_438_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_400_p2 = ap_const_lv1_0));
    end process;


    ap_condition_321_assign_proc : process(icmp_ln1497_fu_400_p2, icmp_ln731_fu_438_p2, select_ln731_fu_502_p3, select_ln731_1_fu_568_p3, select_ln731_2_fu_634_p3, select_ln731_3_fu_700_p3, select_ln731_4_fu_766_p3, select_ln731_5_fu_832_p3, select_ln731_6_fu_898_p3, select_ln731_7_fu_964_p3, select_ln731_8_fu_1030_p3)
    begin
                ap_condition_321 <= ((select_ln731_8_fu_1030_p3 = ap_const_lv1_1) and (select_ln731_7_fu_964_p3 = ap_const_lv1_0) and (select_ln731_6_fu_898_p3 = ap_const_lv1_0) and (select_ln731_5_fu_832_p3 = ap_const_lv1_0) and (select_ln731_4_fu_766_p3 = ap_const_lv1_0) and (select_ln731_3_fu_700_p3 = ap_const_lv1_0) and (select_ln731_2_fu_634_p3 = ap_const_lv1_0) and (select_ln731_1_fu_568_p3 = ap_const_lv1_0) and (select_ln731_fu_502_p3 = ap_const_lv1_0) and (icmp_ln731_fu_438_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_400_p2 = ap_const_lv1_0));
    end process;


    ap_condition_324_assign_proc : process(icmp_ln1497_fu_400_p2, icmp_ln731_fu_438_p2, select_ln731_fu_502_p3, select_ln731_1_fu_568_p3, select_ln731_2_fu_634_p3, select_ln731_3_fu_700_p3, select_ln731_4_fu_766_p3, select_ln731_5_fu_832_p3, select_ln731_6_fu_898_p3, select_ln731_7_fu_964_p3, select_ln731_8_fu_1030_p3, select_ln731_9_fu_1096_p3)
    begin
                ap_condition_324 <= ((select_ln731_9_fu_1096_p3 = ap_const_lv1_1) and (select_ln731_8_fu_1030_p3 = ap_const_lv1_0) and (select_ln731_7_fu_964_p3 = ap_const_lv1_0) and (select_ln731_6_fu_898_p3 = ap_const_lv1_0) and (select_ln731_5_fu_832_p3 = ap_const_lv1_0) and (select_ln731_4_fu_766_p3 = ap_const_lv1_0) and (select_ln731_3_fu_700_p3 = ap_const_lv1_0) and (select_ln731_2_fu_634_p3 = ap_const_lv1_0) and (select_ln731_1_fu_568_p3 = ap_const_lv1_0) and (select_ln731_fu_502_p3 = ap_const_lv1_0) and (icmp_ln731_fu_438_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_400_p2 = ap_const_lv1_0));
    end process;


    ap_condition_327_assign_proc : process(icmp_ln1497_fu_400_p2, icmp_ln731_fu_438_p2, select_ln731_fu_502_p3, select_ln731_1_fu_568_p3, select_ln731_2_fu_634_p3, select_ln731_3_fu_700_p3, select_ln731_4_fu_766_p3, select_ln731_5_fu_832_p3, select_ln731_6_fu_898_p3, select_ln731_7_fu_964_p3, select_ln731_8_fu_1030_p3, select_ln731_9_fu_1096_p3, select_ln731_10_fu_1162_p3)
    begin
                ap_condition_327 <= ((select_ln731_10_fu_1162_p3 = ap_const_lv1_1) and (select_ln731_9_fu_1096_p3 = ap_const_lv1_0) and (select_ln731_8_fu_1030_p3 = ap_const_lv1_0) and (select_ln731_7_fu_964_p3 = ap_const_lv1_0) and (select_ln731_6_fu_898_p3 = ap_const_lv1_0) and (select_ln731_5_fu_832_p3 = ap_const_lv1_0) and (select_ln731_4_fu_766_p3 = ap_const_lv1_0) and (select_ln731_3_fu_700_p3 = ap_const_lv1_0) and (select_ln731_2_fu_634_p3 = ap_const_lv1_0) and (select_ln731_1_fu_568_p3 = ap_const_lv1_0) and (select_ln731_fu_502_p3 = ap_const_lv1_0) and (icmp_ln731_fu_438_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_400_p2 = ap_const_lv1_0));
    end process;


    ap_condition_330_assign_proc : process(icmp_ln1497_fu_400_p2, icmp_ln731_fu_438_p2, select_ln731_fu_502_p3, select_ln731_1_fu_568_p3, select_ln731_2_fu_634_p3, select_ln731_3_fu_700_p3, select_ln731_4_fu_766_p3, select_ln731_5_fu_832_p3, select_ln731_6_fu_898_p3, select_ln731_7_fu_964_p3, select_ln731_8_fu_1030_p3, select_ln731_9_fu_1096_p3, select_ln731_10_fu_1162_p3, select_ln731_11_fu_1228_p3)
    begin
                ap_condition_330 <= ((select_ln731_11_fu_1228_p3 = ap_const_lv1_1) and (select_ln731_10_fu_1162_p3 = ap_const_lv1_0) and (select_ln731_9_fu_1096_p3 = ap_const_lv1_0) and (select_ln731_8_fu_1030_p3 = ap_const_lv1_0) and (select_ln731_7_fu_964_p3 = ap_const_lv1_0) and (select_ln731_6_fu_898_p3 = ap_const_lv1_0) and (select_ln731_5_fu_832_p3 = ap_const_lv1_0) and (select_ln731_4_fu_766_p3 = ap_const_lv1_0) and (select_ln731_3_fu_700_p3 = ap_const_lv1_0) and (select_ln731_2_fu_634_p3 = ap_const_lv1_0) and (select_ln731_1_fu_568_p3 = ap_const_lv1_0) and (select_ln731_fu_502_p3 = ap_const_lv1_0) and (icmp_ln731_fu_438_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_400_p2 = ap_const_lv1_0));
    end process;


    ap_condition_333_assign_proc : process(icmp_ln1497_fu_400_p2, icmp_ln731_fu_438_p2, select_ln731_fu_502_p3, select_ln731_1_fu_568_p3, select_ln731_2_fu_634_p3, select_ln731_3_fu_700_p3, select_ln731_4_fu_766_p3, select_ln731_5_fu_832_p3, select_ln731_6_fu_898_p3, select_ln731_7_fu_964_p3, select_ln731_8_fu_1030_p3, select_ln731_9_fu_1096_p3, select_ln731_10_fu_1162_p3, select_ln731_11_fu_1228_p3, select_ln731_12_fu_1284_p3)
    begin
                ap_condition_333 <= ((select_ln731_12_fu_1284_p3 = ap_const_lv1_1) and (select_ln731_11_fu_1228_p3 = ap_const_lv1_0) and (select_ln731_10_fu_1162_p3 = ap_const_lv1_0) and (select_ln731_9_fu_1096_p3 = ap_const_lv1_0) and (select_ln731_8_fu_1030_p3 = ap_const_lv1_0) and (select_ln731_7_fu_964_p3 = ap_const_lv1_0) and (select_ln731_6_fu_898_p3 = ap_const_lv1_0) and (select_ln731_5_fu_832_p3 = ap_const_lv1_0) and (select_ln731_4_fu_766_p3 = ap_const_lv1_0) and (select_ln731_3_fu_700_p3 = ap_const_lv1_0) and (select_ln731_2_fu_634_p3 = ap_const_lv1_0) and (select_ln731_1_fu_568_p3 = ap_const_lv1_0) and (select_ln731_fu_502_p3 = ap_const_lv1_0) and (icmp_ln731_fu_438_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_400_p2 = ap_const_lv1_0));
    end process;


    ap_condition_336_assign_proc : process(icmp_ln1497_fu_400_p2, icmp_ln731_fu_438_p2, select_ln731_fu_502_p3, select_ln731_1_fu_568_p3, select_ln731_2_fu_634_p3, select_ln731_3_fu_700_p3, select_ln731_4_fu_766_p3, select_ln731_5_fu_832_p3, select_ln731_6_fu_898_p3, select_ln731_7_fu_964_p3, select_ln731_8_fu_1030_p3, select_ln731_9_fu_1096_p3, select_ln731_10_fu_1162_p3, select_ln731_11_fu_1228_p3, select_ln731_12_fu_1284_p3, and_ln731_fu_1318_p2)
    begin
                ap_condition_336 <= ((ap_const_lv1_1 = and_ln731_fu_1318_p2) and (select_ln731_12_fu_1284_p3 = ap_const_lv1_0) and (select_ln731_11_fu_1228_p3 = ap_const_lv1_0) and (select_ln731_10_fu_1162_p3 = ap_const_lv1_0) and (select_ln731_9_fu_1096_p3 = ap_const_lv1_0) and (select_ln731_8_fu_1030_p3 = ap_const_lv1_0) and (select_ln731_7_fu_964_p3 = ap_const_lv1_0) and (select_ln731_6_fu_898_p3 = ap_const_lv1_0) and (select_ln731_5_fu_832_p3 = ap_const_lv1_0) and (select_ln731_4_fu_766_p3 = ap_const_lv1_0) and (select_ln731_3_fu_700_p3 = ap_const_lv1_0) and (select_ln731_2_fu_634_p3 = ap_const_lv1_0) and (select_ln731_1_fu_568_p3 = ap_const_lv1_0) and (select_ln731_fu_502_p3 = ap_const_lv1_0) and (icmp_ln731_fu_438_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_400_p2 = ap_const_lv1_0));
    end process;


    ap_condition_78_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_78 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to9_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to9 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_index0_V_phi_fu_316_p4_assign_proc : process(icmp_ln1497_reg_1668, ap_phi_reg_pp0_iter1_r_V_1_reg_275, ap_phi_reg_pp0_iter1_index0_V_reg_313, p_Result_s_fu_1348_p3)
    begin
        if ((icmp_ln1497_reg_1668 = ap_const_lv1_0)) then
            if ((p_Result_s_fu_1348_p3 = ap_const_lv1_0)) then 
                ap_phi_mux_index0_V_phi_fu_316_p4 <= ap_phi_reg_pp0_iter1_r_V_1_reg_275(26 downto 21);
            elsif ((p_Result_s_fu_1348_p3 = ap_const_lv1_1)) then 
                ap_phi_mux_index0_V_phi_fu_316_p4 <= ap_phi_reg_pp0_iter1_r_V_1_reg_275(27 downto 22);
            else 
                ap_phi_mux_index0_V_phi_fu_316_p4 <= ap_phi_reg_pp0_iter1_index0_V_reg_313;
            end if;
        else 
            ap_phi_mux_index0_V_phi_fu_316_p4 <= ap_phi_reg_pp0_iter1_index0_V_reg_313;
        end if; 
    end process;


    ap_phi_mux_r_V_6_phi_fu_393_p4_assign_proc : process(icmp_ln1497_reg_1668_pp0_iter9_reg, sext_ln708_1_fu_1654_p1, ap_phi_reg_pp0_iter10_r_V_6_reg_389)
    begin
        if ((icmp_ln1497_reg_1668_pp0_iter9_reg = ap_const_lv1_0)) then 
            ap_phi_mux_r_V_6_phi_fu_393_p4 <= sext_ln708_1_fu_1654_p1;
        else 
            ap_phi_mux_r_V_6_phi_fu_393_p4 <= ap_phi_reg_pp0_iter10_r_V_6_reg_389;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_b_exp_012_reg_322 <= "XXXXX";
    ap_phi_reg_pp0_iter0_r_V_1_reg_275 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_r_V_6_reg_389 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_index0_V_reg_313 <= "XXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to9)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to9 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_phi_mux_r_V_6_phi_fu_393_p4;
    grp_fu_1007_p_ce <= ap_const_logic_1;
    grp_fu_1007_p_din0 <= r_V_1_reg_275_pp0_iter2_reg;
    grp_fu_1007_p_din1 <= zext_ln1115_fu_1384_p1(6 - 1 downto 0);
    grp_fu_1387_ce <= ap_const_logic_1;
    grp_fu_1387_p0 <= r_V_1_reg_275_pp0_iter2_reg;
    grp_fu_1387_p1 <= zext_ln1115_fu_1384_p1(6 - 1 downto 0);
    grp_fu_1387_p2 <= grp_fu_1007_p_dout0;
    grp_fu_1659_p0 <= grp_fu_1659_p00(24 - 1 downto 0);
    grp_fu_1659_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_reg_1837),28));
    grp_fu_1659_p1 <= grp_fu_1659_p10(4 - 1 downto 0);
    grp_fu_1659_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_reg_1843),28));
    icmp_ln1497_fu_400_p2 <= "1" when (signed(x) < signed(ap_const_lv16_1)) else "0";
    icmp_ln731_10_fu_1076_p2 <= "1" when (and_ln731_s_fu_1068_p3 = ap_const_lv28_C000000) else "0";
    icmp_ln731_11_fu_1142_p2 <= "1" when (and_ln731_10_fu_1134_p3 = ap_const_lv28_C000000) else "0";
    icmp_ln731_12_fu_1208_p2 <= "1" when (and_ln731_11_fu_1200_p3 = ap_const_lv28_C000000) else "0";
    icmp_ln731_13_fu_1264_p2 <= "1" when (trunc_ln1298_s_fu_1248_p3 = ap_const_lv28_C000000) else "0";
    icmp_ln731_1_fu_482_p2 <= "1" when (and_ln731_1_fu_474_p3 = ap_const_lv28_C000000) else "0";
    icmp_ln731_2_fu_548_p2 <= "1" when (and_ln731_2_fu_540_p3 = ap_const_lv28_C000000) else "0";
    icmp_ln731_3_fu_614_p2 <= "1" when (and_ln731_3_fu_606_p3 = ap_const_lv28_C000000) else "0";
    icmp_ln731_4_fu_680_p2 <= "1" when (and_ln731_4_fu_672_p3 = ap_const_lv28_C000000) else "0";
    icmp_ln731_5_fu_746_p2 <= "1" when (and_ln731_5_fu_738_p3 = ap_const_lv28_C000000) else "0";
    icmp_ln731_6_fu_812_p2 <= "1" when (and_ln731_6_fu_804_p3 = ap_const_lv28_C000000) else "0";
    icmp_ln731_7_fu_878_p2 <= "1" when (and_ln731_7_fu_870_p3 = ap_const_lv28_C000000) else "0";
    icmp_ln731_8_fu_944_p2 <= "1" when (and_ln731_8_fu_936_p3 = ap_const_lv28_C000000) else "0";
    icmp_ln731_9_fu_1010_p2 <= "1" when (and_ln731_9_fu_1002_p3 = ap_const_lv28_C000000) else "0";
    icmp_ln731_fu_438_p2 <= "1" when (and_ln_fu_430_p3 = ap_const_lv28_C000000) else "0";
    lhs_V_fu_1560_p3 <= (tmp_44_reg_1874 & ap_const_lv10_0);
    lhs_fu_1468_p3 <= (tmp_43_fu_1459_p4 & ap_const_lv8_0);
    log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_address0 <= zext_ln534_fu_1378_p1(6 - 1 downto 0);

    log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_ce0 <= ap_const_logic_1;
        else 
            log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    log_apfixed_reduce_log_inverse_lut_table_array_V_address0 <= zext_ln534_fu_1378_p1(6 - 1 downto 0);

    log_apfixed_reduce_log_inverse_lut_table_array_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            log_apfixed_reduce_log_inverse_lut_table_array_V_ce0 <= ap_const_logic_1;
        else 
            log_apfixed_reduce_log_inverse_lut_table_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_address0 <= zext_ln534_1_fu_1489_p1(4 - 1 downto 0);

    log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0 <= ap_const_logic_1;
        else 
            log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    log_base_V_2_fu_1614_p2 <= std_logic_vector(unsigned(add_ln703_1_fu_1608_p2) + unsigned(sext_ln703_1_fu_1605_p1));
    log_base_V_fu_1639_p2 <= std_logic_vector(unsigned(log_base_V_2_reg_1889) + unsigned(sext_ln703_2_fu_1635_p1));
    p_Result_5_fu_410_p4 <= ((ap_const_lv1_0 & trunc_ln640_fu_406_p1) & ap_const_lv13_0);
    p_Result_s_fu_1348_p3 <= ap_phi_reg_pp0_iter1_r_V_1_reg_275(28 downto 28);
    r_V_23_fu_444_p3 <= (trunc_ln640_fu_406_p1 & ap_const_lv14_0);
    r_V_25_fu_1534_p0 <= zext_ln1115_1_fu_1530_p1(9 - 1 downto 0);
    r_V_25_fu_1534_p1 <= zext_ln1115_1_fu_1530_p1(9 - 1 downto 0);
    r_V_26_fu_510_p3 <= (trunc_ln1298_fu_452_p1 & ap_const_lv15_0);
    r_V_27_fu_576_p3 <= (trunc_ln1298_1_fu_518_p1 & ap_const_lv16_0);
    r_V_28_fu_642_p3 <= (trunc_ln1298_2_fu_584_p1 & ap_const_lv17_0);
    r_V_29_fu_708_p3 <= (trunc_ln1298_3_fu_650_p1 & ap_const_lv18_0);
    r_V_30_fu_774_p3 <= (trunc_ln1298_4_fu_716_p1 & ap_const_lv19_0);
    r_V_31_fu_840_p3 <= (trunc_ln1298_5_fu_782_p1 & ap_const_lv20_0);
    r_V_32_fu_906_p3 <= (trunc_ln1298_6_fu_848_p1 & ap_const_lv21_0);
    r_V_33_fu_972_p3 <= (trunc_ln1298_7_fu_914_p1 & ap_const_lv22_0);
    r_V_34_fu_1038_p3 <= (trunc_ln1298_8_fu_980_p1 & ap_const_lv23_0);
    r_V_35_fu_1104_p3 <= (trunc_ln1298_9_fu_1046_p1 & ap_const_lv24_0);
    r_V_36_fu_1170_p3 <= (trunc_ln1298_10_fu_1112_p1 & ap_const_lv25_0);
    r_V_37_fu_1236_p3 <= (trunc_ln1298_12_fu_1178_p1 & ap_const_lv26_0);
    r_V_38_fu_1292_p3 <= (trunc_ln1298_13_fu_1244_p1 & ap_const_lv27_0);
    r_V_39_fu_1324_p3 <= (trunc_ln1298_14_fu_1300_p1 & ap_const_lv28_0);
    r_V_5_fu_1644_p4 <= log_base_V_fu_1639_p2(28 downto 15);
    r_V_fu_1506_p1 <= ap_const_lv28_2C5C85(23 - 1 downto 0);
    ret_V_2_fu_1574_p2 <= std_logic_vector(unsigned(zext_ln1193_1_fu_1567_p1) - unsigned(zext_ln1193_2_fu_1571_p1));
    ret_V_3_fu_1480_p2 <= std_logic_vector(unsigned(zext_ln1192_fu_1476_p1) + unsigned(select_ln1333_fu_1451_p3));
    select_ln1333_fu_1451_p3 <= 
        tmp_42_fu_1440_p3 when (tmp_40_fu_1416_p3(0) = '1') else 
        zext_ln1333_fu_1447_p1;
    select_ln731_10_fu_1162_p3 <= 
        xor_ln731_10_fu_1156_p2 when (tmp_30_fu_1116_p3(0) = '1') else 
        icmp_ln731_11_fu_1142_p2;
    select_ln731_11_fu_1228_p3 <= 
        xor_ln731_11_fu_1222_p2 when (tmp_33_fu_1182_p3(0) = '1') else 
        icmp_ln731_12_fu_1208_p2;
    select_ln731_12_fu_1284_p3 <= 
        xor_ln731_12_fu_1278_p2 when (tmp_36_fu_1256_p3(0) = '1') else 
        icmp_ln731_13_fu_1264_p2;
    select_ln731_13_fu_1332_p3 <= 
        ap_const_lv5_19 when (trunc_ln1298_14_fu_1300_p1(0) = '1') else 
        ap_const_lv5_18;
    select_ln731_14_fu_1340_p3 <= 
        r_V_39_fu_1324_p3 when (trunc_ln1298_14_fu_1300_p1(0) = '1') else 
        ap_const_lv29_0;
    select_ln731_1_fu_568_p3 <= 
        xor_ln731_1_fu_562_p2 when (tmp_4_fu_522_p3(0) = '1') else 
        icmp_ln731_2_fu_548_p2;
    select_ln731_2_fu_634_p3 <= 
        xor_ln731_2_fu_628_p2 when (tmp_7_fu_588_p3(0) = '1') else 
        icmp_ln731_3_fu_614_p2;
    select_ln731_3_fu_700_p3 <= 
        xor_ln731_3_fu_694_p2 when (tmp_10_fu_654_p3(0) = '1') else 
        icmp_ln731_4_fu_680_p2;
    select_ln731_4_fu_766_p3 <= 
        xor_ln731_4_fu_760_p2 when (tmp_12_fu_720_p3(0) = '1') else 
        icmp_ln731_5_fu_746_p2;
    select_ln731_5_fu_832_p3 <= 
        xor_ln731_5_fu_826_p2 when (tmp_15_fu_786_p3(0) = '1') else 
        icmp_ln731_6_fu_812_p2;
    select_ln731_6_fu_898_p3 <= 
        xor_ln731_6_fu_892_p2 when (tmp_18_fu_852_p3(0) = '1') else 
        icmp_ln731_7_fu_878_p2;
    select_ln731_7_fu_964_p3 <= 
        xor_ln731_7_fu_958_p2 when (tmp_21_fu_918_p3(0) = '1') else 
        icmp_ln731_8_fu_944_p2;
    select_ln731_8_fu_1030_p3 <= 
        xor_ln731_8_fu_1024_p2 when (tmp_24_fu_984_p3(0) = '1') else 
        icmp_ln731_9_fu_1010_p2;
    select_ln731_9_fu_1096_p3 <= 
        xor_ln731_9_fu_1090_p2 when (tmp_27_fu_1050_p3(0) = '1') else 
        icmp_ln731_10_fu_1076_p2;
    select_ln731_fu_502_p3 <= 
        xor_ln731_fu_496_p2 when (tmp_1_fu_456_p3(0) = '1') else 
        icmp_ln731_1_fu_482_p2;
        sext_ln703_1_fu_1605_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_reg_1869_pp0_iter8_reg),29));

        sext_ln703_2_fu_1635_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1_fu_1628_p3),29));

        sext_ln703_fu_1601_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_1594_p3),29));

        sext_ln708_1_fu_1654_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_5_fu_1644_p4),16));

        sext_ln708_fu_1590_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_fu_1580_p4),29));

    sf_fu_1432_p3 <= (ap_const_lv5_10 & tmp_41_fu_1423_p4);
    shl_ln1_fu_1628_p3 <= (p_Result_6_reg_1894 & ap_const_lv15_4000);
    shl_ln_fu_1594_p3 <= (tmp_46_reg_1884 & ap_const_lv6_0);
    tmp_10_fu_654_p3 <= x(11 downto 11);
    tmp_11_fu_686_p3 <= x(10 downto 10);
    tmp_12_fu_720_p3 <= x(10 downto 10);
    tmp_13_fu_728_p4 <= x(9 downto 8);
    tmp_14_fu_752_p3 <= x(9 downto 9);
    tmp_15_fu_786_p3 <= x(9 downto 9);
    tmp_16_fu_794_p4 <= x(8 downto 7);
    tmp_17_fu_818_p3 <= x(8 downto 8);
    tmp_18_fu_852_p3 <= x(8 downto 8);
    tmp_19_fu_860_p4 <= x(7 downto 6);
    tmp_1_fu_456_p3 <= x(14 downto 14);
    tmp_20_fu_884_p3 <= x(7 downto 7);
    tmp_21_fu_918_p3 <= x(7 downto 7);
    tmp_22_fu_926_p4 <= x(6 downto 5);
    tmp_23_fu_950_p3 <= x(6 downto 6);
    tmp_24_fu_984_p3 <= x(6 downto 6);
    tmp_25_fu_992_p4 <= x(5 downto 4);
    tmp_26_fu_1016_p3 <= x(5 downto 5);
    tmp_27_fu_1050_p3 <= x(5 downto 5);
    tmp_28_fu_1058_p4 <= x(4 downto 3);
    tmp_29_fu_1082_p3 <= x(4 downto 4);
    tmp_2_fu_464_p4 <= x(13 downto 12);
    tmp_30_fu_1116_p3 <= x(4 downto 4);
    tmp_31_fu_1124_p4 <= x(3 downto 2);
    tmp_32_fu_1148_p3 <= x(3 downto 3);
    tmp_33_fu_1182_p3 <= x(3 downto 3);
    tmp_34_fu_1190_p4 <= x(2 downto 1);
    tmp_35_fu_1214_p3 <= x(2 downto 2);
    tmp_36_fu_1256_p3 <= x(2 downto 2);
    tmp_37_fu_1270_p3 <= x(1 downto 1);
    tmp_38_fu_1310_p3 <= x(1 downto 1);
    tmp_3_fu_488_p3 <= x(13 downto 13);
    tmp_40_fu_1416_p3 <= mul_ln1115_reg_1830(28 downto 28);
    tmp_41_fu_1423_p4 <= mul_ln1115_reg_1830(28 downto 6);
    tmp_42_fu_1440_p3 <= (ap_const_lv5_10 & tmp_39_reg_1837);
    tmp_43_fu_1459_p4 <= mul_ln1115_reg_1830(24 downto 5);
    tmp_45_fu_1521_p4 <= grp_fu_1659_p3(28 downto 20);
    tmp_4_fu_522_p3 <= x(13 downto 13);
    tmp_5_fu_530_p4 <= x(12 downto 11);
    tmp_6_fu_554_p3 <= x(12 downto 12);
    tmp_7_fu_588_p3 <= x(12 downto 12);
    tmp_8_fu_596_p4 <= x(11 downto 10);
    tmp_9_fu_620_p3 <= x(11 downto 11);
    tmp_fu_420_p4 <= x(14 downto 13);
    tmp_s_fu_662_p4 <= x(10 downto 9);
    trunc_ln1298_10_fu_1112_p1 <= x(4 - 1 downto 0);
    trunc_ln1298_12_fu_1178_p1 <= x(3 - 1 downto 0);
    trunc_ln1298_13_fu_1244_p1 <= x(2 - 1 downto 0);
    trunc_ln1298_14_fu_1300_p1 <= x(1 - 1 downto 0);
    trunc_ln1298_1_fu_518_p1 <= x(13 - 1 downto 0);
    trunc_ln1298_2_fu_584_p1 <= x(12 - 1 downto 0);
    trunc_ln1298_3_fu_650_p1 <= x(11 - 1 downto 0);
    trunc_ln1298_4_fu_716_p1 <= x(10 - 1 downto 0);
    trunc_ln1298_5_fu_782_p1 <= x(9 - 1 downto 0);
    trunc_ln1298_6_fu_848_p1 <= x(8 - 1 downto 0);
    trunc_ln1298_7_fu_914_p1 <= x(7 - 1 downto 0);
    trunc_ln1298_8_fu_980_p1 <= x(6 - 1 downto 0);
    trunc_ln1298_9_fu_1046_p1 <= x(5 - 1 downto 0);
    trunc_ln1298_fu_452_p1 <= x(14 - 1 downto 0);
    trunc_ln1298_s_fu_1248_p3 <= (trunc_ln1298_13_fu_1244_p1 & ap_const_lv26_0);
    trunc_ln2_fu_1580_p4 <= ret_V_2_fu_1574_p2(25 downto 10);
    trunc_ln640_fu_406_p1 <= x(15 - 1 downto 0);
    xor_ln731_10_fu_1156_p2 <= (tmp_32_fu_1148_p3 xor ap_const_lv1_1);
    xor_ln731_11_fu_1222_p2 <= (tmp_35_fu_1214_p3 xor ap_const_lv1_1);
    xor_ln731_12_fu_1278_p2 <= (tmp_37_fu_1270_p3 xor ap_const_lv1_1);
    xor_ln731_13_fu_1304_p2 <= (trunc_ln1298_14_fu_1300_p1 xor ap_const_lv1_1);
    xor_ln731_1_fu_562_p2 <= (tmp_6_fu_554_p3 xor ap_const_lv1_1);
    xor_ln731_2_fu_628_p2 <= (tmp_9_fu_620_p3 xor ap_const_lv1_1);
    xor_ln731_3_fu_694_p2 <= (tmp_11_fu_686_p3 xor ap_const_lv1_1);
    xor_ln731_4_fu_760_p2 <= (tmp_14_fu_752_p3 xor ap_const_lv1_1);
    xor_ln731_5_fu_826_p2 <= (tmp_17_fu_818_p3 xor ap_const_lv1_1);
    xor_ln731_6_fu_892_p2 <= (tmp_20_fu_884_p3 xor ap_const_lv1_1);
    xor_ln731_7_fu_958_p2 <= (tmp_23_fu_950_p3 xor ap_const_lv1_1);
    xor_ln731_8_fu_1024_p2 <= (tmp_26_fu_1016_p3 xor ap_const_lv1_1);
    xor_ln731_9_fu_1090_p2 <= (tmp_29_fu_1082_p3 xor ap_const_lv1_1);
    xor_ln731_fu_496_p2 <= (tmp_3_fu_488_p3 xor ap_const_lv1_1);
    zext_ln1115_1_fu_1530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_45_fu_1521_p4),18));
    zext_ln1115_fu_1384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_frac_tilde_inverse_V_reg_1815),29));
    zext_ln1192_fu_1476_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_fu_1468_p3),29));
    zext_ln1193_1_fu_1567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_fu_1560_p3),26));
    zext_ln1193_2_fu_1571_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_s_reg_1879),26));
    zext_ln1333_fu_1447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sf_fu_1432_p3),29));
    zext_ln251_fu_1493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_q0),22));
    zext_ln534_1_fu_1489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_reg_1843),64));
    zext_ln534_fu_1378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_index0_V_phi_fu_316_p4),64));
end behav;
