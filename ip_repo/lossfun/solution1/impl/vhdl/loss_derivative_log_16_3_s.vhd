-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity loss_derivative_log_16_3_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of loss_derivative_log_16_3_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv22_300000 : STD_LOGIC_VECTOR (21 downto 0) := "1100000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv24_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv28_2C5C85 : STD_LOGIC_VECTOR (27 downto 0) := "0000001011000101110010000101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal log_apfixed_reduce_log_inverse_lut_table_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal log_apfixed_reduce_log_inverse_lut_table_array_V_ce0 : STD_LOGIC;
    signal log_apfixed_reduce_log_inverse_lut_table_array_V_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_ce0 : STD_LOGIC;
    signal log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0 : STD_LOGIC;
    signal log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal b_frac_010_reg_277 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln1497_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1700 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1700_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1700_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1700_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1700_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1700_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1700_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1700_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1700_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_reg_1700_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_fu_412_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_21_fu_446_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln731_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_24_fu_512_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln731_fu_504_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_25_fu_578_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln731_1_fu_570_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_26_fu_644_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln731_2_fu_636_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_27_fu_710_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln731_3_fu_702_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_28_fu_776_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln731_4_fu_768_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_29_fu_842_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln731_5_fu_834_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_30_fu_908_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln731_6_fu_900_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_31_fu_974_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln731_7_fu_966_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_32_fu_1040_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln731_8_fu_1032_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_33_fu_1106_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln731_9_fu_1098_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_34_fu_1172_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln731_10_fu_1164_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_35_fu_1238_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln731_11_fu_1230_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_36_fu_1294_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln731_12_fu_1286_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln731_13_fu_1334_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln731_fu_1320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln731_14_fu_1342_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal log_sum_V_reg_1847 : STD_LOGIC_VECTOR (21 downto 0);
    signal log_sum_V_reg_1847_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal log_sum_V_reg_1847_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal log_sum_V_reg_1847_pp0_iter5_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_3_fu_1467_p2 : STD_LOGIC_VECTOR (28 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of ret_V_3_fu_1467_p2 : signal is "no";
    signal ret_V_3_reg_1867 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_3_reg_1867_pp0_iter6_reg : STD_LOGIC_VECTOR (28 downto 0);
    signal add_ln703_fu_1486_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln703_reg_1882 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln703_reg_1882_pp0_iter7_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln703_reg_1882_pp0_iter8_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln703_reg_1882_pp0_iter9_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_fu_1495_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_reg_1888 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_41_reg_1894 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_s_reg_1899 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln703_3_fu_1624_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln703_3_reg_1904 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Result_6_reg_1909 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_b_frac_010_reg_277 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_phi_reg_pp0_iter1_b_frac_010_reg_277 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_phi_mux_index0_V_phi_fu_318_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter1_index0_V_reg_315 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_s_fu_1350_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_b_exp_012_reg_324 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter1_b_exp_012_reg_324 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter2_b_exp_012_reg_324 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter3_b_exp_012_reg_324 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter4_b_exp_012_reg_324 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter5_b_exp_012_reg_324 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter6_b_exp_012_reg_324 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter7_b_exp_012_reg_324 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter8_b_exp_012_reg_324 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_r_V_5_phi_fu_395_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter10_r_V_5_reg_391 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_r_V_5_reg_391 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_r_V_5_reg_391 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_r_V_5_reg_391 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_r_V_5_reg_391 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_r_V_5_reg_391 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_r_V_5_reg_391 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_r_V_5_reg_391 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_r_V_5_reg_391 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_r_V_5_reg_391 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter9_r_V_5_reg_391 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln756_fu_1380_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln186_fu_1477_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln640_fu_408_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_fu_422_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln_fu_432_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_2_fu_466_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_1_fu_476_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_3_fu_490_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_458_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_1_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_fu_454_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_5_fu_532_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_2_fu_542_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_6_fu_556_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_524_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_1_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_2_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_1_fu_520_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_fu_598_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_3_fu_608_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_9_fu_622_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_590_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_2_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_3_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_2_fu_586_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_664_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_4_fu_674_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_11_fu_688_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_656_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_3_fu_696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_4_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_3_fu_652_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_13_fu_730_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_5_fu_740_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_14_fu_754_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_722_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_4_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_5_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_4_fu_718_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_16_fu_796_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_6_fu_806_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_17_fu_820_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_788_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_5_fu_828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_6_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_5_fu_784_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_19_fu_862_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_7_fu_872_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_20_fu_886_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_854_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_6_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_7_fu_880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_6_fu_850_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_928_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_8_fu_938_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_23_fu_952_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_920_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_7_fu_960_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_8_fu_946_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_7_fu_916_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_25_fu_994_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_9_fu_1004_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_26_fu_1018_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_986_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_8_fu_1026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_9_fu_1012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_8_fu_982_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_28_fu_1060_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_s_fu_1070_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_29_fu_1084_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_1052_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_9_fu_1092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_10_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_9_fu_1048_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_31_fu_1126_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_10_fu_1136_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_32_fu_1150_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_1118_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_10_fu_1158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_11_fu_1144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_10_fu_1114_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_34_fu_1192_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln731_11_fu_1202_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_35_fu_1216_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1184_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_11_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_12_fu_1210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_12_fu_1180_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1298_13_fu_1246_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln1298_s_fu_1250_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_37_fu_1272_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_1258_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_12_fu_1280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln731_13_fu_1266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1298_14_fu_1302_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_1312_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln731_13_fu_1306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_37_fu_1326_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1680_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal z1_V_fu_1397_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_fu_1394_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sf_fu_1425_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_40_fu_1418_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_1433_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal zext_ln1333_fu_1443_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln703_fu_1415_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal lhs_fu_1455_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln1192_fu_1463_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln1333_fu_1447_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal a_fu_1406_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln251_fu_1482_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_fu_1495_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1691_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_42_fu_1510_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_23_fu_1523_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1115_fu_1519_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_23_fu_1523_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_23_fu_1523_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_V_fu_1539_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln1193_1_fu_1546_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1193_2_fu_1550_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_2_fu_1553_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln708_2_fu_1559_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_43_fu_1573_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln_fu_1582_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_44_fu_1601_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln703_fu_1590_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln708_fu_1569_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln_fu_1610_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_2_fu_1597_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln703_2_fu_1618_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln703_1_fu_1594_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal log_base_V_2_fu_1630_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln703_3_fu_1644_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal shl_ln1_fu_1652_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln778_fu_1647_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_4_fu_1659_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal log_base_V_fu_1663_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1680_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1680_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1691_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1691_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to9 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1680_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1680_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1691_p00 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1691_p10 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_condition_216 : BOOLEAN;
    signal ap_condition_287 : BOOLEAN;
    signal ap_condition_290 : BOOLEAN;
    signal ap_condition_293 : BOOLEAN;
    signal ap_condition_296 : BOOLEAN;
    signal ap_condition_299 : BOOLEAN;
    signal ap_condition_302 : BOOLEAN;
    signal ap_condition_305 : BOOLEAN;
    signal ap_condition_308 : BOOLEAN;
    signal ap_condition_311 : BOOLEAN;
    signal ap_condition_314 : BOOLEAN;
    signal ap_condition_317 : BOOLEAN;
    signal ap_condition_320 : BOOLEAN;
    signal ap_condition_323 : BOOLEAN;
    signal ap_condition_326 : BOOLEAN;
    signal ap_condition_78 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component loss_derivative_mul_5s_23ns_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component loss_derivative_mul_9ns_9ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component loss_derivative_mul_mul_23ns_6ns_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (22 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component loss_derivative_mac_mulsub_24ns_4ns_29ns_29_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (28 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component loss_derivative_log_16_3_s_log_apfixed_reduce_log_inverse_lut_table_array_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component loss_derivative_log_16_3_s_log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component loss_derivative_log_16_3_s_log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mocud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    log_apfixed_reduce_log_inverse_lut_table_array_V_U : component loss_derivative_log_16_3_s_log_apfixed_reduce_log_inverse_lut_table_array_V
    generic map (
        DataWidth => 6,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => log_apfixed_reduce_log_inverse_lut_table_array_V_address0,
        ce0 => log_apfixed_reduce_log_inverse_lut_table_array_V_ce0,
        q0 => log_apfixed_reduce_log_inverse_lut_table_array_V_q0);

    log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_U : component loss_derivative_log_16_3_s_log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mbkb
    generic map (
        DataWidth => 22,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_address0,
        ce0 => log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_ce0,
        q0 => log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_q0);

    log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_U : component loss_derivative_log_16_3_s_log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mocud
    generic map (
        DataWidth => 18,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_address0,
        ce0 => log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0,
        q0 => log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_q0);

    mul_5s_23ns_28_1_1_U9 : component loss_derivative_mul_5s_23ns_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 23,
        dout_WIDTH => 28)
    port map (
        din0 => ap_phi_reg_pp0_iter8_b_exp_012_reg_324,
        din1 => r_V_fu_1495_p1,
        dout => r_V_fu_1495_p2);

    mul_9ns_9ns_18_1_1_U10 : component loss_derivative_mul_9ns_9ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        din0 => r_V_23_fu_1523_p0,
        din1 => r_V_23_fu_1523_p1,
        dout => r_V_23_fu_1523_p2);

    mul_mul_23ns_6ns_24_4_1_U11 : component loss_derivative_mul_mul_23ns_6ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 23,
        din1_WIDTH => 6,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1680_p0,
        din1 => grp_fu_1680_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1680_p2);

    mac_mulsub_24ns_4ns_29ns_29_4_1_U12 : component loss_derivative_mac_mulsub_24ns_4ns_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 4,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1691_p0,
        din1 => grp_fu_1691_p1,
        din2 => ret_V_3_reg_1867_pp0_iter6_reg,
        ce => ap_const_logic_1,
        dout => grp_fu_1691_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_b_exp_012_reg_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_78)) then
                if ((ap_const_boolean_1 = ap_condition_326)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_324 <= ap_const_lv5_14;
                elsif ((ap_const_boolean_1 = ap_condition_323)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_324 <= ap_const_lv5_15;
                elsif ((ap_const_boolean_1 = ap_condition_320)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_324 <= ap_const_lv5_16;
                elsif ((ap_const_boolean_1 = ap_condition_317)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_324 <= ap_const_lv5_17;
                elsif ((ap_const_boolean_1 = ap_condition_314)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_324 <= ap_const_lv5_18;
                elsif ((ap_const_boolean_1 = ap_condition_311)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_324 <= ap_const_lv5_19;
                elsif ((ap_const_boolean_1 = ap_condition_308)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_324 <= ap_const_lv5_1A;
                elsif ((ap_const_boolean_1 = ap_condition_305)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_324 <= ap_const_lv5_1B;
                elsif ((ap_const_boolean_1 = ap_condition_302)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_324 <= ap_const_lv5_1C;
                elsif ((ap_const_boolean_1 = ap_condition_299)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_324 <= ap_const_lv5_1D;
                elsif ((ap_const_boolean_1 = ap_condition_296)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_324 <= ap_const_lv5_1E;
                elsif ((ap_const_boolean_1 = ap_condition_293)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_324 <= ap_const_lv5_1F;
                elsif ((ap_const_boolean_1 = ap_condition_290)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_324 <= ap_const_lv5_0;
                elsif ((ap_const_boolean_1 = ap_condition_287)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_324 <= ap_const_lv5_1;
                elsif (((icmp_ln731_fu_440_p2 = ap_const_lv1_1) and (icmp_ln1497_fu_402_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_324 <= ap_const_lv5_2;
                elsif ((ap_const_boolean_1 = ap_condition_216)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_324 <= select_ln731_13_fu_1334_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_b_exp_012_reg_324 <= ap_phi_reg_pp0_iter0_b_exp_012_reg_324;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_b_frac_010_reg_277_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_78)) then
                if ((ap_const_boolean_1 = ap_condition_326)) then 
                    ap_phi_reg_pp0_iter1_b_frac_010_reg_277 <= r_V_36_fu_1294_p3;
                elsif ((ap_const_boolean_1 = ap_condition_323)) then 
                    ap_phi_reg_pp0_iter1_b_frac_010_reg_277 <= r_V_35_fu_1238_p3;
                elsif ((ap_const_boolean_1 = ap_condition_320)) then 
                    ap_phi_reg_pp0_iter1_b_frac_010_reg_277 <= r_V_34_fu_1172_p3;
                elsif ((ap_const_boolean_1 = ap_condition_317)) then 
                    ap_phi_reg_pp0_iter1_b_frac_010_reg_277 <= r_V_33_fu_1106_p3;
                elsif ((ap_const_boolean_1 = ap_condition_314)) then 
                    ap_phi_reg_pp0_iter1_b_frac_010_reg_277 <= r_V_32_fu_1040_p3;
                elsif ((ap_const_boolean_1 = ap_condition_311)) then 
                    ap_phi_reg_pp0_iter1_b_frac_010_reg_277 <= r_V_31_fu_974_p3;
                elsif ((ap_const_boolean_1 = ap_condition_308)) then 
                    ap_phi_reg_pp0_iter1_b_frac_010_reg_277 <= r_V_30_fu_908_p3;
                elsif ((ap_const_boolean_1 = ap_condition_305)) then 
                    ap_phi_reg_pp0_iter1_b_frac_010_reg_277 <= r_V_29_fu_842_p3;
                elsif ((ap_const_boolean_1 = ap_condition_302)) then 
                    ap_phi_reg_pp0_iter1_b_frac_010_reg_277 <= r_V_28_fu_776_p3;
                elsif ((ap_const_boolean_1 = ap_condition_299)) then 
                    ap_phi_reg_pp0_iter1_b_frac_010_reg_277 <= r_V_27_fu_710_p3;
                elsif ((ap_const_boolean_1 = ap_condition_296)) then 
                    ap_phi_reg_pp0_iter1_b_frac_010_reg_277 <= r_V_26_fu_644_p3;
                elsif ((ap_const_boolean_1 = ap_condition_293)) then 
                    ap_phi_reg_pp0_iter1_b_frac_010_reg_277 <= r_V_25_fu_578_p3;
                elsif ((ap_const_boolean_1 = ap_condition_290)) then 
                    ap_phi_reg_pp0_iter1_b_frac_010_reg_277 <= r_V_24_fu_512_p3;
                elsif ((ap_const_boolean_1 = ap_condition_287)) then 
                    ap_phi_reg_pp0_iter1_b_frac_010_reg_277 <= r_V_21_fu_446_p3;
                elsif (((icmp_ln731_fu_440_p2 = ap_const_lv1_1) and (icmp_ln1497_fu_402_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_b_frac_010_reg_277 <= p_Result_5_fu_412_p4;
                elsif ((ap_const_boolean_1 = ap_condition_216)) then 
                    ap_phi_reg_pp0_iter1_b_frac_010_reg_277 <= select_ln731_14_fu_1342_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_b_frac_010_reg_277 <= ap_phi_reg_pp0_iter0_b_frac_010_reg_277;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_r_V_5_reg_391_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_78)) then
                if ((icmp_ln1497_fu_402_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_r_V_5_reg_391 <= ap_const_lv16_8000;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_r_V_5_reg_391 <= ap_phi_reg_pp0_iter0_r_V_5_reg_391;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1497_reg_1700_pp0_iter8_reg = ap_const_lv1_0))) then
                add_ln703_3_reg_1904 <= add_ln703_3_fu_1624_p2;
                p_Result_6_reg_1909 <= log_base_V_2_fu_1630_p2(28 downto 28);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1497_reg_1700_pp0_iter5_reg = ap_const_lv1_0))) then
                add_ln703_reg_1882 <= add_ln703_fu_1486_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln703_reg_1882_pp0_iter7_reg <= add_ln703_reg_1882;
                add_ln703_reg_1882_pp0_iter8_reg <= add_ln703_reg_1882_pp0_iter7_reg;
                add_ln703_reg_1882_pp0_iter9_reg <= add_ln703_reg_1882_pp0_iter8_reg;
                icmp_ln1497_reg_1700_pp0_iter2_reg <= icmp_ln1497_reg_1700_pp0_iter1_reg;
                icmp_ln1497_reg_1700_pp0_iter3_reg <= icmp_ln1497_reg_1700_pp0_iter2_reg;
                icmp_ln1497_reg_1700_pp0_iter4_reg <= icmp_ln1497_reg_1700_pp0_iter3_reg;
                icmp_ln1497_reg_1700_pp0_iter5_reg <= icmp_ln1497_reg_1700_pp0_iter4_reg;
                icmp_ln1497_reg_1700_pp0_iter6_reg <= icmp_ln1497_reg_1700_pp0_iter5_reg;
                icmp_ln1497_reg_1700_pp0_iter7_reg <= icmp_ln1497_reg_1700_pp0_iter6_reg;
                icmp_ln1497_reg_1700_pp0_iter8_reg <= icmp_ln1497_reg_1700_pp0_iter7_reg;
                icmp_ln1497_reg_1700_pp0_iter9_reg <= icmp_ln1497_reg_1700_pp0_iter8_reg;
                log_sum_V_reg_1847_pp0_iter3_reg <= log_sum_V_reg_1847;
                log_sum_V_reg_1847_pp0_iter4_reg <= log_sum_V_reg_1847_pp0_iter3_reg;
                log_sum_V_reg_1847_pp0_iter5_reg <= log_sum_V_reg_1847_pp0_iter4_reg;
                ret_V_3_reg_1867_pp0_iter6_reg <= ret_V_3_reg_1867;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter10_r_V_5_reg_391 <= ap_phi_reg_pp0_iter9_r_V_5_reg_391;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_b_exp_012_reg_324 <= ap_phi_reg_pp0_iter1_b_exp_012_reg_324;
                ap_phi_reg_pp0_iter2_r_V_5_reg_391 <= ap_phi_reg_pp0_iter1_r_V_5_reg_391;
                b_frac_010_reg_277 <= ap_phi_reg_pp0_iter1_b_frac_010_reg_277;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter3_b_exp_012_reg_324 <= ap_phi_reg_pp0_iter2_b_exp_012_reg_324;
                ap_phi_reg_pp0_iter3_r_V_5_reg_391 <= ap_phi_reg_pp0_iter2_r_V_5_reg_391;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter4_b_exp_012_reg_324 <= ap_phi_reg_pp0_iter3_b_exp_012_reg_324;
                ap_phi_reg_pp0_iter4_r_V_5_reg_391 <= ap_phi_reg_pp0_iter3_r_V_5_reg_391;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter5_b_exp_012_reg_324 <= ap_phi_reg_pp0_iter4_b_exp_012_reg_324;
                ap_phi_reg_pp0_iter5_r_V_5_reg_391 <= ap_phi_reg_pp0_iter4_r_V_5_reg_391;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter6_b_exp_012_reg_324 <= ap_phi_reg_pp0_iter5_b_exp_012_reg_324;
                ap_phi_reg_pp0_iter6_r_V_5_reg_391 <= ap_phi_reg_pp0_iter5_r_V_5_reg_391;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter7_b_exp_012_reg_324 <= ap_phi_reg_pp0_iter6_b_exp_012_reg_324;
                ap_phi_reg_pp0_iter7_r_V_5_reg_391 <= ap_phi_reg_pp0_iter6_r_V_5_reg_391;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter8_b_exp_012_reg_324 <= ap_phi_reg_pp0_iter7_b_exp_012_reg_324;
                ap_phi_reg_pp0_iter8_r_V_5_reg_391 <= ap_phi_reg_pp0_iter7_r_V_5_reg_391;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter9_r_V_5_reg_391 <= ap_phi_reg_pp0_iter8_r_V_5_reg_391;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1497_reg_1700 <= icmp_ln1497_fu_402_p2;
                icmp_ln1497_reg_1700_pp0_iter1_reg <= icmp_ln1497_reg_1700;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1497_reg_1700_pp0_iter1_reg = ap_const_lv1_0))) then
                log_sum_V_reg_1847 <= log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1497_reg_1700_pp0_iter7_reg = ap_const_lv1_0))) then
                r_V_reg_1888 <= r_V_fu_1495_p2;
                r_V_s_reg_1899 <= r_V_23_fu_1523_p2(17 downto 1);
                tmp_41_reg_1894 <= grp_fu_1691_p3(28 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1497_reg_1700_pp0_iter4_reg = ap_const_lv1_0))) then
                ret_V_3_reg_1867 <= ret_V_3_fu_1467_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    a_fu_1406_p4 <= grp_fu_1680_p2(22 downto 19);
    add_ln703_2_fu_1618_p2 <= std_logic_vector(signed(sext_ln703_fu_1590_p1) + signed(sext_ln708_fu_1569_p1));
    add_ln703_3_fu_1624_p2 <= std_logic_vector(unsigned(trunc_ln_fu_1610_p3) + unsigned(sext_ln703_2_fu_1597_p1));
    add_ln703_fu_1486_p2 <= std_logic_vector(unsigned(zext_ln251_fu_1482_p1) + unsigned(log_sum_V_reg_1847_pp0_iter5_reg));
    add_ln778_fu_1647_p2 <= std_logic_vector(unsigned(add_ln703_3_reg_1904) + unsigned(sext_ln703_3_fu_1644_p1));
    and_ln731_10_fu_1136_p3 <= (tmp_31_fu_1126_p4 & ap_const_lv20_0);
    and_ln731_11_fu_1202_p3 <= (tmp_34_fu_1192_p4 & ap_const_lv20_0);
    and_ln731_1_fu_476_p3 <= (tmp_2_fu_466_p4 & ap_const_lv20_0);
    and_ln731_2_fu_542_p3 <= (tmp_5_fu_532_p4 & ap_const_lv20_0);
    and_ln731_3_fu_608_p3 <= (tmp_8_fu_598_p4 & ap_const_lv20_0);
    and_ln731_4_fu_674_p3 <= (tmp_s_fu_664_p4 & ap_const_lv20_0);
    and_ln731_5_fu_740_p3 <= (tmp_13_fu_730_p4 & ap_const_lv20_0);
    and_ln731_6_fu_806_p3 <= (tmp_16_fu_796_p4 & ap_const_lv20_0);
    and_ln731_7_fu_872_p3 <= (tmp_19_fu_862_p4 & ap_const_lv20_0);
    and_ln731_8_fu_938_p3 <= (tmp_22_fu_928_p4 & ap_const_lv20_0);
    and_ln731_9_fu_1004_p3 <= (tmp_25_fu_994_p4 & ap_const_lv20_0);
    and_ln731_fu_1320_p2 <= (xor_ln731_13_fu_1306_p2 and tmp_38_fu_1312_p3);
    and_ln731_s_fu_1070_p3 <= (tmp_28_fu_1060_p4 & ap_const_lv20_0);
    and_ln_fu_432_p3 <= (tmp_fu_422_p4 & ap_const_lv20_0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_216_assign_proc : process(icmp_ln1497_fu_402_p2, icmp_ln731_fu_440_p2, select_ln731_fu_504_p3, select_ln731_1_fu_570_p3, select_ln731_2_fu_636_p3, select_ln731_3_fu_702_p3, select_ln731_4_fu_768_p3, select_ln731_5_fu_834_p3, select_ln731_6_fu_900_p3, select_ln731_7_fu_966_p3, select_ln731_8_fu_1032_p3, select_ln731_9_fu_1098_p3, select_ln731_10_fu_1164_p3, select_ln731_11_fu_1230_p3, select_ln731_12_fu_1286_p3, and_ln731_fu_1320_p2)
    begin
                ap_condition_216 <= ((select_ln731_12_fu_1286_p3 = ap_const_lv1_0) and (select_ln731_11_fu_1230_p3 = ap_const_lv1_0) and (select_ln731_10_fu_1164_p3 = ap_const_lv1_0) and (select_ln731_9_fu_1098_p3 = ap_const_lv1_0) and (select_ln731_8_fu_1032_p3 = ap_const_lv1_0) and (select_ln731_7_fu_966_p3 = ap_const_lv1_0) and (select_ln731_6_fu_900_p3 = ap_const_lv1_0) and (select_ln731_5_fu_834_p3 = ap_const_lv1_0) and (select_ln731_4_fu_768_p3 = ap_const_lv1_0) and (select_ln731_3_fu_702_p3 = ap_const_lv1_0) and (select_ln731_2_fu_636_p3 = ap_const_lv1_0) and (select_ln731_1_fu_570_p3 = ap_const_lv1_0) and (select_ln731_fu_504_p3 = ap_const_lv1_0) and (icmp_ln731_fu_440_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln731_fu_1320_p2) and (icmp_ln1497_fu_402_p2 = ap_const_lv1_0));
    end process;


    ap_condition_287_assign_proc : process(icmp_ln1497_fu_402_p2, icmp_ln731_fu_440_p2, select_ln731_fu_504_p3)
    begin
                ap_condition_287 <= ((select_ln731_fu_504_p3 = ap_const_lv1_1) and (icmp_ln731_fu_440_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_402_p2 = ap_const_lv1_0));
    end process;


    ap_condition_290_assign_proc : process(icmp_ln1497_fu_402_p2, icmp_ln731_fu_440_p2, select_ln731_fu_504_p3, select_ln731_1_fu_570_p3)
    begin
                ap_condition_290 <= ((select_ln731_1_fu_570_p3 = ap_const_lv1_1) and (select_ln731_fu_504_p3 = ap_const_lv1_0) and (icmp_ln731_fu_440_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_402_p2 = ap_const_lv1_0));
    end process;


    ap_condition_293_assign_proc : process(icmp_ln1497_fu_402_p2, icmp_ln731_fu_440_p2, select_ln731_fu_504_p3, select_ln731_1_fu_570_p3, select_ln731_2_fu_636_p3)
    begin
                ap_condition_293 <= ((select_ln731_2_fu_636_p3 = ap_const_lv1_1) and (select_ln731_1_fu_570_p3 = ap_const_lv1_0) and (select_ln731_fu_504_p3 = ap_const_lv1_0) and (icmp_ln731_fu_440_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_402_p2 = ap_const_lv1_0));
    end process;


    ap_condition_296_assign_proc : process(icmp_ln1497_fu_402_p2, icmp_ln731_fu_440_p2, select_ln731_fu_504_p3, select_ln731_1_fu_570_p3, select_ln731_2_fu_636_p3, select_ln731_3_fu_702_p3)
    begin
                ap_condition_296 <= ((select_ln731_3_fu_702_p3 = ap_const_lv1_1) and (select_ln731_2_fu_636_p3 = ap_const_lv1_0) and (select_ln731_1_fu_570_p3 = ap_const_lv1_0) and (select_ln731_fu_504_p3 = ap_const_lv1_0) and (icmp_ln731_fu_440_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_402_p2 = ap_const_lv1_0));
    end process;


    ap_condition_299_assign_proc : process(icmp_ln1497_fu_402_p2, icmp_ln731_fu_440_p2, select_ln731_fu_504_p3, select_ln731_1_fu_570_p3, select_ln731_2_fu_636_p3, select_ln731_3_fu_702_p3, select_ln731_4_fu_768_p3)
    begin
                ap_condition_299 <= ((select_ln731_4_fu_768_p3 = ap_const_lv1_1) and (select_ln731_3_fu_702_p3 = ap_const_lv1_0) and (select_ln731_2_fu_636_p3 = ap_const_lv1_0) and (select_ln731_1_fu_570_p3 = ap_const_lv1_0) and (select_ln731_fu_504_p3 = ap_const_lv1_0) and (icmp_ln731_fu_440_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_402_p2 = ap_const_lv1_0));
    end process;


    ap_condition_302_assign_proc : process(icmp_ln1497_fu_402_p2, icmp_ln731_fu_440_p2, select_ln731_fu_504_p3, select_ln731_1_fu_570_p3, select_ln731_2_fu_636_p3, select_ln731_3_fu_702_p3, select_ln731_4_fu_768_p3, select_ln731_5_fu_834_p3)
    begin
                ap_condition_302 <= ((select_ln731_5_fu_834_p3 = ap_const_lv1_1) and (select_ln731_4_fu_768_p3 = ap_const_lv1_0) and (select_ln731_3_fu_702_p3 = ap_const_lv1_0) and (select_ln731_2_fu_636_p3 = ap_const_lv1_0) and (select_ln731_1_fu_570_p3 = ap_const_lv1_0) and (select_ln731_fu_504_p3 = ap_const_lv1_0) and (icmp_ln731_fu_440_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_402_p2 = ap_const_lv1_0));
    end process;


    ap_condition_305_assign_proc : process(icmp_ln1497_fu_402_p2, icmp_ln731_fu_440_p2, select_ln731_fu_504_p3, select_ln731_1_fu_570_p3, select_ln731_2_fu_636_p3, select_ln731_3_fu_702_p3, select_ln731_4_fu_768_p3, select_ln731_5_fu_834_p3, select_ln731_6_fu_900_p3)
    begin
                ap_condition_305 <= ((select_ln731_6_fu_900_p3 = ap_const_lv1_1) and (select_ln731_5_fu_834_p3 = ap_const_lv1_0) and (select_ln731_4_fu_768_p3 = ap_const_lv1_0) and (select_ln731_3_fu_702_p3 = ap_const_lv1_0) and (select_ln731_2_fu_636_p3 = ap_const_lv1_0) and (select_ln731_1_fu_570_p3 = ap_const_lv1_0) and (select_ln731_fu_504_p3 = ap_const_lv1_0) and (icmp_ln731_fu_440_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_402_p2 = ap_const_lv1_0));
    end process;


    ap_condition_308_assign_proc : process(icmp_ln1497_fu_402_p2, icmp_ln731_fu_440_p2, select_ln731_fu_504_p3, select_ln731_1_fu_570_p3, select_ln731_2_fu_636_p3, select_ln731_3_fu_702_p3, select_ln731_4_fu_768_p3, select_ln731_5_fu_834_p3, select_ln731_6_fu_900_p3, select_ln731_7_fu_966_p3)
    begin
                ap_condition_308 <= ((select_ln731_7_fu_966_p3 = ap_const_lv1_1) and (select_ln731_6_fu_900_p3 = ap_const_lv1_0) and (select_ln731_5_fu_834_p3 = ap_const_lv1_0) and (select_ln731_4_fu_768_p3 = ap_const_lv1_0) and (select_ln731_3_fu_702_p3 = ap_const_lv1_0) and (select_ln731_2_fu_636_p3 = ap_const_lv1_0) and (select_ln731_1_fu_570_p3 = ap_const_lv1_0) and (select_ln731_fu_504_p3 = ap_const_lv1_0) and (icmp_ln731_fu_440_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_402_p2 = ap_const_lv1_0));
    end process;


    ap_condition_311_assign_proc : process(icmp_ln1497_fu_402_p2, icmp_ln731_fu_440_p2, select_ln731_fu_504_p3, select_ln731_1_fu_570_p3, select_ln731_2_fu_636_p3, select_ln731_3_fu_702_p3, select_ln731_4_fu_768_p3, select_ln731_5_fu_834_p3, select_ln731_6_fu_900_p3, select_ln731_7_fu_966_p3, select_ln731_8_fu_1032_p3)
    begin
                ap_condition_311 <= ((select_ln731_8_fu_1032_p3 = ap_const_lv1_1) and (select_ln731_7_fu_966_p3 = ap_const_lv1_0) and (select_ln731_6_fu_900_p3 = ap_const_lv1_0) and (select_ln731_5_fu_834_p3 = ap_const_lv1_0) and (select_ln731_4_fu_768_p3 = ap_const_lv1_0) and (select_ln731_3_fu_702_p3 = ap_const_lv1_0) and (select_ln731_2_fu_636_p3 = ap_const_lv1_0) and (select_ln731_1_fu_570_p3 = ap_const_lv1_0) and (select_ln731_fu_504_p3 = ap_const_lv1_0) and (icmp_ln731_fu_440_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_402_p2 = ap_const_lv1_0));
    end process;


    ap_condition_314_assign_proc : process(icmp_ln1497_fu_402_p2, icmp_ln731_fu_440_p2, select_ln731_fu_504_p3, select_ln731_1_fu_570_p3, select_ln731_2_fu_636_p3, select_ln731_3_fu_702_p3, select_ln731_4_fu_768_p3, select_ln731_5_fu_834_p3, select_ln731_6_fu_900_p3, select_ln731_7_fu_966_p3, select_ln731_8_fu_1032_p3, select_ln731_9_fu_1098_p3)
    begin
                ap_condition_314 <= ((select_ln731_9_fu_1098_p3 = ap_const_lv1_1) and (select_ln731_8_fu_1032_p3 = ap_const_lv1_0) and (select_ln731_7_fu_966_p3 = ap_const_lv1_0) and (select_ln731_6_fu_900_p3 = ap_const_lv1_0) and (select_ln731_5_fu_834_p3 = ap_const_lv1_0) and (select_ln731_4_fu_768_p3 = ap_const_lv1_0) and (select_ln731_3_fu_702_p3 = ap_const_lv1_0) and (select_ln731_2_fu_636_p3 = ap_const_lv1_0) and (select_ln731_1_fu_570_p3 = ap_const_lv1_0) and (select_ln731_fu_504_p3 = ap_const_lv1_0) and (icmp_ln731_fu_440_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_402_p2 = ap_const_lv1_0));
    end process;


    ap_condition_317_assign_proc : process(icmp_ln1497_fu_402_p2, icmp_ln731_fu_440_p2, select_ln731_fu_504_p3, select_ln731_1_fu_570_p3, select_ln731_2_fu_636_p3, select_ln731_3_fu_702_p3, select_ln731_4_fu_768_p3, select_ln731_5_fu_834_p3, select_ln731_6_fu_900_p3, select_ln731_7_fu_966_p3, select_ln731_8_fu_1032_p3, select_ln731_9_fu_1098_p3, select_ln731_10_fu_1164_p3)
    begin
                ap_condition_317 <= ((select_ln731_10_fu_1164_p3 = ap_const_lv1_1) and (select_ln731_9_fu_1098_p3 = ap_const_lv1_0) and (select_ln731_8_fu_1032_p3 = ap_const_lv1_0) and (select_ln731_7_fu_966_p3 = ap_const_lv1_0) and (select_ln731_6_fu_900_p3 = ap_const_lv1_0) and (select_ln731_5_fu_834_p3 = ap_const_lv1_0) and (select_ln731_4_fu_768_p3 = ap_const_lv1_0) and (select_ln731_3_fu_702_p3 = ap_const_lv1_0) and (select_ln731_2_fu_636_p3 = ap_const_lv1_0) and (select_ln731_1_fu_570_p3 = ap_const_lv1_0) and (select_ln731_fu_504_p3 = ap_const_lv1_0) and (icmp_ln731_fu_440_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_402_p2 = ap_const_lv1_0));
    end process;


    ap_condition_320_assign_proc : process(icmp_ln1497_fu_402_p2, icmp_ln731_fu_440_p2, select_ln731_fu_504_p3, select_ln731_1_fu_570_p3, select_ln731_2_fu_636_p3, select_ln731_3_fu_702_p3, select_ln731_4_fu_768_p3, select_ln731_5_fu_834_p3, select_ln731_6_fu_900_p3, select_ln731_7_fu_966_p3, select_ln731_8_fu_1032_p3, select_ln731_9_fu_1098_p3, select_ln731_10_fu_1164_p3, select_ln731_11_fu_1230_p3)
    begin
                ap_condition_320 <= ((select_ln731_11_fu_1230_p3 = ap_const_lv1_1) and (select_ln731_10_fu_1164_p3 = ap_const_lv1_0) and (select_ln731_9_fu_1098_p3 = ap_const_lv1_0) and (select_ln731_8_fu_1032_p3 = ap_const_lv1_0) and (select_ln731_7_fu_966_p3 = ap_const_lv1_0) and (select_ln731_6_fu_900_p3 = ap_const_lv1_0) and (select_ln731_5_fu_834_p3 = ap_const_lv1_0) and (select_ln731_4_fu_768_p3 = ap_const_lv1_0) and (select_ln731_3_fu_702_p3 = ap_const_lv1_0) and (select_ln731_2_fu_636_p3 = ap_const_lv1_0) and (select_ln731_1_fu_570_p3 = ap_const_lv1_0) and (select_ln731_fu_504_p3 = ap_const_lv1_0) and (icmp_ln731_fu_440_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_402_p2 = ap_const_lv1_0));
    end process;


    ap_condition_323_assign_proc : process(icmp_ln1497_fu_402_p2, icmp_ln731_fu_440_p2, select_ln731_fu_504_p3, select_ln731_1_fu_570_p3, select_ln731_2_fu_636_p3, select_ln731_3_fu_702_p3, select_ln731_4_fu_768_p3, select_ln731_5_fu_834_p3, select_ln731_6_fu_900_p3, select_ln731_7_fu_966_p3, select_ln731_8_fu_1032_p3, select_ln731_9_fu_1098_p3, select_ln731_10_fu_1164_p3, select_ln731_11_fu_1230_p3, select_ln731_12_fu_1286_p3)
    begin
                ap_condition_323 <= ((select_ln731_12_fu_1286_p3 = ap_const_lv1_1) and (select_ln731_11_fu_1230_p3 = ap_const_lv1_0) and (select_ln731_10_fu_1164_p3 = ap_const_lv1_0) and (select_ln731_9_fu_1098_p3 = ap_const_lv1_0) and (select_ln731_8_fu_1032_p3 = ap_const_lv1_0) and (select_ln731_7_fu_966_p3 = ap_const_lv1_0) and (select_ln731_6_fu_900_p3 = ap_const_lv1_0) and (select_ln731_5_fu_834_p3 = ap_const_lv1_0) and (select_ln731_4_fu_768_p3 = ap_const_lv1_0) and (select_ln731_3_fu_702_p3 = ap_const_lv1_0) and (select_ln731_2_fu_636_p3 = ap_const_lv1_0) and (select_ln731_1_fu_570_p3 = ap_const_lv1_0) and (select_ln731_fu_504_p3 = ap_const_lv1_0) and (icmp_ln731_fu_440_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_402_p2 = ap_const_lv1_0));
    end process;


    ap_condition_326_assign_proc : process(icmp_ln1497_fu_402_p2, icmp_ln731_fu_440_p2, select_ln731_fu_504_p3, select_ln731_1_fu_570_p3, select_ln731_2_fu_636_p3, select_ln731_3_fu_702_p3, select_ln731_4_fu_768_p3, select_ln731_5_fu_834_p3, select_ln731_6_fu_900_p3, select_ln731_7_fu_966_p3, select_ln731_8_fu_1032_p3, select_ln731_9_fu_1098_p3, select_ln731_10_fu_1164_p3, select_ln731_11_fu_1230_p3, select_ln731_12_fu_1286_p3, and_ln731_fu_1320_p2)
    begin
                ap_condition_326 <= ((ap_const_lv1_1 = and_ln731_fu_1320_p2) and (select_ln731_12_fu_1286_p3 = ap_const_lv1_0) and (select_ln731_11_fu_1230_p3 = ap_const_lv1_0) and (select_ln731_10_fu_1164_p3 = ap_const_lv1_0) and (select_ln731_9_fu_1098_p3 = ap_const_lv1_0) and (select_ln731_8_fu_1032_p3 = ap_const_lv1_0) and (select_ln731_7_fu_966_p3 = ap_const_lv1_0) and (select_ln731_6_fu_900_p3 = ap_const_lv1_0) and (select_ln731_5_fu_834_p3 = ap_const_lv1_0) and (select_ln731_4_fu_768_p3 = ap_const_lv1_0) and (select_ln731_3_fu_702_p3 = ap_const_lv1_0) and (select_ln731_2_fu_636_p3 = ap_const_lv1_0) and (select_ln731_1_fu_570_p3 = ap_const_lv1_0) and (select_ln731_fu_504_p3 = ap_const_lv1_0) and (icmp_ln731_fu_440_p2 = ap_const_lv1_0) and (icmp_ln1497_fu_402_p2 = ap_const_lv1_0));
    end process;


    ap_condition_78_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_78 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to9_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to9 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_index0_V_phi_fu_318_p4_assign_proc : process(icmp_ln1497_reg_1700, ap_phi_reg_pp0_iter1_b_frac_010_reg_277, ap_phi_reg_pp0_iter1_index0_V_reg_315, p_Result_s_fu_1350_p3)
    begin
        if ((icmp_ln1497_reg_1700 = ap_const_lv1_0)) then
            if ((p_Result_s_fu_1350_p3 = ap_const_lv1_0)) then 
                ap_phi_mux_index0_V_phi_fu_318_p4 <= ap_phi_reg_pp0_iter1_b_frac_010_reg_277(20 downto 15);
            elsif ((p_Result_s_fu_1350_p3 = ap_const_lv1_1)) then 
                ap_phi_mux_index0_V_phi_fu_318_p4 <= ap_phi_reg_pp0_iter1_b_frac_010_reg_277(21 downto 16);
            else 
                ap_phi_mux_index0_V_phi_fu_318_p4 <= ap_phi_reg_pp0_iter1_index0_V_reg_315;
            end if;
        else 
            ap_phi_mux_index0_V_phi_fu_318_p4 <= ap_phi_reg_pp0_iter1_index0_V_reg_315;
        end if; 
    end process;


    ap_phi_mux_r_V_5_phi_fu_395_p4_assign_proc : process(icmp_ln1497_reg_1700_pp0_iter9_reg, ap_phi_reg_pp0_iter10_r_V_5_reg_391, log_base_V_fu_1663_p2)
    begin
        if ((icmp_ln1497_reg_1700_pp0_iter9_reg = ap_const_lv1_0)) then 
            ap_phi_mux_r_V_5_phi_fu_395_p4 <= log_base_V_fu_1663_p2(24 downto 9);
        else 
            ap_phi_mux_r_V_5_phi_fu_395_p4 <= ap_phi_reg_pp0_iter10_r_V_5_reg_391;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_b_exp_012_reg_324 <= "XXXXX";
    ap_phi_reg_pp0_iter0_b_frac_010_reg_277 <= "XXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_r_V_5_reg_391 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_index0_V_reg_315 <= "XXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to9)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to9 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_phi_mux_r_V_5_phi_fu_395_p4;
    grp_fu_1680_p0 <= grp_fu_1680_p00(23 - 1 downto 0);
    grp_fu_1680_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_frac_010_reg_277),24));
    grp_fu_1680_p1 <= grp_fu_1680_p10(6 - 1 downto 0);
    grp_fu_1680_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(log_apfixed_reduce_log_inverse_lut_table_array_V_q0),24));
    grp_fu_1691_p0 <= grp_fu_1691_p00(24 - 1 downto 0);
    grp_fu_1691_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z1_V_fu_1397_p2),28));
    grp_fu_1691_p1 <= grp_fu_1691_p10(4 - 1 downto 0);
    grp_fu_1691_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_fu_1406_p4),28));
    icmp_ln1497_fu_402_p2 <= "1" when (signed(x) < signed(ap_const_lv16_1)) else "0";
    icmp_ln731_10_fu_1078_p2 <= "1" when (and_ln731_s_fu_1070_p3 = ap_const_lv22_300000) else "0";
    icmp_ln731_11_fu_1144_p2 <= "1" when (and_ln731_10_fu_1136_p3 = ap_const_lv22_300000) else "0";
    icmp_ln731_12_fu_1210_p2 <= "1" when (and_ln731_11_fu_1202_p3 = ap_const_lv22_300000) else "0";
    icmp_ln731_13_fu_1266_p2 <= "1" when (trunc_ln1298_s_fu_1250_p3 = ap_const_lv22_300000) else "0";
    icmp_ln731_1_fu_484_p2 <= "1" when (and_ln731_1_fu_476_p3 = ap_const_lv22_300000) else "0";
    icmp_ln731_2_fu_550_p2 <= "1" when (and_ln731_2_fu_542_p3 = ap_const_lv22_300000) else "0";
    icmp_ln731_3_fu_616_p2 <= "1" when (and_ln731_3_fu_608_p3 = ap_const_lv22_300000) else "0";
    icmp_ln731_4_fu_682_p2 <= "1" when (and_ln731_4_fu_674_p3 = ap_const_lv22_300000) else "0";
    icmp_ln731_5_fu_748_p2 <= "1" when (and_ln731_5_fu_740_p3 = ap_const_lv22_300000) else "0";
    icmp_ln731_6_fu_814_p2 <= "1" when (and_ln731_6_fu_806_p3 = ap_const_lv22_300000) else "0";
    icmp_ln731_7_fu_880_p2 <= "1" when (and_ln731_7_fu_872_p3 = ap_const_lv22_300000) else "0";
    icmp_ln731_8_fu_946_p2 <= "1" when (and_ln731_8_fu_938_p3 = ap_const_lv22_300000) else "0";
    icmp_ln731_9_fu_1012_p2 <= "1" when (and_ln731_9_fu_1004_p3 = ap_const_lv22_300000) else "0";
    icmp_ln731_fu_440_p2 <= "1" when (and_ln_fu_432_p3 = ap_const_lv22_300000) else "0";
    lhs_V_fu_1539_p3 <= (tmp_41_reg_1894 & ap_const_lv10_0);
    lhs_fu_1455_p3 <= (trunc_ln703_fu_1415_p1 & ap_const_lv9_0);
    log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_address0 <= zext_ln756_fu_1380_p1(6 - 1 downto 0);

    log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_ce0 <= ap_const_logic_1;
        else 
            log_apfixed_reduce_log0_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_0_5_64_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    log_apfixed_reduce_log_inverse_lut_table_array_V_address0 <= zext_ln756_fu_1380_p1(6 - 1 downto 0);

    log_apfixed_reduce_log_inverse_lut_table_array_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            log_apfixed_reduce_log_inverse_lut_table_array_V_ce0 <= ap_const_logic_1;
        else 
            log_apfixed_reduce_log_inverse_lut_table_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_address0 <= zext_ln186_fu_1477_p1(4 - 1 downto 0);

    log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0 <= ap_const_logic_1;
        else 
            log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    log_base_V_2_fu_1630_p2 <= std_logic_vector(unsigned(add_ln703_2_fu_1618_p2) + unsigned(sext_ln703_1_fu_1594_p1));
    log_base_V_fu_1663_p2 <= std_logic_vector(unsigned(add_ln778_fu_1647_p2) + unsigned(sext_ln703_4_fu_1659_p1));
    p_Result_5_fu_412_p4 <= ((ap_const_lv1_0 & trunc_ln640_fu_408_p1) & ap_const_lv7_0);
    p_Result_s_fu_1350_p3 <= ap_phi_reg_pp0_iter1_b_frac_010_reg_277(22 downto 22);
    r_V_21_fu_446_p3 <= (trunc_ln640_fu_408_p1 & ap_const_lv8_0);
    r_V_23_fu_1523_p0 <= zext_ln1115_fu_1519_p1(9 - 1 downto 0);
    r_V_23_fu_1523_p1 <= zext_ln1115_fu_1519_p1(9 - 1 downto 0);
    r_V_24_fu_512_p3 <= (trunc_ln1298_fu_454_p1 & ap_const_lv9_0);
    r_V_25_fu_578_p3 <= (trunc_ln1298_1_fu_520_p1 & ap_const_lv10_0);
    r_V_26_fu_644_p3 <= (trunc_ln1298_2_fu_586_p1 & ap_const_lv11_0);
    r_V_27_fu_710_p3 <= (trunc_ln1298_3_fu_652_p1 & ap_const_lv12_0);
    r_V_28_fu_776_p3 <= (trunc_ln1298_4_fu_718_p1 & ap_const_lv13_0);
    r_V_29_fu_842_p3 <= (trunc_ln1298_5_fu_784_p1 & ap_const_lv14_0);
    r_V_30_fu_908_p3 <= (trunc_ln1298_6_fu_850_p1 & ap_const_lv15_0);
    r_V_31_fu_974_p3 <= (trunc_ln1298_7_fu_916_p1 & ap_const_lv16_0);
    r_V_32_fu_1040_p3 <= (trunc_ln1298_8_fu_982_p1 & ap_const_lv17_0);
    r_V_33_fu_1106_p3 <= (trunc_ln1298_9_fu_1048_p1 & ap_const_lv18_0);
    r_V_34_fu_1172_p3 <= (trunc_ln1298_10_fu_1114_p1 & ap_const_lv19_0);
    r_V_35_fu_1238_p3 <= (trunc_ln1298_12_fu_1180_p1 & ap_const_lv20_0);
    r_V_36_fu_1294_p3 <= (trunc_ln1298_13_fu_1246_p1 & ap_const_lv21_0);
    r_V_37_fu_1326_p3 <= (trunc_ln1298_14_fu_1302_p1 & ap_const_lv22_0);
    r_V_fu_1495_p1 <= ap_const_lv28_2C5C85(23 - 1 downto 0);
    ret_V_2_fu_1553_p2 <= std_logic_vector(unsigned(zext_ln1193_1_fu_1546_p1) - unsigned(zext_ln1193_2_fu_1550_p1));
    ret_V_3_fu_1467_p2 <= std_logic_vector(unsigned(zext_ln1192_fu_1463_p1) + unsigned(select_ln1333_fu_1447_p3));
    select_ln1333_fu_1447_p3 <= 
        tmp_39_fu_1433_p4 when (tmp_40_fu_1418_p3(0) = '1') else 
        zext_ln1333_fu_1443_p1;
    select_ln731_10_fu_1164_p3 <= 
        xor_ln731_10_fu_1158_p2 when (tmp_30_fu_1118_p3(0) = '1') else 
        icmp_ln731_11_fu_1144_p2;
    select_ln731_11_fu_1230_p3 <= 
        xor_ln731_11_fu_1224_p2 when (tmp_33_fu_1184_p3(0) = '1') else 
        icmp_ln731_12_fu_1210_p2;
    select_ln731_12_fu_1286_p3 <= 
        xor_ln731_12_fu_1280_p2 when (tmp_36_fu_1258_p3(0) = '1') else 
        icmp_ln731_13_fu_1266_p2;
    select_ln731_13_fu_1334_p3 <= 
        ap_const_lv5_13 when (trunc_ln1298_14_fu_1302_p1(0) = '1') else 
        ap_const_lv5_12;
    select_ln731_14_fu_1342_p3 <= 
        r_V_37_fu_1326_p3 when (trunc_ln1298_14_fu_1302_p1(0) = '1') else 
        ap_const_lv23_0;
    select_ln731_1_fu_570_p3 <= 
        xor_ln731_1_fu_564_p2 when (tmp_4_fu_524_p3(0) = '1') else 
        icmp_ln731_2_fu_550_p2;
    select_ln731_2_fu_636_p3 <= 
        xor_ln731_2_fu_630_p2 when (tmp_7_fu_590_p3(0) = '1') else 
        icmp_ln731_3_fu_616_p2;
    select_ln731_3_fu_702_p3 <= 
        xor_ln731_3_fu_696_p2 when (tmp_10_fu_656_p3(0) = '1') else 
        icmp_ln731_4_fu_682_p2;
    select_ln731_4_fu_768_p3 <= 
        xor_ln731_4_fu_762_p2 when (tmp_12_fu_722_p3(0) = '1') else 
        icmp_ln731_5_fu_748_p2;
    select_ln731_5_fu_834_p3 <= 
        xor_ln731_5_fu_828_p2 when (tmp_15_fu_788_p3(0) = '1') else 
        icmp_ln731_6_fu_814_p2;
    select_ln731_6_fu_900_p3 <= 
        xor_ln731_6_fu_894_p2 when (tmp_18_fu_854_p3(0) = '1') else 
        icmp_ln731_7_fu_880_p2;
    select_ln731_7_fu_966_p3 <= 
        xor_ln731_7_fu_960_p2 when (tmp_21_fu_920_p3(0) = '1') else 
        icmp_ln731_8_fu_946_p2;
    select_ln731_8_fu_1032_p3 <= 
        xor_ln731_8_fu_1026_p2 when (tmp_24_fu_986_p3(0) = '1') else 
        icmp_ln731_9_fu_1012_p2;
    select_ln731_9_fu_1098_p3 <= 
        xor_ln731_9_fu_1092_p2 when (tmp_27_fu_1052_p3(0) = '1') else 
        icmp_ln731_10_fu_1078_p2;
    select_ln731_fu_504_p3 <= 
        xor_ln731_fu_498_p2 when (tmp_1_fu_458_p3(0) = '1') else 
        icmp_ln731_1_fu_484_p2;
        sext_ln703_1_fu_1594_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_reg_1882_pp0_iter8_reg),29));

        sext_ln703_2_fu_1597_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2_fu_1559_p4),25));

        sext_ln703_3_fu_1644_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_reg_1882_pp0_iter9_reg),25));

        sext_ln703_4_fu_1659_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1_fu_1652_p3),25));

        sext_ln703_fu_1590_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_1582_p3),29));

        sext_ln708_fu_1569_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2_fu_1559_p4),29));

    sf_fu_1425_p3 <= (ap_const_lv5_10 & trunc_ln708_fu_1394_p1);
    shl_ln1_fu_1652_p3 <= (p_Result_6_reg_1909 & ap_const_lv9_100);
    shl_ln_fu_1582_p3 <= (tmp_43_fu_1573_p4 & ap_const_lv6_0);
    tmp_10_fu_656_p3 <= x(11 downto 11);
    tmp_11_fu_688_p3 <= x(10 downto 10);
    tmp_12_fu_722_p3 <= x(10 downto 10);
    tmp_13_fu_730_p4 <= x(9 downto 8);
    tmp_14_fu_754_p3 <= x(9 downto 9);
    tmp_15_fu_788_p3 <= x(9 downto 9);
    tmp_16_fu_796_p4 <= x(8 downto 7);
    tmp_17_fu_820_p3 <= x(8 downto 8);
    tmp_18_fu_854_p3 <= x(8 downto 8);
    tmp_19_fu_862_p4 <= x(7 downto 6);
    tmp_1_fu_458_p3 <= x(14 downto 14);
    tmp_20_fu_886_p3 <= x(7 downto 7);
    tmp_21_fu_920_p3 <= x(7 downto 7);
    tmp_22_fu_928_p4 <= x(6 downto 5);
    tmp_23_fu_952_p3 <= x(6 downto 6);
    tmp_24_fu_986_p3 <= x(6 downto 6);
    tmp_25_fu_994_p4 <= x(5 downto 4);
    tmp_26_fu_1018_p3 <= x(5 downto 5);
    tmp_27_fu_1052_p3 <= x(5 downto 5);
    tmp_28_fu_1060_p4 <= x(4 downto 3);
    tmp_29_fu_1084_p3 <= x(4 downto 4);
    tmp_2_fu_466_p4 <= x(13 downto 12);
    tmp_30_fu_1118_p3 <= x(4 downto 4);
    tmp_31_fu_1126_p4 <= x(3 downto 2);
    tmp_32_fu_1150_p3 <= x(3 downto 3);
    tmp_33_fu_1184_p3 <= x(3 downto 3);
    tmp_34_fu_1192_p4 <= x(2 downto 1);
    tmp_35_fu_1216_p3 <= x(2 downto 2);
    tmp_36_fu_1258_p3 <= x(2 downto 2);
    tmp_37_fu_1272_p3 <= x(1 downto 1);
    tmp_38_fu_1312_p3 <= x(1 downto 1);
    tmp_39_fu_1433_p4 <= ((ap_const_lv5_10 & trunc_ln708_fu_1394_p1) & ap_const_lv1_0);
    tmp_3_fu_490_p3 <= x(13 downto 13);
    tmp_40_fu_1418_p3 <= grp_fu_1680_p2(22 downto 22);
    tmp_42_fu_1510_p4 <= grp_fu_1691_p3(28 downto 20);
    tmp_43_fu_1573_p4 <= r_V_reg_1888(27 downto 6);
    tmp_44_fu_1601_p4 <= r_V_reg_1888(24 downto 6);
    tmp_4_fu_524_p3 <= x(13 downto 13);
    tmp_5_fu_532_p4 <= x(12 downto 11);
    tmp_6_fu_556_p3 <= x(12 downto 12);
    tmp_7_fu_590_p3 <= x(12 downto 12);
    tmp_8_fu_598_p4 <= x(11 downto 10);
    tmp_9_fu_622_p3 <= x(11 downto 11);
    tmp_fu_422_p4 <= x(14 downto 13);
    tmp_s_fu_664_p4 <= x(10 downto 9);
    trunc_ln1298_10_fu_1114_p1 <= x(4 - 1 downto 0);
    trunc_ln1298_12_fu_1180_p1 <= x(3 - 1 downto 0);
    trunc_ln1298_13_fu_1246_p1 <= x(2 - 1 downto 0);
    trunc_ln1298_14_fu_1302_p1 <= x(1 - 1 downto 0);
    trunc_ln1298_1_fu_520_p1 <= x(13 - 1 downto 0);
    trunc_ln1298_2_fu_586_p1 <= x(12 - 1 downto 0);
    trunc_ln1298_3_fu_652_p1 <= x(11 - 1 downto 0);
    trunc_ln1298_4_fu_718_p1 <= x(10 - 1 downto 0);
    trunc_ln1298_5_fu_784_p1 <= x(9 - 1 downto 0);
    trunc_ln1298_6_fu_850_p1 <= x(8 - 1 downto 0);
    trunc_ln1298_7_fu_916_p1 <= x(7 - 1 downto 0);
    trunc_ln1298_8_fu_982_p1 <= x(6 - 1 downto 0);
    trunc_ln1298_9_fu_1048_p1 <= x(5 - 1 downto 0);
    trunc_ln1298_fu_454_p1 <= x(14 - 1 downto 0);
    trunc_ln1298_s_fu_1250_p3 <= (trunc_ln1298_13_fu_1246_p1 & ap_const_lv20_0);
    trunc_ln640_fu_408_p1 <= x(15 - 1 downto 0);
    trunc_ln703_fu_1415_p1 <= grp_fu_1680_p2(19 - 1 downto 0);
    trunc_ln708_2_fu_1559_p4 <= ret_V_2_fu_1553_p2(25 downto 10);
    trunc_ln708_fu_1394_p1 <= grp_fu_1680_p2(23 - 1 downto 0);
    trunc_ln_fu_1610_p3 <= (tmp_44_fu_1601_p4 & ap_const_lv6_0);
    xor_ln731_10_fu_1158_p2 <= (tmp_32_fu_1150_p3 xor ap_const_lv1_1);
    xor_ln731_11_fu_1224_p2 <= (tmp_35_fu_1216_p3 xor ap_const_lv1_1);
    xor_ln731_12_fu_1280_p2 <= (tmp_37_fu_1272_p3 xor ap_const_lv1_1);
    xor_ln731_13_fu_1306_p2 <= (trunc_ln1298_14_fu_1302_p1 xor ap_const_lv1_1);
    xor_ln731_1_fu_564_p2 <= (tmp_6_fu_556_p3 xor ap_const_lv1_1);
    xor_ln731_2_fu_630_p2 <= (tmp_9_fu_622_p3 xor ap_const_lv1_1);
    xor_ln731_3_fu_696_p2 <= (tmp_11_fu_688_p3 xor ap_const_lv1_1);
    xor_ln731_4_fu_762_p2 <= (tmp_14_fu_754_p3 xor ap_const_lv1_1);
    xor_ln731_5_fu_828_p2 <= (tmp_17_fu_820_p3 xor ap_const_lv1_1);
    xor_ln731_6_fu_894_p2 <= (tmp_20_fu_886_p3 xor ap_const_lv1_1);
    xor_ln731_7_fu_960_p2 <= (tmp_23_fu_952_p3 xor ap_const_lv1_1);
    xor_ln731_8_fu_1026_p2 <= (tmp_26_fu_1018_p3 xor ap_const_lv1_1);
    xor_ln731_9_fu_1092_p2 <= (tmp_29_fu_1084_p3 xor ap_const_lv1_1);
    xor_ln731_fu_498_p2 <= (tmp_3_fu_490_p3 xor ap_const_lv1_1);
    z1_V_fu_1397_p2 <= std_logic_vector(shift_left(unsigned(grp_fu_1680_p2),to_integer(unsigned('0' & ap_const_lv24_1(24-1 downto 0)))));
    zext_ln1115_fu_1519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_fu_1510_p4),18));
    zext_ln1192_fu_1463_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_fu_1455_p3),29));
    zext_ln1193_1_fu_1546_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_fu_1539_p3),26));
    zext_ln1193_2_fu_1550_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_s_reg_1899),26));
    zext_ln1333_fu_1443_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sf_fu_1425_p3),29));
    zext_ln186_fu_1477_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_fu_1406_p4),32));
    zext_ln251_fu_1482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(log_apfixed_reduce_log_lut_table_ap_fixed_29_7_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_q0),22));
    zext_ln756_fu_1380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_index0_V_phi_fu_318_p4),32));
end behav;
