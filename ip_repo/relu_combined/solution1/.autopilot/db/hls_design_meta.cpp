#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("x_Addr_A", 32, hls_out, 0, "bram", "MemPortADDR2", 1),
	Port_Property("x_EN_A", 1, hls_out, 0, "bram", "MemPortCE2", 1),
	Port_Property("x_WEN_A", 4, hls_out, 0, "bram", "MemPortWE2", 1),
	Port_Property("x_Din_A", 32, hls_out, 0, "bram", "MemPortDIN2", 1),
	Port_Property("x_Dout_A", 32, hls_in, 0, "bram", "MemPortDOUT2", 1),
	Port_Property("x_Clk_A", 1, hls_out, 0, "bram", "mem_clk", 1),
	Port_Property("x_Rst_A", 1, hls_out, 0, "bram", "mem_rst", 1),
	Port_Property("dx_Addr_A", 32, hls_out, 1, "bram", "MemPortADDR2", 1),
	Port_Property("dx_EN_A", 1, hls_out, 1, "bram", "MemPortCE2", 1),
	Port_Property("dx_WEN_A", 4, hls_out, 1, "bram", "MemPortWE2", 1),
	Port_Property("dx_Din_A", 32, hls_out, 1, "bram", "MemPortDIN2", 1),
	Port_Property("dx_Dout_A", 32, hls_in, 1, "bram", "MemPortDOUT2", 1),
	Port_Property("dx_Clk_A", 1, hls_out, 1, "bram", "mem_clk", 1),
	Port_Property("dx_Rst_A", 1, hls_out, 1, "bram", "mem_rst", 1),
	Port_Property("y_Addr_A", 32, hls_out, 2, "bram", "MemPortADDR2", 1),
	Port_Property("y_EN_A", 1, hls_out, 2, "bram", "MemPortCE2", 1),
	Port_Property("y_WEN_A", 4, hls_out, 2, "bram", "MemPortWE2", 1),
	Port_Property("y_Din_A", 32, hls_out, 2, "bram", "MemPortDIN2", 1),
	Port_Property("y_Dout_A", 32, hls_in, 2, "bram", "MemPortDOUT2", 1),
	Port_Property("y_Clk_A", 1, hls_out, 2, "bram", "mem_clk", 1),
	Port_Property("y_Rst_A", 1, hls_out, 2, "bram", "mem_rst", 1),
	Port_Property("dy_Addr_A", 32, hls_out, 3, "bram", "MemPortADDR2", 1),
	Port_Property("dy_EN_A", 1, hls_out, 3, "bram", "MemPortCE2", 1),
	Port_Property("dy_WEN_A", 4, hls_out, 3, "bram", "MemPortWE2", 1),
	Port_Property("dy_Din_A", 32, hls_out, 3, "bram", "MemPortDIN2", 1),
	Port_Property("dy_Dout_A", 32, hls_in, 3, "bram", "MemPortDOUT2", 1),
	Port_Property("dy_Clk_A", 1, hls_out, 3, "bram", "mem_clk", 1),
	Port_Property("dy_Rst_A", 1, hls_out, 3, "bram", "mem_rst", 1),
	Port_Property("s_axi_CTRL_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_AWADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "relu_combined";
