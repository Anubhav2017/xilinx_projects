
*** Running vivado
    with args -log design_1_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace


****** Vivado v2020.2 (64-bit)
  **** SW Build 3064766 on Wed Nov 18 09:12:47 MST 2020
  **** IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source design_1_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/anubhav/xilinx_projects/ip_repo_promethean'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/Xilinx/Vivado/2020.2/data/ip'.
Command: link_design -top design_1_wrapper -part xc7z020clg400-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xc7z020clg400-1
INFO: [Project 1-454] Reading design checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_conv_combined_0_0/design_1_conv_combined_0_0.dcp' for cell 'design_1_i/conv_combined_0'
INFO: [Project 1-454] Reading design checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_fcc_combined_0_0/design_1_fcc_combined_0_0.dcp' for cell 'design_1_i/fcc_combined_0'
INFO: [Project 1-454] Reading design checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_loss_derivative_0_0/design_1_loss_derivative_0_0.dcp' for cell 'design_1_i/loss_derivative_0'
INFO: [Project 1-454] Reading design checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.dcp' for cell 'design_1_i/processing_system7_0'
INFO: [Project 1-454] Reading design checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_relu_combined_0_0/design_1_relu_combined_0_0.dcp' for cell 'design_1_i/relu_combined_0'
INFO: [Project 1-454] Reading design checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0.dcp' for cell 'design_1_i/rst_ps7_0_100M'
INFO: [Project 1-454] Reading design checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_update_weights_0_0/design_1_update_weights_0_0.dcp' for cell 'design_1_i/update_weights_0'
INFO: [Project 1-454] Reading design checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_xbar_0/design_1_xbar_0.dcp' for cell 'design_1_i/axi_mem_intercon/xbar'
INFO: [Project 1-454] Reading design checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_pc_1/design_1_auto_pc_1.dcp' for cell 'design_1_i/axi_mem_intercon/m00_couplers/auto_pc'
INFO: [Project 1-454] Reading design checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0.dcp' for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_us'
INFO: [Project 1-454] Reading design checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_us_1/design_1_auto_us_1.dcp' for cell 'design_1_i/axi_mem_intercon/s01_couplers/auto_us'
INFO: [Project 1-454] Reading design checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_us_2/design_1_auto_us_2.dcp' for cell 'design_1_i/axi_mem_intercon/s02_couplers/auto_us'
INFO: [Project 1-454] Reading design checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_us_3/design_1_auto_us_3.dcp' for cell 'design_1_i/axi_mem_intercon/s03_couplers/auto_us'
INFO: [Project 1-454] Reading design checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_us_4/design_1_auto_us_4.dcp' for cell 'design_1_i/axi_mem_intercon/s04_couplers/auto_us'
INFO: [Project 1-454] Reading design checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_us_5/design_1_auto_us_5.dcp' for cell 'design_1_i/axi_mem_intercon/s05_couplers/auto_us'
INFO: [Project 1-454] Reading design checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_xbar_1/design_1_xbar_1.dcp' for cell 'design_1_i/ps7_0_axi_periph/xbar'
INFO: [Project 1-454] Reading design checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_pc_0/design_1_auto_pc_0.dcp' for cell 'design_1_i/ps7_0_axi_periph/s00_couplers/auto_pc'
Netlist sorting complete. Time (s): cpu = 00:00:00.36 ; elapsed = 00:00:00.36 . Memory (MB): peak = 2357.969 ; gain = 0.000 ; free physical = 14216 ; free virtual = 24624
INFO: [Netlist 29-17] Analyzing 2889 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.2
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Parsing XDC File [/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0_board.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0_board.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Parsing XDC File [/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Parsing XDC File [/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_us/inst'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_us/inst'
Parsing XDC File [/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_us_1/design_1_auto_us_1_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s01_couplers/auto_us/inst'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_us_1/design_1_auto_us_1_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s01_couplers/auto_us/inst'
Parsing XDC File [/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_us_2/design_1_auto_us_2_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s02_couplers/auto_us/inst'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_us_2/design_1_auto_us_2_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s02_couplers/auto_us/inst'
Parsing XDC File [/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_us_3/design_1_auto_us_3_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s03_couplers/auto_us/inst'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_us_3/design_1_auto_us_3_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s03_couplers/auto_us/inst'
Parsing XDC File [/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_us_4/design_1_auto_us_4_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s04_couplers/auto_us/inst'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_us_4/design_1_auto_us_4_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s04_couplers/auto_us/inst'
Parsing XDC File [/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_us_5/design_1_auto_us_5_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s05_couplers/auto_us/inst'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean_2/promethean_2.gen/sources_1/bd/design_1/ip/design_1_auto_us_5/design_1_auto_us_5_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s05_couplers/auto_us/inst'
INFO: [Project 1-1715] 1 XPM XDC files have been applied to the design.
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2638.035 ; gain = 0.000 ; free physical = 14101 ; free virtual = 24499
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 100 instances were transformed.
  RAM16X1S => RAM32X1S (RAMS32): 64 instances
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 3 instances
  RAM32X1D => RAM32X1D (RAMD32(x2)): 1 instance 
  RAM32X1S => RAM32X1S (RAMS32): 32 instances

28 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:15 ; elapsed = 00:00:15 . Memory (MB): peak = 2638.035 ; gain = 280.137 ; free physical = 14101 ; free virtual = 24499
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.71 . Memory (MB): peak = 2638.035 ; gain = 0.000 ; free physical = 14093 ; free virtual = 24492

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 1171978df

Time (s): cpu = 00:00:08 ; elapsed = 00:00:06 . Memory (MB): peak = 2874.941 ; gain = 236.906 ; free physical = 13664 ; free virtual = 24059

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 2 inverter(s) to 5 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: dd7eb8b0

Time (s): cpu = 00:00:03 ; elapsed = 00:00:01 . Memory (MB): peak = 3055.848 ; gain = 0.000 ; free physical = 13559 ; free virtual = 23954
INFO: [Opt 31-389] Phase Retarget created 24 cells and removed 70 cells
INFO: [Opt 31-1021] In phase Retarget, 24 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 18 inverter(s) to 48 load pin(s).
Phase 2 Constant propagation | Checksum: ec7e5a9d

Time (s): cpu = 00:00:04 ; elapsed = 00:00:02 . Memory (MB): peak = 3055.848 ; gain = 0.000 ; free physical = 13559 ; free virtual = 23954
INFO: [Opt 31-389] Phase Constant propagation created 1431 cells and removed 3700 cells
INFO: [Opt 31-1021] In phase Constant propagation, 24 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 3 Sweep
Phase 3 Sweep | Checksum: f22685d4

Time (s): cpu = 00:00:05 ; elapsed = 00:00:03 . Memory (MB): peak = 3055.848 ; gain = 0.000 ; free physical = 13558 ; free virtual = 23954
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 382 cells
INFO: [Opt 31-1021] In phase Sweep, 96 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: f22685d4

Time (s): cpu = 00:00:06 ; elapsed = 00:00:04 . Memory (MB): peak = 3055.848 ; gain = 0.000 ; free physical = 13559 ; free virtual = 23954
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: f22685d4

Time (s): cpu = 00:00:06 ; elapsed = 00:00:04 . Memory (MB): peak = 3055.848 ; gain = 0.000 ; free physical = 13559 ; free virtual = 23954
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: f22685d4

Time (s): cpu = 00:00:06 ; elapsed = 00:00:04 . Memory (MB): peak = 3055.848 ; gain = 0.000 ; free physical = 13559 ; free virtual = 23954
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Post Processing Netlist, 33 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |              24  |              70  |                                             24  |
|  Constant propagation         |            1431  |            3700  |                                             24  |
|  Sweep                        |               0  |             382  |                                             96  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                             33  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00.06 ; elapsed = 00:00:00.06 . Memory (MB): peak = 3055.848 ; gain = 0.000 ; free physical = 13558 ; free virtual = 23953
Ending Logic Optimization Task | Checksum: 149d91c79

Time (s): cpu = 00:00:07 ; elapsed = 00:00:05 . Memory (MB): peak = 3055.848 ; gain = 0.000 ; free physical = 13558 ; free virtual = 23953

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 51 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 8 WE to EN ports
Number of BRAM Ports augmented: 17 newly gated: 17 Total Ports: 102
Number of Flops added for Enable Generation: 4

Ending PowerOpt Patch Enables Task | Checksum: 116fbb84f

Time (s): cpu = 00:00:00.23 ; elapsed = 00:00:00.24 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13478 ; free virtual = 23873
Ending Power Optimization Task | Checksum: 116fbb84f

Time (s): cpu = 00:00:15 ; elapsed = 00:00:06 . Memory (MB): peak = 3600.043 ; gain = 544.195 ; free physical = 13522 ; free virtual = 23917

Starting Final Cleanup Task

Starting Logic Optimization Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Logic Optimization Task | Checksum: a5282b2c

Time (s): cpu = 00:00:06 ; elapsed = 00:00:03 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13529 ; free virtual = 23924
Ending Final Cleanup Task | Checksum: a5282b2c

Time (s): cpu = 00:00:08 ; elapsed = 00:00:04 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13528 ; free virtual = 23924

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13528 ; free virtual = 23924
Ending Netlist Obfuscation Task | Checksum: a5282b2c

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13528 ; free virtual = 23924
INFO: [Common 17-83] Releasing license: Implementation
55 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:41 ; elapsed = 00:00:23 . Memory (MB): peak = 3600.043 ; gain = 962.008 ; free physical = 13528 ; free virtual = 23924
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00.06 ; elapsed = 00:00:00.02 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13524 ; free virtual = 23921
INFO: [Common 17-1381] The checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.runs/impl_1/design_1_wrapper_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:08 ; elapsed = 00:00:06 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13519 ; free virtual = 23924
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/anubhav/xilinx_projects/promethean_2/promethean_2.runs/impl_1/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 8 threads
WARNING: [DRC CHECK-3] Report rule limit reached: REQP-1840 rule limit reached: 20 violations have been found.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[4] (net: design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[0]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[5] (net: design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[6] (net: design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[7] (net: design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[4] (net: design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/rnext[0]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[5] (net: design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[6] (net: design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[7] (net: design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors, 21 Warnings
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 8 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13377 ; free virtual = 23783
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 4908c80f

Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.04 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13377 ; free virtual = 23783
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13377 ; free virtual = 23783

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: f6c59f5a

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13414 ; free virtual = 23820

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 132faf1d5

Time (s): cpu = 00:00:15 ; elapsed = 00:00:06 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13381 ; free virtual = 23787

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 132faf1d5

Time (s): cpu = 00:00:15 ; elapsed = 00:00:06 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13381 ; free virtual = 23787
Phase 1 Placer Initialization | Checksum: 132faf1d5

Time (s): cpu = 00:00:15 ; elapsed = 00:00:07 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13378 ; free virtual = 23783

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: 1a841096f

Time (s): cpu = 00:00:20 ; elapsed = 00:00:08 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13340 ; free virtual = 23746

Phase 2.2 Update Timing before SLR Path Opt
Phase 2.2 Update Timing before SLR Path Opt | Checksum: 14dec481c

Time (s): cpu = 00:00:23 ; elapsed = 00:00:09 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13338 ; free virtual = 23743

Phase 2.3 Global Placement Core

Phase 2.3.1 Physical Synthesis In Placer
INFO: [Physopt 32-1035] Found 40 LUTNM shape to break, 1685 LUT instances to create LUTNM shape
INFO: [Physopt 32-1044] Break lutnm for timing: one critical 25, two critical 15, total 40, new lutff created 2
INFO: [Physopt 32-775] End 1 Pass. Optimized 638 nets or cells. Created 40 new cells, deleted 598 existing cells and moved 0 existing cell
INFO: [Physopt 32-65] No nets found for high-fanout optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-456] No candidate cells for DSP register optimization found in the design.
INFO: [Physopt 32-775] End 2 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-1123] No candidate cells found for Shift Register to Pipeline optimization
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-677] No candidate cells for Shift Register optimization found in the design
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-526] No candidate cells for BRAM register optimization found in the design
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-846] No candidate cells for URAM register optimization found in the design
INFO: [Physopt 32-775] End 2 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-949] No candidate nets found for dynamic/static region interface net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13305 ; free virtual = 23711

Summary of Physical Synthesis Optimizations
============================================


-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                                     |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  LUT Combining                                    |           40  |            598  |                   638  |           0  |           1  |  00:00:01  |
|  Very High Fanout                                 |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  DSP Register                                     |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Shift Register to Pipeline                       |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Shift Register                                   |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  BRAM Register                                    |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  URAM Register                                    |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Dynamic/Static Region Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                                            |           40  |            598  |                   638  |           0  |           8  |  00:00:01  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------


Phase 2.3.1 Physical Synthesis In Placer | Checksum: 26561b1eb

Time (s): cpu = 00:01:13 ; elapsed = 00:00:25 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13304 ; free virtual = 23709
Phase 2.3 Global Placement Core | Checksum: 29ef40c4b

Time (s): cpu = 00:01:16 ; elapsed = 00:00:26 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13300 ; free virtual = 23705
Phase 2 Global Placement | Checksum: 29ef40c4b

Time (s): cpu = 00:01:16 ; elapsed = 00:00:26 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13310 ; free virtual = 23716

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 25dda9928

Time (s): cpu = 00:01:20 ; elapsed = 00:00:27 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13310 ; free virtual = 23716

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 1ff1d9b69

Time (s): cpu = 00:01:27 ; elapsed = 00:00:30 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13306 ; free virtual = 23712

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 1ae4e5609

Time (s): cpu = 00:01:28 ; elapsed = 00:00:30 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13306 ; free virtual = 23712

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 26ff0d1f8

Time (s): cpu = 00:01:28 ; elapsed = 00:00:30 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13306 ; free virtual = 23712

Phase 3.5 Fast Optimization
Phase 3.5 Fast Optimization | Checksum: 28e0b1ca8

Time (s): cpu = 00:01:35 ; elapsed = 00:00:32 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13298 ; free virtual = 23703

Phase 3.6 Small Shape Detail Placement
Phase 3.6 Small Shape Detail Placement | Checksum: 26779ad73

Time (s): cpu = 00:01:42 ; elapsed = 00:00:38 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13273 ; free virtual = 23678

Phase 3.7 Re-assign LUT pins
Phase 3.7 Re-assign LUT pins | Checksum: 1c66fb59a

Time (s): cpu = 00:01:43 ; elapsed = 00:00:40 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13277 ; free virtual = 23683

Phase 3.8 Pipeline Register Optimization
Phase 3.8 Pipeline Register Optimization | Checksum: 2aba71dde

Time (s): cpu = 00:01:44 ; elapsed = 00:00:40 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13277 ; free virtual = 23683

Phase 3.9 Fast Optimization
Phase 3.9 Fast Optimization | Checksum: 1f1880e2c

Time (s): cpu = 00:01:56 ; elapsed = 00:00:43 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13264 ; free virtual = 23670
Phase 3 Detail Placement | Checksum: 1f1880e2c

Time (s): cpu = 00:01:57 ; elapsed = 00:00:43 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13264 ; free virtual = 23670

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 1a275e396

Phase 4.1.1.1 BUFG Insertion

Starting Physical Synthesis Task

Phase 1 Physical Synthesis Initialization
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 8 CPUs
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-0.883 | TNS=-136.367 |
Phase 1 Physical Synthesis Initialization | Checksum: 17ff92ebb

Time (s): cpu = 00:00:03 ; elapsed = 00:00:00.58 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13251 ; free virtual = 23657
INFO: [Place 46-33] Processed net design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_read/buff_rdata/SR[0], BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_read/buff_rdata/SR[0], BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/loss_derivative_0/inst/gmem_m_axi_U/bus_read/buff_rdata/SR[0], BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-56] BUFG insertion identified 3 candidate nets. Inserted BUFG: 0, Replicated BUFG Driver: 0, Skipped due to Placement/Routing Conflicts: 3, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Ending Physical Synthesis Task | Checksum: 17c878dae

Time (s): cpu = 00:00:03 ; elapsed = 00:00:00.84 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13251 ; free virtual = 23657
Phase 4.1.1.1 BUFG Insertion | Checksum: 1a275e396

Time (s): cpu = 00:02:13 ; elapsed = 00:00:48 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13253 ; free virtual = 23658
INFO: [Place 30-746] Post Placement Timing Summary WNS=0.510. For the most accurate timing information please run report_timing.

Time (s): cpu = 00:02:18 ; elapsed = 00:00:52 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13251 ; free virtual = 23656
Phase 4.1 Post Commit Optimization | Checksum: 18cb8dd29

Time (s): cpu = 00:02:18 ; elapsed = 00:00:52 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13251 ; free virtual = 23656

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 18cb8dd29

Time (s): cpu = 00:02:18 ; elapsed = 00:00:52 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13252 ; free virtual = 23657

Phase 4.3 Placer Reporting

Phase 4.3.1 Print Estimated Congestion
INFO: [Place 30-612] Post-Placement Estimated Congestion 
 ____________________________________________________
|           | Global Congestion | Short Congestion  |
| Direction | Region Size       | Region Size       |
|___________|___________________|___________________|
|      North|                1x1|                4x4|
|___________|___________________|___________________|
|      South|                1x1|                4x4|
|___________|___________________|___________________|
|       East|                1x1|                1x1|
|___________|___________________|___________________|
|       West|                1x1|                4x4|
|___________|___________________|___________________|

Phase 4.3.1 Print Estimated Congestion | Checksum: 18cb8dd29

Time (s): cpu = 00:02:19 ; elapsed = 00:00:52 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13252 ; free virtual = 23658
Phase 4.3 Placer Reporting | Checksum: 18cb8dd29

Time (s): cpu = 00:02:19 ; elapsed = 00:00:53 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13252 ; free virtual = 23657

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13252 ; free virtual = 23657

Time (s): cpu = 00:02:19 ; elapsed = 00:00:53 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13252 ; free virtual = 23657
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 1cdf7d981

Time (s): cpu = 00:02:19 ; elapsed = 00:00:53 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13252 ; free virtual = 23657
Ending Placer Task | Checksum: 15bfb4886

Time (s): cpu = 00:02:19 ; elapsed = 00:00:53 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13252 ; free virtual = 23657
INFO: [Common 17-83] Releasing license: Implementation
98 Infos, 21 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:02:22 ; elapsed = 00:00:54 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13300 ; free virtual = 23706
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:05 ; elapsed = 00:00:02 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13203 ; free virtual = 23673
INFO: [Common 17-1381] The checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.runs/impl_1/design_1_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:10 ; elapsed = 00:00:06 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13274 ; free virtual = 23696
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00.08 ; elapsed = 00:00:00.13 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13263 ; free virtual = 23685
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00.13 ; elapsed = 00:00:00.17 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13272 ; free virtual = 23694
Command: phys_opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Vivado_Tcl 4-383] Design worst setup slack (WNS) is greater than or equal to 0.000 ns. Skipping all physical synthesis optimizations.
INFO: [Vivado_Tcl 4-232] No setup violation found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
107 Infos, 21 Warnings, 0 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:05 ; elapsed = 00:00:02 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13152 ; free virtual = 23639
INFO: [Common 17-1381] The checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.runs/impl_1/design_1_wrapper_physopt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:10 ; elapsed = 00:00:06 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13216 ; free virtual = 23656
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 8 CPUs
Checksum: PlaceDB: 78f03995 ConstDB: 0 ShapeSum: e30b0ef1 RouteDB: 0

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: 139127391

Time (s): cpu = 00:00:17 ; elapsed = 00:00:11 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13080 ; free virtual = 23520
Post Restoration Checksum: NetGraph: afe3b13b NumContArr: 892ec256 Constraints: 0 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: 139127391

Time (s): cpu = 00:00:17 ; elapsed = 00:00:11 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13093 ; free virtual = 23533

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: 139127391

Time (s): cpu = 00:00:17 ; elapsed = 00:00:11 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13054 ; free virtual = 23494

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: 139127391

Time (s): cpu = 00:00:17 ; elapsed = 00:00:11 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13054 ; free virtual = 23494
 Number of Nodes with overlaps = 0

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: 1eb59719b

Time (s): cpu = 00:00:33 ; elapsed = 00:00:17 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13029 ; free virtual = 23469
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.748  | TNS=0.000  | WHS=-0.239 | THS=-398.703|

Phase 2 Router Initialization | Checksum: 19eb6c888

Time (s): cpu = 00:00:42 ; elapsed = 00:00:19 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13027 ; free virtual = 23467

Router Utilization Summary
  Global Vertical Routing Utilization    = 0 %
  Global Horizontal Routing Utilization  = 0 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 45681
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 45680
  Number of Partially Routed Nets     = 1
  Number of Node Overlaps             = 0


Phase 3 Initial Routing

Phase 3.1 Global Routing
Phase 3.1 Global Routing | Checksum: 19eb6c888

Time (s): cpu = 00:00:43 ; elapsed = 00:00:19 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13023 ; free virtual = 23463
Phase 3 Initial Routing | Checksum: 1c721b5cc

Time (s): cpu = 00:00:53 ; elapsed = 00:00:22 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13018 ; free virtual = 23458

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 2978
 Number of Nodes with overlaps = 382
 Number of Nodes with overlaps = 174
 Number of Nodes with overlaps = 80
 Number of Nodes with overlaps = 36
 Number of Nodes with overlaps = 15
 Number of Nodes with overlaps = 8
 Number of Nodes with overlaps = 11
 Number of Nodes with overlaps = 6
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.053 | TNS=-0.324 | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: 24cf20395

Time (s): cpu = 00:01:23 ; elapsed = 00:00:41 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13013 ; free virtual = 23457

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 56
 Number of Nodes with overlaps = 6
 Number of Nodes with overlaps = 7
 Number of Nodes with overlaps = 5
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.308  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 118486875

Time (s): cpu = 00:01:27 ; elapsed = 00:00:44 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13015 ; free virtual = 23460
Phase 4 Rip-up And Reroute | Checksum: 118486875

Time (s): cpu = 00:01:27 ; elapsed = 00:00:44 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13015 ; free virtual = 23460

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp
Phase 5.1 Delay CleanUp | Checksum: 118486875

Time (s): cpu = 00:01:27 ; elapsed = 00:00:44 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13015 ; free virtual = 23460

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 118486875

Time (s): cpu = 00:01:27 ; elapsed = 00:00:44 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13015 ; free virtual = 23460
Phase 5 Delay and Skew Optimization | Checksum: 118486875

Time (s): cpu = 00:01:27 ; elapsed = 00:00:44 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13015 ; free virtual = 23460

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 1edae4801

Time (s): cpu = 00:01:31 ; elapsed = 00:00:45 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13017 ; free virtual = 23461
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.322  | TNS=0.000  | WHS=0.014  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 13758870d

Time (s): cpu = 00:01:32 ; elapsed = 00:00:46 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13017 ; free virtual = 23461
Phase 6 Post Hold Fix | Checksum: 13758870d

Time (s): cpu = 00:01:32 ; elapsed = 00:00:46 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13017 ; free virtual = 23461

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 11.2539 %
  Global Horizontal Routing Utilization  = 13.7651 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 145d32098

Time (s): cpu = 00:01:32 ; elapsed = 00:00:46 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13017 ; free virtual = 23461

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 145d32098

Time (s): cpu = 00:01:32 ; elapsed = 00:00:46 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13016 ; free virtual = 23460

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 12762eed2

Time (s): cpu = 00:01:35 ; elapsed = 00:00:48 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13013 ; free virtual = 23457

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=0.322  | TNS=0.000  | WHS=0.014  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 12762eed2

Time (s): cpu = 00:01:35 ; elapsed = 00:00:48 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13015 ; free virtual = 23460
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:01:35 ; elapsed = 00:00:48 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13073 ; free virtual = 23518

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
122 Infos, 21 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:01:49 ; elapsed = 00:00:52 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13073 ; free virtual = 23518
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:05 ; elapsed = 00:00:02 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 12971 ; free virtual = 23495
INFO: [Common 17-1381] The checkpoint '/home/anubhav/xilinx_projects/promethean_2/promethean_2.runs/impl_1/design_1_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:11 ; elapsed = 00:00:07 . Memory (MB): peak = 3600.043 ; gain = 0.000 ; free physical = 13049 ; free virtual = 23514
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/anubhav/xilinx_projects/promethean_2/promethean_2.runs/impl_1/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 8 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file /home/anubhav/xilinx_projects/promethean_2/promethean_2.runs/impl_1/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
134 Infos, 21 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:15 ; elapsed = 00:00:05 . Memory (MB): peak = 3685.191 ; gain = 18.750 ; free physical = 12955 ; free virtual = 23431
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file design_1_wrapper_timing_summary_routed.rpt -pb design_1_wrapper_timing_summary_routed.pb -rpx design_1_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 8 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file design_1_wrapper_bus_skew_routed.rpt -pb design_1_wrapper_bus_skew_routed.pb -rpx design_1_wrapper_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 8 CPUs
INFO: [Common 17-206] Exiting Vivado at Mon Jun  6 12:48:53 2022...

*** Running vivado
    with args -log design_1_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace


****** Vivado v2020.2 (64-bit)
  **** SW Build 3064766 on Wed Nov 18 09:12:47 MST 2020
  **** IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source design_1_wrapper.tcl -notrace
Command: open_checkpoint design_1_wrapper_routed.dcp

Starting open_checkpoint Task

Time (s): cpu = 00:00:00.08 ; elapsed = 00:00:00.05 . Memory (MB): peak = 2361.820 ; gain = 0.000 ; free physical = 14564 ; free virtual = 25050
INFO: [Device 21-403] Loading part xc7z020clg400-1
Netlist sorting complete. Time (s): cpu = 00:00:00.33 ; elapsed = 00:00:00.33 . Memory (MB): peak = 2361.938 ; gain = 0.000 ; free physical = 14207 ; free virtual = 24687
INFO: [Netlist 29-17] Analyzing 2875 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.2
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 2787.031 ; gain = 44.039 ; free physical = 13519 ; free virtual = 23998
Restored from archive | CPU: 2.030000 secs | Memory: 53.712708 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 2787.031 ; gain = 44.039 ; free physical = 13519 ; free virtual = 23998
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 2787.031 ; gain = 0.000 ; free physical = 13522 ; free virtual = 24002
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 116 instances were transformed.
  RAM16X1S => RAM32X1S (RAMS32): 64 instances
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 3 instances
  RAM32X1D => RAM32X1D (RAMD32(x2)): 1 instance 
  RAM32X1S => RAM32X1S (RAMS32): 32 instances
  SRLC32E => SRL16E: 16 instances

INFO: [Project 1-604] Checkpoint was created with Vivado v2020.2 (64-bit) build 3064766
open_checkpoint: Time (s): cpu = 00:00:18 ; elapsed = 00:00:19 . Memory (MB): peak = 2791.031 ; gain = 433.180 ; free physical = 13522 ; free virtual = 24002
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/Xilinx/Vivado/2020.2/data/ip'.
INFO: [DRC 23-27] Running DRC with 8 threads
WARNING: [DRC CHECK-3] Report rule limit reached: REQP-1840 rule limit reached: 20 violations have been found.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/conv_combined_0/inst/empty_81_reg_4389_reg input design_1_i/conv_combined_0/inst/empty_81_reg_4389_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/conv_combined_0/inst/mac_muladd_16s_16s_29ns_29_4_1_U41/conv_combined_mac_muladd_16s_16s_29ns_29_4_1_DSP48_1_U/p_reg_reg input design_1_i/conv_combined_0/inst/mac_muladd_16s_16s_29ns_29_4_1_U41/conv_combined_mac_muladd_16s_16s_29ns_29_4_1_DSP48_1_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/conv_combined_0/inst/mac_muladd_16s_16s_29ns_29_4_1_U42/conv_combined_mac_muladd_16s_16s_29ns_29_4_1_DSP48_1_U/p_reg_reg input design_1_i/conv_combined_0/inst/mac_muladd_16s_16s_29ns_29_4_1_U42/conv_combined_mac_muladd_16s_16s_29ns_29_4_1_DSP48_1_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/conv_combined_0/inst/mac_muladd_9s_9s_9ns_9_4_1_U43/conv_combined_mac_muladd_9s_9s_9ns_9_4_1_DSP48_0_U/p_reg_reg input design_1_i/conv_combined_0/inst/mac_muladd_9s_9s_9ns_9_4_1_U43/conv_combined_mac_muladd_9s_9s_9ns_9_4_1_DSP48_0_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/conv_combined_0/inst/p_mid1151_reg_4422_reg input design_1_i/conv_combined_0/inst/p_mid1151_reg_4422_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/conv_combined_0/inst/p_mid1157_fu_2452_p2 input design_1_i/conv_combined_0/inst/p_mid1157_fu_2452_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/conv_combined_0/inst/p_mid173_reg_4870_reg input design_1_i/conv_combined_0/inst/p_mid173_reg_4870_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/fcc_combined_0/inst/mac_muladd_16s_16s_29ns_29_4_1_U10/fcc_combined_mac_muladd_16s_16s_29ns_29_4_1_DSP48_1_U/p_reg_reg input design_1_i/fcc_combined_0/inst/mac_muladd_16s_16s_29ns_29_4_1_U10/fcc_combined_mac_muladd_16s_16s_29ns_29_4_1_DSP48_1_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/fcc_combined_0/inst/mac_muladd_16s_16s_29ns_29_4_1_U11/fcc_combined_mac_muladd_16s_16s_29ns_29_4_1_DSP48_1_U/p_reg_reg input design_1_i/fcc_combined_0/inst/mac_muladd_16s_16s_29ns_29_4_1_U11/fcc_combined_mac_muladd_16s_16s_29ns_29_4_1_DSP48_1_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/fcc_combined_0/inst/mac_muladd_16s_16s_29ns_29_4_1_U12/fcc_combined_mac_muladd_16s_16s_29ns_29_4_1_DSP48_1_U/p_reg_reg input design_1_i/fcc_combined_0/inst/mac_muladd_16s_16s_29ns_29_4_1_U12/fcc_combined_mac_muladd_16s_16s_29ns_29_4_1_DSP48_1_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/loss_derivative_0/inst/grp_log_16_3_s_fu_414/r_V_s_reg_1899_reg input design_1_i/loss_derivative_0/inst/grp_log_16_3_s_fu_414/r_V_s_reg_1899_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/loss_derivative_0/inst/grp_log_16_3_s_fu_414/r_V_s_reg_1899_reg input design_1_i/loss_derivative_0/inst/grp_log_16_3_s_fu_414/r_V_s_reg_1899_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/update_weights_0/inst/mac_mulsub_16s_16s_29ns_29_4_1_U1/update_weights_mac_mulsub_16s_16s_29ns_29_4_1_DSP48_0_U/p_reg_reg input design_1_i/update_weights_0/inst/mac_mulsub_16s_16s_29ns_29_4_1_U1/update_weights_mac_mulsub_16s_16s_29ns_29_4_1_DSP48_0_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/empty_60_reg_4838_reg output design_1_i/conv_combined_0/inst/empty_60_reg_4838_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/empty_61_reg_4843_reg output design_1_i/conv_combined_0/inst/empty_61_reg_4843_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31ns_32ns_63_2_1_U19/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product output design_1_i/conv_combined_0/inst/mul_31ns_32ns_63_2_1_U19/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31ns_32ns_63_2_1_U19/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_31ns_32ns_63_2_1_U19/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31ns_64ns_95_5_1_U10/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product output design_1_i/conv_combined_0/inst/mul_31ns_64ns_95_5_1_U10/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product output design_1_i/conv_combined_0/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U13/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U13/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U17/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U17/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U26/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U26/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product output design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U14/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product output design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U14/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U14/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U14/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product output design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_64ns_96_5_1_U18/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product output design_1_i/conv_combined_0/inst/mul_32ns_64ns_96_5_1_U18/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product output design_1_i/conv_combined_0/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_96ns_128_5_1_U29/conv_combined_mul_32ns_96ns_128_5_1_Multiplier_7_U/tmp_product output design_1_i/conv_combined_0/inst/mul_32ns_96ns_128_5_1_U29/conv_combined_mul_32ns_96ns_128_5_1_Multiplier_7_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_96ns_128_5_1_U29/conv_combined_mul_32ns_96ns_128_5_1_Multiplier_7_U/tmp_product__1 output design_1_i/conv_combined_0/inst/mul_32ns_96ns_128_5_1_U29/conv_combined_mul_32ns_96ns_128_5_1_Multiplier_7_U/tmp_product__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U33/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U33/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U36/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U36/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U37/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U37/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U38/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U38/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U8/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0 output design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U8/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_9s_9s_9_1_1_U34/conv_combined_mul_9s_9s_9_1_1_Multiplier_6_U/p output design_1_i/conv_combined_0/inst/mul_9s_9s_9_1_1_U34/conv_combined_mul_9s_9s_9_1_1_Multiplier_6_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/p_mid1151_reg_4422_reg output design_1_i/conv_combined_0/inst/p_mid1151_reg_4422_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv_combined_0/inst/p_mid1157_fu_2452_p2 output design_1_i/conv_combined_0/inst/p_mid1157_fu_2452_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc_combined_0/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product output design_1_i/fcc_combined_0/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc_combined_0/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0 output design_1_i/fcc_combined_0/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc_combined_0/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output design_1_i/fcc_combined_0/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc_combined_0/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output design_1_i/fcc_combined_0/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc_combined_0/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output design_1_i/fcc_combined_0/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_402/mul_50ns_47ns_97_5_1_U1/loss_derivative_mul_50ns_47ns_97_5_1_Multiplier_0_U/tmp_product output design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_402/mul_50ns_47ns_97_5_1_U1/loss_derivative_mul_50ns_47ns_97_5_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_402/mul_50ns_50ns_100_5_1_U2/loss_derivative_mul_50ns_50ns_100_5_1_Multiplier_1_U/tmp_product output design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_402/mul_50ns_50ns_100_5_1_U2/loss_derivative_mul_50ns_50ns_100_5_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/add_ln82_reg_4992_reg multiplier stage design_1_i/conv_combined_0/inst/add_ln82_reg_4992_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/empty_62_reg_4853_reg multiplier stage design_1_i/conv_combined_0/inst/empty_62_reg_4853_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/empty_81_reg_4389_reg multiplier stage design_1_i/conv_combined_0/inst/empty_81_reg_4389_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31ns_32ns_63_2_1_U19/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_31ns_32ns_63_2_1_U19/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31ns_32ns_63_2_1_U19/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/p_reg__0 multiplier stage design_1_i/conv_combined_0/inst/mul_31ns_32ns_63_2_1_U19/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31ns_32ns_63_2_1_U19/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_31ns_32ns_63_2_1_U19/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31ns_32ns_63_2_1_U19/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_31ns_32ns_63_2_1_U19/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31ns_64ns_95_5_1_U10/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg multiplier stage design_1_i/conv_combined_0/inst/mul_31ns_64ns_95_5_1_U10/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31ns_64ns_95_5_1_U10/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__1 multiplier stage design_1_i/conv_combined_0/inst/mul_31ns_64ns_95_5_1_U10/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg multiplier stage design_1_i/conv_combined_0/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__1 multiplier stage design_1_i/conv_combined_0/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U13/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U13/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U13/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U13/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U13/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U13/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U17/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U17/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U17/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U17/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U17/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U17/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U26/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U26/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U26/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U26/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U26/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U26/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0 multiplier stage design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U14/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U14/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U14/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0 multiplier stage design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U14/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U14/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U14/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U14/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U14/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0 multiplier stage design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_64ns_96_5_1_U18/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg multiplier stage design_1_i/conv_combined_0/inst/mul_32ns_64ns_96_5_1_U18/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_64ns_96_5_1_U18/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1 multiplier stage design_1_i/conv_combined_0/inst/mul_32ns_64ns_96_5_1_U18/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg multiplier stage design_1_i/conv_combined_0/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1 multiplier stage design_1_i/conv_combined_0/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_96ns_128_5_1_U29/conv_combined_mul_32ns_96ns_128_5_1_Multiplier_7_U/buff0_reg__0 multiplier stage design_1_i/conv_combined_0/inst/mul_32ns_96ns_128_5_1_U29/conv_combined_mul_32ns_96ns_128_5_1_Multiplier_7_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32ns_96ns_128_5_1_U29/conv_combined_mul_32ns_96ns_128_5_1_Multiplier_7_U/buff0_reg__2 multiplier stage design_1_i/conv_combined_0/inst/mul_32ns_96ns_128_5_1_U29/conv_combined_mul_32ns_96ns_128_5_1_Multiplier_7_U/buff0_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U33/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U33/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U33/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U33/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U33/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U33/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U36/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U36/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U36/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U36/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U36/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U36/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U37/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U37/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U37/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U37/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U37/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U37/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U38/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U38/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U38/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U38/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U38/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U38/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U8/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U8/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U8/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U8/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U8/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0 multiplier stage design_1_i/conv_combined_0/inst/mul_32s_32s_32_2_1_U8/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/mul_9s_9s_9_1_1_U34/conv_combined_mul_9s_9s_9_1_1_Multiplier_6_U/p multiplier stage design_1_i/conv_combined_0/inst/mul_9s_9s_9_1_1_U34/conv_combined_mul_9s_9s_9_1_1_Multiplier_6_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv_combined_0/inst/p_mid173_reg_4870_reg multiplier stage design_1_i/conv_combined_0/inst/p_mid173_reg_4870_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fcc_combined_0/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/p_reg multiplier stage design_1_i/fcc_combined_0/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fcc_combined_0/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/p_reg__0 multiplier stage design_1_i/fcc_combined_0/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fcc_combined_0/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product multiplier stage design_1_i/fcc_combined_0/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fcc_combined_0/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0 multiplier stage design_1_i/fcc_combined_0/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fcc_combined_0/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage design_1_i/fcc_combined_0/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fcc_combined_0/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage design_1_i/fcc_combined_0/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fcc_combined_0/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage design_1_i/fcc_combined_0/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fcc_combined_0/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage design_1_i/fcc_combined_0/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fcc_combined_0/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage design_1_i/fcc_combined_0/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[4] (net: design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[0]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[5] (net: design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[6] (net: design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[7] (net: design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/conv_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[4] (net: design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/rnext[0]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[5] (net: design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[6] (net: design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[7] (net: design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/fcc_combined_0/inst/gmem2_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/fcc_combined_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC RTSTAT-10] No routable loads: 33 net(s) have no routable loads. The problem bus(es) and/or net(s) are design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/rd_rst_reg[2:0], design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/rd_rst_reg[2:0], design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/rd_rst_reg[2:0]... and (the first 15 of 21 listed).
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 186 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 8 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-186] '/home/anubhav/xilinx_projects/promethean_2/promethean_2.runs/impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Mon Jun  6 12:49:51 2022. For additional details about this file, please refer to the WebTalk help file at /tools/Xilinx/Vivado/2020.2/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
24 Infos, 181 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:46 ; elapsed = 00:00:22 . Memory (MB): peak = 3428.371 ; gain = 637.340 ; free physical = 13369 ; free virtual = 23860
INFO: [Common 17-206] Exiting Vivado at Mon Jun  6 12:49:51 2022...
