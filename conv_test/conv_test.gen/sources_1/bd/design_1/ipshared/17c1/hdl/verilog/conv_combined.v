// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv_combined_conv_combined,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=12271,HLS_SYN_LUT=10730,HLS_VERSION=2020_2}" *)

module conv_combined (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        x_Addr_A,
        x_EN_A,
        x_WEN_A,
        x_Din_A,
        x_Dout_A,
        x_Clk_A,
        x_Rst_A,
        dx_Addr_A,
        dx_EN_A,
        dx_WEN_A,
        dx_Din_A,
        dx_Dout_A,
        dx_Clk_A,
        dx_Rst_A,
        y_Addr_A,
        y_EN_A,
        y_WEN_A,
        y_Din_A,
        y_Dout_A,
        y_Clk_A,
        y_Rst_A,
        dy_Addr_A,
        dy_EN_A,
        dy_WEN_A,
        dy_Din_A,
        dy_Dout_A,
        dy_Clk_A,
        dy_Rst_A,
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 120'd1;
parameter    ap_ST_fsm_state2 = 120'd2;
parameter    ap_ST_fsm_state3 = 120'd4;
parameter    ap_ST_fsm_state4 = 120'd8;
parameter    ap_ST_fsm_state5 = 120'd16;
parameter    ap_ST_fsm_state6 = 120'd32;
parameter    ap_ST_fsm_state7 = 120'd64;
parameter    ap_ST_fsm_state8 = 120'd128;
parameter    ap_ST_fsm_state9 = 120'd256;
parameter    ap_ST_fsm_state10 = 120'd512;
parameter    ap_ST_fsm_state11 = 120'd1024;
parameter    ap_ST_fsm_state12 = 120'd2048;
parameter    ap_ST_fsm_state13 = 120'd4096;
parameter    ap_ST_fsm_state14 = 120'd8192;
parameter    ap_ST_fsm_state15 = 120'd16384;
parameter    ap_ST_fsm_state16 = 120'd32768;
parameter    ap_ST_fsm_state17 = 120'd65536;
parameter    ap_ST_fsm_state18 = 120'd131072;
parameter    ap_ST_fsm_state19 = 120'd262144;
parameter    ap_ST_fsm_state20 = 120'd524288;
parameter    ap_ST_fsm_state21 = 120'd1048576;
parameter    ap_ST_fsm_state22 = 120'd2097152;
parameter    ap_ST_fsm_state23 = 120'd4194304;
parameter    ap_ST_fsm_state24 = 120'd8388608;
parameter    ap_ST_fsm_state25 = 120'd16777216;
parameter    ap_ST_fsm_state26 = 120'd33554432;
parameter    ap_ST_fsm_state27 = 120'd67108864;
parameter    ap_ST_fsm_pp0_stage0 = 120'd134217728;
parameter    ap_ST_fsm_state31 = 120'd268435456;
parameter    ap_ST_fsm_state32 = 120'd536870912;
parameter    ap_ST_fsm_state33 = 120'd1073741824;
parameter    ap_ST_fsm_state34 = 120'd2147483648;
parameter    ap_ST_fsm_state35 = 120'd4294967296;
parameter    ap_ST_fsm_state36 = 120'd8589934592;
parameter    ap_ST_fsm_state37 = 120'd17179869184;
parameter    ap_ST_fsm_pp1_stage0 = 120'd34359738368;
parameter    ap_ST_fsm_state40 = 120'd68719476736;
parameter    ap_ST_fsm_state41 = 120'd137438953472;
parameter    ap_ST_fsm_state42 = 120'd274877906944;
parameter    ap_ST_fsm_state43 = 120'd549755813888;
parameter    ap_ST_fsm_state44 = 120'd1099511627776;
parameter    ap_ST_fsm_state45 = 120'd2199023255552;
parameter    ap_ST_fsm_state46 = 120'd4398046511104;
parameter    ap_ST_fsm_pp2_stage0 = 120'd8796093022208;
parameter    ap_ST_fsm_state49 = 120'd17592186044416;
parameter    ap_ST_fsm_state50 = 120'd35184372088832;
parameter    ap_ST_fsm_state51 = 120'd70368744177664;
parameter    ap_ST_fsm_state52 = 120'd140737488355328;
parameter    ap_ST_fsm_state53 = 120'd281474976710656;
parameter    ap_ST_fsm_state54 = 120'd562949953421312;
parameter    ap_ST_fsm_state55 = 120'd1125899906842624;
parameter    ap_ST_fsm_state56 = 120'd2251799813685248;
parameter    ap_ST_fsm_state57 = 120'd4503599627370496;
parameter    ap_ST_fsm_state58 = 120'd9007199254740992;
parameter    ap_ST_fsm_state59 = 120'd18014398509481984;
parameter    ap_ST_fsm_state60 = 120'd36028797018963968;
parameter    ap_ST_fsm_state61 = 120'd72057594037927936;
parameter    ap_ST_fsm_state62 = 120'd144115188075855872;
parameter    ap_ST_fsm_state63 = 120'd288230376151711744;
parameter    ap_ST_fsm_state64 = 120'd576460752303423488;
parameter    ap_ST_fsm_state65 = 120'd1152921504606846976;
parameter    ap_ST_fsm_state66 = 120'd2305843009213693952;
parameter    ap_ST_fsm_state67 = 120'd4611686018427387904;
parameter    ap_ST_fsm_state68 = 120'd9223372036854775808;
parameter    ap_ST_fsm_state69 = 120'd18446744073709551616;
parameter    ap_ST_fsm_pp3_stage0 = 120'd36893488147419103232;
parameter    ap_ST_fsm_state73 = 120'd73786976294838206464;
parameter    ap_ST_fsm_state74 = 120'd147573952589676412928;
parameter    ap_ST_fsm_state75 = 120'd295147905179352825856;
parameter    ap_ST_fsm_state76 = 120'd590295810358705651712;
parameter    ap_ST_fsm_state77 = 120'd1180591620717411303424;
parameter    ap_ST_fsm_state78 = 120'd2361183241434822606848;
parameter    ap_ST_fsm_state79 = 120'd4722366482869645213696;
parameter    ap_ST_fsm_state80 = 120'd9444732965739290427392;
parameter    ap_ST_fsm_state81 = 120'd18889465931478580854784;
parameter    ap_ST_fsm_state82 = 120'd37778931862957161709568;
parameter    ap_ST_fsm_state83 = 120'd75557863725914323419136;
parameter    ap_ST_fsm_state84 = 120'd151115727451828646838272;
parameter    ap_ST_fsm_state85 = 120'd302231454903657293676544;
parameter    ap_ST_fsm_pp4_stage0 = 120'd604462909807314587353088;
parameter    ap_ST_fsm_pp4_stage1 = 120'd1208925819614629174706176;
parameter    ap_ST_fsm_state99 = 120'd2417851639229258349412352;
parameter    ap_ST_fsm_state100 = 120'd4835703278458516698824704;
parameter    ap_ST_fsm_state101 = 120'd9671406556917033397649408;
parameter    ap_ST_fsm_state102 = 120'd19342813113834066795298816;
parameter    ap_ST_fsm_state103 = 120'd38685626227668133590597632;
parameter    ap_ST_fsm_state104 = 120'd77371252455336267181195264;
parameter    ap_ST_fsm_state105 = 120'd154742504910672534362390528;
parameter    ap_ST_fsm_state106 = 120'd309485009821345068724781056;
parameter    ap_ST_fsm_state107 = 120'd618970019642690137449562112;
parameter    ap_ST_fsm_pp5_stage0 = 120'd1237940039285380274899124224;
parameter    ap_ST_fsm_state111 = 120'd2475880078570760549798248448;
parameter    ap_ST_fsm_state112 = 120'd4951760157141521099596496896;
parameter    ap_ST_fsm_state113 = 120'd9903520314283042199192993792;
parameter    ap_ST_fsm_state114 = 120'd19807040628566084398385987584;
parameter    ap_ST_fsm_state115 = 120'd39614081257132168796771975168;
parameter    ap_ST_fsm_pp6_stage0 = 120'd79228162514264337593543950336;
parameter    ap_ST_fsm_state118 = 120'd158456325028528675187087900672;
parameter    ap_ST_fsm_state119 = 120'd316912650057057350374175801344;
parameter    ap_ST_fsm_state120 = 120'd633825300114114700748351602688;
parameter    ap_ST_fsm_state121 = 120'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state122 = 120'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state123 = 120'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state124 = 120'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state125 = 120'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state126 = 120'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state127 = 120'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state128 = 120'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state129 = 120'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state130 = 120'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state131 = 120'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state132 = 120'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state133 = 120'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state134 = 120'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state135 = 120'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state136 = 120'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state137 = 120'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_pp7_stage0 = 120'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state140 = 120'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state141 = 120'd664613997892457936451903530140172288;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
output  [31:0] x_Addr_A;
output   x_EN_A;
output  [1:0] x_WEN_A;
output  [15:0] x_Din_A;
input  [15:0] x_Dout_A;
output   x_Clk_A;
output   x_Rst_A;
output  [31:0] dx_Addr_A;
output   dx_EN_A;
output  [1:0] dx_WEN_A;
output  [15:0] dx_Din_A;
input  [15:0] dx_Dout_A;
output   dx_Clk_A;
output   dx_Rst_A;
output  [31:0] y_Addr_A;
output   y_EN_A;
output  [1:0] y_WEN_A;
output  [15:0] y_Din_A;
input  [15:0] y_Dout_A;
output   y_Clk_A;
output   y_Rst_A;
output  [31:0] dy_Addr_A;
output   dy_EN_A;
output  [1:0] dy_WEN_A;
output  [15:0] dy_Din_A;
input  [15:0] dy_Dout_A;
output   dy_Clk_A;
output   dy_Rst_A;
input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1:0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
output   interrupt;

reg x_EN_A;
reg dx_EN_A;
reg[1:0] dx_WEN_A;
reg y_EN_A;
reg[1:0] y_WEN_A;
reg[15:0] y_Din_A;
reg dy_EN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [119:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] wt;
wire   [31:0] dwt;
wire   [31:0] b;
wire   [31:0] db;
wire   [31:0] F;
wire   [31:0] C;
wire   [31:0] H;
wire   [31:0] W;
wire   [31:0] FH;
wire   [31:0] FW;
wire    fwprop;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state21;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln48_reg_3783;
wire    ap_CS_fsm_state11;
reg   [0:0] icmp_ln45_1_reg_3646;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln58_reg_3812;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln61_reg_3864;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln90_reg_4118;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state107;
reg    gmem_blk_n_W;
reg    ap_enable_reg_pp5_iter2;
wire    ap_block_pp5_stage0;
reg   [0:0] icmp_ln117_reg_4642;
reg   [0:0] icmp_ln117_reg_4642_pp5_iter1_reg;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state115;
reg   [0:0] cmp147403_reg_3958;
wire    ap_CS_fsm_state101;
reg   [0:0] icmp_ln114_reg_4537;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter1;
wire    ap_block_pp6_stage0;
reg   [0:0] icmp_ln125_reg_4671;
wire    ap_CS_fsm_state122;
reg   [0:0] icmp_ln45_reg_3575;
reg   [0:0] fwprop_read_reg_3451;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg   [31:0] gmem_AWADDR;
reg   [31:0] gmem_AWLEN;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg   [15:0] gmem_WDATA;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
reg   [31:0] gmem_ARLEN;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [15:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [30:0] l_reg_598;
reg   [30:0] i_1_reg_609;
reg   [30:0] i_2_reg_620;
reg   [30:0] l_1_reg_762;
reg   [95:0] indvar_flatten134_reg_828;
reg   [31:0] c_1_reg_839;
reg   [63:0] indvar_flatten103_reg_851;
reg   [31:0] fh_1_reg_862;
reg   [31:0] fw_1_reg_873;
reg   [30:0] l_2_reg_941;
reg   [30:0] i_5_reg_952;
reg   [30:0] fw_reg_1052;
reg   [15:0] empty_62_reg_1063;
wire   [31:0] grp_fu_1112_p2;
reg   [31:0] reg_1131;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state77;
(* use_dsp48 = "no" *) wire  signed [9:0] grp_fu_1117_p2;
reg  signed [9:0] reg_1135;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state129;
reg   [31:0] FW_read_reg_3455;
reg   [31:0] FH_read_reg_3476;
reg   [31:0] W_read_reg_3490;
reg   [31:0] H_read_reg_3499;
reg   [31:0] C_read_reg_3504;
reg   [31:0] F_read_reg_3514;
reg   [31:0] db_read_reg_3525;
reg   [31:0] b_read_reg_3530;
reg   [31:0] dwt_read_reg_3535;
reg   [31:0] wt_read_reg_3541;
wire   [9:0] empty_fu_1139_p1;
reg   [9:0] empty_reg_3546;
wire  signed [9:0] empty_43_fu_1143_p1;
reg  signed [9:0] empty_43_reg_3551;
(* use_dsp48 = "no" *) wire  signed [9:0] outH_fu_1151_p2;
reg  signed [9:0] outH_reg_3559;
wire    ap_CS_fsm_state2;
wire   [9:0] trunc_ln42_fu_1161_p1;
reg   [9:0] trunc_ln42_reg_3565;
wire   [31:0] outW_fu_1165_p2;
reg   [31:0] outW_reg_3570;
wire   [0:0] icmp_ln45_fu_1171_p2;
wire   [63:0] grp_fu_1182_p2;
reg   [63:0] bound_reg_3589;
wire    ap_CS_fsm_state3;
wire   [30:0] empty_44_fu_1188_p1;
reg   [30:0] empty_44_reg_3595;
wire    ap_CS_fsm_state4;
wire   [0:0] grp_fu_1088_p2;
reg   [0:0] cmp57433_reg_3611;
wire    ap_CS_fsm_state8;
wire  signed [30:0] trunc_ln45_fu_1204_p1;
reg  signed [30:0] trunc_ln45_reg_3615;
wire  signed [30:0] trunc_ln45_1_fu_1207_p1;
reg  signed [30:0] trunc_ln45_1_reg_3620;
wire  signed [30:0] empty_45_fu_1210_p1;
reg  signed [30:0] empty_45_reg_3626;
wire   [94:0] grp_fu_1198_p2;
reg   [94:0] bound4_reg_3631;
wire   [0:0] grp_fu_1093_p2;
reg   [0:0] icmp_ln47_reg_3636;
wire   [94:0] add_ln45_1_fu_1213_p2;
reg   [94:0] add_ln45_1_reg_3641;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln45_1_fu_1224_p2;
wire   [30:0] grp_fu_1219_p2;
reg   [30:0] empty_46_reg_3650;
wire    ap_CS_fsm_state10;
wire   [30:0] tmp_fu_1233_p2;
reg   [30:0] tmp_reg_3656;
wire   [3:0] trunc_ln49_fu_1238_p1;
reg   [3:0] trunc_ln49_reg_3661;
wire  signed [30:0] add_ln45_fu_1242_p2;
reg  signed [30:0] add_ln45_reg_3666;
wire   [0:0] icmp_ln46_fu_1248_p2;
reg   [0:0] icmp_ln46_reg_3671;
wire   [30:0] select_ln45_2_fu_1253_p3;
reg   [30:0] select_ln45_2_reg_3681;
wire   [1:0] trunc_ln45_2_fu_1261_p1;
reg   [1:0] trunc_ln45_2_reg_3686;
wire   [0:0] select_ln45_5_fu_1270_p3;
reg   [0:0] select_ln45_5_reg_3692;
wire   [30:0] grp_fu_1297_p2;
reg   [30:0] p_mid1_reg_3724;
wire    ap_CS_fsm_state13;
wire  signed [30:0] select_ln46_1_fu_1364_p3;
reg  signed [30:0] select_ln46_1_reg_3730;
wire    ap_CS_fsm_state14;
wire  signed [5:0] add_ln49_fu_1386_p2;
reg  signed [5:0] add_ln49_reg_3735;
wire   [31:0] select_ln46_3_fu_1392_p3;
reg   [31:0] select_ln46_3_reg_3741;
wire   [30:0] grp_fu_1399_p2;
reg   [30:0] mul_ln46_reg_3746;
wire    ap_CS_fsm_state16;
wire   [31:0] select_ln46_fu_1407_p3;
reg   [31:0] select_ln46_reg_3751;
wire    ap_CS_fsm_state17;
wire  signed [30:0] tmp11_fu_1419_p2;
reg  signed [30:0] tmp11_reg_3757;
wire   [30:0] grp_fu_1424_p2;
reg   [30:0] empty_49_reg_3762;
wire    ap_CS_fsm_state19;
reg   [31:0] gmem_addr_2_reg_3767;
wire    ap_CS_fsm_state20;
wire   [7:0] add_ln49_3_fu_1509_p2;
reg   [7:0] add_ln49_3_reg_3773;
wire   [30:0] add_ln48_fu_1515_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state28_pp0_stage0_iter0;
reg    ap_block_state29_pp0_stage0_iter1;
wire    ap_block_state30_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln48_fu_1525_p2;
reg   [0:0] icmp_ln48_reg_3783_pp0_iter1_reg;
wire   [7:0] add_ln49_4_fu_1534_p2;
reg   [7:0] add_ln49_4_reg_3787;
reg   [7:0] add_ln49_4_reg_3787_pp0_iter1_reg;
reg   [15:0] gmem_addr_2_read_reg_3792;
wire   [31:0] add_ln47_fu_1543_p2;
wire    ap_CS_fsm_state31;
wire   [63:0] select_ln46_4_fu_1554_p3;
wire   [30:0] add_ln58_fu_1561_p2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state38_pp1_stage0_iter0;
reg    ap_block_state39_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln58_fu_1567_p2;
wire   [1:0] trunc_ln59_fu_1572_p1;
reg   [1:0] trunc_ln59_reg_3816;
reg   [15:0] bbuf_V_2_load_reg_3820;
reg   [15:0] bbuf_V_2_1_load_reg_3825;
reg   [15:0] bbuf_V_2_3_load_reg_3830;
wire   [30:0] add_ln61_fu_1611_p2;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state47_pp2_stage0_iter0;
reg    ap_block_state48_pp2_stage0_iter1;
reg    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln61_fu_1617_p2;
wire   [1:0] trunc_ln62_fu_1622_p1;
reg   [1:0] trunc_ln62_reg_3868;
reg   [15:0] dbbuf_V_2_1_load_reg_3872;
reg   [15:0] dbbuf_V_2_3_load_reg_3877;
reg   [15:0] dbbuf_V_2_5_load_reg_3882;
wire   [63:0] cast60_fu_1653_p1;
reg   [63:0] cast60_reg_3892;
wire   [31:0] sub_ln68_fu_1667_p2;
reg   [31:0] sub_ln68_reg_3898;
wire   [0:0] icmp_ln71_fu_1672_p2;
reg   [0:0] icmp_ln71_reg_3904;
wire   [63:0] grp_fu_1656_p2;
reg   [63:0] bound61_reg_3909;
wire    ap_CS_fsm_state50;
wire   [30:0] empty_65_fu_1677_p1;
reg   [30:0] empty_65_reg_3916;
wire    ap_CS_fsm_state51;
wire  signed [30:0] trunc_ln87_fu_1693_p1;
reg  signed [30:0] trunc_ln87_reg_3932;
wire    ap_CS_fsm_state52;
wire  signed [30:0] grp_fu_1699_p2;
reg  signed [30:0] empty_66_reg_3944;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
wire  signed [30:0] grp_fu_1708_p2;
reg  signed [30:0] empty_67_reg_3962;
wire   [94:0] grp_fu_1687_p2;
reg   [94:0] bound72_reg_3968;
reg   [0:0] icmp_ln89_reg_3974;
wire    ap_CS_fsm_state56;
wire   [3:0] trunc_ln91_fu_1722_p1;
reg   [3:0] trunc_ln91_reg_3985;
wire   [94:0] add_ln87_1_fu_1726_p2;
reg   [94:0] add_ln87_1_reg_3990;
wire    ap_CS_fsm_state57;
wire   [30:0] grp_fu_1717_p2;
reg   [30:0] empty_68_reg_3995;
wire   [0:0] icmp_ln88_fu_1737_p2;
reg   [0:0] icmp_ln88_reg_4003;
wire   [0:0] icmp_ln87_fu_1732_p2;
wire   [0:0] cmp176388_fu_1742_p2;
reg   [0:0] cmp176388_reg_4035;
wire  signed [30:0] select_ln87_1_fu_1783_p3;
reg  signed [30:0] select_ln87_1_reg_4044;
wire    ap_CS_fsm_state58;
wire   [0:0] select_ln87_4_fu_1831_p3;
reg   [0:0] select_ln87_4_reg_4050;
wire   [31:0] select_ln88_fu_1848_p3;
reg   [31:0] select_ln88_reg_4055;
wire  signed [30:0] trunc_ln88_1_fu_1856_p1;
reg  signed [30:0] trunc_ln88_1_reg_4061;
wire  signed [5:0] add_ln91_fu_1876_p2;
reg  signed [5:0] add_ln91_reg_4066;
wire   [31:0] select_ln88_3_fu_1882_p3;
reg   [31:0] select_ln88_3_reg_4072;
wire  signed [30:0] trunc_ln89_fu_1890_p1;
reg  signed [30:0] trunc_ln89_reg_4077;
wire   [30:0] grp_fu_1894_p2;
reg   [30:0] mul_ln87_reg_4082;
wire    ap_CS_fsm_state60;
wire   [30:0] grp_fu_1898_p2;
reg   [30:0] p_mid165_reg_4087;
wire   [30:0] grp_fu_1902_p2;
reg   [30:0] empty_71_reg_4092;
wire   [30:0] empty_72_fu_1922_p2;
reg   [30:0] empty_72_reg_4097;
wire    ap_CS_fsm_state61;
reg   [31:0] gmem_addr_4_reg_4102;
wire    ap_CS_fsm_state62;
wire   [7:0] add_ln91_3_fu_2009_p2;
reg   [7:0] add_ln91_3_reg_4108;
wire   [30:0] add_ln90_fu_2015_p2;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state70_pp3_stage0_iter0;
reg    ap_block_state71_pp3_stage0_iter1;
wire    ap_block_state72_pp3_stage0_iter2;
reg    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln90_fu_2025_p2;
reg   [0:0] icmp_ln90_reg_4118_pp3_iter1_reg;
wire   [7:0] add_ln91_4_fu_2034_p2;
reg   [7:0] add_ln91_4_reg_4122;
reg   [7:0] add_ln91_4_reg_4122_pp3_iter1_reg;
reg   [15:0] gmem_addr_4_read_reg_4127;
wire   [31:0] add_ln89_fu_2043_p2;
wire    ap_CS_fsm_state73;
wire   [63:0] select_ln88_4_fu_2054_p3;
wire   [63:0] grp_fu_1750_p2;
reg   [63:0] bound95_reg_4142;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state78;
wire  signed [9:0] trunc_ln97_fu_2086_p1;
reg  signed [9:0] trunc_ln97_reg_4168;
wire   [31:0] sub_ln97_fu_2094_p2;
reg   [31:0] sub_ln97_reg_4173;
wire   [95:0] grp_fu_2067_p2;
reg   [95:0] bound108_reg_4178;
wire   [62:0] grp_fu_2080_p2;
reg   [62:0] bound139_reg_4183;
wire   [0:0] icmp_ln102_fu_2099_p2;
reg   [0:0] icmp_ln102_reg_4188;
wire   [62:0] add_ln97_4_fu_2104_p2;
reg   [62:0] add_ln97_4_reg_4193;
wire    ap_CS_fsm_state80;
wire   [0:0] icmp_ln98_fu_2137_p2;
reg   [0:0] icmp_ln98_reg_4201;
wire   [0:0] icmp_ln97_fu_2126_p2;
wire   [30:0] select_ln97_1_fu_2143_p3;
reg   [30:0] select_ln97_1_reg_4206;
wire   [1:0] select_ln97_2_fu_2159_p3;
reg   [1:0] select_ln97_2_reg_4216;
wire   [0:0] select_ln97_3_fu_2173_p3;
reg   [0:0] select_ln97_3_reg_4223;
wire   [0:0] select_ln97_4_fu_2187_p3;
reg   [0:0] select_ln97_4_reg_4229;
wire   [31:0] select_ln97_fu_2195_p3;
reg   [31:0] select_ln97_reg_4236;
wire    ap_CS_fsm_state82;
wire   [9:0] trunc_ln98_fu_2202_p1;
reg   [9:0] trunc_ln98_reg_4242;
wire  signed [5:0] sext_ln703_fu_2226_p1;
reg  signed [5:0] sext_ln703_reg_4249;
wire    ap_CS_fsm_state83;
wire   [9:0] empty_81_fu_2230_p2;
reg   [9:0] empty_81_reg_4254;
wire   [15:0] tmp_2_fu_2235_p5;
wire   [5:0] empty_75_fu_2246_p1;
reg   [5:0] empty_75_reg_4264;
wire   [31:0] add_ln99_fu_2249_p2;
reg   [31:0] add_ln99_reg_4271;
wire    ap_CS_fsm_state84;
wire   [9:0] trunc_ln99_fu_2260_p1;
reg   [9:0] trunc_ln99_reg_4279;
wire   [0:0] icmp_ln99_fu_2255_p2;
wire   [7:0] trunc_ln104_fu_2274_p1;
reg   [7:0] trunc_ln104_reg_4289;
wire   [31:0] add_ln98_fu_2338_p2;
reg  signed [15:0] r_V_reg_4299;
wire    ap_CS_fsm_state85;
wire  signed [22:0] sext_ln1118_1_fu_2343_p1;
reg  signed [22:0] sext_ln1118_1_reg_4304;
wire   [95:0] add_ln100_1_fu_2347_p2;
reg   [95:0] add_ln100_1_reg_4310;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state86_pp4_stage0_iter0;
wire    ap_block_state88_pp4_stage0_iter1;
wire    ap_block_state90_pp4_stage0_iter2;
wire    ap_block_state92_pp4_stage0_iter3;
wire    ap_block_state94_pp4_stage0_iter4;
wire    ap_block_state96_pp4_stage0_iter5;
wire    ap_block_state98_pp4_stage0_iter6;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln100_fu_2357_p2;
reg   [0:0] icmp_ln100_reg_4320;
reg   [0:0] icmp_ln100_reg_4320_pp4_iter1_reg;
reg   [0:0] icmp_ln100_reg_4320_pp4_iter2_reg;
reg   [0:0] icmp_ln100_reg_4320_pp4_iter3_reg;
reg   [0:0] icmp_ln100_reg_4320_pp4_iter4_reg;
reg   [0:0] icmp_ln100_reg_4320_pp4_iter5_reg;
wire   [31:0] add_ln100_fu_2362_p2;
reg   [31:0] add_ln100_reg_4324;
wire   [0:0] icmp_ln101_fu_2372_p2;
reg   [0:0] icmp_ln101_reg_4334;
wire    ap_CS_fsm_pp4_stage1;
wire    ap_block_state87_pp4_stage1_iter0;
wire    ap_block_state89_pp4_stage1_iter1;
wire    ap_block_state91_pp4_stage1_iter2;
wire    ap_block_state93_pp4_stage1_iter3;
wire    ap_block_state95_pp4_stage1_iter4;
wire    ap_block_state97_pp4_stage1_iter5;
wire    ap_block_pp4_stage1_11001;
wire   [31:0] select_ln100_1_fu_2377_p3;
reg   [31:0] select_ln100_1_reg_4346;
wire   [3:0] trunc_ln100_2_fu_2384_p1;
reg   [3:0] trunc_ln100_2_reg_4351;
wire   [63:0] add_ln101_2_fu_2388_p2;
reg   [63:0] add_ln101_2_reg_4356;
wire   [9:0] trunc_ln101_fu_2394_p1;
reg   [9:0] trunc_ln101_reg_4361;
wire   [5:0] trunc_ln727_fu_2398_p1;
reg   [5:0] trunc_ln727_reg_4366;
wire   [31:0] select_ln100_fu_2402_p3;
reg   [31:0] select_ln100_reg_4372;
wire  signed [5:0] add_ln1118_3_fu_2412_p2;
reg  signed [5:0] add_ln1118_3_reg_4377;
wire   [31:0] add_ln101_fu_2417_p2;
reg   [31:0] add_ln101_reg_4383;
wire   [5:0] trunc_ln727_1_fu_2423_p1;
reg   [5:0] trunc_ln727_1_reg_4389;
wire   [63:0] select_ln101_5_fu_2427_p3;
reg   [63:0] select_ln101_5_reg_4395;
reg    ap_enable_reg_pp4_iter1;
wire   [31:0] select_ln101_fu_2500_p3;
reg   [31:0] select_ln101_reg_4400;
wire   [7:0] trunc_ln727_2_fu_2534_p1;
reg   [7:0] trunc_ln727_2_reg_4405;
wire   [5:0] trunc_ln727_3_fu_2538_p1;
reg   [5:0] trunc_ln727_3_reg_4410;
wire   [7:0] add_ln1118_7_fu_2580_p2;
reg   [7:0] add_ln1118_7_reg_4415;
wire   [31:0] select_ln101_4_fu_2594_p3;
reg   [31:0] select_ln101_4_reg_4425;
wire   [9:0] trunc_ln103_fu_2600_p1;
reg   [9:0] trunc_ln103_reg_4430;
reg   [9:0] trunc_ln103_reg_4430_pp4_iter2_reg;
wire   [7:0] trunc_ln727_4_fu_2604_p1;
reg   [7:0] trunc_ln727_4_reg_4435;
wire   [7:0] add_ln727_2_fu_2620_p2;
reg   [7:0] add_ln727_2_reg_4441;
reg   [7:0] add_ln727_2_reg_4441_pp4_iter3_reg;
reg   [7:0] add_ln727_2_reg_4441_pp4_iter4_reg;
wire   [31:0] add_ln102_fu_2639_p2;
reg   [31:0] add_ln102_reg_4451;
reg    ap_enable_reg_pp4_iter2;
wire   [15:0] wbuf_V_q0;
reg  signed [15:0] wbuf_V_load_reg_4456;
(* use_dsp48 = "no" *) wire   [9:0] add_ln1118_1_fu_2644_p2;
reg   [9:0] add_ln1118_1_reg_4461;
reg   [9:0] dx_addr_reg_4476;
reg   [9:0] dx_addr_reg_4476_pp4_iter4_reg;
wire   [0:0] addr_cmp_fu_2659_p2;
reg   [0:0] addr_cmp_reg_4481;
reg  signed [15:0] x_load_1_reg_4486;
reg    ap_enable_reg_pp4_iter4;
reg   [15:0] trunc_ln708_1_reg_4501;
reg   [7:0] dwbuf_V_addr_2_reg_4506;
wire   [15:0] add_ln703_fu_2727_p2;
wire    ap_CS_fsm_state99;
wire   [94:0] add_ln114_1_fu_2732_p2;
reg   [94:0] add_ln114_1_reg_4522;
wire    ap_CS_fsm_state100;
wire   [3:0] trunc_ln118_fu_2747_p1;
reg   [3:0] trunc_ln118_reg_4532;
wire   [0:0] icmp_ln114_fu_2751_p2;
wire   [30:0] grp_fu_2742_p2;
reg   [30:0] empty_82_reg_4541;
wire   [0:0] icmp_ln115_fu_2762_p2;
reg   [0:0] icmp_ln115_reg_4546;
wire  signed [30:0] select_ln114_1_fu_2767_p3;
reg  signed [30:0] select_ln114_1_reg_4554;
reg    ap_block_state101_io;
wire   [1:0] trunc_ln114_fu_2775_p1;
reg   [1:0] trunc_ln114_reg_4560;
wire   [0:0] select_ln114_4_fu_2784_p3;
reg   [0:0] select_ln114_4_reg_4566;
wire   [31:0] select_ln115_fu_2797_p3;
reg   [31:0] select_ln115_reg_4573;
wire  signed [30:0] trunc_ln116_fu_2805_p1;
reg  signed [30:0] trunc_ln116_reg_4579;
wire  signed [30:0] trunc_ln115_1_fu_2867_p1;
reg  signed [30:0] trunc_ln115_1_reg_4590;
wire    ap_CS_fsm_state102;
wire  signed [5:0] add_ln118_fu_2886_p2;
reg  signed [5:0] add_ln118_reg_4595;
wire   [31:0] select_ln115_3_fu_2892_p3;
reg   [31:0] select_ln115_3_reg_4601;
wire   [30:0] grp_fu_2827_p2;
reg   [30:0] mul_ln114_reg_4606;
wire    ap_CS_fsm_state103;
wire   [30:0] grp_fu_2899_p2;
reg   [30:0] empty_86_reg_4611;
wire   [30:0] grp_fu_2903_p2;
reg   [30:0] p_mid1154_reg_4616;
wire    ap_CS_fsm_state104;
wire   [30:0] empty_87_fu_2923_p2;
reg   [30:0] empty_87_reg_4621;
wire    ap_CS_fsm_state105;
reg   [31:0] gmem_addr_5_reg_4626;
wire    ap_CS_fsm_state106;
wire   [7:0] add_ln118_3_fu_3010_p2;
reg   [7:0] add_ln118_3_reg_4632;
wire   [30:0] add_ln117_fu_3016_p2;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state108_pp5_stage0_iter0;
wire    ap_block_state109_pp5_stage0_iter1;
wire    ap_block_state110_pp5_stage0_iter2;
reg    ap_block_state110_io;
reg    ap_block_pp5_stage0_11001;
wire   [0:0] icmp_ln117_fu_3026_p2;
wire   [15:0] dwbuf_V_q1;
reg   [15:0] dwbuf_V_load_reg_4651;
reg    ap_enable_reg_pp5_iter1;
wire   [31:0] add_ln116_fu_3045_p2;
wire   [63:0] select_ln115_4_fu_3056_p3;
wire   [30:0] add_ln125_fu_3063_p2;
reg    ap_enable_reg_pp6_iter0;
wire    ap_block_state116_pp6_stage0_iter0;
wire    ap_block_state117_pp6_stage0_iter1;
reg    ap_block_state117_io;
reg    ap_block_pp6_stage0_11001;
wire   [0:0] icmp_ln125_fu_3069_p2;
wire   [15:0] tmp_3_fu_3078_p5;
reg   [15:0] tmp_3_reg_4675;
wire    ap_CS_fsm_state123;
wire   [63:0] grp_fu_3097_p2;
reg   [63:0] bound26_reg_4690;
wire    ap_CS_fsm_state124;
wire    ap_CS_fsm_state125;
reg   [0:0] cmp106321_reg_4706;
wire  signed [9:0] trunc_ln68_fu_3115_p1;
reg  signed [9:0] trunc_ln68_reg_4710;
wire   [30:0] trunc_ln68_1_fu_3118_p1;
reg   [30:0] trunc_ln68_1_reg_4715;
wire   [95:0] grp_fu_3109_p2;
reg   [95:0] bound40_reg_4720;
wire   [30:0] add_ln68_2_fu_3121_p2;
reg   [30:0] add_ln68_2_reg_4725;
wire    ap_CS_fsm_state130;
wire   [9:0] empty_57_fu_3140_p2;
reg   [9:0] empty_57_reg_4733;
wire   [0:0] icmp_ln68_fu_3127_p2;
wire   [15:0] tmp_1_fu_3145_p5;
reg   [15:0] tmp_1_reg_4740;
wire   [95:0] add_ln69_1_fu_3157_p2;
reg   [95:0] add_ln69_1_reg_4746;
wire    ap_CS_fsm_state131;
wire   [9:0] empty_58_fu_3167_p2;
reg   [9:0] empty_58_reg_4751;
wire   [0:0] icmp_ln70_fu_3183_p2;
reg   [0:0] icmp_ln70_reg_4759;
wire   [0:0] icmp_ln69_fu_3172_p2;
wire   [31:0] select_ln69_1_fu_3196_p3;
reg   [31:0] select_ln69_1_reg_4766;
wire  signed [9:0] trunc_ln69_fu_3204_p1;
reg  signed [9:0] trunc_ln69_reg_4771;
wire   [0:0] select_ln69_4_fu_3221_p3;
reg   [0:0] select_ln69_4_reg_4776;
wire   [9:0] trunc_ln70_1_fu_3234_p1;
reg   [9:0] trunc_ln70_1_reg_4782;
wire   [9:0] select_ln70_1_fu_3238_p3;
reg   [9:0] select_ln70_1_reg_4787;
wire   [31:0] select_ln70_3_fu_3246_p3;
reg   [31:0] select_ln70_3_reg_4792;
wire    ap_CS_fsm_state132;
wire   [31:0] select_ln70_fu_3274_p3;
reg   [31:0] select_ln70_reg_4802;
wire    ap_CS_fsm_state134;
wire   [9:0] trunc_ln71_fu_3282_p1;
reg   [9:0] trunc_ln71_reg_4807;
wire   [9:0] mul_ln69_fu_3286_p2;
reg   [9:0] mul_ln69_reg_4813;
wire    ap_CS_fsm_state135;
reg   [9:0] y_addr_reg_4818;
wire   [31:0] add_ln73_fu_3294_p2;
reg   [31:0] add_ln73_reg_4823;
wire    ap_CS_fsm_state136;
wire  signed [9:0] empty_60_fu_3314_p2;
reg  signed [9:0] empty_60_reg_4831;
wire   [0:0] icmp_ln73_fu_3300_p2;
wire   [31:0] add_ln71_fu_3319_p2;
wire   [63:0] select_ln70_4_fu_3330_p3;
wire   [9:0] add_ln75_fu_3341_p2;
reg   [9:0] add_ln75_reg_4846;
wire    ap_CS_fsm_state137;
wire   [30:0] add_ln74_fu_3346_p2;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter0;
wire    ap_block_state138_pp7_stage0_iter0;
wire    ap_block_state139_pp7_stage0_iter1;
wire    ap_block_pp7_stage0_11001;
wire   [0:0] icmp_ln74_fu_3356_p2;
reg   [0:0] icmp_ln74_reg_4856;
wire   [15:0] add_ln703_1_fu_3375_p2;
reg    ap_enable_reg_pp7_iter1;
wire    ap_CS_fsm_state27;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state28;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state37;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
wire    ap_CS_fsm_state46;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_flush_enable;
wire    ap_CS_fsm_state69;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state70;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_pp4_stage1_subdone;
reg    ap_condition_pp4_flush_enable;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter1_state89;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter5;
reg    ap_enable_reg_pp4_iter6;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state108;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state116;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_flush_enable;
reg   [7:0] wbuf_V_address0;
reg    wbuf_V_ce0;
reg    wbuf_V_we0;
reg   [7:0] dwbuf_V_address0;
reg    dwbuf_V_ce0;
reg    dwbuf_V_we0;
reg   [15:0] dwbuf_V_d0;
reg   [7:0] dwbuf_V_address1;
reg    dwbuf_V_ce1;
reg   [94:0] indvar_flatten21_reg_539;
reg  signed [30:0] i_reg_550;
reg   [63:0] indvar_flatten_reg_562;
reg   [31:0] j_reg_574;
reg   [31:0] k_reg_586;
reg   [15:0] dbbuf_V_2_2_reg_631;
reg   [15:0] dbbuf_V_1_2_reg_643;
reg   [15:0] dbbuf_V_0_2_reg_655;
reg   [15:0] bbuf_V_2_2_reg_667;
reg   [15:0] bbuf_V_1_2_reg_679;
reg   [15:0] bbuf_V_0_2_reg_691;
reg   [31:0] j_1_reg_703;
reg   [94:0] indvar_flatten90_reg_715;
reg   [30:0] i_3_reg_726;
reg   [63:0] indvar_flatten67_reg_738;
reg   [31:0] k_1_reg_750;
reg   [62:0] indvar_flatten145_reg_773;
reg   [30:0] f_1_reg_784;
reg   [31:0] h_1_reg_795;
reg   [31:0] w_1_reg_807;
reg   [15:0] dbbuf_V_2_9_reg_818;
reg   [95:0] ap_phi_mux_indvar_flatten134_phi_fu_832_p4;
wire    ap_block_pp4_stage0;
reg   [31:0] ap_phi_mux_c_1_phi_fu_843_p4;
reg   [63:0] ap_phi_mux_indvar_flatten103_phi_fu_855_p4;
wire    ap_block_pp4_stage1;
reg   [31:0] ap_phi_mux_fh_1_phi_fu_866_p4;
reg   [31:0] ap_phi_mux_fw_1_phi_fu_877_p4;
reg   [94:0] indvar_flatten179_reg_884;
reg    ap_block_state115;
reg   [31:0] j_2_reg_895;
reg   [30:0] i_4_reg_907;
reg   [63:0] indvar_flatten156_reg_918;
reg   [31:0] k_2_reg_930;
reg   [30:0] f_reg_963;
reg   [95:0] indvar_flatten56_reg_974;
reg   [31:0] c_reg_985;
reg   [63:0] indvar_flatten35_reg_996;
reg   [31:0] h_reg_1008;
reg   [31:0] w_reg_1019;
reg   [15:0] empty_59_reg_1031;
wire    ap_CS_fsm_state141;
reg   [31:0] fh_reg_1041;
reg   [15:0] empty_64_reg_1075;
wire    ap_CS_fsm_state140;
wire   [31:0] zext_ln49_4_fu_1539_p1;
wire   [31:0] zext_ln91_4_fu_2039_p1;
wire   [31:0] p_cast46_fu_2269_p1;
wire   [31:0] zext_ln1118_5_fu_2634_p1;
wire   [31:0] zext_ln1118_fu_2651_p1;
wire   [31:0] zext_ln727_1_fu_2705_p1;
wire   [31:0] zext_ln118_4_fu_3040_p1;
wire   [31:0] zext_ln72_fu_3290_p1;
wire   [31:0] zext_ln1116_fu_3370_p1;
wire    ap_block_pp7_stage0;
wire  signed [31:0] sext_ln58_fu_1286_p1;
wire  signed [31:0] sext_ln48_fu_1470_p1;
wire  signed [31:0] sext_ln61_fu_1600_p1;
wire  signed [31:0] sext_ln90_fu_1970_p1;
wire  signed [31:0] sext_ln125_fu_2809_p1;
wire  signed [31:0] sext_ln117_fu_2971_p1;
reg    ap_block_state11_io;
reg    ap_predicate_op866_writeresp_state122;
reg    ap_block_state122;
wire    ap_block_pp5_stage0_01001;
wire    ap_block_pp6_stage0_01001;
reg   [31:0] reuse_addr_reg_fu_238;
reg   [15:0] reuse_reg_fu_242;
reg   [15:0] bbuf_V_2_fu_254;
reg   [15:0] bbuf_V_2_1_fu_258;
reg   [15:0] bbuf_V_2_3_fu_262;
reg   [15:0] dbbuf_V_2_1_fu_266;
reg   [15:0] dbbuf_V_2_3_fu_270;
reg   [15:0] dbbuf_V_2_5_fu_274;
reg   [15:0] dbbuf_V_0_3_fu_278;
wire   [15:0] dbbuf_V_0_7_fu_2316_p3;
reg   [15:0] dbbuf_V_0_4_fu_282;
wire   [15:0] dbbuf_V_0_6_fu_2309_p3;
reg   [15:0] dbbuf_V_2_4_fu_286;
wire   [15:0] dbbuf_V_2_8_fu_2295_p3;
reg   [31:0] x_Addr_A_orig;
reg   [31:0] dx_Addr_A_orig;
reg   [31:0] y_Addr_A_orig;
wire   [31:0] grp_fu_1107_p2;
wire   [9:0] sub_ln41_fu_1147_p2;
wire   [31:0] sub_ln42_fu_1157_p2;
wire   [31:0] grp_fu_1182_p0;
wire   [31:0] grp_fu_1182_p1;
wire   [30:0] grp_fu_1198_p0;
wire   [63:0] grp_fu_1198_p1;
wire   [30:0] trunc_ln46_fu_1229_p1;
wire   [0:0] icmp_ln47_1_fu_1265_p2;
wire   [30:0] trunc_ln3_fu_1277_p4;
wire    ap_CS_fsm_state12;
wire   [3:0] tmp_5_fu_1316_p3;
wire   [4:0] zext_ln49_1_fu_1323_p1;
wire   [4:0] zext_ln49_fu_1313_p1;
wire   [4:0] sub_ln49_fu_1327_p2;
wire   [31:0] select_ln45_fu_1301_p3;
wire   [31:0] add_ln46_fu_1348_p2;
wire   [30:0] trunc_ln46_1_fu_1354_p1;
wire   [30:0] select_ln45_1_fu_1308_p3;
wire   [30:0] tmp_mid1_fu_1358_p2;
wire   [30:0] select_ln45_3_fu_1337_p3;
wire   [3:0] trunc_ln49_1_fu_1371_p1;
wire   [3:0] select_ln45_4_fu_1342_p3;
wire   [3:0] select_ln46_2_fu_1375_p3;
wire  signed [5:0] sext_ln46_fu_1333_p1;
wire   [5:0] zext_ln49_2_fu_1382_p1;
wire    ap_CS_fsm_state15;
wire   [0:0] or_ln46_fu_1403_p2;
wire   [30:0] trunc_ln47_fu_1415_p1;
wire    ap_CS_fsm_state18;
wire   [7:0] tmp_4_fu_1431_p3;
wire  signed [29:0] sext_ln49_1_fu_1438_p1;
wire  signed [29:0] sext_ln49_fu_1428_p1;
wire   [31:0] tmp_7_fu_1448_p3;
wire   [31:0] empty_50_fu_1455_p2;
wire   [30:0] trunc_ln5_fu_1460_p4;
wire   [5:0] trunc_ln49_2_fu_1480_p1;
wire   [29:0] add_ln49_1_fu_1442_p2;
wire   [29:0] zext_ln49_3_fu_1483_p1;
wire   [29:0] add_ln49_2_fu_1487_p2;
wire   [5:0] trunc_ln49_4_fu_1497_p1;
wire   [7:0] p_shl1_cast_fu_1501_p3;
wire   [7:0] trunc_ln49_3_fu_1493_p1;
wire   [31:0] l_cast_fu_1521_p1;
wire   [7:0] trunc_ln49_5_fu_1530_p1;
wire   [63:0] add_ln46_1_fu_1548_p2;
wire   [30:0] grp_fu_1098_p4;
wire   [31:0] grp_fu_1656_p0;
wire   [31:0] grp_fu_1656_p1;
wire   [31:0] add_ln68_fu_1662_p2;
wire   [30:0] grp_fu_1687_p0;
wire   [63:0] grp_fu_1687_p1;
wire  signed [30:0] grp_fu_1699_p0;
wire  signed [30:0] grp_fu_1699_p1;
wire  signed [30:0] grp_fu_1708_p1;
wire  signed [30:0] grp_fu_1717_p0;
wire   [31:0] grp_fu_1750_p0;
wire   [31:0] grp_fu_1750_p1;
wire   [30:0] add_ln87_fu_1770_p2;
wire   [1:0] trunc_ln87_3_fu_1790_p1;
wire   [3:0] tmp_s_fu_1798_p3;
wire   [4:0] zext_ln91_1_fu_1806_p1;
wire   [4:0] zext_ln91_fu_1794_p1;
wire   [4:0] sub_ln91_fu_1810_p2;
wire   [0:0] icmp_ln89_1_fu_1826_p2;
wire   [31:0] select_ln87_fu_1776_p3;
wire   [0:0] or_ln88_fu_1843_p2;
wire   [31:0] add_ln88_fu_1837_p2;
wire   [3:0] trunc_ln91_1_fu_1860_p1;
wire   [3:0] select_ln87_3_fu_1820_p3;
wire   [3:0] select_ln88_2_fu_1864_p3;
wire  signed [5:0] sext_ln88_fu_1816_p1;
wire   [5:0] zext_ln91_2_fu_1872_p1;
wire    ap_CS_fsm_state59;
wire   [30:0] select_ln87_2_fu_1906_p3;
wire   [30:0] tmp18_fu_1918_p2;
wire   [30:0] select_ln88_1_fu_1912_p3;
wire   [7:0] tmp_6_fu_1931_p3;
wire  signed [29:0] sext_ln91_1_fu_1938_p1;
wire  signed [29:0] sext_ln91_fu_1928_p1;
wire   [31:0] tmp_8_fu_1948_p3;
wire   [31:0] empty_73_fu_1955_p2;
wire   [30:0] trunc_ln_fu_1960_p4;
wire   [5:0] trunc_ln91_2_fu_1980_p1;
wire   [29:0] add_ln91_1_fu_1942_p2;
wire   [29:0] zext_ln91_3_fu_1983_p1;
wire   [29:0] add_ln91_2_fu_1987_p2;
wire   [5:0] trunc_ln91_4_fu_1997_p1;
wire   [7:0] p_shl3_cast_fu_2001_p3;
wire   [7:0] trunc_ln91_3_fu_1993_p1;
wire   [31:0] l_1_cast_fu_2021_p1;
wire   [7:0] trunc_ln91_5_fu_2030_p1;
wire   [63:0] add_ln88_1_fu_2048_p2;
wire   [31:0] grp_fu_2067_p0;
wire   [63:0] grp_fu_2067_p1;
wire   [30:0] grp_fu_2080_p0;
wire   [31:0] grp_fu_2080_p1;
wire   [31:0] add_ln97_fu_2089_p2;
wire   [1:0] empty_74_fu_2110_p1;
wire   [30:0] add_ln97_2_fu_2131_p2;
wire   [1:0] empty_79_fu_2155_p1;
wire   [0:0] icmp_ln703_2_fu_2167_p2;
wire   [0:0] icmp_ln703_fu_2114_p2;
wire   [0:0] icmp_ln703_3_fu_2181_p2;
wire   [0:0] icmp_ln703_1_fu_2120_p2;
wire   [3:0] tmp_9_fu_2209_p3;
wire   [4:0] zext_ln1118_2_fu_2216_p1;
wire   [4:0] zext_ln1118_1_fu_2206_p1;
wire   [4:0] sub_ln1118_fu_2220_p2;
wire  signed [9:0] grp_fu_3381_p3;
wire   [9:0] empty_76_fu_2264_p2;
wire   [15:0] dbbuf_V_2_fu_2288_p3;
wire   [15:0] dbbuf_V_0_fu_2302_p3;
wire  signed [15:0] sext_ln1118_1_fu_2343_p0;
wire   [5:0] zext_ln1118_3_fu_2409_p1;
wire  signed [9:0] grp_fu_3389_p3;
wire   [7:0] tmp_13_fu_2444_p3;
wire  signed [29:0] sext_ln1118_4_fu_2451_p1;
wire  signed [29:0] sext_ln1118_3_fu_2441_p1;
wire  signed [9:0] grp_fu_3397_p3;
wire   [5:0] add_ln1118_fu_2437_p2;
(* use_dsp48 = "no" *) wire   [9:0] empty_78_fu_2433_p2;
wire   [0:0] icmp_ln102_1_fu_2484_p2;
wire   [0:0] select_ln100_6_fu_2489_p3;
wire   [0:0] or_ln101_fu_2495_p2;
wire   [9:0] select_ln100_2_fu_2461_p3;
wire   [9:0] trunc_ln101_1_fu_2508_p1;
wire   [5:0] select_ln100_3_fu_2466_p3;
wire   [5:0] select_ln101_1_fu_2517_p3;
wire   [29:0] add_ln1118_4_fu_2455_p2;
wire   [29:0] zext_ln727_fu_2524_p1;
wire   [29:0] add_ln727_fu_2528_p2;
wire   [5:0] add_ln1118_5_fu_2542_p2;
wire   [5:0] select_ln100_4_fu_2472_p3;
wire   [5:0] select_ln101_2_fu_2546_p3;
wire   [29:0] zext_ln1118_4_fu_2554_p1;
wire   [29:0] add_ln1118_6_fu_2558_p2;
wire   [5:0] trunc_ln1118_1_fu_2568_p1;
wire   [7:0] p_shl8_cast_fu_2572_p3;
wire   [7:0] trunc_ln1118_fu_2564_p1;
wire   [9:0] p_mid199_fu_2511_p2;
wire   [9:0] select_ln100_5_fu_2478_p3;
wire   [7:0] p_shl7_cast_fu_2608_p3;
wire   [7:0] add_ln727_1_fu_2615_p2;
wire   [7:0] add_ln1118_2_fu_2625_p2;
wire   [7:0] add_ln1118_8_fu_2629_p2;
wire  signed [9:0] grp_fu_3405_p3;
wire   [15:0] lhs_2_fu_2673_p3;
wire  signed [22:0] grp_fu_3412_p3;
wire  signed [22:0] grp_fu_3420_p3;
wire  signed [30:0] grp_fu_2742_p0;
wire   [30:0] add_ln114_fu_2756_p2;
wire   [0:0] icmp_ln116_fu_2779_p2;
wire   [0:0] or_ln115_fu_2791_p2;
wire   [3:0] tmp_10_fu_2834_p3;
wire   [4:0] zext_ln118_1_fu_2841_p1;
wire   [4:0] zext_ln118_fu_2831_p1;
wire   [4:0] sub_ln118_fu_2845_p2;
wire   [31:0] select_ln114_fu_2820_p3;
wire   [31:0] add_ln115_fu_2861_p2;
wire   [3:0] trunc_ln118_1_fu_2871_p1;
wire   [3:0] select_ln114_3_fu_2855_p3;
wire   [3:0] select_ln115_2_fu_2875_p3;
wire  signed [5:0] sext_ln115_fu_2851_p1;
wire   [5:0] zext_ln118_2_fu_2882_p1;
wire   [30:0] select_ln114_2_fu_2907_p3;
wire   [30:0] tmp20_fu_2919_p2;
wire   [30:0] select_ln115_1_fu_2913_p3;
wire   [7:0] tmp_11_fu_2932_p3;
wire  signed [29:0] sext_ln118_1_fu_2939_p1;
wire  signed [29:0] sext_ln118_fu_2929_p1;
wire   [31:0] tmp_12_fu_2949_p3;
wire   [31:0] empty_88_fu_2956_p2;
wire   [30:0] trunc_ln2_fu_2961_p4;
wire   [5:0] trunc_ln118_2_fu_2981_p1;
wire   [29:0] add_ln118_1_fu_2943_p2;
wire   [29:0] zext_ln118_3_fu_2984_p1;
wire   [29:0] add_ln118_2_fu_2988_p2;
wire   [5:0] trunc_ln118_4_fu_2998_p1;
wire   [7:0] p_shl5_cast_fu_3002_p3;
wire   [7:0] trunc_ln118_3_fu_2994_p1;
wire   [31:0] l_2_cast_fu_3022_p1;
wire   [7:0] trunc_ln118_5_fu_3031_p1;
wire   [7:0] add_ln118_4_fu_3035_p2;
wire   [63:0] add_ln115_1_fu_3050_p2;
wire   [1:0] tmp_3_fu_3078_p4;
wire   [31:0] grp_fu_3097_p0;
wire   [31:0] grp_fu_3097_p1;
wire   [31:0] grp_fu_3109_p0;
wire   [63:0] grp_fu_3109_p1;
wire  signed [9:0] empty_57_fu_3140_p0;
wire   [1:0] tmp_1_fu_3145_p4;
wire   [9:0] trunc_ln70_fu_3163_p1;
wire   [31:0] add_ln69_fu_3177_p2;
wire   [0:0] icmp_ln71_1_fu_3216_p2;
wire   [31:0] select_ln69_fu_3188_p3;
wire   [31:0] add_ln70_fu_3228_p2;
wire   [9:0] select_ln69_2_fu_3208_p3;
wire   [9:0] p_mid131_fu_3259_p2;
wire   [9:0] select_ln69_3_fu_3254_p3;
wire   [0:0] or_ln70_fu_3270_p2;
wire  signed [9:0] grp_fu_3428_p3;
wire   [9:0] trunc_ln73_fu_3305_p1;
wire   [9:0] tmp17_fu_3309_p2;
wire   [63:0] add_ln70_1_fu_3324_p2;
wire   [9:0] empty_61_fu_3337_p2;
wire   [31:0] fw_cast_fu_3352_p1;
wire   [9:0] trunc_ln75_fu_3361_p1;
wire   [9:0] add_ln1116_fu_3365_p2;
wire  signed [9:0] grp_fu_3381_p0;
wire   [9:0] grp_fu_3381_p2;
wire  signed [9:0] grp_fu_3389_p0;
wire  signed [9:0] grp_fu_3397_p0;
wire  signed [9:0] grp_fu_3405_p0;
wire  signed [15:0] grp_fu_3412_p1;
wire   [22:0] grp_fu_3412_p2;
wire  signed [15:0] grp_fu_3420_p1;
wire   [22:0] grp_fu_3420_p2;
wire  signed [9:0] grp_fu_3428_p0;
wire   [9:0] grp_fu_3428_p2;
reg    grp_fu_2742_ce;
reg   [119:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
wire   [63:0] grp_fu_1182_p00;
wire   [63:0] grp_fu_1182_p10;
wire   [94:0] grp_fu_1198_p00;
wire   [94:0] grp_fu_1198_p10;
wire   [63:0] grp_fu_1656_p00;
wire   [63:0] grp_fu_1656_p10;
wire   [94:0] grp_fu_1687_p00;
wire   [94:0] grp_fu_1687_p10;
wire   [63:0] grp_fu_1750_p10;
wire   [95:0] grp_fu_2067_p00;
wire   [95:0] grp_fu_2067_p10;
wire   [62:0] grp_fu_2080_p00;
wire   [62:0] grp_fu_2080_p10;
wire   [63:0] grp_fu_3097_p00;
wire   [63:0] grp_fu_3097_p10;
wire   [95:0] grp_fu_3109_p00;
wire   [95:0] grp_fu_3109_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 120'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp4_iter6 = 1'b0;
end

conv_combined_CRTL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
CRTL_BUS_s_axi_U(
    .AWVALID(s_axi_CRTL_BUS_AWVALID),
    .AWREADY(s_axi_CRTL_BUS_AWREADY),
    .AWADDR(s_axi_CRTL_BUS_AWADDR),
    .WVALID(s_axi_CRTL_BUS_WVALID),
    .WREADY(s_axi_CRTL_BUS_WREADY),
    .WDATA(s_axi_CRTL_BUS_WDATA),
    .WSTRB(s_axi_CRTL_BUS_WSTRB),
    .ARVALID(s_axi_CRTL_BUS_ARVALID),
    .ARREADY(s_axi_CRTL_BUS_ARREADY),
    .ARADDR(s_axi_CRTL_BUS_ARADDR),
    .RVALID(s_axi_CRTL_BUS_RVALID),
    .RREADY(s_axi_CRTL_BUS_RREADY),
    .RDATA(s_axi_CRTL_BUS_RDATA),
    .RRESP(s_axi_CRTL_BUS_RRESP),
    .BVALID(s_axi_CRTL_BUS_BVALID),
    .BREADY(s_axi_CRTL_BUS_BREADY),
    .BRESP(s_axi_CRTL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .wt(wt),
    .dwt(dwt),
    .b(b),
    .db(db),
    .F(F),
    .C(C),
    .H(H),
    .W(W),
    .FH(FH),
    .FW(FW),
    .fwprop(fwprop),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

conv_combined_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(gmem_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(gmem_AWLEN),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(gmem_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

conv_combined_wbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
wbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(wbuf_V_address0),
    .ce0(wbuf_V_ce0),
    .we0(wbuf_V_we0),
    .d0(gmem_addr_2_read_reg_3792),
    .q0(wbuf_V_q0)
);

conv_combined_dwbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
dwbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dwbuf_V_address0),
    .ce0(dwbuf_V_ce0),
    .we0(dwbuf_V_we0),
    .d0(dwbuf_V_d0),
    .address1(dwbuf_V_address1),
    .ce1(dwbuf_V_ce1),
    .q1(dwbuf_V_q1)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1182_p0),
    .din1(grp_fu_1182_p1),
    .ce(1'b1),
    .dout(grp_fu_1182_p2)
);

conv_combined_mul_31ns_64ns_95_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
mul_31ns_64ns_95_5_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1198_p0),
    .din1(grp_fu_1198_p1),
    .ce(1'b1),
    .dout(grp_fu_1198_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(i_reg_550),
    .din1(trunc_ln45_1_reg_3620),
    .ce(1'b1),
    .dout(grp_fu_1219_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(add_ln45_reg_3666),
    .din1(trunc_ln45_1_reg_3620),
    .ce(1'b1),
    .dout(grp_fu_1297_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln46_1_reg_3730),
    .din1(trunc_ln45_reg_3615),
    .ce(1'b1),
    .dout(grp_fu_1399_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp11_reg_3757),
    .din1(empty_45_reg_3626),
    .ce(1'b1),
    .dout(grp_fu_1424_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1656_p0),
    .din1(grp_fu_1656_p1),
    .ce(1'b1),
    .dout(grp_fu_1656_p2)
);

conv_combined_mul_31ns_64ns_95_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
mul_31ns_64ns_95_5_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1687_p0),
    .din1(grp_fu_1687_p1),
    .ce(1'b1),
    .dout(grp_fu_1687_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1699_p0),
    .din1(grp_fu_1699_p1),
    .ce(1'b1),
    .dout(grp_fu_1699_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(empty_66_reg_3944),
    .din1(grp_fu_1708_p1),
    .ce(1'b1),
    .dout(grp_fu_1708_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1717_p0),
    .din1(empty_66_reg_3944),
    .ce(1'b1),
    .dout(grp_fu_1717_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1750_p0),
    .din1(grp_fu_1750_p1),
    .ce(1'b1),
    .dout(grp_fu_1750_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln87_1_reg_4044),
    .din1(empty_67_reg_3962),
    .ce(1'b1),
    .dout(grp_fu_1894_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln88_1_reg_4061),
    .din1(empty_66_reg_3944),
    .ce(1'b1),
    .dout(grp_fu_1898_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln89_reg_4077),
    .din1(trunc_ln87_reg_3932),
    .ce(1'b1),
    .dout(grp_fu_1902_p2)
);

conv_combined_mul_32ns_64ns_96_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 96 ))
mul_32ns_64ns_96_5_1_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2067_p0),
    .din1(grp_fu_2067_p1),
    .ce(1'b1),
    .dout(grp_fu_2067_p2)
);

conv_combined_mul_31ns_32ns_63_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_31ns_32ns_63_2_1_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2080_p0),
    .din1(grp_fu_2080_p1),
    .ce(1'b1),
    .dout(grp_fu_2080_p2)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U18(
    .din0(grp_fu_3381_p3),
    .din1(reg_1135),
    .dout(empty_81_fu_2230_p2)
);

conv_combined_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U19(
    .din0(dbbuf_V_0_3_fu_278),
    .din1(dbbuf_V_0_4_fu_282),
    .din2(dbbuf_V_2_4_fu_286),
    .din3(select_ln97_2_reg_4216),
    .dout(tmp_2_fu_2235_p5)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2742_p0),
    .din1(empty_66_reg_3944),
    .ce(grp_fu_2742_ce),
    .dout(grp_fu_2742_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln114_1_reg_4554),
    .din1(empty_67_reg_3962),
    .ce(1'b1),
    .dout(grp_fu_2827_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln116_reg_4579),
    .din1(trunc_ln87_reg_3932),
    .ce(1'b1),
    .dout(grp_fu_2899_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln115_1_reg_4590),
    .din1(empty_66_reg_3944),
    .ce(1'b1),
    .dout(grp_fu_2903_p2)
);

conv_combined_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U24(
    .din0(dbbuf_V_0_3_fu_278),
    .din1(dbbuf_V_0_4_fu_282),
    .din2(dbbuf_V_2_4_fu_286),
    .din3(tmp_3_fu_3078_p4),
    .dout(tmp_3_fu_3078_p5)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3097_p0),
    .din1(grp_fu_3097_p1),
    .ce(1'b1),
    .dout(grp_fu_3097_p2)
);

conv_combined_mul_32ns_64ns_96_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 96 ))
mul_32ns_64ns_96_5_1_U26(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3109_p0),
    .din1(grp_fu_3109_p1),
    .ce(1'b1),
    .dout(grp_fu_3109_p2)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U27(
    .din0(empty_57_fu_3140_p0),
    .din1(outH_reg_3559),
    .dout(empty_57_fu_3140_p2)
);

conv_combined_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U28(
    .din0(bbuf_V_0_2_reg_691),
    .din1(bbuf_V_1_2_reg_679),
    .din2(bbuf_V_2_2_reg_667),
    .din3(tmp_1_fu_3145_p4),
    .dout(tmp_1_fu_3145_p5)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U29(
    .din0(trunc_ln69_reg_4771),
    .din1(empty_43_reg_3551),
    .dout(mul_ln69_fu_3286_p2)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U30(
    .din0(empty_60_reg_4831),
    .din1(trunc_ln68_reg_4710),
    .dout(empty_61_fu_3337_p2)
);

conv_combined_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3381_p0),
    .din1(outH_reg_3559),
    .din2(grp_fu_3381_p2),
    .ce(1'b1),
    .dout(grp_fu_3381_p3)
);

conv_combined_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3389_p0),
    .din1(empty_43_reg_3551),
    .din2(trunc_ln98_reg_4242),
    .ce(1'b1),
    .dout(grp_fu_3389_p3)
);

conv_combined_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3397_p0),
    .din1(empty_43_reg_3551),
    .din2(trunc_ln98_reg_4242),
    .ce(1'b1),
    .dout(grp_fu_3397_p3)
);

conv_combined_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3405_p0),
    .din1(trunc_ln97_reg_4168),
    .din2(trunc_ln99_reg_4279),
    .ce(1'b1),
    .dout(grp_fu_3405_p3)
);

conv_combined_mac_muladd_16s_16s_23ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 23 ))
mac_muladd_16s_16s_23ns_23_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(wbuf_V_load_reg_4456),
    .din1(grp_fu_3412_p1),
    .din2(grp_fu_3412_p2),
    .ce(1'b1),
    .dout(grp_fu_3412_p3)
);

conv_combined_mac_muladd_16s_16s_23ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 23 ))
mac_muladd_16s_16s_23ns_23_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(x_load_1_reg_4486),
    .din1(grp_fu_3420_p1),
    .din2(grp_fu_3420_p2),
    .ce(1'b1),
    .dout(grp_fu_3420_p3)
);

conv_combined_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3428_p0),
    .din1(reg_1135),
    .din2(grp_fu_3428_p2),
    .ce(1'b1),
    .dout(grp_fu_3428_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state28))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state28)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state28);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp2_flush_enable)) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state46)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state46)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state70))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state70)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state70);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp4_flush_enable)) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state85)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            if ((1'b1 == ap_condition_pp4_exit_iter1_state89)) begin
                ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter6 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b0)) | ((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
            ap_enable_reg_pp4_iter6 <= ap_enable_reg_pp4_iter5;
        end else if ((1'b1 == ap_CS_fsm_state85)) begin
            ap_enable_reg_pp4_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state108) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state107))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state108)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state108);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state107))) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state116))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if (((icmp_ln114_reg_4537 == 1'd1) & (1'b0 == ap_block_state101_io) & (1'b1 == ap_CS_fsm_state101))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state116))) begin
            ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state116);
        end else if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end else if (((icmp_ln114_reg_4537 == 1'd1) & (1'b0 == ap_block_state101_io) & (1'b1 == ap_CS_fsm_state101))) begin
            ap_enable_reg_pp6_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp7_flush_enable)) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state137) & (cmp106321_reg_4706 == 1'd1))) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
        end else if (((1'b1 == ap_CS_fsm_state137) & (cmp106321_reg_4706 == 1'd1))) begin
            ap_enable_reg_pp7_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln100_reg_4320 == 1'd0))) begin
        c_1_reg_839 <= select_ln100_1_reg_4346;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        c_1_reg_839 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (icmp_ln73_fu_3300_p2 == 1'd1))) begin
        c_reg_985 <= select_ln69_1_reg_4766;
    end else if (((1'b1 == ap_CS_fsm_state130) & (icmp_ln68_fu_3127_p2 == 1'd0))) begin
        c_reg_985 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_1732_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        dbbuf_V_0_3_fu_278 <= dbbuf_V_0_2_reg_655;
    end else if (((cmp176388_reg_4035 == 1'd1) & (1'b1 == ap_CS_fsm_state84) & (icmp_ln99_fu_2255_p2 == 1'd1))) begin
        dbbuf_V_0_3_fu_278 <= dbbuf_V_0_7_fu_2316_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_1732_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        dbbuf_V_0_4_fu_282 <= dbbuf_V_1_2_reg_643;
    end else if (((cmp176388_reg_4035 == 1'd1) & (1'b1 == ap_CS_fsm_state84) & (icmp_ln99_fu_2255_p2 == 1'd1))) begin
        dbbuf_V_0_4_fu_282 <= dbbuf_V_0_6_fu_2309_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_1732_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        dbbuf_V_2_4_fu_286 <= dbbuf_V_2_2_reg_631;
    end else if (((cmp176388_reg_4035 == 1'd1) & (1'b1 == ap_CS_fsm_state84) & (icmp_ln99_fu_2255_p2 == 1'd1))) begin
        dbbuf_V_2_4_fu_286 <= dbbuf_V_2_8_fu_2295_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp176388_reg_4035 == 1'd1) & (1'b1 == ap_CS_fsm_state83))) begin
        dbbuf_V_2_9_reg_818 <= tmp_2_fu_2235_p5;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dbbuf_V_2_9_reg_818 <= add_ln703_fu_2727_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        empty_59_reg_1031 <= tmp_1_reg_4740;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        empty_59_reg_1031 <= empty_64_reg_1075;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) & (cmp106321_reg_4706 == 1'd1))) begin
        empty_62_reg_1063 <= empty_59_reg_1031;
    end else if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (icmp_ln74_reg_4856 == 1'd0))) begin
        empty_62_reg_1063 <= add_ln703_1_fu_3375_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) & (cmp106321_reg_4706 == 1'd0))) begin
        empty_64_reg_1075 <= empty_59_reg_1031;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        empty_64_reg_1075 <= empty_62_reg_1063;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) & ((cmp176388_reg_4035 == 1'd0) | (icmp_ln99_fu_2255_p2 == 1'd1)))) begin
        f_1_reg_784 <= select_ln97_1_reg_4206;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        f_1_reg_784 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state129)) begin
        f_reg_963 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state131) & (icmp_ln69_fu_3172_p2 == 1'd1))) begin
        f_reg_963 <= add_ln68_2_reg_4725;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln100_reg_4320_pp4_iter1_reg == 1'd0))) begin
        fh_1_reg_862 <= select_ln101_4_reg_4425;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        fh_1_reg_862 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        fh_reg_1041 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        fh_reg_1041 <= add_ln73_reg_4823;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln100_reg_4320_pp4_iter2_reg == 1'd0))) begin
        fw_1_reg_873 <= add_ln102_reg_4451;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        fw_1_reg_873 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) & (cmp106321_reg_4706 == 1'd1))) begin
        fw_reg_1052 <= 31'd0;
    end else if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln74_fu_3356_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        fw_reg_1052 <= add_ln74_fu_3346_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) & ((cmp176388_reg_4035 == 1'd0) | (icmp_ln99_fu_2255_p2 == 1'd1)))) begin
        h_1_reg_795 <= add_ln98_fu_2338_p2;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        h_1_reg_795 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (icmp_ln73_fu_3300_p2 == 1'd1))) begin
        h_reg_1008 <= select_ln70_3_reg_4792;
    end else if (((1'b1 == ap_CS_fsm_state130) & (icmp_ln68_fu_3127_p2 == 1'd0))) begin
        h_reg_1008 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_fu_1567_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_1_reg_609 <= add_ln58_fu_1561_p2;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        i_1_reg_609 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_fu_1617_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_2_reg_620 <= add_ln61_fu_1611_p2;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        i_2_reg_620 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        i_3_reg_726 <= select_ln87_1_reg_4044;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        i_3_reg_726 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln97_fu_2126_p2 == 1'd1))) begin
        i_4_reg_907 <= 31'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147403_reg_3958 == 1'd1)) & (1'b1 == ap_CS_fsm_state115))) begin
        i_4_reg_907 <= select_ln114_1_reg_4554;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_reg_4537 == 1'd1) & (1'b0 == ap_block_state101_io) & (1'b1 == ap_CS_fsm_state101))) begin
        i_5_reg_952 <= 31'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln125_fu_3069_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        i_5_reg_952 <= add_ln125_fu_3063_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_reg_550 <= select_ln45_2_reg_3681;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_reg_550 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln100_reg_4320_pp4_iter1_reg == 1'd0))) begin
        indvar_flatten103_reg_851 <= select_ln101_5_reg_4395;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        indvar_flatten103_reg_851 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln100_reg_4320 == 1'd0))) begin
        indvar_flatten134_reg_828 <= add_ln100_1_reg_4310;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        indvar_flatten134_reg_828 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) & ((cmp176388_reg_4035 == 1'd0) | (icmp_ln99_fu_2255_p2 == 1'd1)))) begin
        indvar_flatten145_reg_773 <= add_ln97_4_reg_4193;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        indvar_flatten145_reg_773 <= 63'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln97_fu_2126_p2 == 1'd1))) begin
        indvar_flatten156_reg_918 <= 64'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147403_reg_3958 == 1'd1)) & (1'b1 == ap_CS_fsm_state115))) begin
        indvar_flatten156_reg_918 <= select_ln115_4_fu_3056_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln97_fu_2126_p2 == 1'd1))) begin
        indvar_flatten179_reg_884 <= 95'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147403_reg_3958 == 1'd1)) & (1'b1 == ap_CS_fsm_state115))) begin
        indvar_flatten179_reg_884 <= add_ln114_1_reg_4522;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten21_reg_539 <= add_ln45_1_reg_3641;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten21_reg_539 <= 95'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (icmp_ln73_fu_3300_p2 == 1'd1))) begin
        indvar_flatten35_reg_996 <= select_ln70_4_fu_3330_p3;
    end else if (((1'b1 == ap_CS_fsm_state130) & (icmp_ln68_fu_3127_p2 == 1'd0))) begin
        indvar_flatten35_reg_996 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (icmp_ln73_fu_3300_p2 == 1'd1))) begin
        indvar_flatten56_reg_974 <= add_ln69_1_reg_4746;
    end else if (((1'b1 == ap_CS_fsm_state130) & (icmp_ln68_fu_3127_p2 == 1'd0))) begin
        indvar_flatten56_reg_974 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        indvar_flatten67_reg_738 <= select_ln88_4_fu_2054_p3;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        indvar_flatten67_reg_738 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        indvar_flatten90_reg_715 <= add_ln87_1_reg_3990;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        indvar_flatten90_reg_715 <= 95'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten_reg_562 <= select_ln46_4_fu_1554_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten_reg_562 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        j_1_reg_703 <= select_ln88_3_reg_4072;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        j_1_reg_703 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln97_fu_2126_p2 == 1'd1))) begin
        j_2_reg_895 <= 32'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147403_reg_3958 == 1'd1)) & (1'b1 == ap_CS_fsm_state115))) begin
        j_2_reg_895 <= select_ln115_3_reg_4601;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        j_reg_574 <= select_ln46_3_reg_3741;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        j_reg_574 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        k_1_reg_750 <= add_ln89_fu_2043_p2;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        k_1_reg_750 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln97_fu_2126_p2 == 1'd1))) begin
        k_2_reg_930 <= 32'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147403_reg_3958 == 1'd1)) & (1'b1 == ap_CS_fsm_state115))) begin
        k_2_reg_930 <= add_ln116_fu_3045_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        k_reg_586 <= add_ln47_fu_1543_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_reg_586 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        l_1_reg_762 <= 31'd0;
    end else if (((icmp_ln90_fu_2025_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        l_1_reg_762 <= add_ln90_fu_2015_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state107))) begin
        l_2_reg_941 <= 31'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln117_fu_3026_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        l_2_reg_941 <= add_ln117_fu_3016_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        l_reg_598 <= 31'd0;
    end else if (((icmp_ln48_fu_1525_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        l_reg_598 <= add_ln48_fu_1515_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp176388_reg_4035 == 1'd1) & (1'b1 == ap_CS_fsm_state84) & (icmp_ln99_fu_2255_p2 == 1'd0))) begin
        reuse_addr_reg_fu_238 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (icmp_ln100_reg_4320_pp4_iter3_reg == 1'd0))) begin
        reuse_addr_reg_fu_238 <= zext_ln1118_fu_2651_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp176388_reg_4035 == 1'd1) & (1'b1 == ap_CS_fsm_state84) & (icmp_ln99_fu_2255_p2 == 1'd0))) begin
        reuse_reg_fu_242 <= 16'd0;
    end else if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter4 == 1'b1) & (icmp_ln100_reg_4320_pp4_iter4_reg == 1'd0))) begin
        reuse_reg_fu_242 <= {{grp_fu_3412_p3[22:7]}};
    end
end

always @ (posedge ap_clk) begin
    if (((cmp176388_reg_4035 == 1'd1) & (1'b1 == ap_CS_fsm_state83))) begin
        w_1_reg_807 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        w_1_reg_807 <= add_ln99_reg_4271;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (icmp_ln73_fu_3300_p2 == 1'd1))) begin
        w_reg_1019 <= add_ln71_fu_3319_p2;
    end else if (((1'b1 == ap_CS_fsm_state130) & (icmp_ln68_fu_3127_p2 == 1'd0))) begin
        w_reg_1019 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        C_read_reg_3504 <= C;
        FH_read_reg_3476 <= FH;
        FW_read_reg_3455 <= FW;
        F_read_reg_3514 <= F;
        H_read_reg_3499 <= H;
        W_read_reg_3490 <= W;
        b_read_reg_3530 <= b;
        db_read_reg_3525 <= db;
        dwt_read_reg_3535 <= dwt;
        empty_43_reg_3551 <= empty_43_fu_1143_p1;
        empty_reg_3546 <= empty_fu_1139_p1;
        fwprop_read_reg_3451 <= fwprop;
        wt_read_reg_3541 <= wt;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        add_ln100_1_reg_4310 <= add_ln100_1_fu_2347_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln100_fu_2357_p2 == 1'd0))) begin
        add_ln100_reg_4324 <= add_ln100_fu_2362_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln100_reg_4320 == 1'd0))) begin
        add_ln101_2_reg_4356 <= add_ln101_2_fu_2388_p2;
        icmp_ln101_reg_4334 <= icmp_ln101_fu_2372_p2;
        trunc_ln100_2_reg_4351 <= trunc_ln100_2_fu_2384_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln100_reg_4320 == 1'd0))) begin
        add_ln101_reg_4383 <= add_ln101_fu_2417_p2;
        add_ln1118_3_reg_4377 <= add_ln1118_3_fu_2412_p2;
        select_ln100_reg_4372 <= select_ln100_fu_2402_p3;
        trunc_ln727_1_reg_4389 <= trunc_ln727_1_fu_2423_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln100_reg_4320_pp4_iter1_reg == 1'd0))) begin
        add_ln102_reg_4451 <= add_ln102_fu_2639_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln100_reg_4320_pp4_iter2_reg == 1'd0))) begin
        add_ln1118_1_reg_4461 <= add_ln1118_1_fu_2644_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln100_reg_4320_pp4_iter1_reg == 1'd0))) begin
        add_ln1118_7_reg_4415 <= add_ln1118_7_fu_2580_p2;
        select_ln101_reg_4400 <= select_ln101_fu_2500_p3;
        trunc_ln103_reg_4430 <= trunc_ln103_fu_2600_p1;
        trunc_ln727_2_reg_4405 <= trunc_ln727_2_fu_2534_p1;
        trunc_ln727_3_reg_4410 <= trunc_ln727_3_fu_2538_p1;
        trunc_ln727_4_reg_4435 <= trunc_ln727_4_fu_2604_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        add_ln114_1_reg_4522 <= add_ln114_1_fu_2732_p2;
        icmp_ln114_reg_4537 <= icmp_ln114_fu_2751_p2;
        trunc_ln118_reg_4532 <= trunc_ln118_fu_2747_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp147403_reg_3958 == 1'd1) & (1'b1 == ap_CS_fsm_state106))) begin
        add_ln118_3_reg_4632 <= add_ln118_3_fu_3010_p2;
        gmem_addr_5_reg_4626 <= sext_ln117_fu_2971_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        add_ln118_reg_4595 <= add_ln118_fu_2886_p2;
        select_ln115_3_reg_4601 <= select_ln115_3_fu_2892_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln45_1_reg_3641 <= add_ln45_1_fu_1213_p2;
        icmp_ln45_1_reg_3646 <= icmp_ln45_1_fu_1224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_1_reg_3646 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        add_ln45_reg_3666 <= add_ln45_fu_1242_p2;
        icmp_ln46_reg_3671 <= icmp_ln46_fu_1248_p2;
        select_ln45_2_reg_3681 <= select_ln45_2_fu_1253_p3;
        select_ln45_5_reg_3692 <= select_ln45_5_fu_1270_p3;
        trunc_ln45_2_reg_3686 <= trunc_ln45_2_fu_1261_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp57433_reg_3611 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        add_ln49_3_reg_3773 <= add_ln49_3_fu_1509_p2;
        gmem_addr_2_reg_3767 <= sext_ln48_fu_1470_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_fu_1525_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln49_4_reg_3787 <= add_ln49_4_fu_1534_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln49_4_reg_3787_pp0_iter1_reg <= add_ln49_4_reg_3787;
        icmp_ln48_reg_3783 <= icmp_ln48_fu_1525_p2;
        icmp_ln48_reg_3783_pp0_iter1_reg <= icmp_ln48_reg_3783;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln49_reg_3735 <= add_ln49_fu_1386_p2;
        select_ln46_1_reg_3730 <= select_ln46_1_fu_1364_p3;
        select_ln46_3_reg_3741 <= select_ln46_3_fu_1392_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        add_ln68_2_reg_4725 <= add_ln68_2_fu_3121_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state131)) begin
        add_ln69_1_reg_4746 <= add_ln69_1_fu_3157_p2;
        empty_58_reg_4751 <= empty_58_fu_3167_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln100_reg_4320_pp4_iter1_reg == 1'd0))) begin
        add_ln727_2_reg_4441 <= add_ln727_2_fu_2620_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        add_ln727_2_reg_4441_pp4_iter3_reg <= add_ln727_2_reg_4441;
        add_ln727_2_reg_4441_pp4_iter4_reg <= add_ln727_2_reg_4441_pp4_iter3_reg;
        icmp_ln100_reg_4320 <= icmp_ln100_fu_2357_p2;
        icmp_ln100_reg_4320_pp4_iter1_reg <= icmp_ln100_reg_4320;
        icmp_ln100_reg_4320_pp4_iter2_reg <= icmp_ln100_reg_4320_pp4_iter1_reg;
        icmp_ln100_reg_4320_pp4_iter3_reg <= icmp_ln100_reg_4320_pp4_iter2_reg;
        icmp_ln100_reg_4320_pp4_iter4_reg <= icmp_ln100_reg_4320_pp4_iter3_reg;
        icmp_ln100_reg_4320_pp4_iter5_reg <= icmp_ln100_reg_4320_pp4_iter4_reg;
        trunc_ln727_reg_4366 <= trunc_ln727_fu_2398_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        add_ln73_reg_4823 <= add_ln73_fu_3294_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) & (cmp106321_reg_4706 == 1'd1))) begin
        add_ln75_reg_4846 <= add_ln75_fu_3341_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        add_ln87_1_reg_3990 <= add_ln87_1_fu_1726_p2;
        empty_68_reg_3995 <= grp_fu_1717_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp147403_reg_3958 == 1'd1) & (1'b1 == ap_CS_fsm_state62))) begin
        add_ln91_3_reg_4108 <= add_ln91_3_fu_2009_p2;
        gmem_addr_4_reg_4102 <= sext_ln90_fu_1970_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_fu_2025_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln91_4_reg_4122 <= add_ln91_4_fu_2034_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln91_4_reg_4122_pp3_iter1_reg <= add_ln91_4_reg_4122;
        icmp_ln90_reg_4118 <= icmp_ln90_fu_2025_p2;
        icmp_ln90_reg_4118_pp3_iter1_reg <= icmp_ln90_reg_4118;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        add_ln91_reg_4066 <= add_ln91_fu_1876_p2;
        select_ln87_1_reg_4044 <= select_ln87_1_fu_1783_p3;
        select_ln87_4_reg_4050 <= select_ln87_4_fu_1831_p3;
        select_ln88_3_reg_4072 <= select_ln88_3_fu_1882_p3;
        select_ln88_reg_4055 <= select_ln88_fu_1848_p3;
        trunc_ln88_1_reg_4061 <= trunc_ln88_1_fu_1856_p1;
        trunc_ln89_reg_4077 <= trunc_ln89_fu_1890_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        add_ln97_4_reg_4193 <= add_ln97_4_fu_2104_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp176388_reg_4035 == 1'd1) & (1'b1 == ap_CS_fsm_state84))) begin
        add_ln99_reg_4271 <= add_ln99_fu_2249_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln100_reg_4320_pp4_iter3_reg == 1'd0))) begin
        addr_cmp_reg_4481 <= addr_cmp_fu_2659_p2;
        dx_addr_reg_4476 <= zext_ln1118_fu_2651_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_3575 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        bbuf_V_0_2_reg_691 <= bbuf_V_2_load_reg_3820;
        bbuf_V_1_2_reg_679 <= bbuf_V_2_1_load_reg_3825;
        bbuf_V_2_2_reg_667 <= bbuf_V_2_3_load_reg_3830;
        dbbuf_V_0_2_reg_655 <= dbbuf_V_2_1_load_reg_3872;
        dbbuf_V_1_2_reg_643 <= dbbuf_V_2_3_load_reg_3877;
        dbbuf_V_2_2_reg_631 <= dbbuf_V_2_5_load_reg_3882;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln59_reg_3816 == 2'd1) & (icmp_ln58_reg_3812 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        bbuf_V_2_1_fu_258 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        bbuf_V_2_1_load_reg_3825 <= bbuf_V_2_1_fu_258;
        bbuf_V_2_3_load_reg_3830 <= bbuf_V_2_3_fu_262;
        bbuf_V_2_load_reg_3820 <= bbuf_V_2_fu_254;
    end
end

always @ (posedge ap_clk) begin
    if ((~(trunc_ln59_reg_3816 == 2'd1) & ~(trunc_ln59_reg_3816 == 2'd0) & (icmp_ln58_reg_3812 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        bbuf_V_2_3_fu_262 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln59_reg_3816 == 2'd0) & (icmp_ln58_reg_3812 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        bbuf_V_2_fu_254 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        bound108_reg_4178 <= grp_fu_2067_p2;
        bound139_reg_4183 <= grp_fu_2080_p2;
        icmp_ln102_reg_4188 <= icmp_ln102_fu_2099_p2;
        sub_ln97_reg_4173 <= sub_ln97_fu_2094_p2;
        trunc_ln97_reg_4168 <= trunc_ln97_fu_2086_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state124)) begin
        bound26_reg_4690 <= grp_fu_3097_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state129)) begin
        bound40_reg_4720 <= grp_fu_3109_p2;
        cmp106321_reg_4706 <= grp_fu_1088_p2;
        trunc_ln68_1_reg_4715 <= trunc_ln68_1_fu_3118_p1;
        trunc_ln68_reg_4710 <= trunc_ln68_fu_3115_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        bound4_reg_3631 <= grp_fu_1198_p2;
        cmp57433_reg_3611 <= grp_fu_1088_p2;
        empty_45_reg_3626 <= empty_45_fu_1210_p1;
        icmp_ln47_reg_3636 <= grp_fu_1093_p2;
        trunc_ln45_1_reg_3620 <= trunc_ln45_1_fu_1207_p1;
        trunc_ln45_reg_3615 <= trunc_ln45_fu_1204_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        bound61_reg_3909 <= grp_fu_1656_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bound72_reg_3968 <= grp_fu_1687_p2;
        cmp147403_reg_3958 <= grp_fu_1088_p2;
        empty_67_reg_3962 <= grp_fu_1708_p2;
        icmp_ln89_reg_3974 <= grp_fu_1093_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        bound95_reg_4142 <= grp_fu_1750_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bound_reg_3589 <= grp_fu_1182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((fwprop_read_reg_3451 == 1'd0) & (icmp_ln45_reg_3575 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        cast60_reg_3892[31 : 0] <= cast60_fu_1653_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_1732_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        cmp176388_reg_4035 <= cmp176388_fu_1742_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln62_reg_3868 == 2'd0) & (icmp_ln61_reg_3864 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dbbuf_V_2_1_fu_266 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dbbuf_V_2_1_load_reg_3872 <= dbbuf_V_2_1_fu_266;
        dbbuf_V_2_3_load_reg_3877 <= dbbuf_V_2_3_fu_270;
        dbbuf_V_2_5_load_reg_3882 <= dbbuf_V_2_5_fu_274;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln62_reg_3868 == 2'd1) & (icmp_ln61_reg_3864 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dbbuf_V_2_3_fu_270 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~(trunc_ln62_reg_3868 == 2'd1) & ~(trunc_ln62_reg_3868 == 2'd0) & (icmp_ln61_reg_3864 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dbbuf_V_2_5_fu_274 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln100_reg_4320_pp4_iter4_reg == 1'd0))) begin
        dwbuf_V_addr_2_reg_4506 <= zext_ln727_1_fu_2705_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln117_reg_4642 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        dwbuf_V_load_reg_4651 <= dwbuf_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        dx_addr_reg_4476_pp4_iter4_reg <= dx_addr_reg_4476;
        trunc_ln103_reg_4430_pp4_iter2_reg <= trunc_ln103_reg_4430;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        empty_44_reg_3595 <= empty_44_fu_1188_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        empty_46_reg_3650 <= grp_fu_1219_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        empty_49_reg_3762 <= grp_fu_1424_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state130) & (icmp_ln68_fu_3127_p2 == 1'd0))) begin
        empty_57_reg_4733 <= empty_57_fu_3140_p2;
        tmp_1_reg_4740 <= tmp_1_fu_3145_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (icmp_ln73_fu_3300_p2 == 1'd0))) begin
        empty_60_reg_4831 <= empty_60_fu_3314_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        empty_65_reg_3916 <= empty_65_fu_1677_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        empty_66_reg_3944 <= grp_fu_1699_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        empty_71_reg_4092 <= grp_fu_1902_p2;
        mul_ln87_reg_4082 <= grp_fu_1894_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        empty_72_reg_4097 <= empty_72_fu_1922_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp176388_reg_4035 == 1'd1) & (1'b1 == ap_CS_fsm_state83))) begin
        empty_75_reg_4264 <= empty_75_fu_2246_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        empty_81_reg_4254 <= empty_81_fu_2230_p2;
        sext_ln703_reg_4249 <= sext_ln703_fu_2226_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        empty_82_reg_4541 <= grp_fu_2742_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        empty_86_reg_4611 <= grp_fu_2899_p2;
        mul_ln114_reg_4606 <= grp_fu_2827_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        empty_87_reg_4621 <= empty_87_fu_2923_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_reg_3783 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_addr_2_read_reg_3792 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_reg_4118 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        gmem_addr_4_read_reg_4127 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_reg_4537 == 1'd0) & (1'b1 == ap_CS_fsm_state101))) begin
        icmp_ln115_reg_4546 <= icmp_ln115_fu_2762_p2;
        select_ln114_4_reg_4566 <= select_ln114_4_fu_2784_p3;
        select_ln115_reg_4573 <= select_ln115_fu_2797_p3;
        trunc_ln114_reg_4560 <= trunc_ln114_fu_2775_p1;
        trunc_ln116_reg_4579 <= trunc_ln116_fu_2805_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln117_reg_4642 <= icmp_ln117_fu_3026_p2;
        icmp_ln117_reg_4642_pp5_iter1_reg <= icmp_ln117_reg_4642;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        icmp_ln125_reg_4671 <= icmp_ln125_fu_3069_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln45_reg_3575 <= icmp_ln45_fu_1171_p2;
        outH_reg_3559 <= outH_fu_1151_p2;
        outW_reg_3570 <= outW_fu_1165_p2;
        trunc_ln42_reg_3565 <= trunc_ln42_fu_1161_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln58_reg_3812 <= icmp_ln58_fu_1567_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln61_reg_3864 <= icmp_ln61_fu_1617_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state131) & (icmp_ln69_fu_3172_p2 == 1'd0))) begin
        icmp_ln70_reg_4759 <= icmp_ln70_fu_3183_p2;
        select_ln69_1_reg_4766 <= select_ln69_1_fu_3196_p3;
        select_ln69_4_reg_4776 <= select_ln69_4_fu_3221_p3;
        select_ln70_1_reg_4787 <= select_ln70_1_fu_3238_p3;
        select_ln70_3_reg_4792 <= select_ln70_3_fu_3246_p3;
        trunc_ln69_reg_4771 <= trunc_ln69_fu_3204_p1;
        trunc_ln70_1_reg_4782 <= trunc_ln70_1_fu_3234_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((fwprop_read_reg_3451 == 1'd1) & (icmp_ln45_reg_3575 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        icmp_ln71_reg_3904 <= icmp_ln71_fu_1672_p2;
        sub_ln68_reg_3898 <= sub_ln68_fu_1667_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        icmp_ln74_reg_4856 <= icmp_ln74_fu_3356_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_1732_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state57))) begin
        icmp_ln88_reg_4003 <= icmp_ln88_fu_1737_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln97_fu_2126_p2 == 1'd0))) begin
        icmp_ln98_reg_4201 <= icmp_ln98_fu_2137_p2;
        select_ln97_1_reg_4206 <= select_ln97_1_fu_2143_p3;
        select_ln97_2_reg_4216 <= select_ln97_2_fu_2159_p3;
        select_ln97_3_reg_4223 <= select_ln97_3_fu_2173_p3;
        select_ln97_4_reg_4229 <= select_ln97_4_fu_2187_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        mul_ln46_reg_3746 <= grp_fu_1399_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        mul_ln69_reg_4813 <= mul_ln69_fu_3286_p2;
        y_addr_reg_4818 <= zext_ln72_fu_3290_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state104) & (select_ln114_4_reg_4566 == 1'd1))) begin
        p_mid1154_reg_4616 <= grp_fu_2903_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln87_4_reg_4050 == 1'd1) & (1'b1 == ap_CS_fsm_state60))) begin
        p_mid165_reg_4087 <= grp_fu_1898_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_mid1_reg_3724 <= grp_fu_1297_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        r_V_reg_4299 <= dy_Dout_A;
        sext_ln1118_1_reg_4304 <= sext_ln1118_1_fu_2343_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state77) | ((fwprop_read_reg_3451 == 1'd1) & (icmp_ln45_reg_3575 == 1'd1) & (1'b1 == ap_CS_fsm_state49)))) begin
        reg_1131 <= grp_fu_1112_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state79))) begin
        reg_1135 <= grp_fu_1117_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln100_reg_4320 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        select_ln100_1_reg_4346 <= select_ln100_1_fu_2377_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln100_reg_4320_pp4_iter1_reg == 1'd0))) begin
        select_ln101_4_reg_4425 <= select_ln101_4_fu_2594_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln100_reg_4320 == 1'd0))) begin
        select_ln101_5_reg_4395 <= select_ln101_5_fu_2427_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_reg_4537 == 1'd0) & (1'b0 == ap_block_state101_io) & (1'b1 == ap_CS_fsm_state101))) begin
        select_ln114_1_reg_4554 <= select_ln114_1_fu_2767_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        select_ln46_reg_3751 <= select_ln46_fu_1407_p3;
        tmp11_reg_3757 <= tmp11_fu_1419_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        select_ln70_reg_4802 <= select_ln70_fu_3274_p3;
        trunc_ln71_reg_4807 <= trunc_ln71_fu_3282_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        select_ln97_reg_4236 <= select_ln97_fu_2195_p3;
        trunc_ln98_reg_4242 <= trunc_ln98_fu_2202_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln125_fu_3069_p2 == 1'd0))) begin
        tmp_3_reg_4675 <= tmp_3_fu_3078_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_reg_3656 <= tmp_fu_1233_p2;
        trunc_ln49_reg_3661 <= trunc_ln49_fu_1238_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln101_reg_4334 == 1'd0))) begin
        trunc_ln101_reg_4361 <= trunc_ln101_fu_2394_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp176388_reg_4035 == 1'd1) & (1'b1 == ap_CS_fsm_state84) & (icmp_ln99_fu_2255_p2 == 1'd0))) begin
        trunc_ln104_reg_4289 <= trunc_ln104_fu_2274_p1;
        trunc_ln99_reg_4279 <= trunc_ln99_fu_2260_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state102) & (select_ln114_4_reg_4566 == 1'd1))) begin
        trunc_ln115_1_reg_4590 <= trunc_ln115_1_fu_2867_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_fu_1567_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln59_reg_3816 <= trunc_ln59_fu_1572_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_fu_1617_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        trunc_ln62_reg_3868 <= trunc_ln62_fu_1622_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln100_reg_4320_pp4_iter4_reg == 1'd0))) begin
        trunc_ln708_1_reg_4501 <= {{grp_fu_3412_p3[22:7]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        trunc_ln87_reg_3932 <= trunc_ln87_fu_1693_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        trunc_ln91_reg_3985 <= trunc_ln91_fu_1722_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln100_reg_4320_pp4_iter2_reg == 1'd0))) begin
        wbuf_V_load_reg_4456 <= wbuf_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1) & (icmp_ln100_reg_4320_pp4_iter3_reg == 1'd0))) begin
        x_load_1_reg_4486 <= x_Dout_A;
    end
end

always @ (*) begin
    if ((icmp_ln48_fu_1525_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1567_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln61_fu_1617_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_condition_pp2_flush_enable = 1'b1;
    end else begin
        ap_condition_pp2_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln90_fu_2025_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state70 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state70 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_condition_pp4_exit_iter1_state89 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter1_state89 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln100_reg_4320 == 1'd1))) begin
        ap_condition_pp4_flush_enable = 1'b1;
    end else begin
        ap_condition_pp4_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln117_fu_3026_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state108 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state108 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln125_fu_3069_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state116 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state116 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln74_fu_3356_p2 == 1'd1))) begin
        ap_condition_pp7_flush_enable = 1'b1;
    end else begin
        ap_condition_pp7_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((~((gmem_BVALID == 1'b0) & (ap_predicate_op866_writeresp_state122 == 1'b1)) & (1'b1 == ap_CS_fsm_state122))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter6 == 1'b0) & (ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln100_reg_4320 == 1'd0))) begin
        ap_phi_mux_c_1_phi_fu_843_p4 = select_ln100_1_reg_4346;
    end else begin
        ap_phi_mux_c_1_phi_fu_843_p4 = c_1_reg_839;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln100_reg_4320_pp4_iter1_reg == 1'd0))) begin
        ap_phi_mux_fh_1_phi_fu_866_p4 = select_ln101_4_reg_4425;
    end else begin
        ap_phi_mux_fh_1_phi_fu_866_p4 = fh_1_reg_862;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln100_reg_4320_pp4_iter2_reg == 1'd0))) begin
        ap_phi_mux_fw_1_phi_fu_877_p4 = add_ln102_reg_4451;
    end else begin
        ap_phi_mux_fw_1_phi_fu_877_p4 = fw_1_reg_873;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln100_reg_4320_pp4_iter1_reg == 1'd0))) begin
        ap_phi_mux_indvar_flatten103_phi_fu_855_p4 = select_ln101_5_reg_4395;
    end else begin
        ap_phi_mux_indvar_flatten103_phi_fu_855_p4 = indvar_flatten103_reg_851;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln100_reg_4320 == 1'd0))) begin
        ap_phi_mux_indvar_flatten134_phi_fu_832_p4 = add_ln100_1_reg_4310;
    end else begin
        ap_phi_mux_indvar_flatten134_phi_fu_832_p4 = indvar_flatten134_reg_828;
    end
end

always @ (*) begin
    if ((~((gmem_BVALID == 1'b0) & (ap_predicate_op866_writeresp_state122 == 1'b1)) & (1'b1 == ap_CS_fsm_state122))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        dwbuf_V_address0 = dwbuf_V_addr_2_reg_4506;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        dwbuf_V_address0 = zext_ln91_4_fu_2039_p1;
    end else begin
        dwbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        dwbuf_V_address1 = zext_ln118_4_fu_3040_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1))) begin
        dwbuf_V_address1 = zext_ln727_1_fu_2705_p1;
    end else begin
        dwbuf_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter6 == 1'b1)))) begin
        dwbuf_V_ce0 = 1'b1;
    end else begin
        dwbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1)))) begin
        dwbuf_V_ce1 = 1'b1;
    end else begin
        dwbuf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        dwbuf_V_d0 = {{grp_fu_3420_p3[22:7]}};
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        dwbuf_V_d0 = gmem_addr_4_read_reg_4127;
    end else begin
        dwbuf_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln90_reg_4118_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter6 == 1'b1) & (icmp_ln100_reg_4320_pp4_iter5_reg == 1'd0)))) begin
        dwbuf_V_we0 = 1'b1;
    end else begin
        dwbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1))) begin
        dx_Addr_A_orig = dx_addr_reg_4476_pp4_iter4_reg;
    end else if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1))) begin
        dx_Addr_A_orig = zext_ln1118_fu_2651_p1;
    end else begin
        dx_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1)))) begin
        dx_EN_A = 1'b1;
    end else begin
        dx_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1) & (icmp_ln100_reg_4320_pp4_iter4_reg == 1'd0))) begin
        dx_WEN_A = 2'd3;
    end else begin
        dx_WEN_A = 2'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        dy_EN_A = 1'b1;
    end else begin
        dy_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state63))) begin
        gmem_ARADDR = gmem_addr_4_reg_4102;
    end else if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        gmem_ARADDR = sext_ln61_fu_1600_p1;
    end else if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        gmem_ARADDR = gmem_addr_2_reg_3767;
    end else if (((icmp_ln45_1_reg_3646 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
        gmem_ARADDR = sext_ln58_fu_1286_p1;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state63)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        gmem_ARLEN = FW_read_reg_3455;
    end else if ((((icmp_ln45_1_reg_3646 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state40)))) begin
        gmem_ARLEN = F_read_reg_3514;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln45_1_reg_3646 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state63)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state40)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state107))) begin
        gmem_AWADDR = gmem_addr_5_reg_4626;
    end else if (((icmp_ln114_reg_4537 == 1'd1) & (1'b0 == ap_block_state101_io) & (1'b1 == ap_CS_fsm_state101))) begin
        gmem_AWADDR = sext_ln125_fu_2809_p1;
    end else begin
        gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state107))) begin
        gmem_AWLEN = FW_read_reg_3455;
    end else if (((icmp_ln114_reg_4537 == 1'd1) & (1'b0 == ap_block_state101_io) & (1'b1 == ap_CS_fsm_state101))) begin
        gmem_AWLEN = F_read_reg_3514;
    end else begin
        gmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln114_reg_4537 == 1'd1) & (1'b0 == ap_block_state101_io) & (1'b1 == ap_CS_fsm_state101)) | ((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state107)))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((gmem_BVALID == 1'b0) & (ap_predicate_op866_writeresp_state122 == 1'b1)) & (1'b1 == ap_CS_fsm_state122) & (ap_predicate_op866_writeresp_state122 == 1'b1)) | (~((gmem_BVALID == 1'b0) & (cmp147403_reg_3958 == 1'd1)) & (cmp147403_reg_3958 == 1'd1) & (1'b1 == ap_CS_fsm_state115)))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln90_reg_4118 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln61_reg_3864 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln58_reg_3812 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln48_reg_3783 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_4671 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0_01001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        gmem_WDATA = tmp_3_reg_4675;
    end else if (((icmp_ln117_reg_4642_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_01001))) begin
        gmem_WDATA = dwbuf_V_load_reg_4651;
    end else begin
        gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln125_reg_4671 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((icmp_ln117_reg_4642_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state21) | ((icmp_ln45_1_reg_3646 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state107) | ((icmp_ln114_reg_4537 == 1'd1) & (1'b1 == ap_CS_fsm_state101)))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((fwprop_read_reg_3451 == 1'd0) & (icmp_ln45_reg_3575 == 1'd1) & (1'b1 == ap_CS_fsm_state122)) | ((cmp147403_reg_3958 == 1'd1) & (1'b1 == ap_CS_fsm_state115)))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln90_reg_4118 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln61_reg_3864 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln58_reg_3812 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln48_reg_3783 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln125_reg_4671 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((icmp_ln117_reg_4642_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0)))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state100) | ((1'b0 == ap_block_state101_io) & (1'b1 == ap_CS_fsm_state101)))) begin
        grp_fu_2742_ce = 1'b1;
    end else begin
        grp_fu_2742_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        wbuf_V_address0 = zext_ln1118_5_fu_2634_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        wbuf_V_address0 = zext_ln49_4_fu_1539_p1;
    end else begin
        wbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1)))) begin
        wbuf_V_ce0 = 1'b1;
    end else begin
        wbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln48_reg_3783_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        wbuf_V_we0 = 1'b1;
    end else begin
        wbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        x_Addr_A_orig = zext_ln1116_fu_3370_p1;
    end else if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1))) begin
        x_Addr_A_orig = zext_ln1118_fu_2651_p1;
    end else begin
        x_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1)))) begin
        x_EN_A = 1'b1;
    end else begin
        x_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        y_Addr_A_orig = y_addr_reg_4818;
    end else if ((1'b1 == ap_CS_fsm_state135)) begin
        y_Addr_A_orig = zext_ln72_fu_3290_p1;
    end else begin
        y_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        y_Din_A = empty_62_reg_1063;
    end else if ((1'b1 == ap_CS_fsm_state135)) begin
        y_Din_A = tmp_1_reg_4740;
    end else begin
        y_Din_A = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state135))) begin
        y_EN_A = 1'b1;
    end else begin
        y_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state135))) begin
        y_WEN_A = 2'd3;
    end else begin
        y_WEN_A = 2'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln45_fu_1171_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln45_1_reg_3646 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else if (((icmp_ln45_1_reg_3646 == 1'd0) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((cmp57433_reg_3611 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln48_fu_1525_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln48_fu_1525_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((fwprop_read_reg_3451 == 1'd1) & (icmp_ln45_reg_3575 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state123;
            end else if (((icmp_ln45_reg_3575 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((icmp_ln87_fu_1732_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            if (((cmp147403_reg_3958 == 1'd0) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state63 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((icmp_ln90_fu_2025_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((icmp_ln90_fu_2025_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln97_fu_2126_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            if (((1'b1 == ap_CS_fsm_state84) & ((cmp176388_reg_4035 == 1'd0) | (icmp_ln99_fu_2255_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter6 == 1'b1) & (ap_enable_reg_pp4_iter5 == 1'b0)) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter6 == 1'b1) & (ap_enable_reg_pp4_iter5 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((~((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b0)) & (1'b0 == ap_block_pp4_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            if (((icmp_ln114_reg_4537 == 1'd1) & (1'b0 == ap_block_state101_io) & (1'b1 == ap_CS_fsm_state101))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((icmp_ln114_reg_4537 == 1'd0) & (1'b0 == ap_block_state101_io) & (1'b1 == ap_CS_fsm_state101))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            if (((cmp147403_reg_3958 == 1'd0) & (1'b1 == ap_CS_fsm_state106))) begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end
        end
        ap_ST_fsm_state107 : begin
            if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state107))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln117_fu_3026_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)) & ~((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0)) | ((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln117_fu_3026_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            if ((~((gmem_BVALID == 1'b0) & (cmp147403_reg_3958 == 1'd1)) & (1'b1 == ap_CS_fsm_state115))) begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end
        end
        ap_ST_fsm_pp6_stage0 : begin
            if (~((1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln125_fu_3069_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln125_fu_3069_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            if ((~((gmem_BVALID == 1'b0) & (ap_predicate_op866_writeresp_state122 == 1'b1)) & (1'b1 == ap_CS_fsm_state122))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            if (((1'b1 == ap_CS_fsm_state130) & (icmp_ln68_fu_3127_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state131;
            end
        end
        ap_ST_fsm_state131 : begin
            if (((1'b1 == ap_CS_fsm_state131) & (icmp_ln69_fu_3172_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state132;
            end
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            if (((1'b1 == ap_CS_fsm_state136) & (icmp_ln73_fu_3300_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state131;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state137;
            end
        end
        ap_ST_fsm_state137 : begin
            if (((1'b1 == ap_CS_fsm_state137) & (cmp106321_reg_4706 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state141;
            end
        end
        ap_ST_fsm_pp7_stage0 : begin
            if (~((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state140;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln100_1_fu_2347_p2 = (ap_phi_mux_indvar_flatten134_phi_fu_832_p4 + 96'd1);

assign add_ln100_fu_2362_p2 = (ap_phi_mux_c_1_phi_fu_843_p4 + 32'd1);

assign add_ln101_2_fu_2388_p2 = (ap_phi_mux_indvar_flatten103_phi_fu_855_p4 + 64'd1);

assign add_ln101_fu_2417_p2 = (select_ln100_fu_2402_p3 + 32'd1);

assign add_ln102_fu_2639_p2 = (select_ln101_reg_4400 + 32'd1);

assign add_ln1116_fu_3365_p2 = (add_ln75_reg_4846 + trunc_ln75_fu_3361_p1);

assign add_ln1118_1_fu_2644_p2 = ($signed(grp_fu_3405_p3) + $signed(trunc_ln103_reg_4430_pp4_iter2_reg));

assign add_ln1118_2_fu_2625_p2 = (trunc_ln727_4_reg_4435 + trunc_ln104_reg_4289);

assign add_ln1118_3_fu_2412_p2 = ($signed(sext_ln703_reg_4249) + $signed(zext_ln1118_3_fu_2409_p1));

assign add_ln1118_4_fu_2455_p2 = ($signed(sext_ln1118_4_fu_2451_p1) + $signed(sext_ln1118_3_fu_2441_p1));

assign add_ln1118_5_fu_2542_p2 = (trunc_ln727_1_reg_4389 + empty_75_reg_4264);

assign add_ln1118_6_fu_2558_p2 = (add_ln1118_4_fu_2455_p2 + zext_ln1118_4_fu_2554_p1);

assign add_ln1118_7_fu_2580_p2 = (p_shl8_cast_fu_2572_p3 + trunc_ln1118_fu_2564_p1);

assign add_ln1118_8_fu_2629_p2 = (add_ln1118_7_reg_4415 + add_ln1118_2_fu_2625_p2);

assign add_ln1118_fu_2437_p2 = (trunc_ln727_reg_4366 + empty_75_reg_4264);

assign add_ln114_1_fu_2732_p2 = (indvar_flatten179_reg_884 + 95'd1);

assign add_ln114_fu_2756_p2 = (i_4_reg_907 + 31'd1);

assign add_ln115_1_fu_3050_p2 = (indvar_flatten156_reg_918 + 64'd1);

assign add_ln115_fu_2861_p2 = (select_ln114_fu_2820_p3 + 32'd1);

assign add_ln116_fu_3045_p2 = (select_ln115_reg_4573 + 32'd1);

assign add_ln117_fu_3016_p2 = (l_2_reg_941 + 31'd1);

assign add_ln118_1_fu_2943_p2 = ($signed(sext_ln118_1_fu_2939_p1) + $signed(sext_ln118_fu_2929_p1));

assign add_ln118_2_fu_2988_p2 = (add_ln118_1_fu_2943_p2 + zext_ln118_3_fu_2984_p1);

assign add_ln118_3_fu_3010_p2 = (p_shl5_cast_fu_3002_p3 + trunc_ln118_3_fu_2994_p1);

assign add_ln118_4_fu_3035_p2 = (add_ln118_3_reg_4632 + trunc_ln118_5_fu_3031_p1);

assign add_ln118_fu_2886_p2 = ($signed(sext_ln115_fu_2851_p1) + $signed(zext_ln118_2_fu_2882_p1));

assign add_ln125_fu_3063_p2 = (i_5_reg_952 + 31'd1);

assign add_ln45_1_fu_1213_p2 = (indvar_flatten21_reg_539 + 95'd1);

assign add_ln45_fu_1242_p2 = ($signed(i_reg_550) + $signed(31'd1));

assign add_ln46_1_fu_1548_p2 = (indvar_flatten_reg_562 + 64'd1);

assign add_ln46_fu_1348_p2 = (select_ln45_fu_1301_p3 + 32'd1);

assign add_ln47_fu_1543_p2 = (select_ln46_reg_3751 + 32'd1);

assign add_ln48_fu_1515_p2 = (l_reg_598 + 31'd1);

assign add_ln49_1_fu_1442_p2 = ($signed(sext_ln49_1_fu_1438_p1) + $signed(sext_ln49_fu_1428_p1));

assign add_ln49_2_fu_1487_p2 = (add_ln49_1_fu_1442_p2 + zext_ln49_3_fu_1483_p1);

assign add_ln49_3_fu_1509_p2 = (p_shl1_cast_fu_1501_p3 + trunc_ln49_3_fu_1493_p1);

assign add_ln49_4_fu_1534_p2 = (add_ln49_3_reg_3773 + trunc_ln49_5_fu_1530_p1);

assign add_ln49_fu_1386_p2 = ($signed(sext_ln46_fu_1333_p1) + $signed(zext_ln49_2_fu_1382_p1));

assign add_ln58_fu_1561_p2 = (i_1_reg_609 + 31'd1);

assign add_ln61_fu_1611_p2 = (i_2_reg_620 + 31'd1);

assign add_ln68_2_fu_3121_p2 = (f_reg_963 + 31'd1);

assign add_ln68_fu_1662_p2 = (W_read_reg_3490 + 32'd1);

assign add_ln69_1_fu_3157_p2 = (indvar_flatten56_reg_974 + 96'd1);

assign add_ln69_fu_3177_p2 = (c_reg_985 + 32'd1);

assign add_ln703_1_fu_3375_p2 = (x_Dout_A + empty_62_reg_1063);

assign add_ln703_fu_2727_p2 = ($signed(r_V_reg_4299) + $signed(dbbuf_V_2_9_reg_818));

assign add_ln70_1_fu_3324_p2 = (indvar_flatten35_reg_996 + 64'd1);

assign add_ln70_fu_3228_p2 = (select_ln69_fu_3188_p3 + 32'd1);

assign add_ln71_fu_3319_p2 = (select_ln70_reg_4802 + 32'd1);

assign add_ln727_1_fu_2615_p2 = (p_shl7_cast_fu_2608_p3 + trunc_ln727_2_reg_4405);

assign add_ln727_2_fu_2620_p2 = (add_ln727_1_fu_2615_p2 + trunc_ln727_4_reg_4435);

assign add_ln727_fu_2528_p2 = (add_ln1118_4_fu_2455_p2 + zext_ln727_fu_2524_p1);

assign add_ln73_fu_3294_p2 = (fh_reg_1041 + 32'd1);

assign add_ln74_fu_3346_p2 = (fw_reg_1052 + 31'd1);

assign add_ln75_fu_3341_p2 = (empty_61_fu_3337_p2 + trunc_ln71_reg_4807);

assign add_ln87_1_fu_1726_p2 = (indvar_flatten90_reg_715 + 95'd1);

assign add_ln87_fu_1770_p2 = (i_3_reg_726 + 31'd1);

assign add_ln88_1_fu_2048_p2 = (indvar_flatten67_reg_738 + 64'd1);

assign add_ln88_fu_1837_p2 = (select_ln87_fu_1776_p3 + 32'd1);

assign add_ln89_fu_2043_p2 = (select_ln88_reg_4055 + 32'd1);

assign add_ln90_fu_2015_p2 = (l_1_reg_762 + 31'd1);

assign add_ln91_1_fu_1942_p2 = ($signed(sext_ln91_1_fu_1938_p1) + $signed(sext_ln91_fu_1928_p1));

assign add_ln91_2_fu_1987_p2 = (add_ln91_1_fu_1942_p2 + zext_ln91_3_fu_1983_p1);

assign add_ln91_3_fu_2009_p2 = (p_shl3_cast_fu_2001_p3 + trunc_ln91_3_fu_1993_p1);

assign add_ln91_4_fu_2034_p2 = (add_ln91_3_reg_4108 + trunc_ln91_5_fu_2030_p1);

assign add_ln91_fu_1876_p2 = ($signed(sext_ln88_fu_1816_p1) + $signed(zext_ln91_2_fu_1872_p1));

assign add_ln97_2_fu_2131_p2 = (f_1_reg_784 + 31'd1);

assign add_ln97_4_fu_2104_p2 = (indvar_flatten145_reg_773 + 63'd1);

assign add_ln97_fu_2089_p2 = (W_read_reg_3490 + 32'd1);

assign add_ln98_fu_2338_p2 = (select_ln97_reg_4236 + 32'd1);

assign add_ln99_fu_2249_p2 = (w_1_reg_807 + 32'd1);

assign addr_cmp_fu_2659_p2 = ((reuse_addr_reg_fu_238 == zext_ln1118_fu_2651_p1) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd81];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln48_reg_3783 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln48_reg_3783 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln58_reg_3812 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln58_reg_3812 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln61_reg_3864 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln61_reg_3864 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln90_reg_4118 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln90_reg_4118 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_block_state110_io));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_block_state110_io));
end

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_block_state117_io));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_block_state117_io));
end

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state101_io = ((gmem_AWREADY == 1'b0) & (icmp_ln114_reg_4537 == 1'd1));
end

assign ap_block_state108_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state110_io = ((gmem_WREADY == 1'b0) & (icmp_ln117_reg_4642_pp5_iter1_reg == 1'd0));
end

assign ap_block_state110_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state115 = ((gmem_BVALID == 1'b0) & (cmp147403_reg_3958 == 1'd1));
end

assign ap_block_state116_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state117_io = ((gmem_WREADY == 1'b0) & (icmp_ln125_reg_4671 == 1'd0));
end

assign ap_block_state117_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((gmem_ARREADY == 1'b0) & (icmp_ln45_1_reg_3646 == 1'd1));
end

always @ (*) begin
    ap_block_state122 = ((gmem_BVALID == 1'b0) & (ap_predicate_op866_writeresp_state122 == 1'b1));
end

assign ap_block_state138_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp0_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln48_reg_3783 == 1'd0));
end

assign ap_block_state30_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state39_pp1_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln58_reg_3812 == 1'd0));
end

assign ap_block_state47_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state48_pp2_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln61_reg_3864 == 1'd0));
end

assign ap_block_state70_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state71_pp3_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln90_reg_4118 == 1'd0));
end

assign ap_block_state72_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp4_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp4_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp4_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp4_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp4_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp4_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp4_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

always @ (*) begin
    ap_predicate_op866_writeresp_state122 = ((fwprop_read_reg_3451 == 1'd0) & (icmp_ln45_reg_3575 == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cast60_fu_1653_p1 = FH_read_reg_3476;

assign cmp176388_fu_1742_p2 = (($signed(outW_reg_3570) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign dbbuf_V_0_6_fu_2309_p3 = ((select_ln97_4_reg_4229[0:0] == 1'b1) ? dbbuf_V_0_4_fu_282 : dbbuf_V_0_fu_2302_p3);

assign dbbuf_V_0_7_fu_2316_p3 = ((select_ln97_4_reg_4229[0:0] == 1'b1) ? dbbuf_V_2_9_reg_818 : dbbuf_V_0_3_fu_278);

assign dbbuf_V_0_fu_2302_p3 = ((select_ln97_3_reg_4223[0:0] == 1'b1) ? dbbuf_V_2_9_reg_818 : dbbuf_V_0_4_fu_282);

assign dbbuf_V_2_8_fu_2295_p3 = ((select_ln97_4_reg_4229[0:0] == 1'b1) ? dbbuf_V_2_4_fu_286 : dbbuf_V_2_fu_2288_p3);

assign dbbuf_V_2_fu_2288_p3 = ((select_ln97_3_reg_4223[0:0] == 1'b1) ? dbbuf_V_2_4_fu_286 : dbbuf_V_2_9_reg_818);

assign dx_Addr_A = dx_Addr_A_orig << 32'd1;

assign dx_Clk_A = ap_clk;

assign dx_Din_A = trunc_ln708_1_reg_4501;

assign dx_Rst_A = ap_rst_n_inv;

assign dy_Addr_A = p_cast46_fu_2269_p1 << 32'd1;

assign dy_Clk_A = ap_clk;

assign dy_Din_A = 16'd0;

assign dy_Rst_A = ap_rst_n_inv;

assign dy_WEN_A = 2'd0;

assign empty_43_fu_1143_p1 = H[9:0];

assign empty_44_fu_1188_p1 = F_read_reg_3514[30:0];

assign empty_45_fu_1210_p1 = FW_read_reg_3455[30:0];

assign empty_50_fu_1455_p2 = (tmp_7_fu_1448_p3 + wt_read_reg_3541);

assign empty_57_fu_3140_p0 = f_reg_963[9:0];

assign empty_58_fu_3167_p2 = (trunc_ln70_fu_3163_p1 + empty_57_reg_4733);

assign empty_60_fu_3314_p2 = (tmp17_fu_3309_p2 + select_ln70_1_reg_4787);

assign empty_65_fu_1677_p1 = F_read_reg_3514[30:0];

assign empty_72_fu_1922_p2 = (tmp18_fu_1918_p2 + select_ln88_1_fu_1912_p3);

assign empty_73_fu_1955_p2 = (tmp_8_fu_1948_p3 + dwt_read_reg_3535);

assign empty_74_fu_2110_p1 = f_1_reg_784[1:0];

assign empty_75_fu_2246_p1 = select_ln97_reg_4236[5:0];

assign empty_76_fu_2264_p2 = (trunc_ln99_fu_2260_p1 + empty_81_reg_4254);

assign empty_78_fu_2433_p2 = ($signed(grp_fu_3389_p3) + $signed(trunc_ln101_reg_4361));

assign empty_79_fu_2155_p1 = add_ln97_2_fu_2131_p2[1:0];

assign empty_87_fu_2923_p2 = (tmp20_fu_2919_p2 + select_ln115_1_fu_2913_p3);

assign empty_88_fu_2956_p2 = (tmp_12_fu_2949_p3 + dwt_read_reg_3535);

assign empty_fu_1139_p1 = FH[9:0];

assign fw_cast_fu_3352_p1 = fw_reg_1052;

assign grp_fu_1088_p2 = (($signed(FW_read_reg_3455) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign grp_fu_1093_p2 = ((FH_read_reg_3476 == 32'd0) ? 1'b1 : 1'b0);

assign grp_fu_1098_p4 = {{db_read_reg_3525[31:1]}};

assign grp_fu_1107_p2 = (H_read_reg_3499 + 32'd1);

assign grp_fu_1112_p2 = (grp_fu_1107_p2 - FH_read_reg_3476);

assign grp_fu_1117_p2 = (trunc_ln42_reg_3565 + 10'd1);

assign grp_fu_1182_p0 = grp_fu_1182_p00;

assign grp_fu_1182_p00 = C_read_reg_3504;

assign grp_fu_1182_p1 = grp_fu_1182_p10;

assign grp_fu_1182_p10 = FH_read_reg_3476;

assign grp_fu_1198_p0 = grp_fu_1198_p00;

assign grp_fu_1198_p00 = empty_44_fu_1188_p1;

assign grp_fu_1198_p1 = grp_fu_1198_p10;

assign grp_fu_1198_p10 = bound_reg_3589;

assign grp_fu_1656_p0 = grp_fu_1656_p00;

assign grp_fu_1656_p00 = C_read_reg_3504;

assign grp_fu_1656_p1 = grp_fu_1656_p10;

assign grp_fu_1656_p10 = FH_read_reg_3476;

assign grp_fu_1687_p0 = grp_fu_1687_p00;

assign grp_fu_1687_p00 = empty_65_fu_1677_p1;

assign grp_fu_1687_p1 = grp_fu_1687_p10;

assign grp_fu_1687_p10 = bound61_reg_3909;

assign grp_fu_1699_p0 = FW_read_reg_3455[30:0];

assign grp_fu_1699_p1 = FH_read_reg_3476[30:0];

assign grp_fu_1708_p1 = C_read_reg_3504[30:0];

assign grp_fu_1717_p0 = j_1_reg_703[30:0];

assign grp_fu_1750_p0 = cast60_reg_3892;

assign grp_fu_1750_p1 = grp_fu_1750_p10;

assign grp_fu_1750_p10 = FW_read_reg_3455;

assign grp_fu_2067_p0 = grp_fu_2067_p00;

assign grp_fu_2067_p00 = C_read_reg_3504;

assign grp_fu_2067_p1 = grp_fu_2067_p10;

assign grp_fu_2067_p10 = bound95_reg_4142;

assign grp_fu_2080_p0 = grp_fu_2080_p00;

assign grp_fu_2080_p00 = empty_65_reg_3916;

assign grp_fu_2080_p1 = grp_fu_2080_p10;

assign grp_fu_2080_p10 = reg_1131;

assign grp_fu_2742_p0 = j_2_reg_895[30:0];

assign grp_fu_3097_p0 = grp_fu_3097_p00;

assign grp_fu_3097_p00 = reg_1131;

assign grp_fu_3097_p1 = grp_fu_3097_p10;

assign grp_fu_3097_p10 = sub_ln68_reg_3898;

assign grp_fu_3109_p0 = grp_fu_3109_p00;

assign grp_fu_3109_p00 = C_read_reg_3504;

assign grp_fu_3109_p1 = grp_fu_3109_p10;

assign grp_fu_3109_p10 = bound26_reg_4690;

assign grp_fu_3381_p0 = select_ln97_1_fu_2143_p3[9:0];

assign grp_fu_3381_p2 = select_ln97_fu_2195_p3[9:0];

assign grp_fu_3389_p0 = ap_phi_mux_c_1_phi_fu_843_p4[9:0];

assign grp_fu_3397_p0 = add_ln100_fu_2362_p2[9:0];

assign grp_fu_3405_p0 = ((select_ln100_6_fu_2489_p3[0:0] == 1'b1) ? p_mid199_fu_2511_p2 : select_ln100_5_fu_2478_p3);

assign grp_fu_3412_p1 = sext_ln1118_1_reg_4304;

assign grp_fu_3412_p2 = {{lhs_2_fu_2673_p3}, {7'd0}};

assign grp_fu_3420_p1 = sext_ln1118_1_reg_4304;

assign grp_fu_3420_p2 = {{dwbuf_V_q1}, {7'd0}};

assign grp_fu_3428_p0 = ((select_ln69_4_reg_4776[0:0] == 1'b1) ? p_mid131_fu_3259_p2 : select_ln69_3_fu_3254_p3);

assign grp_fu_3428_p2 = select_ln70_fu_3274_p3[9:0];

assign icmp_ln100_fu_2357_p2 = ((ap_phi_mux_indvar_flatten134_phi_fu_832_p4 == bound108_reg_4178) ? 1'b1 : 1'b0);

assign icmp_ln101_fu_2372_p2 = ((ap_phi_mux_indvar_flatten103_phi_fu_855_p4 == bound95_reg_4142) ? 1'b1 : 1'b0);

assign icmp_ln102_1_fu_2484_p2 = ((ap_phi_mux_fw_1_phi_fu_877_p4 == FW_read_reg_3455) ? 1'b1 : 1'b0);

assign icmp_ln102_fu_2099_p2 = ((FW_read_reg_3455 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_2751_p2 = ((indvar_flatten179_reg_884 == bound72_reg_3968) ? 1'b1 : 1'b0);

assign icmp_ln115_fu_2762_p2 = ((indvar_flatten156_reg_918 == bound61_reg_3909) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_2779_p2 = ((k_2_reg_930 == FH_read_reg_3476) ? 1'b1 : 1'b0);

assign icmp_ln117_fu_3026_p2 = ((l_2_cast_fu_3022_p1 == FW_read_reg_3455) ? 1'b1 : 1'b0);

assign icmp_ln125_fu_3069_p2 = ((i_5_reg_952 == empty_65_reg_3916) ? 1'b1 : 1'b0);

assign icmp_ln45_1_fu_1224_p2 = ((indvar_flatten21_reg_539 == bound4_reg_3631) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_1171_p2 = (($signed(F_read_reg_3514) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_1248_p2 = ((indvar_flatten_reg_562 == bound_reg_3589) ? 1'b1 : 1'b0);

assign icmp_ln47_1_fu_1265_p2 = ((k_reg_586 == FH_read_reg_3476) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_1525_p2 = ((l_cast_fu_1521_p1 == FW_read_reg_3455) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_1567_p2 = ((i_1_reg_609 == empty_44_reg_3595) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_1617_p2 = ((i_2_reg_620 == empty_44_reg_3595) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_3127_p2 = ((f_reg_963 == trunc_ln68_1_reg_4715) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_3172_p2 = ((indvar_flatten56_reg_974 == bound40_reg_4720) ? 1'b1 : 1'b0);

assign icmp_ln703_1_fu_2120_p2 = ((empty_74_fu_2110_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln703_2_fu_2167_p2 = ((empty_79_fu_2155_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln703_3_fu_2181_p2 = ((empty_79_fu_2155_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln703_fu_2114_p2 = ((empty_74_fu_2110_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_3183_p2 = ((indvar_flatten35_reg_996 == bound26_reg_4690) ? 1'b1 : 1'b0);

assign icmp_ln71_1_fu_3216_p2 = ((w_reg_1019 == sub_ln68_reg_3898) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_1672_p2 = ((add_ln68_fu_1662_p2 == FW_read_reg_3455) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_3300_p2 = ((fh_reg_1041 == FH_read_reg_3476) ? 1'b1 : 1'b0);

assign icmp_ln74_fu_3356_p2 = ((fw_cast_fu_3352_p1 == FW_read_reg_3455) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_1732_p2 = ((indvar_flatten90_reg_715 == bound72_reg_3968) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_1737_p2 = ((indvar_flatten67_reg_738 == bound61_reg_3909) ? 1'b1 : 1'b0);

assign icmp_ln89_1_fu_1826_p2 = ((k_1_reg_750 == FH_read_reg_3476) ? 1'b1 : 1'b0);

assign icmp_ln90_fu_2025_p2 = ((l_1_cast_fu_2021_p1 == FW_read_reg_3455) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_2126_p2 = ((indvar_flatten145_reg_773 == bound139_reg_4183) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_2137_p2 = ((h_1_reg_795 == reg_1131) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_2255_p2 = ((w_1_reg_807 == sub_ln97_reg_4173) ? 1'b1 : 1'b0);

assign l_1_cast_fu_2021_p1 = l_1_reg_762;

assign l_2_cast_fu_3022_p1 = l_2_reg_941;

assign l_cast_fu_1521_p1 = l_reg_598;

assign lhs_2_fu_2673_p3 = ((addr_cmp_reg_4481[0:0] == 1'b1) ? reuse_reg_fu_242 : dx_Dout_A);

assign or_ln101_fu_2495_p2 = (select_ln100_6_fu_2489_p3 | icmp_ln101_reg_4334);

assign or_ln115_fu_2791_p2 = (select_ln114_4_fu_2784_p3 | icmp_ln115_fu_2762_p2);

assign or_ln46_fu_1403_p2 = (select_ln45_5_reg_3692 | icmp_ln46_reg_3671);

assign or_ln70_fu_3270_p2 = (select_ln69_4_reg_4776 | icmp_ln70_reg_4759);

assign or_ln88_fu_1843_p2 = (select_ln87_4_fu_1831_p3 | icmp_ln88_reg_4003);

assign outH_fu_1151_p2 = (sub_ln41_fu_1147_p2 + 10'd1);

assign outW_fu_1165_p2 = (sub_ln42_fu_1157_p2 + 32'd1);

assign p_cast46_fu_2269_p1 = empty_76_fu_2264_p2;

assign p_mid131_fu_3259_p2 = (trunc_ln70_1_reg_4782 + empty_57_reg_4733);

assign p_mid199_fu_2511_p2 = (select_ln100_2_fu_2461_p3 + trunc_ln101_1_fu_2508_p1);

assign p_shl1_cast_fu_1501_p3 = {{trunc_ln49_4_fu_1497_p1}, {2'd0}};

assign p_shl3_cast_fu_2001_p3 = {{trunc_ln91_4_fu_1997_p1}, {2'd0}};

assign p_shl5_cast_fu_3002_p3 = {{trunc_ln118_4_fu_2998_p1}, {2'd0}};

assign p_shl7_cast_fu_2608_p3 = {{trunc_ln727_3_reg_4410}, {2'd0}};

assign p_shl8_cast_fu_2572_p3 = {{trunc_ln1118_1_fu_2568_p1}, {2'd0}};

assign select_ln100_1_fu_2377_p3 = ((icmp_ln101_fu_2372_p2[0:0] == 1'b1) ? add_ln100_reg_4324 : c_1_reg_839);

assign select_ln100_2_fu_2461_p3 = ((icmp_ln101_reg_4334[0:0] == 1'b1) ? grp_fu_3397_p3 : grp_fu_3389_p3);

assign select_ln100_3_fu_2466_p3 = ((icmp_ln101_reg_4334[0:0] == 1'b1) ? 6'd0 : trunc_ln727_reg_4366);

assign select_ln100_4_fu_2472_p3 = ((icmp_ln101_reg_4334[0:0] == 1'b1) ? empty_75_reg_4264 : add_ln1118_fu_2437_p2);

assign select_ln100_5_fu_2478_p3 = ((icmp_ln101_reg_4334[0:0] == 1'b1) ? grp_fu_3397_p3 : empty_78_fu_2433_p2);

assign select_ln100_6_fu_2489_p3 = ((icmp_ln101_reg_4334[0:0] == 1'b1) ? icmp_ln102_reg_4188 : icmp_ln102_1_fu_2484_p2);

assign select_ln100_fu_2402_p3 = ((icmp_ln101_reg_4334[0:0] == 1'b1) ? 32'd0 : ap_phi_mux_fh_1_phi_fu_866_p4);

assign select_ln101_1_fu_2517_p3 = ((select_ln100_6_fu_2489_p3[0:0] == 1'b1) ? trunc_ln727_1_reg_4389 : select_ln100_3_fu_2466_p3);

assign select_ln101_2_fu_2546_p3 = ((select_ln100_6_fu_2489_p3[0:0] == 1'b1) ? add_ln1118_5_fu_2542_p2 : select_ln100_4_fu_2472_p3);

assign select_ln101_4_fu_2594_p3 = ((select_ln100_6_fu_2489_p3[0:0] == 1'b1) ? add_ln101_reg_4383 : select_ln100_reg_4372);

assign select_ln101_5_fu_2427_p3 = ((icmp_ln101_reg_4334[0:0] == 1'b1) ? 64'd1 : add_ln101_2_reg_4356);

assign select_ln101_fu_2500_p3 = ((or_ln101_fu_2495_p2[0:0] == 1'b1) ? 32'd0 : ap_phi_mux_fw_1_phi_fu_877_p4);

assign select_ln114_1_fu_2767_p3 = ((icmp_ln115_fu_2762_p2[0:0] == 1'b1) ? add_ln114_fu_2756_p2 : i_4_reg_907);

assign select_ln114_2_fu_2907_p3 = ((icmp_ln115_reg_4546[0:0] == 1'b1) ? 31'd0 : empty_82_reg_4541);

assign select_ln114_3_fu_2855_p3 = ((icmp_ln115_reg_4546[0:0] == 1'b1) ? 4'd0 : trunc_ln118_reg_4532);

assign select_ln114_4_fu_2784_p3 = ((icmp_ln115_fu_2762_p2[0:0] == 1'b1) ? icmp_ln89_reg_3974 : icmp_ln116_fu_2779_p2);

assign select_ln114_fu_2820_p3 = ((icmp_ln115_reg_4546[0:0] == 1'b1) ? 32'd0 : j_2_reg_895);

assign select_ln115_1_fu_2913_p3 = ((select_ln114_4_reg_4566[0:0] == 1'b1) ? p_mid1154_reg_4616 : select_ln114_2_fu_2907_p3);

assign select_ln115_2_fu_2875_p3 = ((select_ln114_4_reg_4566[0:0] == 1'b1) ? trunc_ln118_1_fu_2871_p1 : select_ln114_3_fu_2855_p3);

assign select_ln115_3_fu_2892_p3 = ((select_ln114_4_reg_4566[0:0] == 1'b1) ? add_ln115_fu_2861_p2 : select_ln114_fu_2820_p3);

assign select_ln115_4_fu_3056_p3 = ((icmp_ln115_reg_4546[0:0] == 1'b1) ? 64'd1 : add_ln115_1_fu_3050_p2);

assign select_ln115_fu_2797_p3 = ((or_ln115_fu_2791_p2[0:0] == 1'b1) ? 32'd0 : k_2_reg_930);

assign select_ln45_1_fu_1308_p3 = ((icmp_ln46_reg_3671[0:0] == 1'b1) ? p_mid1_reg_3724 : empty_46_reg_3650);

assign select_ln45_2_fu_1253_p3 = ((icmp_ln46_fu_1248_p2[0:0] == 1'b1) ? add_ln45_fu_1242_p2 : i_reg_550);

assign select_ln45_3_fu_1337_p3 = ((icmp_ln46_reg_3671[0:0] == 1'b1) ? p_mid1_reg_3724 : tmp_reg_3656);

assign select_ln45_4_fu_1342_p3 = ((icmp_ln46_reg_3671[0:0] == 1'b1) ? 4'd0 : trunc_ln49_reg_3661);

assign select_ln45_5_fu_1270_p3 = ((icmp_ln46_fu_1248_p2[0:0] == 1'b1) ? icmp_ln47_reg_3636 : icmp_ln47_1_fu_1265_p2);

assign select_ln45_fu_1301_p3 = ((icmp_ln46_reg_3671[0:0] == 1'b1) ? 32'd0 : j_reg_574);

assign select_ln46_1_fu_1364_p3 = ((select_ln45_5_reg_3692[0:0] == 1'b1) ? tmp_mid1_fu_1358_p2 : select_ln45_3_fu_1337_p3);

assign select_ln46_2_fu_1375_p3 = ((select_ln45_5_reg_3692[0:0] == 1'b1) ? trunc_ln49_1_fu_1371_p1 : select_ln45_4_fu_1342_p3);

assign select_ln46_3_fu_1392_p3 = ((select_ln45_5_reg_3692[0:0] == 1'b1) ? add_ln46_fu_1348_p2 : select_ln45_fu_1301_p3);

assign select_ln46_4_fu_1554_p3 = ((icmp_ln46_reg_3671[0:0] == 1'b1) ? 64'd1 : add_ln46_1_fu_1548_p2);

assign select_ln46_fu_1407_p3 = ((or_ln46_fu_1403_p2[0:0] == 1'b1) ? 32'd0 : k_reg_586);

assign select_ln69_1_fu_3196_p3 = ((icmp_ln70_fu_3183_p2[0:0] == 1'b1) ? add_ln69_fu_3177_p2 : c_reg_985);

assign select_ln69_2_fu_3208_p3 = ((icmp_ln70_fu_3183_p2[0:0] == 1'b1) ? 10'd0 : trunc_ln70_fu_3163_p1);

assign select_ln69_3_fu_3254_p3 = ((icmp_ln70_reg_4759[0:0] == 1'b1) ? empty_57_reg_4733 : empty_58_reg_4751);

assign select_ln69_4_fu_3221_p3 = ((icmp_ln70_fu_3183_p2[0:0] == 1'b1) ? icmp_ln71_reg_3904 : icmp_ln71_1_fu_3216_p2);

assign select_ln69_fu_3188_p3 = ((icmp_ln70_fu_3183_p2[0:0] == 1'b1) ? 32'd0 : h_reg_1008);

assign select_ln70_1_fu_3238_p3 = ((select_ln69_4_fu_3221_p3[0:0] == 1'b1) ? trunc_ln70_1_fu_3234_p1 : select_ln69_2_fu_3208_p3);

assign select_ln70_3_fu_3246_p3 = ((select_ln69_4_fu_3221_p3[0:0] == 1'b1) ? add_ln70_fu_3228_p2 : select_ln69_fu_3188_p3);

assign select_ln70_4_fu_3330_p3 = ((icmp_ln70_reg_4759[0:0] == 1'b1) ? 64'd1 : add_ln70_1_fu_3324_p2);

assign select_ln70_fu_3274_p3 = ((or_ln70_fu_3270_p2[0:0] == 1'b1) ? 32'd0 : w_reg_1019);

assign select_ln87_1_fu_1783_p3 = ((icmp_ln88_reg_4003[0:0] == 1'b1) ? add_ln87_fu_1770_p2 : i_3_reg_726);

assign select_ln87_2_fu_1906_p3 = ((icmp_ln88_reg_4003[0:0] == 1'b1) ? 31'd0 : empty_68_reg_3995);

assign select_ln87_3_fu_1820_p3 = ((icmp_ln88_reg_4003[0:0] == 1'b1) ? 4'd0 : trunc_ln91_reg_3985);

assign select_ln87_4_fu_1831_p3 = ((icmp_ln88_reg_4003[0:0] == 1'b1) ? icmp_ln89_reg_3974 : icmp_ln89_1_fu_1826_p2);

assign select_ln87_fu_1776_p3 = ((icmp_ln88_reg_4003[0:0] == 1'b1) ? 32'd0 : j_1_reg_703);

assign select_ln88_1_fu_1912_p3 = ((select_ln87_4_reg_4050[0:0] == 1'b1) ? p_mid165_reg_4087 : select_ln87_2_fu_1906_p3);

assign select_ln88_2_fu_1864_p3 = ((select_ln87_4_fu_1831_p3[0:0] == 1'b1) ? trunc_ln91_1_fu_1860_p1 : select_ln87_3_fu_1820_p3);

assign select_ln88_3_fu_1882_p3 = ((select_ln87_4_fu_1831_p3[0:0] == 1'b1) ? add_ln88_fu_1837_p2 : select_ln87_fu_1776_p3);

assign select_ln88_4_fu_2054_p3 = ((icmp_ln88_reg_4003[0:0] == 1'b1) ? 64'd1 : add_ln88_1_fu_2048_p2);

assign select_ln88_fu_1848_p3 = ((or_ln88_fu_1843_p2[0:0] == 1'b1) ? 32'd0 : k_1_reg_750);

assign select_ln97_1_fu_2143_p3 = ((icmp_ln98_fu_2137_p2[0:0] == 1'b1) ? add_ln97_2_fu_2131_p2 : f_1_reg_784);

assign select_ln97_2_fu_2159_p3 = ((icmp_ln98_fu_2137_p2[0:0] == 1'b1) ? empty_79_fu_2155_p1 : empty_74_fu_2110_p1);

assign select_ln97_3_fu_2173_p3 = ((icmp_ln98_fu_2137_p2[0:0] == 1'b1) ? icmp_ln703_2_fu_2167_p2 : icmp_ln703_fu_2114_p2);

assign select_ln97_4_fu_2187_p3 = ((icmp_ln98_fu_2137_p2[0:0] == 1'b1) ? icmp_ln703_3_fu_2181_p2 : icmp_ln703_1_fu_2120_p2);

assign select_ln97_fu_2195_p3 = ((icmp_ln98_reg_4201[0:0] == 1'b1) ? 32'd0 : h_1_reg_795);

assign sext_ln1118_1_fu_2343_p0 = dy_Dout_A;

assign sext_ln1118_1_fu_2343_p1 = sext_ln1118_1_fu_2343_p0;

assign sext_ln1118_3_fu_2441_p1 = add_ln1118_3_reg_4377;

assign sext_ln1118_4_fu_2451_p1 = $signed(tmp_13_fu_2444_p3);

assign sext_ln115_fu_2851_p1 = $signed(sub_ln118_fu_2845_p2);

assign sext_ln117_fu_2971_p1 = $signed(trunc_ln2_fu_2961_p4);

assign sext_ln118_1_fu_2939_p1 = $signed(tmp_11_fu_2932_p3);

assign sext_ln118_fu_2929_p1 = add_ln118_reg_4595;

assign sext_ln125_fu_2809_p1 = $signed(grp_fu_1098_p4);

assign sext_ln46_fu_1333_p1 = $signed(sub_ln49_fu_1327_p2);

assign sext_ln48_fu_1470_p1 = $signed(trunc_ln5_fu_1460_p4);

assign sext_ln49_1_fu_1438_p1 = $signed(tmp_4_fu_1431_p3);

assign sext_ln49_fu_1428_p1 = add_ln49_reg_3735;

assign sext_ln58_fu_1286_p1 = $signed(trunc_ln3_fu_1277_p4);

assign sext_ln61_fu_1600_p1 = $signed(grp_fu_1098_p4);

assign sext_ln703_fu_2226_p1 = $signed(sub_ln1118_fu_2220_p2);

assign sext_ln88_fu_1816_p1 = $signed(sub_ln91_fu_1810_p2);

assign sext_ln90_fu_1970_p1 = $signed(trunc_ln_fu_1960_p4);

assign sext_ln91_1_fu_1938_p1 = $signed(tmp_6_fu_1931_p3);

assign sext_ln91_fu_1928_p1 = add_ln91_reg_4066;

assign sub_ln1118_fu_2220_p2 = (zext_ln1118_2_fu_2216_p1 - zext_ln1118_1_fu_2206_p1);

assign sub_ln118_fu_2845_p2 = (zext_ln118_1_fu_2841_p1 - zext_ln118_fu_2831_p1);

assign sub_ln41_fu_1147_p2 = ($signed(empty_43_reg_3551) - $signed(empty_reg_3546));

assign sub_ln42_fu_1157_p2 = (W_read_reg_3490 - FW_read_reg_3455);

assign sub_ln49_fu_1327_p2 = (zext_ln49_1_fu_1323_p1 - zext_ln49_fu_1313_p1);

assign sub_ln68_fu_1667_p2 = (add_ln68_fu_1662_p2 - FW_read_reg_3455);

assign sub_ln91_fu_1810_p2 = (zext_ln91_1_fu_1806_p1 - zext_ln91_fu_1794_p1);

assign sub_ln97_fu_2094_p2 = (add_ln97_fu_2089_p2 - FW_read_reg_3455);

assign tmp11_fu_1419_p2 = (trunc_ln47_fu_1415_p1 + mul_ln46_reg_3746);

assign tmp17_fu_3309_p2 = (mul_ln69_reg_4813 + trunc_ln73_fu_3305_p1);

assign tmp18_fu_1918_p2 = (mul_ln87_reg_4082 + empty_71_reg_4092);

assign tmp20_fu_2919_p2 = (mul_ln114_reg_4606 + empty_86_reg_4611);

assign tmp_10_fu_2834_p3 = {{trunc_ln114_reg_4560}, {2'd0}};

assign tmp_11_fu_2932_p3 = {{add_ln118_reg_4595}, {2'd0}};

assign tmp_12_fu_2949_p3 = {{empty_87_reg_4621}, {1'd0}};

assign tmp_13_fu_2444_p3 = {{add_ln1118_3_reg_4377}, {2'd0}};

assign tmp_1_fu_3145_p4 = f_reg_963[1:0];

assign tmp_3_fu_3078_p4 = i_5_reg_952[1:0];

assign tmp_4_fu_1431_p3 = {{add_ln49_reg_3735}, {2'd0}};

assign tmp_5_fu_1316_p3 = {{trunc_ln45_2_reg_3686}, {2'd0}};

assign tmp_6_fu_1931_p3 = {{add_ln91_reg_4066}, {2'd0}};

assign tmp_7_fu_1448_p3 = {{empty_49_reg_3762}, {1'd0}};

assign tmp_8_fu_1948_p3 = {{empty_72_reg_4097}, {1'd0}};

assign tmp_9_fu_2209_p3 = {{select_ln97_2_reg_4216}, {2'd0}};

assign tmp_fu_1233_p2 = (trunc_ln46_fu_1229_p1 + empty_46_reg_3650);

assign tmp_mid1_fu_1358_p2 = (trunc_ln46_1_fu_1354_p1 + select_ln45_1_fu_1308_p3);

assign tmp_s_fu_1798_p3 = {{trunc_ln87_3_fu_1790_p1}, {2'd0}};

assign trunc_ln100_2_fu_2384_p1 = select_ln100_1_fu_2377_p3[3:0];

assign trunc_ln101_1_fu_2508_p1 = add_ln101_reg_4383[9:0];

assign trunc_ln101_fu_2394_p1 = ap_phi_mux_fh_1_phi_fu_866_p4[9:0];

assign trunc_ln103_fu_2600_p1 = select_ln101_fu_2500_p3[9:0];

assign trunc_ln104_fu_2274_p1 = w_1_reg_807[7:0];

assign trunc_ln1118_1_fu_2568_p1 = add_ln1118_6_fu_2558_p2[5:0];

assign trunc_ln1118_fu_2564_p1 = add_ln1118_6_fu_2558_p2[7:0];

assign trunc_ln114_fu_2775_p1 = select_ln114_1_fu_2767_p3[1:0];

assign trunc_ln115_1_fu_2867_p1 = add_ln115_fu_2861_p2[30:0];

assign trunc_ln116_fu_2805_p1 = select_ln115_fu_2797_p3[30:0];

assign trunc_ln118_1_fu_2871_p1 = add_ln115_fu_2861_p2[3:0];

assign trunc_ln118_2_fu_2981_p1 = select_ln115_reg_4573[5:0];

assign trunc_ln118_3_fu_2994_p1 = add_ln118_2_fu_2988_p2[7:0];

assign trunc_ln118_4_fu_2998_p1 = add_ln118_2_fu_2988_p2[5:0];

assign trunc_ln118_5_fu_3031_p1 = l_2_reg_941[7:0];

assign trunc_ln118_fu_2747_p1 = j_2_reg_895[3:0];

assign trunc_ln2_fu_2961_p4 = {{empty_88_fu_2956_p2[31:1]}};

assign trunc_ln3_fu_1277_p4 = {{b_read_reg_3530[31:1]}};

assign trunc_ln42_fu_1161_p1 = sub_ln42_fu_1157_p2[9:0];

assign trunc_ln45_1_fu_1207_p1 = C_read_reg_3504[30:0];

assign trunc_ln45_2_fu_1261_p1 = select_ln45_2_fu_1253_p3[1:0];

assign trunc_ln45_fu_1204_p1 = FH_read_reg_3476[30:0];

assign trunc_ln46_1_fu_1354_p1 = add_ln46_fu_1348_p2[30:0];

assign trunc_ln46_fu_1229_p1 = j_reg_574[30:0];

assign trunc_ln47_fu_1415_p1 = select_ln46_fu_1407_p3[30:0];

assign trunc_ln49_1_fu_1371_p1 = add_ln46_fu_1348_p2[3:0];

assign trunc_ln49_2_fu_1480_p1 = select_ln46_reg_3751[5:0];

assign trunc_ln49_3_fu_1493_p1 = add_ln49_2_fu_1487_p2[7:0];

assign trunc_ln49_4_fu_1497_p1 = add_ln49_2_fu_1487_p2[5:0];

assign trunc_ln49_5_fu_1530_p1 = l_reg_598[7:0];

assign trunc_ln49_fu_1238_p1 = j_reg_574[3:0];

assign trunc_ln59_fu_1572_p1 = i_1_reg_609[1:0];

assign trunc_ln5_fu_1460_p4 = {{empty_50_fu_1455_p2[31:1]}};

assign trunc_ln62_fu_1622_p1 = i_2_reg_620[1:0];

assign trunc_ln68_1_fu_3118_p1 = F_read_reg_3514[30:0];

assign trunc_ln68_fu_3115_p1 = W_read_reg_3490[9:0];

assign trunc_ln69_fu_3204_p1 = select_ln69_1_fu_3196_p3[9:0];

assign trunc_ln70_1_fu_3234_p1 = add_ln70_fu_3228_p2[9:0];

assign trunc_ln70_fu_3163_p1 = h_reg_1008[9:0];

assign trunc_ln71_fu_3282_p1 = select_ln70_fu_3274_p3[9:0];

assign trunc_ln727_1_fu_2423_p1 = add_ln101_fu_2417_p2[5:0];

assign trunc_ln727_2_fu_2534_p1 = add_ln727_fu_2528_p2[7:0];

assign trunc_ln727_3_fu_2538_p1 = add_ln727_fu_2528_p2[5:0];

assign trunc_ln727_4_fu_2604_p1 = select_ln101_fu_2500_p3[7:0];

assign trunc_ln727_fu_2398_p1 = ap_phi_mux_fh_1_phi_fu_866_p4[5:0];

assign trunc_ln73_fu_3305_p1 = fh_reg_1041[9:0];

assign trunc_ln75_fu_3361_p1 = fw_reg_1052[9:0];

assign trunc_ln87_3_fu_1790_p1 = select_ln87_1_fu_1783_p3[1:0];

assign trunc_ln87_fu_1693_p1 = FW_read_reg_3455[30:0];

assign trunc_ln88_1_fu_1856_p1 = add_ln88_fu_1837_p2[30:0];

assign trunc_ln89_fu_1890_p1 = select_ln88_fu_1848_p3[30:0];

assign trunc_ln91_1_fu_1860_p1 = add_ln88_fu_1837_p2[3:0];

assign trunc_ln91_2_fu_1980_p1 = select_ln88_reg_4055[5:0];

assign trunc_ln91_3_fu_1993_p1 = add_ln91_2_fu_1987_p2[7:0];

assign trunc_ln91_4_fu_1997_p1 = add_ln91_2_fu_1987_p2[5:0];

assign trunc_ln91_5_fu_2030_p1 = l_1_reg_762[7:0];

assign trunc_ln91_fu_1722_p1 = j_1_reg_703[3:0];

assign trunc_ln97_fu_2086_p1 = W_read_reg_3490[9:0];

assign trunc_ln98_fu_2202_p1 = select_ln97_fu_2195_p3[9:0];

assign trunc_ln99_fu_2260_p1 = w_1_reg_807[9:0];

assign trunc_ln_fu_1960_p4 = {{empty_73_fu_1955_p2[31:1]}};

assign x_Addr_A = x_Addr_A_orig << 32'd1;

assign x_Clk_A = ap_clk;

assign x_Din_A = 16'd0;

assign x_Rst_A = ap_rst_n_inv;

assign x_WEN_A = 2'd0;

assign y_Addr_A = y_Addr_A_orig << 32'd1;

assign y_Clk_A = ap_clk;

assign y_Rst_A = ap_rst_n_inv;

assign zext_ln1116_fu_3370_p1 = add_ln1116_fu_3365_p2;

assign zext_ln1118_1_fu_2206_p1 = select_ln97_2_reg_4216;

assign zext_ln1118_2_fu_2216_p1 = tmp_9_fu_2209_p3;

assign zext_ln1118_3_fu_2409_p1 = trunc_ln100_2_reg_4351;

assign zext_ln1118_4_fu_2554_p1 = select_ln101_2_fu_2546_p3;

assign zext_ln1118_5_fu_2634_p1 = add_ln1118_8_fu_2629_p2;

assign zext_ln1118_fu_2651_p1 = add_ln1118_1_reg_4461;

assign zext_ln118_1_fu_2841_p1 = tmp_10_fu_2834_p3;

assign zext_ln118_2_fu_2882_p1 = select_ln115_2_fu_2875_p3;

assign zext_ln118_3_fu_2984_p1 = trunc_ln118_2_fu_2981_p1;

assign zext_ln118_4_fu_3040_p1 = add_ln118_4_fu_3035_p2;

assign zext_ln118_fu_2831_p1 = trunc_ln114_reg_4560;

assign zext_ln49_1_fu_1323_p1 = tmp_5_fu_1316_p3;

assign zext_ln49_2_fu_1382_p1 = select_ln46_2_fu_1375_p3;

assign zext_ln49_3_fu_1483_p1 = trunc_ln49_2_fu_1480_p1;

assign zext_ln49_4_fu_1539_p1 = add_ln49_4_reg_3787_pp0_iter1_reg;

assign zext_ln49_fu_1313_p1 = trunc_ln45_2_reg_3686;

assign zext_ln727_1_fu_2705_p1 = add_ln727_2_reg_4441_pp4_iter4_reg;

assign zext_ln727_fu_2524_p1 = select_ln101_1_fu_2517_p3;

assign zext_ln72_fu_3290_p1 = $unsigned(grp_fu_3428_p3);

assign zext_ln91_1_fu_1806_p1 = tmp_s_fu_1798_p3;

assign zext_ln91_2_fu_1872_p1 = select_ln88_2_fu_1864_p3;

assign zext_ln91_3_fu_1983_p1 = trunc_ln91_2_fu_1980_p1;

assign zext_ln91_4_fu_2039_p1 = add_ln91_4_reg_4122_pp3_iter1_reg;

assign zext_ln91_fu_1794_p1 = trunc_ln87_3_fu_1790_p1;

always @ (posedge ap_clk) begin
    cast60_reg_3892[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //conv_combined
