

================================================================
== Vitis HLS Report for 'foo'
================================================================
* Date:           Sat Oct  2 11:51:43 2021

* Version:        2021.1 (Build 3247384 on Thu Jun 10 19:36:07 MDT 2021)
* Project:        mvp
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z010-clg400-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  9.500 ns|     0.50 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       40|       40|  0.400 us|  0.400 us|   41|   41|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 10 [1/1] (1.00ns)   --->   "%c_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %c" [hello.cpp:3]   --->   Operation 10 'read' 'c_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 11 [1/1] (1.00ns)   --->   "%b_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %b" [hello.cpp:3]   --->   Operation 11 'read' 'b_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 12 [1/1] (1.00ns)   --->   "%a_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %a" [hello.cpp:3]   --->   Operation 12 'read' 'a_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%trunc_ln9 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %a_read, i32 2, i32 63" [hello.cpp:9]   --->   Operation 13 'partselect' 'trunc_ln9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%trunc_ln9_1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %b_read, i32 2, i32 63" [hello.cpp:9]   --->   Operation 14 'partselect' 'trunc_ln9_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%trunc_ln9_2 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %c_read, i32 2, i32 63" [hello.cpp:9]   --->   Operation 15 'partselect' 'trunc_ln9_2' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 9.50>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%sext_ln9 = sext i62 %trunc_ln9_2" [hello.cpp:9]   --->   Operation 16 'sext' 'sext_ln9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %sext_ln9" [hello.cpp:9]   --->   Operation 17 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (9.50ns)   --->   "%empty = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i32, i32 %gmem_addr, i32 10" [hello.cpp:9]   --->   Operation 18 'writereq' 'empty' <Predicate = true> <Delay = 9.50> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 2.64>
ST_3 : Operation 19 [2/2] (2.64ns)   --->   "%call_ln9 = call void @foo_Pipeline_VITIS_LOOP_9_1, i32 %gmem, i62 %trunc_ln9_2, i62 %trunc_ln9, i62 %trunc_ln9_1" [hello.cpp:9]   --->   Operation 19 'call' 'call_ln9' <Predicate = true> <Delay = 2.64> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 20 [1/2] (0.00ns)   --->   "%call_ln9 = call void @foo_Pipeline_VITIS_LOOP_9_1, i32 %gmem, i62 %trunc_ln9_2, i62 %trunc_ln9, i62 %trunc_ln9_1" [hello.cpp:9]   --->   Operation 20 'call' 'call_ln9' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 9.50>
ST_5 : Operation 21 [5/5] (9.50ns)   --->   "%empty_17 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr" [hello.cpp:13]   --->   Operation 21 'writeresp' 'empty_17' <Predicate = true> <Delay = 9.50> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 9.50>
ST_6 : Operation 22 [4/5] (9.50ns)   --->   "%empty_17 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr" [hello.cpp:13]   --->   Operation 22 'writeresp' 'empty_17' <Predicate = true> <Delay = 9.50> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 9.50>
ST_7 : Operation 23 [3/5] (9.50ns)   --->   "%empty_17 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr" [hello.cpp:13]   --->   Operation 23 'writeresp' 'empty_17' <Predicate = true> <Delay = 9.50> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 9.50>
ST_8 : Operation 24 [2/5] (9.50ns)   --->   "%empty_17 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr" [hello.cpp:13]   --->   Operation 24 'writeresp' 'empty_17' <Predicate = true> <Delay = 9.50> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 9.50>
ST_9 : Operation 25 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_10"   --->   Operation 25 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 26 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0"   --->   Operation 26 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 27 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 27 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 28 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %a, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_4, void @empty_5, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_6"   --->   Operation 28 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 29 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %a, void @empty_7, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_6"   --->   Operation 29 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 30 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %b, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_4, void @empty_8, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_6"   --->   Operation 30 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 31 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %b, void @empty_7, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_6"   --->   Operation 31 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 32 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %c, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_4, void @empty_9, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_6"   --->   Operation 32 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 33 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %c, void @empty_7, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_6"   --->   Operation 33 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 34 [1/5] (9.50ns)   --->   "%empty_17 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr" [hello.cpp:13]   --->   Operation 34 'writeresp' 'empty_17' <Predicate = true> <Delay = 9.50> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 35 [1/1] (0.00ns)   --->   "%ret_ln13 = ret" [hello.cpp:13]   --->   Operation 35 'ret' 'ret_ln13' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 0.5ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read operation ('c', hello.cpp:3) on port 'c' (hello.cpp:3) [14]  (1 ns)

 <State 2>: 9.5ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_addr', hello.cpp:9) [21]  (0 ns)
	bus request operation ('empty', hello.cpp:9) on port 'gmem' (hello.cpp:9) [22]  (9.5 ns)

 <State 3>: 2.64ns
The critical path consists of the following:
	'call' operation ('call_ln9', hello.cpp:9) to 'foo_Pipeline_VITIS_LOOP_9_1' [23]  (2.64 ns)

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 9.5ns
The critical path consists of the following:
	bus response operation ('empty_17', hello.cpp:13) on port 'gmem' (hello.cpp:13) [24]  (9.5 ns)

 <State 6>: 9.5ns
The critical path consists of the following:
	bus response operation ('empty_17', hello.cpp:13) on port 'gmem' (hello.cpp:13) [24]  (9.5 ns)

 <State 7>: 9.5ns
The critical path consists of the following:
	bus response operation ('empty_17', hello.cpp:13) on port 'gmem' (hello.cpp:13) [24]  (9.5 ns)

 <State 8>: 9.5ns
The critical path consists of the following:
	bus response operation ('empty_17', hello.cpp:13) on port 'gmem' (hello.cpp:13) [24]  (9.5 ns)

 <State 9>: 9.5ns
The critical path consists of the following:
	bus response operation ('empty_17', hello.cpp:13) on port 'gmem' (hello.cpp:13) [24]  (9.5 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
