

================================================================
== Vitis HLS Report for 'vadd'
================================================================
* Date:           Thu Jan 27 20:51:07 2022

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        arr_add
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       68|       68|  0.680 us|  0.680 us|   69|   69|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1           |       11|       11|         3|          1|          1|    10|       yes|
        |- Loop 2           |       11|       11|         3|          1|          1|    10|       yes|
        |- VITIS_LOOP_28_1  |       10|       10|         2|          1|          1|    10|       yes|
        |- Loop 4           |       11|       11|         3|          1|          1|    10|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3
  * Pipeline-1: initiation interval (II) = 1, depth = 3
  * Pipeline-2: initiation interval (II) = 1, depth = 2
  * Pipeline-3: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 33
* Pipeline : 4
  Pipeline-0 : II = 1, D = 3, States = { 9 10 11 }
  Pipeline-1 : II = 1, D = 3, States = { 19 20 21 }
  Pipeline-2 : II = 1, D = 2, States = { 23 24 }
  Pipeline-3 : II = 1, D = 3, States = { 26 27 28 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 12 10 
10 --> 11 
11 --> 9 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 22 20 
20 --> 21 
21 --> 19 
22 --> 23 
23 --> 25 24 
24 --> 23 
25 --> 26 
26 --> 29 27 
27 --> 28 
28 --> 26 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 34 [1/1] (1.00ns)   --->   "%c_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %c"   --->   Operation 34 'read' 'c_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 35 [1/1] (1.00ns)   --->   "%b_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %b"   --->   Operation 35 'read' 'b_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 36 [1/1] (1.00ns)   --->   "%a_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %a"   --->   Operation 36 'read' 'a_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%buffa = alloca i64 1" [vadd.cpp:18]   --->   Operation 37 'alloca' 'buffa' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%buffb = alloca i64 1" [vadd.cpp:19]   --->   Operation 38 'alloca' 'buffb' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%buffc = alloca i64 1" [vadd.cpp:20]   --->   Operation 39 'alloca' 'buffc' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %a_read, i32 2, i32 63" [vadd.cpp:25]   --->   Operation 40 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%sext_ln25 = sext i62 %trunc_ln" [vadd.cpp:25]   --->   Operation 41 'sext' 'sext_ln25' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %sext_ln25" [vadd.cpp:25]   --->   Operation 42 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 43 [7/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 10" [vadd.cpp:25]   --->   Operation 43 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 44 [6/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 10" [vadd.cpp:25]   --->   Operation 44 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 45 [5/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 10" [vadd.cpp:25]   --->   Operation 45 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 46 [4/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 10" [vadd.cpp:25]   --->   Operation 46 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 47 [3/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 10" [vadd.cpp:25]   --->   Operation 47 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 48 [2/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 10" [vadd.cpp:25]   --->   Operation 48 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 49 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_6"   --->   Operation 49 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 50 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty_10, i32 0, i32 0, void @empty_8, i32 0, i32 200, void @empty, void @empty_0, void @empty_8, i32 16, i32 16, i32 16, i32 16, void @empty_8, void @empty_8"   --->   Operation 50 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 51 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 51 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 52 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %a, void @empty_1, i32 0, i32 0, void @empty_8, i32 0, i32 0, void @empty_9, void @empty_2, void @empty_8, i32 0, i32 0, i32 0, i32 0, void @empty_8, void @empty_11"   --->   Operation 52 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 53 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %a, void @empty_3, i32 0, i32 0, void @empty_8, i32 0, i32 0, void @empty_8, void @empty_8, void @empty_8, i32 0, i32 0, i32 0, i32 0, void @empty_8, void @empty_11"   --->   Operation 53 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 54 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %b, void @empty_1, i32 0, i32 0, void @empty_8, i32 0, i32 0, void @empty_9, void @empty_4, void @empty_8, i32 0, i32 0, i32 0, i32 0, void @empty_8, void @empty_11"   --->   Operation 54 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 55 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %b, void @empty_3, i32 0, i32 0, void @empty_8, i32 0, i32 0, void @empty_8, void @empty_8, void @empty_8, i32 0, i32 0, i32 0, i32 0, void @empty_8, void @empty_11"   --->   Operation 55 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 56 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %c, void @empty_1, i32 0, i32 0, void @empty_8, i32 0, i32 0, void @empty_9, void @empty_5, void @empty_8, i32 0, i32 0, i32 0, i32 0, void @empty_8, void @empty_11"   --->   Operation 56 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 57 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %c, void @empty_3, i32 0, i32 0, void @empty_8, i32 0, i32 0, void @empty_8, void @empty_8, void @empty_8, i32 0, i32 0, i32 0, i32 0, void @empty_8, void @empty_11"   --->   Operation 57 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 58 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_1, i32 0, i32 0, void @empty_8, i32 0, i32 0, void @empty_9, void @empty_8, void @empty_8, i32 0, i32 0, i32 0, i32 0, void @empty_8, void @empty_8"   --->   Operation 58 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 59 [1/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 10" [vadd.cpp:25]   --->   Operation 59 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 60 [1/1] (1.58ns)   --->   "%br_ln25 = br void %load-store-loop6" [vadd.cpp:25]   --->   Operation 60 'br' 'br_ln25' <Predicate = true> <Delay = 1.58>

State 9 <SV = 8> <Delay = 1.73>
ST_9 : Operation 61 [1/1] (0.00ns)   --->   "%loop_index7 = phi i4 0, void, i4 %empty_17, void %load-store-loop6.split"   --->   Operation 61 'phi' 'loop_index7' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 62 [1/1] (1.73ns)   --->   "%empty_17 = add i4 %loop_index7, i4 1"   --->   Operation 62 'add' 'empty_17' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 63 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 63 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 64 [1/1] (1.30ns)   --->   "%exitcond106 = icmp_eq  i4 %loop_index7, i4 10"   --->   Operation 64 'icmp' 'exitcond106' <Predicate = true> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 65 [1/1] (0.00ns)   --->   "%empty_18 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 10, i64 10, i64 10"   --->   Operation 65 'speclooptripcount' 'empty_18' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 66 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %exitcond106, void %load-store-loop6.split, void %memcpy-split5"   --->   Operation 66 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 67 [1/1] (7.30ns)   --->   "%gmem_addr_read = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [vadd.cpp:25]   --->   Operation 67 'read' 'gmem_addr_read' <Predicate = (!exitcond106)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 2.32>
ST_11 : Operation 68 [1/1] (0.00ns)   --->   "%loop_index7_cast = zext i4 %loop_index7"   --->   Operation 68 'zext' 'loop_index7_cast' <Predicate = (!exitcond106)> <Delay = 0.00>
ST_11 : Operation 69 [1/1] (0.00ns)   --->   "%buffa_addr = getelementptr i32 %buffa, i64 0, i64 %loop_index7_cast"   --->   Operation 69 'getelementptr' 'buffa_addr' <Predicate = (!exitcond106)> <Delay = 0.00>
ST_11 : Operation 70 [1/1] (2.32ns)   --->   "%store_ln25 = store i32 %gmem_addr_read, i4 %buffa_addr" [vadd.cpp:25]   --->   Operation 70 'store' 'store_ln25' <Predicate = (!exitcond106)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_11 : Operation 71 [1/1] (0.00ns)   --->   "%br_ln0 = br void %load-store-loop6"   --->   Operation 71 'br' 'br_ln0' <Predicate = (!exitcond106)> <Delay = 0.00>

State 12 <SV = 9> <Delay = 7.30>
ST_12 : Operation 72 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %b_read, i32 2, i32 63" [vadd.cpp:26]   --->   Operation 72 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 73 [1/1] (0.00ns)   --->   "%sext_ln26 = sext i62 %trunc_ln1" [vadd.cpp:26]   --->   Operation 73 'sext' 'sext_ln26' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 74 [1/1] (0.00ns)   --->   "%gmem_addr_1 = getelementptr i32 %gmem, i64 %sext_ln26" [vadd.cpp:26]   --->   Operation 74 'getelementptr' 'gmem_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 75 [7/7] (7.30ns)   --->   "%empty_19 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i32 10" [vadd.cpp:26]   --->   Operation 75 'readreq' 'empty_19' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 10> <Delay = 7.30>
ST_13 : Operation 76 [6/7] (7.30ns)   --->   "%empty_19 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i32 10" [vadd.cpp:26]   --->   Operation 76 'readreq' 'empty_19' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 11> <Delay = 7.30>
ST_14 : Operation 77 [5/7] (7.30ns)   --->   "%empty_19 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i32 10" [vadd.cpp:26]   --->   Operation 77 'readreq' 'empty_19' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 12> <Delay = 7.30>
ST_15 : Operation 78 [4/7] (7.30ns)   --->   "%empty_19 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i32 10" [vadd.cpp:26]   --->   Operation 78 'readreq' 'empty_19' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 13> <Delay = 7.30>
ST_16 : Operation 79 [3/7] (7.30ns)   --->   "%empty_19 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i32 10" [vadd.cpp:26]   --->   Operation 79 'readreq' 'empty_19' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 14> <Delay = 7.30>
ST_17 : Operation 80 [2/7] (7.30ns)   --->   "%empty_19 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i32 10" [vadd.cpp:26]   --->   Operation 80 'readreq' 'empty_19' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 15> <Delay = 7.30>
ST_18 : Operation 81 [1/7] (7.30ns)   --->   "%empty_19 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i32 10" [vadd.cpp:26]   --->   Operation 81 'readreq' 'empty_19' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 82 [1/1] (1.58ns)   --->   "%br_ln26 = br void %load-store-loop3" [vadd.cpp:26]   --->   Operation 82 'br' 'br_ln26' <Predicate = true> <Delay = 1.58>

State 19 <SV = 16> <Delay = 1.73>
ST_19 : Operation 83 [1/1] (0.00ns)   --->   "%loop_index4 = phi i4 0, void %memcpy-split5, i4 %empty_20, void %load-store-loop3.split"   --->   Operation 83 'phi' 'loop_index4' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 84 [1/1] (1.73ns)   --->   "%empty_20 = add i4 %loop_index4, i4 1"   --->   Operation 84 'add' 'empty_20' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 85 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 85 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 86 [1/1] (1.30ns)   --->   "%exitcond95 = icmp_eq  i4 %loop_index4, i4 10"   --->   Operation 86 'icmp' 'exitcond95' <Predicate = true> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 87 [1/1] (0.00ns)   --->   "%empty_21 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 10, i64 10, i64 10"   --->   Operation 87 'speclooptripcount' 'empty_21' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 88 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %exitcond95, void %load-store-loop3.split, void %memcpy-split2.preheader"   --->   Operation 88 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 20 <SV = 17> <Delay = 7.30>
ST_20 : Operation 89 [1/1] (7.30ns)   --->   "%gmem_addr_1_read = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_1" [vadd.cpp:26]   --->   Operation 89 'read' 'gmem_addr_1_read' <Predicate = (!exitcond95)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 18> <Delay = 2.32>
ST_21 : Operation 90 [1/1] (0.00ns)   --->   "%loop_index4_cast = zext i4 %loop_index4"   --->   Operation 90 'zext' 'loop_index4_cast' <Predicate = (!exitcond95)> <Delay = 0.00>
ST_21 : Operation 91 [1/1] (0.00ns)   --->   "%buffb_addr = getelementptr i32 %buffb, i64 0, i64 %loop_index4_cast"   --->   Operation 91 'getelementptr' 'buffb_addr' <Predicate = (!exitcond95)> <Delay = 0.00>
ST_21 : Operation 92 [1/1] (2.32ns)   --->   "%store_ln26 = store i32 %gmem_addr_1_read, i4 %buffb_addr" [vadd.cpp:26]   --->   Operation 92 'store' 'store_ln26' <Predicate = (!exitcond95)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_21 : Operation 93 [1/1] (0.00ns)   --->   "%br_ln0 = br void %load-store-loop3"   --->   Operation 93 'br' 'br_ln0' <Predicate = (!exitcond95)> <Delay = 0.00>

State 22 <SV = 17> <Delay = 1.58>
ST_22 : Operation 94 [1/1] (1.58ns)   --->   "%br_ln0 = br void %memcpy-split2"   --->   Operation 94 'br' 'br_ln0' <Predicate = true> <Delay = 1.58>

State 23 <SV = 18> <Delay = 2.32>
ST_23 : Operation 95 [1/1] (0.00ns)   --->   "%i = phi i4 %add_ln28, void %.split, i4 0, void %memcpy-split2.preheader" [vadd.cpp:28]   --->   Operation 95 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 96 [1/1] (1.73ns)   --->   "%add_ln28 = add i4 %i, i4 1" [vadd.cpp:28]   --->   Operation 96 'add' 'add_ln28' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 97 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 97 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 98 [1/1] (1.30ns)   --->   "%icmp_ln28 = icmp_eq  i4 %i, i4 10" [vadd.cpp:28]   --->   Operation 98 'icmp' 'icmp_ln28' <Predicate = true> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 99 [1/1] (0.00ns)   --->   "%empty_22 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 10, i64 10, i64 10"   --->   Operation 99 'speclooptripcount' 'empty_22' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 100 [1/1] (0.00ns)   --->   "%br_ln28 = br i1 %icmp_ln28, void %.split, void" [vadd.cpp:28]   --->   Operation 100 'br' 'br_ln28' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 101 [1/1] (0.00ns)   --->   "%i_cast = zext i4 %i" [vadd.cpp:28]   --->   Operation 101 'zext' 'i_cast' <Predicate = (!icmp_ln28)> <Delay = 0.00>
ST_23 : Operation 102 [1/1] (0.00ns)   --->   "%buffa_addr_1 = getelementptr i32 %buffa, i64 0, i64 %i_cast" [vadd.cpp:29]   --->   Operation 102 'getelementptr' 'buffa_addr_1' <Predicate = (!icmp_ln28)> <Delay = 0.00>
ST_23 : Operation 103 [2/2] (2.32ns)   --->   "%buffa_load = load i4 %buffa_addr_1" [vadd.cpp:29]   --->   Operation 103 'load' 'buffa_load' <Predicate = (!icmp_ln28)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_23 : Operation 104 [1/1] (0.00ns)   --->   "%buffb_addr_1 = getelementptr i32 %buffb, i64 0, i64 %i_cast" [vadd.cpp:29]   --->   Operation 104 'getelementptr' 'buffb_addr_1' <Predicate = (!icmp_ln28)> <Delay = 0.00>
ST_23 : Operation 105 [2/2] (2.32ns)   --->   "%buffb_load = load i4 %buffb_addr_1" [vadd.cpp:29]   --->   Operation 105 'load' 'buffb_load' <Predicate = (!icmp_ln28)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 24 <SV = 19> <Delay = 7.19>
ST_24 : Operation 106 [1/1] (0.00ns)   --->   "%specloopname_ln28 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [vadd.cpp:28]   --->   Operation 106 'specloopname' 'specloopname_ln28' <Predicate = (!icmp_ln28)> <Delay = 0.00>
ST_24 : Operation 107 [1/2] (2.32ns)   --->   "%buffa_load = load i4 %buffa_addr_1" [vadd.cpp:29]   --->   Operation 107 'load' 'buffa_load' <Predicate = (!icmp_ln28)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_24 : Operation 108 [1/2] (2.32ns)   --->   "%buffb_load = load i4 %buffb_addr_1" [vadd.cpp:29]   --->   Operation 108 'load' 'buffb_load' <Predicate = (!icmp_ln28)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_24 : Operation 109 [1/1] (2.55ns)   --->   "%add_ln29 = add i32 %buffb_load, i32 %buffa_load" [vadd.cpp:29]   --->   Operation 109 'add' 'add_ln29' <Predicate = (!icmp_ln28)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 110 [1/1] (0.00ns)   --->   "%buffc_addr = getelementptr i32 %buffc, i64 0, i64 %i_cast" [vadd.cpp:29]   --->   Operation 110 'getelementptr' 'buffc_addr' <Predicate = (!icmp_ln28)> <Delay = 0.00>
ST_24 : Operation 111 [1/1] (2.32ns)   --->   "%store_ln29 = store i32 %add_ln29, i4 %buffc_addr" [vadd.cpp:29]   --->   Operation 111 'store' 'store_ln29' <Predicate = (!icmp_ln28)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_24 : Operation 112 [1/1] (0.00ns)   --->   "%br_ln0 = br void %memcpy-split2"   --->   Operation 112 'br' 'br_ln0' <Predicate = (!icmp_ln28)> <Delay = 0.00>

State 25 <SV = 19> <Delay = 7.30>
ST_25 : Operation 113 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %c_read, i32 2, i32 63" [vadd.cpp:32]   --->   Operation 113 'partselect' 'trunc_ln2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 114 [1/1] (0.00ns)   --->   "%sext_ln32 = sext i62 %trunc_ln2" [vadd.cpp:32]   --->   Operation 114 'sext' 'sext_ln32' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 115 [1/1] (0.00ns)   --->   "%gmem_addr_2 = getelementptr i32 %gmem, i64 %sext_ln32" [vadd.cpp:32]   --->   Operation 115 'getelementptr' 'gmem_addr_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 116 [1/1] (7.30ns)   --->   "%empty_23 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i32, i32 %gmem_addr_2, i32 10" [vadd.cpp:32]   --->   Operation 116 'writereq' 'empty_23' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 117 [1/1] (1.58ns)   --->   "%br_ln32 = br void %load-store-loop" [vadd.cpp:32]   --->   Operation 117 'br' 'br_ln32' <Predicate = true> <Delay = 1.58>

State 26 <SV = 20> <Delay = 2.32>
ST_26 : Operation 118 [1/1] (0.00ns)   --->   "%loop_index = phi i4 0, void, i4 %empty_24, void %load-store-loop.split"   --->   Operation 118 'phi' 'loop_index' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 119 [1/1] (1.73ns)   --->   "%empty_24 = add i4 %loop_index, i4 1"   --->   Operation 119 'add' 'empty_24' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 120 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 120 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 121 [1/1] (1.30ns)   --->   "%exitcond3 = icmp_eq  i4 %loop_index, i4 10"   --->   Operation 121 'icmp' 'exitcond3' <Predicate = true> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 122 [1/1] (0.00ns)   --->   "%empty_25 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 10, i64 10, i64 10"   --->   Operation 122 'speclooptripcount' 'empty_25' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 123 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %exitcond3, void %load-store-loop.split, void %memcpy-split"   --->   Operation 123 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 124 [1/1] (0.00ns)   --->   "%loop_index_cast = zext i4 %loop_index"   --->   Operation 124 'zext' 'loop_index_cast' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_26 : Operation 125 [1/1] (0.00ns)   --->   "%buffc_addr_1 = getelementptr i32 %buffc, i64 0, i64 %loop_index_cast"   --->   Operation 125 'getelementptr' 'buffc_addr_1' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_26 : Operation 126 [2/2] (2.32ns)   --->   "%buffc_load = load i4 %buffc_addr_1"   --->   Operation 126 'load' 'buffc_load' <Predicate = (!exitcond3)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 27 <SV = 21> <Delay = 2.32>
ST_27 : Operation 127 [1/2] (2.32ns)   --->   "%buffc_load = load i4 %buffc_addr_1"   --->   Operation 127 'load' 'buffc_load' <Predicate = (!exitcond3)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 28 <SV = 22> <Delay = 7.30>
ST_28 : Operation 128 [1/1] (7.30ns)   --->   "%write_ln32 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_2, i32 %buffc_load, i4 15" [vadd.cpp:32]   --->   Operation 128 'write' 'write_ln32' <Predicate = (!exitcond3)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 129 [1/1] (0.00ns)   --->   "%br_ln0 = br void %load-store-loop"   --->   Operation 129 'br' 'br_ln0' <Predicate = (!exitcond3)> <Delay = 0.00>

State 29 <SV = 21> <Delay = 7.30>
ST_29 : Operation 130 [5/5] (7.30ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr_2" [vadd.cpp:34]   --->   Operation 130 'writeresp' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 22> <Delay = 7.30>
ST_30 : Operation 131 [4/5] (7.30ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr_2" [vadd.cpp:34]   --->   Operation 131 'writeresp' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 23> <Delay = 7.30>
ST_31 : Operation 132 [3/5] (7.30ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr_2" [vadd.cpp:34]   --->   Operation 132 'writeresp' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 24> <Delay = 7.30>
ST_32 : Operation 133 [2/5] (7.30ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr_2" [vadd.cpp:34]   --->   Operation 133 'writeresp' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 25> <Delay = 7.30>
ST_33 : Operation 134 [1/5] (7.30ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr_2" [vadd.cpp:34]   --->   Operation 134 'writeresp' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 135 [1/1] (0.00ns)   --->   "%ret_ln34 = ret" [vadd.cpp:34]   --->   Operation 135 'ret' 'ret_ln34' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'c' [15]  (1 ns)

 <State 2>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (vadd.cpp:25) [24]  (7.3 ns)

 <State 3>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (vadd.cpp:25) [24]  (7.3 ns)

 <State 4>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (vadd.cpp:25) [24]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (vadd.cpp:25) [24]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (vadd.cpp:25) [24]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (vadd.cpp:25) [24]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (vadd.cpp:25) [24]  (7.3 ns)

 <State 9>: 1.74ns
The critical path consists of the following:
	'phi' operation ('loop_index7') with incoming values : ('empty_17') [27]  (0 ns)
	'add' operation ('empty_17') [28]  (1.74 ns)

 <State 10>: 7.3ns
The critical path consists of the following:
	bus read on port 'gmem' (vadd.cpp:25) [35]  (7.3 ns)

 <State 11>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('buffa_addr') [36]  (0 ns)
	'store' operation ('store_ln25', vadd.cpp:25) of variable 'gmem_addr_read', vadd.cpp:25 on array 'buffa', vadd.cpp:18 [37]  (2.32 ns)

 <State 12>: 7.3ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_addr_1', vadd.cpp:26) [42]  (0 ns)
	bus request on port 'gmem' (vadd.cpp:26) [43]  (7.3 ns)

 <State 13>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (vadd.cpp:26) [43]  (7.3 ns)

 <State 14>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (vadd.cpp:26) [43]  (7.3 ns)

 <State 15>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (vadd.cpp:26) [43]  (7.3 ns)

 <State 16>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (vadd.cpp:26) [43]  (7.3 ns)

 <State 17>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (vadd.cpp:26) [43]  (7.3 ns)

 <State 18>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (vadd.cpp:26) [43]  (7.3 ns)

 <State 19>: 1.74ns
The critical path consists of the following:
	'phi' operation ('loop_index4') with incoming values : ('empty_20') [46]  (0 ns)
	'add' operation ('empty_20') [47]  (1.74 ns)

 <State 20>: 7.3ns
The critical path consists of the following:
	bus read on port 'gmem' (vadd.cpp:26) [54]  (7.3 ns)

 <State 21>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('buffb_addr') [55]  (0 ns)
	'store' operation ('store_ln26', vadd.cpp:26) of variable 'gmem_addr_1_read', vadd.cpp:26 on array 'buffb', vadd.cpp:19 [56]  (2.32 ns)

 <State 22>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', vadd.cpp:28) with incoming values : ('add_ln28', vadd.cpp:28) [61]  (1.59 ns)

 <State 23>: 2.32ns
The critical path consists of the following:
	'phi' operation ('i', vadd.cpp:28) with incoming values : ('add_ln28', vadd.cpp:28) [61]  (0 ns)
	'getelementptr' operation ('buffa_addr_1', vadd.cpp:29) [70]  (0 ns)
	'load' operation ('buffa_load', vadd.cpp:29) on array 'buffa', vadd.cpp:18 [71]  (2.32 ns)

 <State 24>: 7.2ns
The critical path consists of the following:
	'load' operation ('buffa_load', vadd.cpp:29) on array 'buffa', vadd.cpp:18 [71]  (2.32 ns)
	'add' operation ('add_ln29', vadd.cpp:29) [74]  (2.55 ns)
	'store' operation ('store_ln29', vadd.cpp:29) of variable 'add_ln29', vadd.cpp:29 on array 'buffc', vadd.cpp:20 [76]  (2.32 ns)

 <State 25>: 7.3ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_addr_2', vadd.cpp:32) [81]  (0 ns)
	bus request on port 'gmem' (vadd.cpp:32) [82]  (7.3 ns)

 <State 26>: 2.32ns
The critical path consists of the following:
	'phi' operation ('loop_index') with incoming values : ('empty_24') [85]  (0 ns)
	'getelementptr' operation ('buffc_addr_1') [93]  (0 ns)
	'load' operation ('buffc_load') on array 'buffc', vadd.cpp:20 [94]  (2.32 ns)

 <State 27>: 2.32ns
The critical path consists of the following:
	'load' operation ('buffc_load') on array 'buffc', vadd.cpp:20 [94]  (2.32 ns)

 <State 28>: 7.3ns
The critical path consists of the following:
	bus write on port 'gmem' (vadd.cpp:32) [95]  (7.3 ns)

 <State 29>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (vadd.cpp:34) [98]  (7.3 ns)

 <State 30>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (vadd.cpp:34) [98]  (7.3 ns)

 <State 31>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (vadd.cpp:34) [98]  (7.3 ns)

 <State 32>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (vadd.cpp:34) [98]  (7.3 ns)

 <State 33>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (vadd.cpp:34) [98]  (7.3 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
