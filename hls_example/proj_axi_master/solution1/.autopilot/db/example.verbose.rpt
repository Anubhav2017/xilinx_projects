

================================================================
== Vitis HLS Report for 'example'
================================================================
* Date:           Thu Jan 27 12:45:40 2022

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        proj_axi_master
* Solution:       solution1 (Vitis Kernel Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  3.650 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      298|      298|  1.490 us|  1.490 us|  299|  299|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1           |       52|       52|         4|          1|          1|    50|       yes|
        |- VITIS_LOOP_36_1  |       52|       52|         4|          1|          1|    50|       yes|
        |- Loop 3           |       51|       51|         3|          1|          1|    50|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-----+--------+-------+-----+
|       Name      | BRAM_18K| DSP |   FF   |  LUT  | URAM|
+-----------------+---------+-----+--------+-------+-----+
|DSP              |        -|    -|       -|      -|    -|
|Expression       |        -|    -|       0|    167|    -|
|FIFO             |        -|    -|       -|      -|    -|
|Instance         |        4|    -|     672|    934|    -|
|Memory           |        1|    -|       0|      0|    -|
|Multiplexer      |        -|    -|       -|   1001|    -|
|Register         |        -|    -|     897|    160|    -|
+-----------------+---------+-----+--------+-------+-----+
|Total            |        5|    0|    1569|   2262|    0|
+-----------------+---------+-----+--------+-------+-----+
|Available        |      280|  220|  106400|  53200|    0|
+-----------------+---------+-----+--------+-------+-----+
|Utilization (%)  |        1|    0|       1|      4|    0|
+-----------------+---------+-----+--------+-------+-----+

+ Detail: 
    * Instance: 
    +-----------------+---------------+---------+----+-----+-----+-----+
    |     Instance    |     Module    | BRAM_18K| DSP|  FF | LUT | URAM|
    +-----------------+---------------+---------+----+-----+-----+-----+
    |control_s_axi_U  |control_s_axi  |        0|   0|  106|  168|    0|
    |gmem_m_axi_U     |gmem_m_axi     |        4|   0|  566|  766|    0|
    +-----------------+---------------+---------+----+-----+-----+-----+
    |Total            |               |        4|   0|  672|  934|    0|
    +-----------------+---------------+---------+----+-----+-----+-----+

    * DSP: 
    N/A

    * Memory: 
    +--------+-------+---------+---+----+-----+------+-----+------+-------------+
    | Memory | Module| BRAM_18K| FF| LUT| URAM| Words| Bits| Banks| W*Bits*Banks|
    +--------+-------+---------+---+----+-----+------+-----+------+-------------+
    |buff_U  |buff   |        1|  0|   0|    0|    50|   32|     1|         1600|
    +--------+-------+---------+---+----+-----+------+-----+------+-------------+
    |Total   |       |        1|  0|   0|    0|    50|   32|     1|         1600|
    +--------+-------+---------+---+----+-----+------+-----+------+-------------+

    * FIFO: 
    N/A

    * Expression: 
    +-----------------------------------+----------+----+---+----+------------+------------+
    |           Variable Name           | Operation| DSP| FF| LUT| Bitwidth P0| Bitwidth P1|
    +-----------------------------------+----------+----+---+----+------------+------------+
    |add_ln36_fu_289_p2                 |         +|   0|  0|  14|           6|           1|
    |add_ln37_fu_306_p2                 |         +|   0|  0|  39|          32|           7|
    |empty_16_fu_249_p2                 |         +|   0|  0|  14|           6|           1|
    |empty_23_fu_312_p2                 |         +|   0|  0|  14|           6|           1|
    |ap_block_pp0_stage0_11001          |       and|   0|  0|   2|           1|           1|
    |ap_block_pp2_stage0_11001          |       and|   0|  0|   2|           1|           1|
    |ap_block_state73_pp0_stage0_iter1  |       and|   0|  0|   2|           1|           1|
    |ap_block_state84_io                |       and|   0|  0|   2|           1|           1|
    |ap_predicate_op244_read_state73    |       and|   0|  0|   2|           1|           1|
    |exitcond2_fu_318_p2                |      icmp|   0|  0|  10|           6|           5|
    |exitcond64_fu_255_p2               |      icmp|   0|  0|  10|           6|           5|
    |icmp_ln36_fu_295_p2                |      icmp|   0|  0|  10|           6|           5|
    |ap_block_state1                    |        or|   0|  0|   2|           1|           1|
    |phitmp_cast_fu_342_p3              |    select|   0|  0|  32|           1|           1|
    |ap_enable_pp0                      |       xor|   0|  0|   2|           1|           2|
    |ap_enable_pp1                      |       xor|   0|  0|   2|           1|           2|
    |ap_enable_pp2                      |       xor|   0|  0|   2|           1|           2|
    |ap_enable_reg_pp0_iter1            |       xor|   0|  0|   2|           2|           1|
    |ap_enable_reg_pp1_iter1            |       xor|   0|  0|   2|           2|           1|
    |ap_enable_reg_pp2_iter1            |       xor|   0|  0|   2|           2|           1|
    +-----------------------------------+----------+----+---+----+------------+------------+
    |Total                              |          |   0|  0| 167|          84|          41|
    +-----------------------------------+----------+----+---+----+------------+------------+

    * Multiplexer: 
    +--------------------------------------+-----+-----------+-----+-----------+
    |                 Name                 | LUT | Input Size| Bits| Total Bits|
    +--------------------------------------+-----+-----------+-----+-----------+
    |ap_NS_fsm                             |  774|        145|    1|        145|
    |ap_done                               |    9|          2|    1|          2|
    |ap_enable_reg_pp0_iter1               |    9|          2|    1|          2|
    |ap_enable_reg_pp0_iter3               |    9|          2|    1|          2|
    |ap_enable_reg_pp1_iter1               |    9|          2|    1|          2|
    |ap_enable_reg_pp1_iter3               |    9|          2|    1|          2|
    |ap_enable_reg_pp2_iter1               |    9|          2|    1|          2|
    |ap_enable_reg_pp2_iter2               |    9|          2|    1|          2|
    |ap_phi_mux_empty_19_phi_fu_185_p4     |   14|          3|   64|        192|
    |ap_phi_mux_loop_index4_phi_fu_162_p4  |    9|          2|    6|         12|
    |ap_phi_mux_shiftreg9_phi_fu_174_p4    |    9|          2|   32|         64|
    |buff_address0                         |   14|          3|    6|         18|
    |buff_address1                         |   14|          3|    6|         18|
    |buff_d0                               |   14|          3|   32|         96|
    |gmem_blk_n_AR                         |    9|          2|    1|          2|
    |gmem_blk_n_AW                         |    9|          2|    1|          2|
    |gmem_blk_n_B                          |    9|          2|    1|          2|
    |gmem_blk_n_R                          |    9|          2|    1|          2|
    |gmem_blk_n_W                          |    9|          2|    1|          2|
    |i_reg_191                             |    9|          2|    6|         12|
    |loop_index4_reg_158                   |    9|          2|    6|         12|
    |loop_index_reg_202                    |    9|          2|    6|         12|
    |shiftreg9_reg_170                     |    9|          2|   32|         64|
    |shiftreg_reg_213                      |    9|          2|   32|         64|
    +--------------------------------------+-----+-----------+-----+-----------+
    |Total                                 | 1001|        195|  241|        733|
    +--------------------------------------+-----+-----------+-----+-----------+

    * Register: 
    +---------------------------------+-----+----+-----+-----------+
    |               Name              |  FF | LUT| Bits| Const Bits|
    +---------------------------------+-----+----+-----+-----------+
    |add_ln37_reg_404                 |   32|   0|   32|          0|
    |ap_CS_fsm                        |  144|   0|  144|          0|
    |ap_done_reg                      |    1|   0|    1|          0|
    |ap_enable_reg_pp0_iter0          |    1|   0|    1|          0|
    |ap_enable_reg_pp0_iter1          |    1|   0|    1|          0|
    |ap_enable_reg_pp0_iter2          |    1|   0|    1|          0|
    |ap_enable_reg_pp0_iter3          |    1|   0|    1|          0|
    |ap_enable_reg_pp1_iter0          |    1|   0|    1|          0|
    |ap_enable_reg_pp1_iter1          |    1|   0|    1|          0|
    |ap_enable_reg_pp1_iter2          |    1|   0|    1|          0|
    |ap_enable_reg_pp1_iter3          |    1|   0|    1|          0|
    |ap_enable_reg_pp2_iter0          |    1|   0|    1|          0|
    |ap_enable_reg_pp2_iter1          |    1|   0|    1|          0|
    |ap_enable_reg_pp2_iter2          |    1|   0|    1|          0|
    |ap_rst_n_inv                     |    1|   0|    1|          0|
    |ap_rst_reg_1                     |    1|   0|    1|          0|
    |ap_rst_reg_2                     |    1|   0|    1|          0|
    |buff_addr_1_reg_398              |    6|   0|    6|          0|
    |empty_16_reg_361                 |    6|   0|    6|          0|
    |empty_18_reg_370                 |    1|   0|    1|          0|
    |empty_20_reg_379                 |   32|   0|   32|          0|
    |empty_25_reg_418                 |    1|   0|    1|          0|
    |empty_25_reg_418_pp2_iter1_reg   |    1|   0|    1|          0|
    |exitcond2_reg_414                |    1|   0|    1|          0|
    |exitcond2_reg_414_pp2_iter1_reg  |    1|   0|    1|          0|
    |exitcond64_reg_366               |    1|   0|    1|          0|
    |gmem_addr_read_reg_374           |   64|   0|   64|          0|
    |gmem_addr_reg_354                |   64|   0|   64|          0|
    |i_reg_191                        |    6|   0|    6|          0|
    |icmp_ln36_reg_394                |    1|   0|    1|          0|
    |loop_index4_reg_158              |    6|   0|    6|          0|
    |loop_index_reg_202               |    6|   0|    6|          0|
    |p_cast1_reg_384                  |   32|   0|   32|          0|
    |reg_225                          |   32|   0|   32|          0|
    |shiftreg9_reg_170                |   32|   0|   32|          0|
    |shiftreg_reg_213                 |   32|   0|   32|          0|
    |trunc_ln_reg_349                 |   61|   0|   61|          0|
    |buff_addr_1_reg_398              |   64|  32|    6|          0|
    |empty_18_reg_370                 |   64|  32|    1|          0|
    |exitcond64_reg_366               |   64|  32|    1|          0|
    |icmp_ln36_reg_394                |   64|  32|    1|          0|
    |loop_index4_reg_158              |   64|  32|    6|          0|
    +---------------------------------+-----+----+-----+-----------+
    |Total                            |  897| 160|  592|          0|
    +---------------------------------+-----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+-----------------------+-----+-----+---------------+--------------+--------------+
|       RTL Ports       | Dir | Bits|    Protocol   | Source Object|    C Type    |
+-----------------------+-----+-----+---------------+--------------+--------------+
|s_axi_control_AWVALID  |   in|    1|          s_axi|       control|        scalar|
|s_axi_control_AWREADY  |  out|    1|          s_axi|       control|        scalar|
|s_axi_control_AWADDR   |   in|    5|          s_axi|       control|        scalar|
|s_axi_control_WVALID   |   in|    1|          s_axi|       control|        scalar|
|s_axi_control_WREADY   |  out|    1|          s_axi|       control|        scalar|
|s_axi_control_WDATA    |   in|   32|          s_axi|       control|        scalar|
|s_axi_control_WSTRB    |   in|    4|          s_axi|       control|        scalar|
|s_axi_control_ARVALID  |   in|    1|          s_axi|       control|        scalar|
|s_axi_control_ARREADY  |  out|    1|          s_axi|       control|        scalar|
|s_axi_control_ARADDR   |   in|    5|          s_axi|       control|        scalar|
|s_axi_control_RVALID   |  out|    1|          s_axi|       control|        scalar|
|s_axi_control_RREADY   |   in|    1|          s_axi|       control|        scalar|
|s_axi_control_RDATA    |  out|   32|          s_axi|       control|        scalar|
|s_axi_control_RRESP    |  out|    2|          s_axi|       control|        scalar|
|s_axi_control_BVALID   |  out|    1|          s_axi|       control|        scalar|
|s_axi_control_BREADY   |   in|    1|          s_axi|       control|        scalar|
|s_axi_control_BRESP    |  out|    2|          s_axi|       control|        scalar|
|ap_clk                 |   in|    1|  ap_ctrl_chain|       example|  return value|
|ap_rst_n               |   in|    1|  ap_ctrl_chain|       example|  return value|
|interrupt              |  out|    1|  ap_ctrl_chain|       example|  return value|
|m_axi_gmem_AWVALID     |  out|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_AWREADY     |   in|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_AWADDR      |  out|   64|          m_axi|          gmem|       pointer|
|m_axi_gmem_AWID        |  out|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_AWLEN       |  out|    8|          m_axi|          gmem|       pointer|
|m_axi_gmem_AWSIZE      |  out|    3|          m_axi|          gmem|       pointer|
|m_axi_gmem_AWBURST     |  out|    2|          m_axi|          gmem|       pointer|
|m_axi_gmem_AWLOCK      |  out|    2|          m_axi|          gmem|       pointer|
|m_axi_gmem_AWCACHE     |  out|    4|          m_axi|          gmem|       pointer|
|m_axi_gmem_AWPROT      |  out|    3|          m_axi|          gmem|       pointer|
|m_axi_gmem_AWQOS       |  out|    4|          m_axi|          gmem|       pointer|
|m_axi_gmem_AWREGION    |  out|    4|          m_axi|          gmem|       pointer|
|m_axi_gmem_AWUSER      |  out|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_WVALID      |  out|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_WREADY      |   in|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_WDATA       |  out|   64|          m_axi|          gmem|       pointer|
|m_axi_gmem_WSTRB       |  out|    8|          m_axi|          gmem|       pointer|
|m_axi_gmem_WLAST       |  out|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_WID         |  out|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_WUSER       |  out|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_ARVALID     |  out|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_ARREADY     |   in|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_ARADDR      |  out|   64|          m_axi|          gmem|       pointer|
|m_axi_gmem_ARID        |  out|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_ARLEN       |  out|    8|          m_axi|          gmem|       pointer|
|m_axi_gmem_ARSIZE      |  out|    3|          m_axi|          gmem|       pointer|
|m_axi_gmem_ARBURST     |  out|    2|          m_axi|          gmem|       pointer|
|m_axi_gmem_ARLOCK      |  out|    2|          m_axi|          gmem|       pointer|
|m_axi_gmem_ARCACHE     |  out|    4|          m_axi|          gmem|       pointer|
|m_axi_gmem_ARPROT      |  out|    3|          m_axi|          gmem|       pointer|
|m_axi_gmem_ARQOS       |  out|    4|          m_axi|          gmem|       pointer|
|m_axi_gmem_ARREGION    |  out|    4|          m_axi|          gmem|       pointer|
|m_axi_gmem_ARUSER      |  out|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_RVALID      |   in|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_RREADY      |  out|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_RDATA       |   in|   64|          m_axi|          gmem|       pointer|
|m_axi_gmem_RLAST       |   in|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_RID         |   in|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_RUSER       |   in|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_RRESP       |   in|    2|          m_axi|          gmem|       pointer|
|m_axi_gmem_BVALID      |   in|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_BREADY      |  out|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_BRESP       |   in|    2|          m_axi|          gmem|       pointer|
|m_axi_gmem_BID         |   in|    1|          m_axi|          gmem|       pointer|
|m_axi_gmem_BUSER       |   in|    1|          m_axi|          gmem|       pointer|
+-----------------------+-----+-----+---------------+--------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4
  * Pipeline-1: initiation interval (II) = 1, depth = 4
  * Pipeline-2: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 152
* Pipeline : 3
  Pipeline-0 : II = 1, D = 4, States = { 72 73 74 75 }
  Pipeline-1 : II = 1, D = 4, States = { 77 78 79 80 }
  Pipeline-2 : II = 1, D = 3, States = { 82 83 84 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 56 
56 --> 57 
57 --> 58 
58 --> 59 
59 --> 60 
60 --> 61 
61 --> 62 
62 --> 63 
63 --> 64 
64 --> 65 
65 --> 66 
66 --> 67 
67 --> 68 
68 --> 69 
69 --> 70 
70 --> 71 
71 --> 72 
72 --> 76 73 
73 --> 74 
74 --> 75 
75 --> 72 
76 --> 77 
77 --> 81 78 
78 --> 79 
79 --> 80 
80 --> 77 
81 --> 82 
82 --> 85 83 
83 --> 84 
84 --> 82 
85 --> 86 
86 --> 87 
87 --> 88 
88 --> 89 
89 --> 90 
90 --> 91 
91 --> 92 
92 --> 93 
93 --> 94 
94 --> 95 
95 --> 96 
96 --> 97 
97 --> 98 
98 --> 99 
99 --> 100 
100 --> 101 
101 --> 102 
102 --> 103 
103 --> 104 
104 --> 105 
105 --> 106 
106 --> 107 
107 --> 108 
108 --> 109 
109 --> 110 
110 --> 111 
111 --> 112 
112 --> 113 
113 --> 114 
114 --> 115 
115 --> 116 
116 --> 117 
117 --> 118 
118 --> 119 
119 --> 120 
120 --> 121 
121 --> 122 
122 --> 123 
123 --> 124 
124 --> 125 
125 --> 126 
126 --> 127 
127 --> 128 
128 --> 129 
129 --> 130 
130 --> 131 
131 --> 132 
132 --> 133 
133 --> 134 
134 --> 135 
135 --> 136 
136 --> 137 
137 --> 138 
138 --> 139 
139 --> 140 
140 --> 141 
141 --> 142 
142 --> 143 
143 --> 144 
144 --> 145 
145 --> 146 
146 --> 147 
147 --> 148 
148 --> 149 
149 --> 150 
150 --> 151 
151 --> 152 
152 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.25>
ST_1 : Operation 153 [1/1] (1.00ns)   --->   "%a_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %a"   --->   Operation 153 'read' 'a_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 154 [1/1] (3.25ns)   --->   "%buff = alloca i64 1" [example.cpp:29]   --->   Operation 154 'alloca' 'buff' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>
ST_1 : Operation 155 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %a_read, i32 3, i32 63" [example.cpp:34]   --->   Operation 155 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.65>
ST_2 : Operation 156 [1/1] (0.00ns)   --->   "%sext_ln34 = sext i61 %trunc_ln" [example.cpp:34]   --->   Operation 156 'sext' 'sext_ln34' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 157 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i64 %gmem, i64 %sext_ln34" [example.cpp:34]   --->   Operation 157 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 158 [70/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 158 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 3.65>
ST_3 : Operation 159 [69/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 159 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 3.65>
ST_4 : Operation 160 [68/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 160 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 3.65>
ST_5 : Operation 161 [67/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 161 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 3.65>
ST_6 : Operation 162 [66/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 162 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 3.65>
ST_7 : Operation 163 [65/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 163 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 3.65>
ST_8 : Operation 164 [64/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 164 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 3.65>
ST_9 : Operation 165 [63/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 165 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 3.65>
ST_10 : Operation 166 [62/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 166 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 3.65>
ST_11 : Operation 167 [61/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 167 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 3.65>
ST_12 : Operation 168 [60/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 168 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 3.65>
ST_13 : Operation 169 [59/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 169 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 3.65>
ST_14 : Operation 170 [58/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 170 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 3.65>
ST_15 : Operation 171 [57/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 171 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 3.65>
ST_16 : Operation 172 [56/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 172 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 3.65>
ST_17 : Operation 173 [55/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 173 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 3.65>
ST_18 : Operation 174 [54/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 174 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 3.65>
ST_19 : Operation 175 [53/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 175 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 3.65>
ST_20 : Operation 176 [52/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 176 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 20> <Delay = 3.65>
ST_21 : Operation 177 [51/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 177 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 21> <Delay = 3.65>
ST_22 : Operation 178 [50/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 178 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 22> <Delay = 3.65>
ST_23 : Operation 179 [49/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 179 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 23> <Delay = 3.65>
ST_24 : Operation 180 [48/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 180 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 24> <Delay = 3.65>
ST_25 : Operation 181 [47/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 181 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 26 <SV = 25> <Delay = 3.65>
ST_26 : Operation 182 [46/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 182 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 3.65>
ST_27 : Operation 183 [45/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 183 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 3.65>
ST_28 : Operation 184 [44/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 184 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 28> <Delay = 3.65>
ST_29 : Operation 185 [43/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 185 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 3.65>
ST_30 : Operation 186 [42/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 186 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 3.65>
ST_31 : Operation 187 [41/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 187 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 3.65>
ST_32 : Operation 188 [40/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 188 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 3.65>
ST_33 : Operation 189 [39/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 189 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 33> <Delay = 3.65>
ST_34 : Operation 190 [38/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 190 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 35 <SV = 34> <Delay = 3.65>
ST_35 : Operation 191 [37/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 191 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 36 <SV = 35> <Delay = 3.65>
ST_36 : Operation 192 [36/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 192 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 36> <Delay = 3.65>
ST_37 : Operation 193 [35/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 193 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 37> <Delay = 3.65>
ST_38 : Operation 194 [34/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 194 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 39 <SV = 38> <Delay = 3.65>
ST_39 : Operation 195 [33/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 195 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 39> <Delay = 3.65>
ST_40 : Operation 196 [32/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 196 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 41 <SV = 40> <Delay = 3.65>
ST_41 : Operation 197 [31/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 197 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 42 <SV = 41> <Delay = 3.65>
ST_42 : Operation 198 [30/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 198 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 43 <SV = 42> <Delay = 3.65>
ST_43 : Operation 199 [29/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 199 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 44 <SV = 43> <Delay = 3.65>
ST_44 : Operation 200 [28/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 200 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 45 <SV = 44> <Delay = 3.65>
ST_45 : Operation 201 [27/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 201 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 46 <SV = 45> <Delay = 3.65>
ST_46 : Operation 202 [26/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 202 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 47 <SV = 46> <Delay = 3.65>
ST_47 : Operation 203 [25/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 203 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 48 <SV = 47> <Delay = 3.65>
ST_48 : Operation 204 [24/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 204 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 49 <SV = 48> <Delay = 3.65>
ST_49 : Operation 205 [23/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 205 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 50 <SV = 49> <Delay = 3.65>
ST_50 : Operation 206 [22/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 206 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 51 <SV = 50> <Delay = 3.65>
ST_51 : Operation 207 [21/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 207 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 52 <SV = 51> <Delay = 3.65>
ST_52 : Operation 208 [20/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 208 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 53 <SV = 52> <Delay = 3.65>
ST_53 : Operation 209 [19/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 209 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 54 <SV = 53> <Delay = 3.65>
ST_54 : Operation 210 [18/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 210 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 55 <SV = 54> <Delay = 3.65>
ST_55 : Operation 211 [17/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 211 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 56 <SV = 55> <Delay = 3.65>
ST_56 : Operation 212 [16/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 212 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 57 <SV = 56> <Delay = 3.65>
ST_57 : Operation 213 [15/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 213 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 58 <SV = 57> <Delay = 3.65>
ST_58 : Operation 214 [14/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 214 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 59 <SV = 58> <Delay = 3.65>
ST_59 : Operation 215 [13/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 215 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 60 <SV = 59> <Delay = 3.65>
ST_60 : Operation 216 [12/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 216 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 61 <SV = 60> <Delay = 3.65>
ST_61 : Operation 217 [11/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 217 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 62 <SV = 61> <Delay = 3.65>
ST_62 : Operation 218 [10/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 218 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 63 <SV = 62> <Delay = 3.65>
ST_63 : Operation 219 [9/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 219 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 64 <SV = 63> <Delay = 3.65>
ST_64 : Operation 220 [8/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 220 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 65 <SV = 64> <Delay = 3.65>
ST_65 : Operation 221 [7/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 221 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 66 <SV = 65> <Delay = 3.65>
ST_66 : Operation 222 [6/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 222 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 67 <SV = 66> <Delay = 3.65>
ST_67 : Operation 223 [5/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 223 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 68 <SV = 67> <Delay = 3.65>
ST_68 : Operation 224 [4/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 224 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 69 <SV = 68> <Delay = 3.65>
ST_69 : Operation 225 [3/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 225 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 70 <SV = 69> <Delay = 3.65>
ST_70 : Operation 226 [2/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 226 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 71 <SV = 70> <Delay = 3.65>
ST_71 : Operation 227 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_6"   --->   Operation 227 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_71 : Operation 228 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_7, i32 0, i32 0, void @empty, i32 0, i32 0, void @empty, void @empty, void @empty, i32 0, i32 0, i32 0, i32 0, void @empty, void @empty"   --->   Operation 228 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_71 : Operation 229 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %gmem, void @empty_9, i32 0, i32 0, void @empty, i32 64, i32 50, void @empty_0, void @empty_1, void @empty, i32 16, i32 16, i32 16, i32 16, void @empty, void @empty"   --->   Operation 229 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_71 : Operation 230 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %gmem"   --->   Operation 230 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_71 : Operation 231 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %a, void @empty_10, i32 0, i32 0, void @empty, i32 0, i32 0, void @empty_2, void @empty_3, void @empty, i32 0, i32 0, i32 0, i32 0, void @empty, void @empty_4"   --->   Operation 231 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_71 : Operation 232 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %a, void @empty_5, i32 0, i32 0, void @empty, i32 0, i32 0, void @empty, void @empty, void @empty, i32 0, i32 0, i32 0, i32 0, void @empty, void @empty_4"   --->   Operation 232 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_71 : Operation 233 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_10, i32 0, i32 0, void @empty, i32 0, i32 0, void @empty_2, void @empty, void @empty, i32 0, i32 0, i32 0, i32 0, void @empty, void @empty"   --->   Operation 233 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_71 : Operation 234 [1/70] (3.65ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:34]   --->   Operation 234 'readreq' 'empty' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_71 : Operation 235 [1/1] (1.58ns)   --->   "%br_ln34 = br void %load-store-loop3" [example.cpp:34]   --->   Operation 235 'br' 'br_ln34' <Predicate = true> <Delay = 1.58>

State 72 <SV = 71> <Delay = 1.82>
ST_72 : Operation 236 [1/1] (0.00ns)   --->   "%loop_index4 = phi i6 0, void, i6 %empty_16, void %load-store-loop3.split._crit_edge"   --->   Operation 236 'phi' 'loop_index4' <Predicate = true> <Delay = 0.00>
ST_72 : Operation 237 [1/1] (0.00ns)   --->   "%shiftreg9 = phi i32 0, void, i32 %p_cast1, void %load-store-loop3.split._crit_edge" [example.cpp:34]   --->   Operation 237 'phi' 'shiftreg9' <Predicate = true> <Delay = 0.00>
ST_72 : Operation 238 [1/1] (1.82ns)   --->   "%empty_16 = add i6 %loop_index4, i6 1"   --->   Operation 238 'add' 'empty_16' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_72 : Operation 239 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 239 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_72 : Operation 240 [1/1] (1.42ns)   --->   "%exitcond64 = icmp_eq  i6 %loop_index4, i6 50"   --->   Operation 240 'icmp' 'exitcond64' <Predicate = true> <Delay = 1.42> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_72 : Operation 241 [1/1] (0.00ns)   --->   "%empty_17 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 50, i64 50, i64 50"   --->   Operation 241 'speclooptripcount' 'empty_17' <Predicate = true> <Delay = 0.00>
ST_72 : Operation 242 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %exitcond64, void %load-store-loop3.split, void %memcpy-split2.preheader"   --->   Operation 242 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_72 : Operation 243 [1/1] (0.00ns)   --->   "%empty_18 = trunc i6 %loop_index4"   --->   Operation 243 'trunc' 'empty_18' <Predicate = (!exitcond64)> <Delay = 0.00>

State 73 <SV = 72> <Delay = 3.65>
ST_73 : Operation 244 [1/1] (3.65ns)   --->   "%gmem_addr_read = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %gmem_addr" [example.cpp:34]   --->   Operation 244 'read' 'gmem_addr_read' <Predicate = (!exitcond64 & !empty_18)> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 74 <SV = 73> <Delay = 1.58>
ST_74 : Operation 245 [1/1] (0.00ns)   --->   "%shiftreg9_cast = zext i32 %shiftreg9" [example.cpp:34]   --->   Operation 245 'zext' 'shiftreg9_cast' <Predicate = (!exitcond64)> <Delay = 0.00>
ST_74 : Operation 246 [1/1] (1.58ns)   --->   "%br_ln0 = br i1 %empty_18, void, void %load-store-loop3.split._crit_edge"   --->   Operation 246 'br' 'br_ln0' <Predicate = (!exitcond64)> <Delay = 1.58>
ST_74 : Operation 247 [1/1] (1.58ns)   --->   "%br_ln0 = br void %load-store-loop3.split._crit_edge"   --->   Operation 247 'br' 'br_ln0' <Predicate = (!exitcond64 & !empty_18)> <Delay = 1.58>
ST_74 : Operation 248 [1/1] (0.00ns)   --->   "%empty_19 = phi i64 %gmem_addr_read, void, i64 %shiftreg9_cast, void %load-store-loop3.split" [example.cpp:34]   --->   Operation 248 'phi' 'empty_19' <Predicate = (!exitcond64)> <Delay = 0.00>
ST_74 : Operation 249 [1/1] (0.00ns)   --->   "%empty_20 = trunc i64 %empty_19" [example.cpp:34]   --->   Operation 249 'trunc' 'empty_20' <Predicate = (!exitcond64)> <Delay = 0.00>
ST_74 : Operation 250 [1/1] (0.00ns)   --->   "%p_cast1 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %empty_19, i32 32, i32 63" [example.cpp:34]   --->   Operation 250 'partselect' 'p_cast1' <Predicate = (!exitcond64)> <Delay = 0.00>

State 75 <SV = 74> <Delay = 3.25>
ST_75 : Operation 251 [1/1] (0.00ns)   --->   "%loop_index4_cast2 = zext i6 %loop_index4"   --->   Operation 251 'zext' 'loop_index4_cast2' <Predicate = (!exitcond64)> <Delay = 0.00>
ST_75 : Operation 252 [1/1] (0.00ns)   --->   "%buff_addr = getelementptr i32 %buff, i64 0, i64 %loop_index4_cast2"   --->   Operation 252 'getelementptr' 'buff_addr' <Predicate = (!exitcond64)> <Delay = 0.00>
ST_75 : Operation 253 [1/1] (3.25ns)   --->   "%store_ln34 = store i32 %empty_20, i6 %buff_addr" [example.cpp:34]   --->   Operation 253 'store' 'store_ln34' <Predicate = (!exitcond64)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>
ST_75 : Operation 254 [1/1] (0.00ns)   --->   "%br_ln0 = br void %load-store-loop3"   --->   Operation 254 'br' 'br_ln0' <Predicate = (!exitcond64)> <Delay = 0.00>

State 76 <SV = 72> <Delay = 1.58>
ST_76 : Operation 255 [1/1] (1.58ns)   --->   "%br_ln0 = br void %memcpy-split2"   --->   Operation 255 'br' 'br_ln0' <Predicate = true> <Delay = 1.58>

State 77 <SV = 73> <Delay = 3.25>
ST_77 : Operation 256 [1/1] (0.00ns)   --->   "%i = phi i6 %add_ln36, void %.split, i6 0, void %memcpy-split2.preheader" [example.cpp:36]   --->   Operation 256 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 257 [1/1] (1.82ns)   --->   "%add_ln36 = add i6 %i, i6 1" [example.cpp:36]   --->   Operation 257 'add' 'add_ln36' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 258 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 258 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 259 [1/1] (1.42ns)   --->   "%icmp_ln36 = icmp_eq  i6 %i, i6 50" [example.cpp:36]   --->   Operation 259 'icmp' 'icmp_ln36' <Predicate = true> <Delay = 1.42> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 260 [1/1] (0.00ns)   --->   "%empty_21 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 50, i64 50, i64 50"   --->   Operation 260 'speclooptripcount' 'empty_21' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 261 [1/1] (0.00ns)   --->   "%br_ln36 = br i1 %icmp_ln36, void %.split, void" [example.cpp:36]   --->   Operation 261 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 262 [1/1] (0.00ns)   --->   "%i_cast = zext i6 %i" [example.cpp:36]   --->   Operation 262 'zext' 'i_cast' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_77 : Operation 263 [1/1] (0.00ns)   --->   "%buff_addr_1 = getelementptr i32 %buff, i64 0, i64 %i_cast" [example.cpp:37]   --->   Operation 263 'getelementptr' 'buff_addr_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_77 : Operation 264 [2/2] (3.25ns)   --->   "%buff_load = load i6 %buff_addr_1" [example.cpp:37]   --->   Operation 264 'load' 'buff_load' <Predicate = (!icmp_ln36)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>

State 78 <SV = 74> <Delay = 3.25>
ST_78 : Operation 265 [1/2] (3.25ns)   --->   "%buff_load = load i6 %buff_addr_1" [example.cpp:37]   --->   Operation 265 'load' 'buff_load' <Predicate = (!icmp_ln36)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>

State 79 <SV = 75> <Delay = 2.55>
ST_79 : Operation 266 [1/1] (2.55ns)   --->   "%add_ln37 = add i32 %buff_load, i32 100" [example.cpp:37]   --->   Operation 266 'add' 'add_ln37' <Predicate = (!icmp_ln36)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 80 <SV = 76> <Delay = 3.25>
ST_80 : Operation 267 [1/1] (0.00ns)   --->   "%specloopname_ln28 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8" [example.cpp:28]   --->   Operation 267 'specloopname' 'specloopname_ln28' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_80 : Operation 268 [1/1] (3.25ns)   --->   "%store_ln37 = store i32 %add_ln37, i6 %buff_addr_1" [example.cpp:37]   --->   Operation 268 'store' 'store_ln37' <Predicate = (!icmp_ln36)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>
ST_80 : Operation 269 [1/1] (0.00ns)   --->   "%br_ln0 = br void %memcpy-split2"   --->   Operation 269 'br' 'br_ln0' <Predicate = (!icmp_ln36)> <Delay = 0.00>

State 81 <SV = 74> <Delay = 3.65>
ST_81 : Operation 270 [1/1] (3.65ns)   --->   "%empty_22 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i64, i64 %gmem_addr, i32 25" [example.cpp:40]   --->   Operation 270 'writereq' 'empty_22' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_81 : Operation 271 [1/1] (1.58ns)   --->   "%br_ln40 = br void %load-store-loop" [example.cpp:40]   --->   Operation 271 'br' 'br_ln40' <Predicate = true> <Delay = 1.58>

State 82 <SV = 75> <Delay = 3.25>
ST_82 : Operation 272 [1/1] (0.00ns)   --->   "%loop_index = phi i6 0, void, i6 %empty_23, void %load-store-loop.split._crit_edge"   --->   Operation 272 'phi' 'loop_index' <Predicate = true> <Delay = 0.00>
ST_82 : Operation 273 [1/1] (0.00ns)   --->   "%shiftreg = phi i32 0, void, i32 %phitmp_cast, void %load-store-loop.split._crit_edge"   --->   Operation 273 'phi' 'shiftreg' <Predicate = true> <Delay = 0.00>
ST_82 : Operation 274 [1/1] (1.82ns)   --->   "%empty_23 = add i6 %loop_index, i6 1"   --->   Operation 274 'add' 'empty_23' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_82 : Operation 275 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 275 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_82 : Operation 276 [1/1] (1.42ns)   --->   "%exitcond2 = icmp_eq  i6 %loop_index, i6 50"   --->   Operation 276 'icmp' 'exitcond2' <Predicate = true> <Delay = 1.42> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_82 : Operation 277 [1/1] (0.00ns)   --->   "%empty_24 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 50, i64 50, i64 50"   --->   Operation 277 'speclooptripcount' 'empty_24' <Predicate = true> <Delay = 0.00>
ST_82 : Operation 278 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %exitcond2, void %load-store-loop.split, void %memcpy-split"   --->   Operation 278 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_82 : Operation 279 [1/1] (0.00ns)   --->   "%loop_index_cast3 = zext i6 %loop_index"   --->   Operation 279 'zext' 'loop_index_cast3' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_82 : Operation 280 [1/1] (0.00ns)   --->   "%empty_25 = trunc i6 %loop_index"   --->   Operation 280 'trunc' 'empty_25' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_82 : Operation 281 [1/1] (0.00ns)   --->   "%buff_addr_2 = getelementptr i32 %buff, i64 0, i64 %loop_index_cast3"   --->   Operation 281 'getelementptr' 'buff_addr_2' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_82 : Operation 282 [2/2] (3.25ns)   --->   "%buff_load_1 = load i6 %buff_addr_2"   --->   Operation 282 'load' 'buff_load_1' <Predicate = (!exitcond2)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>
ST_82 : Operation 283 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %empty_25, void %load-store-loop.split._crit_edge, void"   --->   Operation 283 'br' 'br_ln0' <Predicate = (!exitcond2)> <Delay = 0.00>

State 83 <SV = 76> <Delay = 3.25>
ST_83 : Operation 284 [1/2] (3.25ns)   --->   "%buff_load_1 = load i6 %buff_addr_2"   --->   Operation 284 'load' 'buff_load_1' <Predicate = (!exitcond2)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>

State 84 <SV = 77> <Delay = 3.65>
ST_84 : Operation 285 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %buff_load_1, i32 %shiftreg"   --->   Operation 285 'bitconcatenate' 'tmp' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_84 : Operation 286 [1/1] (3.65ns)   --->   "%write_ln34 = write void @_ssdm_op_Write.m_axi.p1i64, i64 %gmem_addr, i64 %tmp, i8 255" [example.cpp:34]   --->   Operation 286 'write' 'write_ln34' <Predicate = (empty_25)> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_84 : Operation 287 [1/1] (0.00ns)   --->   "%br_ln0 = br void %load-store-loop.split._crit_edge"   --->   Operation 287 'br' 'br_ln0' <Predicate = (empty_25)> <Delay = 0.00>
ST_84 : Operation 288 [1/1] (0.69ns)   --->   "%phitmp_cast = select i1 %empty_25, i32 0, i32 %buff_load_1"   --->   Operation 288 'select' 'phitmp_cast' <Predicate = (!exitcond2)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_84 : Operation 289 [1/1] (0.00ns)   --->   "%br_ln0 = br void %load-store-loop"   --->   Operation 289 'br' 'br_ln0' <Predicate = (!exitcond2)> <Delay = 0.00>

State 85 <SV = 76> <Delay = 3.65>
ST_85 : Operation 290 [68/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 290 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 86 <SV = 77> <Delay = 3.65>
ST_86 : Operation 291 [67/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 291 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 87 <SV = 78> <Delay = 3.65>
ST_87 : Operation 292 [66/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 292 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 88 <SV = 79> <Delay = 3.65>
ST_88 : Operation 293 [65/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 293 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 89 <SV = 80> <Delay = 3.65>
ST_89 : Operation 294 [64/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 294 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 90 <SV = 81> <Delay = 3.65>
ST_90 : Operation 295 [63/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 295 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 91 <SV = 82> <Delay = 3.65>
ST_91 : Operation 296 [62/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 296 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 92 <SV = 83> <Delay = 3.65>
ST_92 : Operation 297 [61/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 297 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 93 <SV = 84> <Delay = 3.65>
ST_93 : Operation 298 [60/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 298 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 94 <SV = 85> <Delay = 3.65>
ST_94 : Operation 299 [59/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 299 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 95 <SV = 86> <Delay = 3.65>
ST_95 : Operation 300 [58/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 300 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 96 <SV = 87> <Delay = 3.65>
ST_96 : Operation 301 [57/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 301 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 97 <SV = 88> <Delay = 3.65>
ST_97 : Operation 302 [56/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 302 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 98 <SV = 89> <Delay = 3.65>
ST_98 : Operation 303 [55/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 303 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 99 <SV = 90> <Delay = 3.65>
ST_99 : Operation 304 [54/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 304 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 100 <SV = 91> <Delay = 3.65>
ST_100 : Operation 305 [53/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 305 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 101 <SV = 92> <Delay = 3.65>
ST_101 : Operation 306 [52/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 306 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 102 <SV = 93> <Delay = 3.65>
ST_102 : Operation 307 [51/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 307 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 103 <SV = 94> <Delay = 3.65>
ST_103 : Operation 308 [50/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 308 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 104 <SV = 95> <Delay = 3.65>
ST_104 : Operation 309 [49/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 309 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 105 <SV = 96> <Delay = 3.65>
ST_105 : Operation 310 [48/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 310 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 106 <SV = 97> <Delay = 3.65>
ST_106 : Operation 311 [47/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 311 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 107 <SV = 98> <Delay = 3.65>
ST_107 : Operation 312 [46/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 312 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 108 <SV = 99> <Delay = 3.65>
ST_108 : Operation 313 [45/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 313 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 109 <SV = 100> <Delay = 3.65>
ST_109 : Operation 314 [44/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 314 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 110 <SV = 101> <Delay = 3.65>
ST_110 : Operation 315 [43/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 315 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 111 <SV = 102> <Delay = 3.65>
ST_111 : Operation 316 [42/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 316 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 112 <SV = 103> <Delay = 3.65>
ST_112 : Operation 317 [41/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 317 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 113 <SV = 104> <Delay = 3.65>
ST_113 : Operation 318 [40/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 318 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 114 <SV = 105> <Delay = 3.65>
ST_114 : Operation 319 [39/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 319 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 115 <SV = 106> <Delay = 3.65>
ST_115 : Operation 320 [38/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 320 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 116 <SV = 107> <Delay = 3.65>
ST_116 : Operation 321 [37/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 321 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 117 <SV = 108> <Delay = 3.65>
ST_117 : Operation 322 [36/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 322 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 118 <SV = 109> <Delay = 3.65>
ST_118 : Operation 323 [35/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 323 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 119 <SV = 110> <Delay = 3.65>
ST_119 : Operation 324 [34/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 324 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 120 <SV = 111> <Delay = 3.65>
ST_120 : Operation 325 [33/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 325 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 121 <SV = 112> <Delay = 3.65>
ST_121 : Operation 326 [32/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 326 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 122 <SV = 113> <Delay = 3.65>
ST_122 : Operation 327 [31/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 327 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 123 <SV = 114> <Delay = 3.65>
ST_123 : Operation 328 [30/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 328 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 124 <SV = 115> <Delay = 3.65>
ST_124 : Operation 329 [29/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 329 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 125 <SV = 116> <Delay = 3.65>
ST_125 : Operation 330 [28/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 330 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 126 <SV = 117> <Delay = 3.65>
ST_126 : Operation 331 [27/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 331 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 127 <SV = 118> <Delay = 3.65>
ST_127 : Operation 332 [26/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 332 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 128 <SV = 119> <Delay = 3.65>
ST_128 : Operation 333 [25/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 333 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 129 <SV = 120> <Delay = 3.65>
ST_129 : Operation 334 [24/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 334 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 130 <SV = 121> <Delay = 3.65>
ST_130 : Operation 335 [23/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 335 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 131 <SV = 122> <Delay = 3.65>
ST_131 : Operation 336 [22/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 336 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 132 <SV = 123> <Delay = 3.65>
ST_132 : Operation 337 [21/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 337 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 133 <SV = 124> <Delay = 3.65>
ST_133 : Operation 338 [20/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 338 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 134 <SV = 125> <Delay = 3.65>
ST_134 : Operation 339 [19/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 339 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 135 <SV = 126> <Delay = 3.65>
ST_135 : Operation 340 [18/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 340 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 136 <SV = 127> <Delay = 3.65>
ST_136 : Operation 341 [17/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 341 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 137 <SV = 128> <Delay = 3.65>
ST_137 : Operation 342 [16/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 342 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 138 <SV = 129> <Delay = 3.65>
ST_138 : Operation 343 [15/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 343 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 139 <SV = 130> <Delay = 3.65>
ST_139 : Operation 344 [14/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 344 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 140 <SV = 131> <Delay = 3.65>
ST_140 : Operation 345 [13/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 345 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 141 <SV = 132> <Delay = 3.65>
ST_141 : Operation 346 [12/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 346 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 142 <SV = 133> <Delay = 3.65>
ST_142 : Operation 347 [11/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 347 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 143 <SV = 134> <Delay = 3.65>
ST_143 : Operation 348 [10/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 348 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 144 <SV = 135> <Delay = 3.65>
ST_144 : Operation 349 [9/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 349 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 145 <SV = 136> <Delay = 3.65>
ST_145 : Operation 350 [8/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 350 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 146 <SV = 137> <Delay = 3.65>
ST_146 : Operation 351 [7/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 351 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 147 <SV = 138> <Delay = 3.65>
ST_147 : Operation 352 [6/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 352 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 148 <SV = 139> <Delay = 3.65>
ST_148 : Operation 353 [5/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 353 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 149 <SV = 140> <Delay = 3.65>
ST_149 : Operation 354 [4/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 354 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 150 <SV = 141> <Delay = 3.65>
ST_150 : Operation 355 [3/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 355 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 151 <SV = 142> <Delay = 3.65>
ST_151 : Operation 356 [2/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 356 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 152 <SV = 143> <Delay = 3.65>
ST_152 : Operation 357 [1/68] (3.65ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem_addr" [example.cpp:41]   --->   Operation 357 'writeresp' 'empty_26' <Predicate = true> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_152 : Operation 358 [1/1] (0.00ns)   --->   "%ret_ln41 = ret" [example.cpp:41]   --->   Operation 358 'ret' 'ret_ln41' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_chain:ce=0
Port [ gmem]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=2; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ a]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
a_read            (read             ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
buff              (alloca           ) [ 001111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000]
trunc_ln          (partselect       ) [ 001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
sext_ln34         (sext             ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
gmem_addr         (getelementptr    ) [ 000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111]
spectopmodule_ln0 (spectopmodule    ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
specinterface_ln0 (specinterface    ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
specinterface_ln0 (specinterface    ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
specbitsmap_ln0   (specbitsmap      ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
specinterface_ln0 (specinterface    ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
specinterface_ln0 (specinterface    ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
specinterface_ln0 (specinterface    ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty             (readreq          ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
br_ln34           (br               ) [ 000000000000000000000000000000000000000000000000000000000000000000000001111100000000000000000000000000000000000000000000000000000000000000000000000000000]
loop_index4       (phi              ) [ 000000000000000000000000000000000000000000000000000000000000000000000000111100000000000000000000000000000000000000000000000000000000000000000000000000000]
shiftreg9         (phi              ) [ 000000000000000000000000000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_16          (add              ) [ 000000000000000000000000000000000000000000000000000000000000000000000001111100000000000000000000000000000000000000000000000000000000000000000000000000000]
specpipeline_ln0  (specpipeline     ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
exitcond64        (icmp             ) [ 000000000000000000000000000000000000000000000000000000000000000000000000111100000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_17          (speclooptripcount) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
br_ln0            (br               ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_18          (trunc            ) [ 000000000000000000000000000000000000000000000000000000000000000000000000111100000000000000000000000000000000000000000000000000000000000000000000000000000]
gmem_addr_read    (read             ) [ 000000000000000000000000000000000000000000000000000000000000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000]
shiftreg9_cast    (zext             ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
br_ln0            (br               ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
br_ln0            (br               ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_19          (phi              ) [ 000000000000000000000000000000000000000000000000000000000000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_20          (trunc            ) [ 000000000000000000000000000000000000000000000000000000000000000000000000100100000000000000000000000000000000000000000000000000000000000000000000000000000]
p_cast1           (partselect       ) [ 000000000000000000000000000000000000000000000000000000000000000000000001100100000000000000000000000000000000000000000000000000000000000000000000000000000]
loop_index4_cast2 (zext             ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
buff_addr         (getelementptr    ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
store_ln34        (store            ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
br_ln0            (br               ) [ 000000000000000000000000000000000000000000000000000000000000000000000001111100000000000000000000000000000000000000000000000000000000000000000000000000000]
br_ln0            (br               ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000011111000000000000000000000000000000000000000000000000000000000000000000000000]
i                 (phi              ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000]
add_ln36          (add              ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000011111000000000000000000000000000000000000000000000000000000000000000000000000]
specpipeline_ln0  (specpipeline     ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
icmp_ln36         (icmp             ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000001111000000000000000000000000000000000000000000000000000000000000000000000000]
empty_21          (speclooptripcount) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
br_ln36           (br               ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
i_cast            (zext             ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
buff_addr_1       (getelementptr    ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000001111000000000000000000000000000000000000000000000000000000000000000000000000]
buff_load         (load             ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000000000000]
add_ln37          (add              ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000001001000000000000000000000000000000000000000000000000000000000000000000000000]
specloopname_ln28 (specloopname     ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
store_ln37        (store            ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
br_ln0            (br               ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000011111000000000000000000000000000000000000000000000000000000000000000000000000]
empty_22          (writereq         ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
br_ln40           (br               ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000111100000000000000000000000000000000000000000000000000000000000000000000]
loop_index        (phi              ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000]
shiftreg          (phi              ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000000000000000000000000000000000000000000]
empty_23          (add              ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000111100000000000000000000000000000000000000000000000000000000000000000000]
specpipeline_ln0  (specpipeline     ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
exitcond2         (icmp             ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000000000000000000000000000000000000000000]
empty_24          (speclooptripcount) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
br_ln0            (br               ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
loop_index_cast3  (zext             ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_25          (trunc            ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000000000000000000000000000000000000000000]
buff_addr_2       (getelementptr    ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000000000000000000000]
br_ln0            (br               ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
buff_load_1       (load             ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000000000000000000000000000000000000000000000000]
tmp               (bitconcatenate   ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
write_ln34        (write            ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
br_ln0            (br               ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
phitmp_cast       (select           ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000111100000000000000000000000000000000000000000000000000000000000000000000]
br_ln0            (br               ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000111100000000000000000000000000000000000000000000000000000000000000000000]
empty_26          (writeresp        ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
ret_ln41          (ret              ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="gmem">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="gmem"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="a">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="a"/></StgValue>
</bind>
</comp>

<comp id="4" class="1001" name="const_4">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.s_axilite.i64"/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i61.i64.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_ReadReq.m_axi.p1i64"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_6"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_7"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_9"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_0"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_1"/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_10"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_2"/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_3"/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_4"/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_5"/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecPipeline"/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="68" class="1001" name="const_68">
<pin_list>
<pin id="69" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopTripCount"/></StgValue>
</bind>
</comp>

<comp id="70" class="1001" name="const_70">
<pin_list>
<pin id="71" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="72" class="1001" name="const_72">
<pin_list>
<pin id="73" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.m_axi.p1i64"/></StgValue>
</bind>
</comp>

<comp id="74" class="1001" name="const_74">
<pin_list>
<pin id="75" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i32.i64.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="76" class="1001" name="const_76">
<pin_list>
<pin id="77" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="78" class="1001" name="const_78">
<pin_list>
<pin id="79" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="80" class="1001" name="const_80">
<pin_list>
<pin id="81" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="82" class="1001" name="const_82">
<pin_list>
<pin id="83" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopName"/></StgValue>
</bind>
</comp>

<comp id="84" class="1001" name="const_84">
<pin_list>
<pin id="85" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_8"/></StgValue>
</bind>
</comp>

<comp id="86" class="1001" name="const_86">
<pin_list>
<pin id="87" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteReq.m_axi.p1i64"/></StgValue>
</bind>
</comp>

<comp id="88" class="1001" name="const_88">
<pin_list>
<pin id="89" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitConcatenate.i64.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="90" class="1001" name="const_90">
<pin_list>
<pin id="91" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.m_axi.p1i64"/></StgValue>
</bind>
</comp>

<comp id="92" class="1001" name="const_92">
<pin_list>
<pin id="93" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="94" class="1001" name="const_94">
<pin_list>
<pin id="95" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteResp.m_axi.p1i64"/></StgValue>
</bind>
</comp>

<comp id="96" class="1004" name="buff_alloca_fu_96">
<pin_list>
<pin id="97" dir="0" index="0" bw="1" slack="0"/>
<pin id="98" dir="1" index="1" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="buff/1 "/>
</bind>
</comp>

<comp id="100" class="1004" name="a_read_read_fu_100">
<pin_list>
<pin id="101" dir="0" index="0" bw="64" slack="0"/>
<pin id="102" dir="0" index="1" bw="64" slack="0"/>
<pin id="103" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="a_read/1 "/>
</bind>
</comp>

<comp id="106" class="1004" name="grp_writeresp_fu_106">
<pin_list>
<pin id="107" dir="0" index="0" bw="1" slack="0"/>
<pin id="108" dir="0" index="1" bw="64" slack="0"/>
<pin id="109" dir="0" index="2" bw="6" slack="0"/>
<pin id="110" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="empty/2 empty_22/81 empty_26/85 "/>
</bind>
</comp>

<comp id="113" class="1004" name="gmem_addr_read_read_fu_113">
<pin_list>
<pin id="114" dir="0" index="0" bw="64" slack="0"/>
<pin id="115" dir="0" index="1" bw="64" slack="71"/>
<pin id="116" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="gmem_addr_read/73 "/>
</bind>
</comp>

<comp id="119" class="1004" name="write_ln34_write_fu_119">
<pin_list>
<pin id="120" dir="0" index="0" bw="0" slack="0"/>
<pin id="121" dir="0" index="1" bw="64" slack="76"/>
<pin id="122" dir="0" index="2" bw="64" slack="0"/>
<pin id="123" dir="0" index="3" bw="1" slack="0"/>
<pin id="124" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln34/84 "/>
</bind>
</comp>

<comp id="128" class="1004" name="buff_addr_gep_fu_128">
<pin_list>
<pin id="129" dir="0" index="0" bw="32" slack="2147483647"/>
<pin id="130" dir="0" index="1" bw="1" slack="0"/>
<pin id="131" dir="0" index="2" bw="6" slack="0"/>
<pin id="132" dir="1" index="3" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="buff_addr/75 "/>
</bind>
</comp>

<comp id="134" class="1004" name="grp_access_fu_134">
<pin_list>
<pin id="135" dir="0" index="0" bw="6" slack="0"/>
<pin id="136" dir="0" index="1" bw="32" slack="1"/>
<pin id="137" dir="0" index="2" bw="0" slack="0"/>
<pin id="146" dir="0" index="4" bw="6" slack="2147483647"/>
<pin id="147" dir="0" index="5" bw="32" slack="2147483647"/>
<pin id="148" dir="0" index="6" bw="0" slack="2147483647"/>
<pin id="138" dir="1" index="3" bw="32" slack="2147483647"/>
<pin id="149" dir="1" index="7" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="load(27) store(28) " fcode="load"/>
<opset="store_ln34/75 buff_load/77 store_ln37/80 buff_load_1/82 "/>
</bind>
</comp>

<comp id="140" class="1004" name="buff_addr_1_gep_fu_140">
<pin_list>
<pin id="141" dir="0" index="0" bw="32" slack="2147483647"/>
<pin id="142" dir="0" index="1" bw="1" slack="0"/>
<pin id="143" dir="0" index="2" bw="6" slack="0"/>
<pin id="144" dir="1" index="3" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="buff_addr_1/77 "/>
</bind>
</comp>

<comp id="151" class="1004" name="buff_addr_2_gep_fu_151">
<pin_list>
<pin id="152" dir="0" index="0" bw="32" slack="2147483647"/>
<pin id="153" dir="0" index="1" bw="1" slack="0"/>
<pin id="154" dir="0" index="2" bw="6" slack="0"/>
<pin id="155" dir="1" index="3" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="buff_addr_2/82 "/>
</bind>
</comp>

<comp id="158" class="1005" name="loop_index4_reg_158">
<pin_list>
<pin id="159" dir="0" index="0" bw="6" slack="1"/>
<pin id="160" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="loop_index4 (phireg) "/>
</bind>
</comp>

<comp id="162" class="1004" name="loop_index4_phi_fu_162">
<pin_list>
<pin id="163" dir="0" index="0" bw="1" slack="1"/>
<pin id="164" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="165" dir="0" index="2" bw="6" slack="0"/>
<pin id="166" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="167" dir="1" index="4" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="loop_index4/72 "/>
</bind>
</comp>

<comp id="170" class="1005" name="shiftreg9_reg_170">
<pin_list>
<pin id="171" dir="0" index="0" bw="32" slack="1"/>
<pin id="172" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="shiftreg9 (phireg) "/>
</bind>
</comp>

<comp id="174" class="1004" name="shiftreg9_phi_fu_174">
<pin_list>
<pin id="175" dir="0" index="0" bw="1" slack="1"/>
<pin id="176" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="177" dir="0" index="2" bw="32" slack="1"/>
<pin id="178" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="179" dir="1" index="4" bw="32" slack="2"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="shiftreg9/72 "/>
</bind>
</comp>

<comp id="182" class="1005" name="empty_19_reg_182">
<pin_list>
<pin id="183" dir="0" index="0" bw="64" slack="2147483647"/>
<pin id="184" dir="1" index="1" bw="64" slack="2147483647"/>
</pin_list>
<bind>
<opset="empty_19 (phireg) "/>
</bind>
</comp>

<comp id="185" class="1004" name="empty_19_phi_fu_185">
<pin_list>
<pin id="186" dir="0" index="0" bw="64" slack="1"/>
<pin id="187" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="188" dir="0" index="2" bw="32" slack="0"/>
<pin id="189" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="190" dir="1" index="4" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="empty_19/74 "/>
</bind>
</comp>

<comp id="191" class="1005" name="i_reg_191">
<pin_list>
<pin id="192" dir="0" index="0" bw="6" slack="1"/>
<pin id="193" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="i (phireg) "/>
</bind>
</comp>

<comp id="195" class="1004" name="i_phi_fu_195">
<pin_list>
<pin id="196" dir="0" index="0" bw="6" slack="0"/>
<pin id="197" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="198" dir="0" index="2" bw="1" slack="1"/>
<pin id="199" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="200" dir="1" index="4" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="i/77 "/>
</bind>
</comp>

<comp id="202" class="1005" name="loop_index_reg_202">
<pin_list>
<pin id="203" dir="0" index="0" bw="6" slack="1"/>
<pin id="204" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="loop_index (phireg) "/>
</bind>
</comp>

<comp id="206" class="1004" name="loop_index_phi_fu_206">
<pin_list>
<pin id="207" dir="0" index="0" bw="1" slack="1"/>
<pin id="208" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="209" dir="0" index="2" bw="6" slack="0"/>
<pin id="210" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="211" dir="1" index="4" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="loop_index/82 "/>
</bind>
</comp>

<comp id="213" class="1005" name="shiftreg_reg_213">
<pin_list>
<pin id="214" dir="0" index="0" bw="32" slack="1"/>
<pin id="215" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="shiftreg (phireg) "/>
</bind>
</comp>

<comp id="217" class="1004" name="shiftreg_phi_fu_217">
<pin_list>
<pin id="218" dir="0" index="0" bw="1" slack="1"/>
<pin id="219" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="220" dir="0" index="2" bw="32" slack="1"/>
<pin id="221" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="222" dir="1" index="4" bw="32" slack="2"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="shiftreg/82 "/>
</bind>
</comp>

<comp id="225" class="1005" name="reg_225">
<pin_list>
<pin id="226" dir="0" index="0" bw="32" slack="1"/>
<pin id="227" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="buff_load buff_load_1 "/>
</bind>
</comp>

<comp id="229" class="1004" name="trunc_ln_fu_229">
<pin_list>
<pin id="230" dir="0" index="0" bw="61" slack="0"/>
<pin id="231" dir="0" index="1" bw="64" slack="0"/>
<pin id="232" dir="0" index="2" bw="3" slack="0"/>
<pin id="233" dir="0" index="3" bw="7" slack="0"/>
<pin id="234" dir="1" index="4" bw="61" slack="1"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="trunc_ln/1 "/>
</bind>
</comp>

<comp id="239" class="1004" name="sext_ln34_fu_239">
<pin_list>
<pin id="240" dir="0" index="0" bw="61" slack="1"/>
<pin id="241" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="sext(35) " fcode="sext"/>
<opset="sext_ln34/2 "/>
</bind>
</comp>

<comp id="242" class="1004" name="gmem_addr_fu_242">
<pin_list>
<pin id="243" dir="0" index="0" bw="64" slack="0"/>
<pin id="244" dir="0" index="1" bw="64" slack="0"/>
<pin id="245" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="gmem_addr/2 "/>
</bind>
</comp>

<comp id="249" class="1004" name="empty_16_fu_249">
<pin_list>
<pin id="250" dir="0" index="0" bw="6" slack="0"/>
<pin id="251" dir="0" index="1" bw="1" slack="0"/>
<pin id="252" dir="1" index="2" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="empty_16/72 "/>
</bind>
</comp>

<comp id="255" class="1004" name="exitcond64_fu_255">
<pin_list>
<pin id="256" dir="0" index="0" bw="6" slack="0"/>
<pin id="257" dir="0" index="1" bw="6" slack="0"/>
<pin id="258" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="exitcond64/72 "/>
</bind>
</comp>

<comp id="261" class="1004" name="empty_18_fu_261">
<pin_list>
<pin id="262" dir="0" index="0" bw="6" slack="0"/>
<pin id="263" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="empty_18/72 "/>
</bind>
</comp>

<comp id="265" class="1004" name="shiftreg9_cast_fu_265">
<pin_list>
<pin id="266" dir="0" index="0" bw="32" slack="2"/>
<pin id="267" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="shiftreg9_cast/74 "/>
</bind>
</comp>

<comp id="270" class="1004" name="empty_20_fu_270">
<pin_list>
<pin id="271" dir="0" index="0" bw="64" slack="0"/>
<pin id="272" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="empty_20/74 "/>
</bind>
</comp>

<comp id="274" class="1004" name="p_cast1_fu_274">
<pin_list>
<pin id="275" dir="0" index="0" bw="32" slack="0"/>
<pin id="276" dir="0" index="1" bw="64" slack="0"/>
<pin id="277" dir="0" index="2" bw="7" slack="0"/>
<pin id="278" dir="0" index="3" bw="7" slack="0"/>
<pin id="279" dir="1" index="4" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="p_cast1/74 "/>
</bind>
</comp>

<comp id="284" class="1004" name="loop_index4_cast2_fu_284">
<pin_list>
<pin id="285" dir="0" index="0" bw="6" slack="3"/>
<pin id="286" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="loop_index4_cast2/75 "/>
</bind>
</comp>

<comp id="289" class="1004" name="add_ln36_fu_289">
<pin_list>
<pin id="290" dir="0" index="0" bw="6" slack="0"/>
<pin id="291" dir="0" index="1" bw="1" slack="0"/>
<pin id="292" dir="1" index="2" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="add_ln36/77 "/>
</bind>
</comp>

<comp id="295" class="1004" name="icmp_ln36_fu_295">
<pin_list>
<pin id="296" dir="0" index="0" bw="6" slack="0"/>
<pin id="297" dir="0" index="1" bw="6" slack="0"/>
<pin id="298" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln36/77 "/>
</bind>
</comp>

<comp id="301" class="1004" name="i_cast_fu_301">
<pin_list>
<pin id="302" dir="0" index="0" bw="6" slack="0"/>
<pin id="303" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="i_cast/77 "/>
</bind>
</comp>

<comp id="306" class="1004" name="add_ln37_fu_306">
<pin_list>
<pin id="307" dir="0" index="0" bw="32" slack="1"/>
<pin id="308" dir="0" index="1" bw="8" slack="0"/>
<pin id="309" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="add_ln37/79 "/>
</bind>
</comp>

<comp id="312" class="1004" name="empty_23_fu_312">
<pin_list>
<pin id="313" dir="0" index="0" bw="6" slack="0"/>
<pin id="314" dir="0" index="1" bw="1" slack="0"/>
<pin id="315" dir="1" index="2" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="empty_23/82 "/>
</bind>
</comp>

<comp id="318" class="1004" name="exitcond2_fu_318">
<pin_list>
<pin id="319" dir="0" index="0" bw="6" slack="0"/>
<pin id="320" dir="0" index="1" bw="6" slack="0"/>
<pin id="321" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="exitcond2/82 "/>
</bind>
</comp>

<comp id="324" class="1004" name="loop_index_cast3_fu_324">
<pin_list>
<pin id="325" dir="0" index="0" bw="6" slack="0"/>
<pin id="326" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="loop_index_cast3/82 "/>
</bind>
</comp>

<comp id="329" class="1004" name="empty_25_fu_329">
<pin_list>
<pin id="330" dir="0" index="0" bw="6" slack="0"/>
<pin id="331" dir="1" index="1" bw="1" slack="2"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="empty_25/82 "/>
</bind>
</comp>

<comp id="333" class="1004" name="tmp_fu_333">
<pin_list>
<pin id="334" dir="0" index="0" bw="64" slack="0"/>
<pin id="335" dir="0" index="1" bw="32" slack="1"/>
<pin id="336" dir="0" index="2" bw="32" slack="2"/>
<pin id="337" dir="1" index="3" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="bitconcatenate(1004) " fcode="bitconcatenate"/>
<opset="tmp/84 "/>
</bind>
</comp>

<comp id="342" class="1004" name="phitmp_cast_fu_342">
<pin_list>
<pin id="343" dir="0" index="0" bw="1" slack="2"/>
<pin id="344" dir="0" index="1" bw="32" slack="0"/>
<pin id="345" dir="0" index="2" bw="32" slack="1"/>
<pin id="346" dir="1" index="3" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="phitmp_cast/84 "/>
</bind>
</comp>

<comp id="349" class="1005" name="trunc_ln_reg_349">
<pin_list>
<pin id="350" dir="0" index="0" bw="61" slack="1"/>
<pin id="351" dir="1" index="1" bw="61" slack="1"/>
</pin_list>
<bind>
<opset="trunc_ln "/>
</bind>
</comp>

<comp id="354" class="1005" name="gmem_addr_reg_354">
<pin_list>
<pin id="355" dir="0" index="0" bw="64" slack="1"/>
<pin id="356" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="gmem_addr "/>
</bind>
</comp>

<comp id="361" class="1005" name="empty_16_reg_361">
<pin_list>
<pin id="362" dir="0" index="0" bw="6" slack="0"/>
<pin id="363" dir="1" index="1" bw="6" slack="0"/>
</pin_list>
<bind>
<opset="empty_16 "/>
</bind>
</comp>

<comp id="366" class="1005" name="exitcond64_reg_366">
<pin_list>
<pin id="367" dir="0" index="0" bw="1" slack="1"/>
<pin id="368" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="exitcond64 "/>
</bind>
</comp>

<comp id="370" class="1005" name="empty_18_reg_370">
<pin_list>
<pin id="371" dir="0" index="0" bw="1" slack="1"/>
<pin id="372" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="empty_18 "/>
</bind>
</comp>

<comp id="374" class="1005" name="gmem_addr_read_reg_374">
<pin_list>
<pin id="375" dir="0" index="0" bw="64" slack="1"/>
<pin id="376" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="gmem_addr_read "/>
</bind>
</comp>

<comp id="379" class="1005" name="empty_20_reg_379">
<pin_list>
<pin id="380" dir="0" index="0" bw="32" slack="1"/>
<pin id="381" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="empty_20 "/>
</bind>
</comp>

<comp id="384" class="1005" name="p_cast1_reg_384">
<pin_list>
<pin id="385" dir="0" index="0" bw="32" slack="1"/>
<pin id="386" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="p_cast1 "/>
</bind>
</comp>

<comp id="389" class="1005" name="add_ln36_reg_389">
<pin_list>
<pin id="390" dir="0" index="0" bw="6" slack="0"/>
<pin id="391" dir="1" index="1" bw="6" slack="0"/>
</pin_list>
<bind>
<opset="add_ln36 "/>
</bind>
</comp>

<comp id="394" class="1005" name="icmp_ln36_reg_394">
<pin_list>
<pin id="395" dir="0" index="0" bw="1" slack="1"/>
<pin id="396" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="icmp_ln36 "/>
</bind>
</comp>

<comp id="398" class="1005" name="buff_addr_1_reg_398">
<pin_list>
<pin id="399" dir="0" index="0" bw="6" slack="1"/>
<pin id="400" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="buff_addr_1 "/>
</bind>
</comp>

<comp id="404" class="1005" name="add_ln37_reg_404">
<pin_list>
<pin id="405" dir="0" index="0" bw="32" slack="1"/>
<pin id="406" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="add_ln37 "/>
</bind>
</comp>

<comp id="409" class="1005" name="empty_23_reg_409">
<pin_list>
<pin id="410" dir="0" index="0" bw="6" slack="0"/>
<pin id="411" dir="1" index="1" bw="6" slack="0"/>
</pin_list>
<bind>
<opset="empty_23 "/>
</bind>
</comp>

<comp id="414" class="1005" name="exitcond2_reg_414">
<pin_list>
<pin id="415" dir="0" index="0" bw="1" slack="1"/>
<pin id="416" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="exitcond2 "/>
</bind>
</comp>

<comp id="418" class="1005" name="empty_25_reg_418">
<pin_list>
<pin id="419" dir="0" index="0" bw="1" slack="2"/>
<pin id="420" dir="1" index="1" bw="1" slack="2"/>
</pin_list>
<bind>
<opset="empty_25 "/>
</bind>
</comp>

<comp id="423" class="1005" name="buff_addr_2_reg_423">
<pin_list>
<pin id="424" dir="0" index="0" bw="6" slack="1"/>
<pin id="425" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="buff_addr_2 "/>
</bind>
</comp>

<comp id="428" class="1005" name="phitmp_cast_reg_428">
<pin_list>
<pin id="429" dir="0" index="0" bw="32" slack="1"/>
<pin id="430" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="phitmp_cast "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="99"><net_src comp="6" pin="0"/><net_sink comp="96" pin=0"/></net>

<net id="104"><net_src comp="4" pin="0"/><net_sink comp="100" pin=0"/></net>

<net id="105"><net_src comp="2" pin="0"/><net_sink comp="100" pin=1"/></net>

<net id="111"><net_src comp="14" pin="0"/><net_sink comp="106" pin=0"/></net>

<net id="112"><net_src comp="16" pin="0"/><net_sink comp="106" pin=2"/></net>

<net id="117"><net_src comp="72" pin="0"/><net_sink comp="113" pin=0"/></net>

<net id="118"><net_src comp="86" pin="0"/><net_sink comp="106" pin=0"/></net>

<net id="125"><net_src comp="90" pin="0"/><net_sink comp="119" pin=0"/></net>

<net id="126"><net_src comp="92" pin="0"/><net_sink comp="119" pin=3"/></net>

<net id="127"><net_src comp="94" pin="0"/><net_sink comp="106" pin=0"/></net>

<net id="133"><net_src comp="78" pin="0"/><net_sink comp="128" pin=1"/></net>

<net id="139"><net_src comp="128" pin="3"/><net_sink comp="134" pin=0"/></net>

<net id="145"><net_src comp="78" pin="0"/><net_sink comp="140" pin=1"/></net>

<net id="150"><net_src comp="140" pin="3"/><net_sink comp="134" pin=2"/></net>

<net id="156"><net_src comp="78" pin="0"/><net_sink comp="151" pin=1"/></net>

<net id="157"><net_src comp="151" pin="3"/><net_sink comp="134" pin=2"/></net>

<net id="161"><net_src comp="54" pin="0"/><net_sink comp="158" pin=0"/></net>

<net id="168"><net_src comp="158" pin="1"/><net_sink comp="162" pin=0"/></net>

<net id="169"><net_src comp="162" pin="4"/><net_sink comp="158" pin=0"/></net>

<net id="173"><net_src comp="24" pin="0"/><net_sink comp="170" pin=0"/></net>

<net id="180"><net_src comp="170" pin="1"/><net_sink comp="174" pin=0"/></net>

<net id="181"><net_src comp="174" pin="4"/><net_sink comp="170" pin=0"/></net>

<net id="194"><net_src comp="54" pin="0"/><net_sink comp="191" pin=0"/></net>

<net id="201"><net_src comp="191" pin="1"/><net_sink comp="195" pin=2"/></net>

<net id="205"><net_src comp="54" pin="0"/><net_sink comp="202" pin=0"/></net>

<net id="212"><net_src comp="202" pin="1"/><net_sink comp="206" pin=0"/></net>

<net id="216"><net_src comp="24" pin="0"/><net_sink comp="213" pin=0"/></net>

<net id="223"><net_src comp="213" pin="1"/><net_sink comp="217" pin=0"/></net>

<net id="224"><net_src comp="217" pin="4"/><net_sink comp="213" pin=0"/></net>

<net id="228"><net_src comp="134" pin="7"/><net_sink comp="225" pin=0"/></net>

<net id="235"><net_src comp="8" pin="0"/><net_sink comp="229" pin=0"/></net>

<net id="236"><net_src comp="100" pin="2"/><net_sink comp="229" pin=1"/></net>

<net id="237"><net_src comp="10" pin="0"/><net_sink comp="229" pin=2"/></net>

<net id="238"><net_src comp="12" pin="0"/><net_sink comp="229" pin=3"/></net>

<net id="246"><net_src comp="0" pin="0"/><net_sink comp="242" pin=0"/></net>

<net id="247"><net_src comp="239" pin="1"/><net_sink comp="242" pin=1"/></net>

<net id="248"><net_src comp="242" pin="2"/><net_sink comp="106" pin=1"/></net>

<net id="253"><net_src comp="162" pin="4"/><net_sink comp="249" pin=0"/></net>

<net id="254"><net_src comp="56" pin="0"/><net_sink comp="249" pin=1"/></net>

<net id="259"><net_src comp="162" pin="4"/><net_sink comp="255" pin=0"/></net>

<net id="260"><net_src comp="66" pin="0"/><net_sink comp="255" pin=1"/></net>

<net id="264"><net_src comp="162" pin="4"/><net_sink comp="261" pin=0"/></net>

<net id="268"><net_src comp="170" pin="1"/><net_sink comp="265" pin=0"/></net>

<net id="269"><net_src comp="265" pin="1"/><net_sink comp="185" pin=2"/></net>

<net id="273"><net_src comp="185" pin="4"/><net_sink comp="270" pin=0"/></net>

<net id="280"><net_src comp="74" pin="0"/><net_sink comp="274" pin=0"/></net>

<net id="281"><net_src comp="185" pin="4"/><net_sink comp="274" pin=1"/></net>

<net id="282"><net_src comp="76" pin="0"/><net_sink comp="274" pin=2"/></net>

<net id="283"><net_src comp="12" pin="0"/><net_sink comp="274" pin=3"/></net>

<net id="287"><net_src comp="158" pin="1"/><net_sink comp="284" pin=0"/></net>

<net id="288"><net_src comp="284" pin="1"/><net_sink comp="128" pin=2"/></net>

<net id="293"><net_src comp="195" pin="4"/><net_sink comp="289" pin=0"/></net>

<net id="294"><net_src comp="56" pin="0"/><net_sink comp="289" pin=1"/></net>

<net id="299"><net_src comp="195" pin="4"/><net_sink comp="295" pin=0"/></net>

<net id="300"><net_src comp="66" pin="0"/><net_sink comp="295" pin=1"/></net>

<net id="304"><net_src comp="195" pin="4"/><net_sink comp="301" pin=0"/></net>

<net id="305"><net_src comp="301" pin="1"/><net_sink comp="140" pin=2"/></net>

<net id="310"><net_src comp="225" pin="1"/><net_sink comp="306" pin=0"/></net>

<net id="311"><net_src comp="80" pin="0"/><net_sink comp="306" pin=1"/></net>

<net id="316"><net_src comp="206" pin="4"/><net_sink comp="312" pin=0"/></net>

<net id="317"><net_src comp="56" pin="0"/><net_sink comp="312" pin=1"/></net>

<net id="322"><net_src comp="206" pin="4"/><net_sink comp="318" pin=0"/></net>

<net id="323"><net_src comp="66" pin="0"/><net_sink comp="318" pin=1"/></net>

<net id="327"><net_src comp="206" pin="4"/><net_sink comp="324" pin=0"/></net>

<net id="328"><net_src comp="324" pin="1"/><net_sink comp="151" pin=2"/></net>

<net id="332"><net_src comp="206" pin="4"/><net_sink comp="329" pin=0"/></net>

<net id="338"><net_src comp="88" pin="0"/><net_sink comp="333" pin=0"/></net>

<net id="339"><net_src comp="225" pin="1"/><net_sink comp="333" pin=1"/></net>

<net id="340"><net_src comp="213" pin="1"/><net_sink comp="333" pin=2"/></net>

<net id="341"><net_src comp="333" pin="3"/><net_sink comp="119" pin=2"/></net>

<net id="347"><net_src comp="24" pin="0"/><net_sink comp="342" pin=1"/></net>

<net id="348"><net_src comp="225" pin="1"/><net_sink comp="342" pin=2"/></net>

<net id="352"><net_src comp="229" pin="4"/><net_sink comp="349" pin=0"/></net>

<net id="353"><net_src comp="349" pin="1"/><net_sink comp="239" pin=0"/></net>

<net id="357"><net_src comp="242" pin="2"/><net_sink comp="354" pin=0"/></net>

<net id="358"><net_src comp="354" pin="1"/><net_sink comp="106" pin=1"/></net>

<net id="359"><net_src comp="354" pin="1"/><net_sink comp="113" pin=1"/></net>

<net id="360"><net_src comp="354" pin="1"/><net_sink comp="119" pin=1"/></net>

<net id="364"><net_src comp="249" pin="2"/><net_sink comp="361" pin=0"/></net>

<net id="365"><net_src comp="361" pin="1"/><net_sink comp="162" pin=2"/></net>

<net id="369"><net_src comp="255" pin="2"/><net_sink comp="366" pin=0"/></net>

<net id="373"><net_src comp="261" pin="1"/><net_sink comp="370" pin=0"/></net>

<net id="377"><net_src comp="113" pin="2"/><net_sink comp="374" pin=0"/></net>

<net id="378"><net_src comp="374" pin="1"/><net_sink comp="185" pin=0"/></net>

<net id="382"><net_src comp="270" pin="1"/><net_sink comp="379" pin=0"/></net>

<net id="383"><net_src comp="379" pin="1"/><net_sink comp="134" pin=1"/></net>

<net id="387"><net_src comp="274" pin="4"/><net_sink comp="384" pin=0"/></net>

<net id="388"><net_src comp="384" pin="1"/><net_sink comp="174" pin=2"/></net>

<net id="392"><net_src comp="289" pin="2"/><net_sink comp="389" pin=0"/></net>

<net id="393"><net_src comp="389" pin="1"/><net_sink comp="195" pin=0"/></net>

<net id="397"><net_src comp="295" pin="2"/><net_sink comp="394" pin=0"/></net>

<net id="401"><net_src comp="140" pin="3"/><net_sink comp="398" pin=0"/></net>

<net id="402"><net_src comp="398" pin="1"/><net_sink comp="134" pin=2"/></net>

<net id="403"><net_src comp="398" pin="1"/><net_sink comp="134" pin=0"/></net>

<net id="407"><net_src comp="306" pin="2"/><net_sink comp="404" pin=0"/></net>

<net id="408"><net_src comp="404" pin="1"/><net_sink comp="134" pin=1"/></net>

<net id="412"><net_src comp="312" pin="2"/><net_sink comp="409" pin=0"/></net>

<net id="413"><net_src comp="409" pin="1"/><net_sink comp="206" pin=2"/></net>

<net id="417"><net_src comp="318" pin="2"/><net_sink comp="414" pin=0"/></net>

<net id="421"><net_src comp="329" pin="1"/><net_sink comp="418" pin=0"/></net>

<net id="422"><net_src comp="418" pin="1"/><net_sink comp="342" pin=0"/></net>

<net id="426"><net_src comp="151" pin="3"/><net_sink comp="423" pin=0"/></net>

<net id="427"><net_src comp="423" pin="1"/><net_sink comp="134" pin=2"/></net>

<net id="431"><net_src comp="342" pin="3"/><net_sink comp="428" pin=0"/></net>

<net id="432"><net_src comp="428" pin="1"/><net_sink comp="217" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: gmem | {81 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 }
 - Input state : 
	Port: example : gmem | {2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 73 }
	Port: example : a | {1 }
  - Chain level:
	State 1
	State 2
		gmem_addr : 1
		empty : 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
		empty_16 : 1
		exitcond64 : 1
		br_ln0 : 2
		empty_18 : 1
	State 73
	State 74
		empty_19 : 1
		empty_20 : 2
		p_cast1 : 2
	State 75
		buff_addr : 1
		store_ln34 : 2
	State 76
	State 77
		add_ln36 : 1
		icmp_ln36 : 1
		br_ln36 : 2
		i_cast : 1
		buff_addr_1 : 2
		buff_load : 3
	State 78
	State 79
	State 80
	State 81
	State 82
		empty_23 : 1
		exitcond2 : 1
		br_ln0 : 2
		loop_index_cast3 : 1
		empty_25 : 1
		buff_addr_2 : 2
		buff_load_1 : 3
		br_ln0 : 2
	State 83
	State 84
		write_ln34 : 1
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131
	State 132
	State 133
	State 134
	State 135
	State 136
	State 137
	State 138
	State 139
	State 140
	State 141
	State 142
	State 143
	State 144
	State 145
	State 146
	State 147
	State 148
	State 149
	State 150
	State 151
	State 152


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|----------------------------|---------|---------|
| Operation|       Functional Unit      |    FF   |   LUT   |
|----------|----------------------------|---------|---------|
|          |       empty_16_fu_249      |    0    |    14   |
|    add   |       add_ln36_fu_289      |    0    |    14   |
|          |       add_ln37_fu_306      |    0    |    39   |
|          |       empty_23_fu_312      |    0    |    14   |
|----------|----------------------------|---------|---------|
|  select  |     phitmp_cast_fu_342     |    0    |    32   |
|----------|----------------------------|---------|---------|
|          |      exitcond64_fu_255     |    0    |    10   |
|   icmp   |      icmp_ln36_fu_295      |    0    |    10   |
|          |      exitcond2_fu_318      |    0    |    10   |
|----------|----------------------------|---------|---------|
|   read   |     a_read_read_fu_100     |    0    |    0    |
|          | gmem_addr_read_read_fu_113 |    0    |    0    |
|----------|----------------------------|---------|---------|
| writeresp|    grp_writeresp_fu_106    |    0    |    0    |
|----------|----------------------------|---------|---------|
|   write  |   write_ln34_write_fu_119  |    0    |    0    |
|----------|----------------------------|---------|---------|
|partselect|       trunc_ln_fu_229      |    0    |    0    |
|          |       p_cast1_fu_274       |    0    |    0    |
|----------|----------------------------|---------|---------|
|   sext   |      sext_ln34_fu_239      |    0    |    0    |
|----------|----------------------------|---------|---------|
|          |       empty_18_fu_261      |    0    |    0    |
|   trunc  |       empty_20_fu_270      |    0    |    0    |
|          |       empty_25_fu_329      |    0    |    0    |
|----------|----------------------------|---------|---------|
|          |    shiftreg9_cast_fu_265   |    0    |    0    |
|   zext   |  loop_index4_cast2_fu_284  |    0    |    0    |
|          |        i_cast_fu_301       |    0    |    0    |
|          |   loop_index_cast3_fu_324  |    0    |    0    |
|----------|----------------------------|---------|---------|
|bitconcatenate|         tmp_fu_333         |    0    |    0    |
|----------|----------------------------|---------|---------|
|   Total  |                            |    0    |   143   |
|----------|----------------------------|---------|---------|

Memories:
+----+--------+--------+--------+
|    |  BRAM  |   FF   |   LUT  |
+----+--------+--------+--------+
|buff|    1   |    0   |    0   |
+----+--------+--------+--------+
|Total|    1   |    0   |    0   |
+----+--------+--------+--------+

* Register list:
+----------------------+--------+
|                      |   FF   |
+----------------------+--------+
|   add_ln36_reg_389   |    6   |
|   add_ln37_reg_404   |   32   |
|  buff_addr_1_reg_398 |    6   |
|  buff_addr_2_reg_423 |    6   |
|   empty_16_reg_361   |    6   |
|   empty_18_reg_370   |    1   |
|   empty_19_reg_182   |   64   |
|   empty_20_reg_379   |   32   |
|   empty_23_reg_409   |    6   |
|   empty_25_reg_418   |    1   |
|   exitcond2_reg_414  |    1   |
|  exitcond64_reg_366  |    1   |
|gmem_addr_read_reg_374|   64   |
|   gmem_addr_reg_354  |   64   |
|       i_reg_191      |    6   |
|   icmp_ln36_reg_394  |    1   |
|  loop_index4_reg_158 |    6   |
|  loop_index_reg_202  |    6   |
|    p_cast1_reg_384   |   32   |
|  phitmp_cast_reg_428 |   32   |
|        reg_225       |   32   |
|   shiftreg9_reg_170  |   32   |
|   shiftreg_reg_213   |   32   |
|   trunc_ln_reg_349   |   61   |
+----------------------+--------+
|         Total        |   530  |
+----------------------+--------+

* Multiplexer (MUX) list: 
|----------------------|------|------|------|--------||---------||---------|
|         Comp         |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|----------------------|------|------|------|--------||---------||---------|
| grp_writeresp_fu_106 |  p0  |   3  |   1  |    3   |
| grp_writeresp_fu_106 |  p1  |   2  |  64  |   128  ||    9    |
|   grp_access_fu_134  |  p0  |   2  |   6  |   12   ||    9    |
|   grp_access_fu_134  |  p1  |   2  |  32  |   64   ||    9    |
|   grp_access_fu_134  |  p2  |   4  |   0  |    0   ||    20   |
|  loop_index4_reg_158 |  p0  |   2  |   6  |   12   ||    9    |
|   shiftreg9_reg_170  |  p0  |   2  |  32  |   64   ||    9    |
|   shiftreg_reg_213   |  p0  |   2  |  32  |   64   ||    9    |
|----------------------|------|------|------|--------||---------||---------|
|         Total        |      |      |      |   347  || 13.0619 ||    74   |
|----------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           |  BRAM  |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |    -   |    -   |    0   |   143  |
|   Memory  |    1   |    -   |    0   |    0   |
|Multiplexer|    -   |   13   |    -   |   74   |
|  Register |    -   |    -   |   530  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |    1   |   13   |   530  |   217  |
+-----------+--------+--------+--------+--------+
