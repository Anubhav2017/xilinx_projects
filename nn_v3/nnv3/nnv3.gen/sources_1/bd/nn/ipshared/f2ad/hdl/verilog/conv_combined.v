// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv_combined_conv_combined,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=0,HLS_SYN_FF=13611,HLS_SYN_LUT=12022,HLS_VERSION=2020_2}" *)

module conv_combined (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST,
        m_axi_gmem2_WID,
        m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY,
        m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID,
        m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA,
        m_axi_gmem2_RLAST,
        m_axi_gmem2_RID,
        m_axi_gmem2_RUSER,
        m_axi_gmem2_RRESP,
        m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP,
        m_axi_gmem2_BID,
        m_axi_gmem2_BUSER,
        x_Addr_A,
        x_EN_A,
        x_WEN_A,
        x_Din_A,
        x_Dout_A,
        x_Clk_A,
        x_Rst_A,
        dx_Addr_A,
        dx_EN_A,
        dx_WEN_A,
        dx_Din_A,
        dx_Dout_A,
        dx_Clk_A,
        dx_Rst_A,
        y_Addr_A,
        y_EN_A,
        y_WEN_A,
        y_Din_A,
        y_Dout_A,
        y_Clk_A,
        y_Rst_A,
        dy_Addr_A,
        dy_EN_A,
        dy_WEN_A,
        dy_Din_A,
        dy_Dout_A,
        dy_Clk_A,
        dy_Rst_A,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 128'd1;
parameter    ap_ST_fsm_state2 = 128'd2;
parameter    ap_ST_fsm_state3 = 128'd4;
parameter    ap_ST_fsm_state4 = 128'd8;
parameter    ap_ST_fsm_state5 = 128'd16;
parameter    ap_ST_fsm_state6 = 128'd32;
parameter    ap_ST_fsm_state7 = 128'd64;
parameter    ap_ST_fsm_state8 = 128'd128;
parameter    ap_ST_fsm_state9 = 128'd256;
parameter    ap_ST_fsm_state10 = 128'd512;
parameter    ap_ST_fsm_state11 = 128'd1024;
parameter    ap_ST_fsm_state12 = 128'd2048;
parameter    ap_ST_fsm_state13 = 128'd4096;
parameter    ap_ST_fsm_state14 = 128'd8192;
parameter    ap_ST_fsm_state15 = 128'd16384;
parameter    ap_ST_fsm_state16 = 128'd32768;
parameter    ap_ST_fsm_state17 = 128'd65536;
parameter    ap_ST_fsm_state18 = 128'd131072;
parameter    ap_ST_fsm_state19 = 128'd262144;
parameter    ap_ST_fsm_state20 = 128'd524288;
parameter    ap_ST_fsm_state21 = 128'd1048576;
parameter    ap_ST_fsm_state22 = 128'd2097152;
parameter    ap_ST_fsm_state23 = 128'd4194304;
parameter    ap_ST_fsm_state24 = 128'd8388608;
parameter    ap_ST_fsm_state25 = 128'd16777216;
parameter    ap_ST_fsm_state26 = 128'd33554432;
parameter    ap_ST_fsm_state27 = 128'd67108864;
parameter    ap_ST_fsm_pp0_stage0 = 128'd134217728;
parameter    ap_ST_fsm_state31 = 128'd268435456;
parameter    ap_ST_fsm_state32 = 128'd536870912;
parameter    ap_ST_fsm_state33 = 128'd1073741824;
parameter    ap_ST_fsm_state34 = 128'd2147483648;
parameter    ap_ST_fsm_state35 = 128'd4294967296;
parameter    ap_ST_fsm_state36 = 128'd8589934592;
parameter    ap_ST_fsm_state37 = 128'd17179869184;
parameter    ap_ST_fsm_pp1_stage0 = 128'd34359738368;
parameter    ap_ST_fsm_state40 = 128'd68719476736;
parameter    ap_ST_fsm_state41 = 128'd137438953472;
parameter    ap_ST_fsm_state42 = 128'd274877906944;
parameter    ap_ST_fsm_state43 = 128'd549755813888;
parameter    ap_ST_fsm_state44 = 128'd1099511627776;
parameter    ap_ST_fsm_state45 = 128'd2199023255552;
parameter    ap_ST_fsm_state46 = 128'd4398046511104;
parameter    ap_ST_fsm_pp2_stage0 = 128'd8796093022208;
parameter    ap_ST_fsm_state49 = 128'd17592186044416;
parameter    ap_ST_fsm_state50 = 128'd35184372088832;
parameter    ap_ST_fsm_state51 = 128'd70368744177664;
parameter    ap_ST_fsm_state52 = 128'd140737488355328;
parameter    ap_ST_fsm_state53 = 128'd281474976710656;
parameter    ap_ST_fsm_state54 = 128'd562949953421312;
parameter    ap_ST_fsm_state55 = 128'd1125899906842624;
parameter    ap_ST_fsm_state56 = 128'd2251799813685248;
parameter    ap_ST_fsm_state57 = 128'd4503599627370496;
parameter    ap_ST_fsm_state58 = 128'd9007199254740992;
parameter    ap_ST_fsm_state59 = 128'd18014398509481984;
parameter    ap_ST_fsm_state60 = 128'd36028797018963968;
parameter    ap_ST_fsm_state61 = 128'd72057594037927936;
parameter    ap_ST_fsm_state62 = 128'd144115188075855872;
parameter    ap_ST_fsm_state63 = 128'd288230376151711744;
parameter    ap_ST_fsm_state64 = 128'd576460752303423488;
parameter    ap_ST_fsm_state65 = 128'd1152921504606846976;
parameter    ap_ST_fsm_state66 = 128'd2305843009213693952;
parameter    ap_ST_fsm_state67 = 128'd4611686018427387904;
parameter    ap_ST_fsm_state68 = 128'd9223372036854775808;
parameter    ap_ST_fsm_state69 = 128'd18446744073709551616;
parameter    ap_ST_fsm_pp3_stage0 = 128'd36893488147419103232;
parameter    ap_ST_fsm_state73 = 128'd73786976294838206464;
parameter    ap_ST_fsm_state74 = 128'd147573952589676412928;
parameter    ap_ST_fsm_state75 = 128'd295147905179352825856;
parameter    ap_ST_fsm_state76 = 128'd590295810358705651712;
parameter    ap_ST_fsm_state77 = 128'd1180591620717411303424;
parameter    ap_ST_fsm_state78 = 128'd2361183241434822606848;
parameter    ap_ST_fsm_state79 = 128'd4722366482869645213696;
parameter    ap_ST_fsm_state80 = 128'd9444732965739290427392;
parameter    ap_ST_fsm_state81 = 128'd18889465931478580854784;
parameter    ap_ST_fsm_state82 = 128'd37778931862957161709568;
parameter    ap_ST_fsm_state83 = 128'd75557863725914323419136;
parameter    ap_ST_fsm_state84 = 128'd151115727451828646838272;
parameter    ap_ST_fsm_state85 = 128'd302231454903657293676544;
parameter    ap_ST_fsm_state86 = 128'd604462909807314587353088;
parameter    ap_ST_fsm_pp4_stage0 = 128'd1208925819614629174706176;
parameter    ap_ST_fsm_pp4_stage1 = 128'd2417851639229258349412352;
parameter    ap_ST_fsm_state98 = 128'd4835703278458516698824704;
parameter    ap_ST_fsm_state99 = 128'd9671406556917033397649408;
parameter    ap_ST_fsm_state100 = 128'd19342813113834066795298816;
parameter    ap_ST_fsm_state101 = 128'd38685626227668133590597632;
parameter    ap_ST_fsm_state102 = 128'd77371252455336267181195264;
parameter    ap_ST_fsm_state103 = 128'd154742504910672534362390528;
parameter    ap_ST_fsm_state104 = 128'd309485009821345068724781056;
parameter    ap_ST_fsm_state105 = 128'd618970019642690137449562112;
parameter    ap_ST_fsm_state106 = 128'd1237940039285380274899124224;
parameter    ap_ST_fsm_pp5_stage0 = 128'd2475880078570760549798248448;
parameter    ap_ST_fsm_state110 = 128'd4951760157141521099596496896;
parameter    ap_ST_fsm_state111 = 128'd9903520314283042199192993792;
parameter    ap_ST_fsm_state112 = 128'd19807040628566084398385987584;
parameter    ap_ST_fsm_state113 = 128'd39614081257132168796771975168;
parameter    ap_ST_fsm_state114 = 128'd79228162514264337593543950336;
parameter    ap_ST_fsm_pp6_stage0 = 128'd158456325028528675187087900672;
parameter    ap_ST_fsm_state117 = 128'd316912650057057350374175801344;
parameter    ap_ST_fsm_state118 = 128'd633825300114114700748351602688;
parameter    ap_ST_fsm_state119 = 128'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state120 = 128'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state121 = 128'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state122 = 128'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state123 = 128'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state124 = 128'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state125 = 128'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state126 = 128'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state127 = 128'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state128 = 128'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state129 = 128'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state130 = 128'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state131 = 128'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state132 = 128'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state133 = 128'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state134 = 128'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state135 = 128'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state136 = 128'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_pp7_stage0 = 128'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state140 = 128'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state141 = 128'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state142 = 128'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state143 = 128'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state144 = 128'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state145 = 128'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_pp8_stage0 = 128'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_pp8_stage1 = 128'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state156 = 128'd170141183460469231731687303715884105728;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM2_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM2_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_USER_VALUE = 0;
parameter    C_M_AXI_GMEM2_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM2_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM2_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
output   m_axi_gmem2_AWVALID;
input   m_axi_gmem2_AWREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_AWADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_AWID;
output  [7:0] m_axi_gmem2_AWLEN;
output  [2:0] m_axi_gmem2_AWSIZE;
output  [1:0] m_axi_gmem2_AWBURST;
output  [1:0] m_axi_gmem2_AWLOCK;
output  [3:0] m_axi_gmem2_AWCACHE;
output  [2:0] m_axi_gmem2_AWPROT;
output  [3:0] m_axi_gmem2_AWQOS;
output  [3:0] m_axi_gmem2_AWREGION;
output  [C_M_AXI_GMEM2_AWUSER_WIDTH - 1:0] m_axi_gmem2_AWUSER;
output   m_axi_gmem2_WVALID;
input   m_axi_gmem2_WREADY;
output  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_WDATA;
output  [C_M_AXI_GMEM2_WSTRB_WIDTH - 1:0] m_axi_gmem2_WSTRB;
output   m_axi_gmem2_WLAST;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_WID;
output  [C_M_AXI_GMEM2_WUSER_WIDTH - 1:0] m_axi_gmem2_WUSER;
output   m_axi_gmem2_ARVALID;
input   m_axi_gmem2_ARREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_ARADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_ARID;
output  [7:0] m_axi_gmem2_ARLEN;
output  [2:0] m_axi_gmem2_ARSIZE;
output  [1:0] m_axi_gmem2_ARBURST;
output  [1:0] m_axi_gmem2_ARLOCK;
output  [3:0] m_axi_gmem2_ARCACHE;
output  [2:0] m_axi_gmem2_ARPROT;
output  [3:0] m_axi_gmem2_ARQOS;
output  [3:0] m_axi_gmem2_ARREGION;
output  [C_M_AXI_GMEM2_ARUSER_WIDTH - 1:0] m_axi_gmem2_ARUSER;
input   m_axi_gmem2_RVALID;
output   m_axi_gmem2_RREADY;
input  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_RDATA;
input   m_axi_gmem2_RLAST;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_RID;
input  [C_M_AXI_GMEM2_RUSER_WIDTH - 1:0] m_axi_gmem2_RUSER;
input  [1:0] m_axi_gmem2_RRESP;
input   m_axi_gmem2_BVALID;
output   m_axi_gmem2_BREADY;
input  [1:0] m_axi_gmem2_BRESP;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_BID;
input  [C_M_AXI_GMEM2_BUSER_WIDTH - 1:0] m_axi_gmem2_BUSER;
output  [31:0] x_Addr_A;
output   x_EN_A;
output  [1:0] x_WEN_A;
output  [15:0] x_Din_A;
input  [15:0] x_Dout_A;
output   x_Clk_A;
output   x_Rst_A;
output  [31:0] dx_Addr_A;
output   dx_EN_A;
output  [1:0] dx_WEN_A;
output  [15:0] dx_Din_A;
input  [15:0] dx_Dout_A;
output   dx_Clk_A;
output   dx_Rst_A;
output  [31:0] y_Addr_A;
output   y_EN_A;
output  [1:0] y_WEN_A;
output  [15:0] y_Din_A;
input  [15:0] y_Dout_A;
output   y_Clk_A;
output   y_Rst_A;
output  [31:0] dy_Addr_A;
output   dy_EN_A;
output  [1:0] dy_WEN_A;
output  [15:0] dy_Din_A;
input  [15:0] dy_Dout_A;
output   dy_Clk_A;
output   dy_Rst_A;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

reg x_EN_A;
reg dx_EN_A;
reg[1:0] dx_WEN_A;
reg y_EN_A;
reg[1:0] y_WEN_A;
reg[15:0] y_Din_A;
reg dy_EN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [127:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] wt;
wire   [31:0] dwt;
wire   [31:0] b;
wire   [31:0] db;
wire   [31:0] debug_x;
wire   [31:0] debug_dx;
wire   [31:0] F;
wire   [31:0] C;
wire   [31:0] H;
wire   [31:0] W;
wire   [31:0] FH;
wire   [31:0] FW;
wire    fwprop;
wire    debugip;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state21;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln52_reg_3870;
wire    ap_CS_fsm_state11;
reg   [0:0] icmp_ln49_1_reg_3733;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln62_reg_3899;
wire    ap_CS_fsm_state40;
reg   [0:0] icmp_ln49_reg_3663;
reg   [0:0] fwprop_read_reg_3527;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln88_reg_3971;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state100;
reg   [0:0] icmp_ln120_reg_4575;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter1;
wire    ap_block_pp6_stage0;
reg   [0:0] icmp_ln131_reg_4703;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state121;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln96_reg_4208;
wire    ap_CS_fsm_state106;
reg    ap_enable_reg_pp5_iter2;
wire    ap_block_pp5_stage0;
reg   [0:0] icmp_ln123_reg_4674;
reg   [0:0] icmp_ln123_reg_4674_pp5_iter1_reg;
wire    ap_CS_fsm_state114;
reg   [0:0] cmp147408_reg_4048;
reg    gmem2_blk_n_AW;
wire    ap_CS_fsm_pp8_stage0;
reg    ap_enable_reg_pp8_iter1;
wire    ap_block_pp8_stage0;
reg   [0:0] icmp_ln140_1_reg_4937;
reg    gmem2_blk_n_W;
wire    ap_CS_fsm_pp8_stage1;
wire    ap_block_pp8_stage1;
reg   [0:0] icmp_ln140_1_reg_4937_pp8_iter1_reg;
reg    gmem2_blk_n_B;
reg    ap_enable_reg_pp8_iter4;
reg   [0:0] icmp_ln140_1_reg_4937_pp8_iter3_reg;
reg    ap_enable_reg_pp8_iter2;
reg   [0:0] icmp_ln140_1_reg_4937_pp8_iter4_reg;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg   [31:0] gmem_AWADDR;
reg   [31:0] gmem_AWLEN;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg   [15:0] gmem_WDATA;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
reg   [31:0] gmem_ARLEN;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [15:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg    gmem2_AWVALID;
wire    gmem2_AWREADY;
reg   [31:0] gmem2_AWADDR;
reg    gmem2_WVALID;
wire    gmem2_WREADY;
reg   [15:0] gmem2_WDATA;
wire    gmem2_ARREADY;
wire    gmem2_RVALID;
wire   [15:0] gmem2_RDATA;
wire    gmem2_RLAST;
wire   [0:0] gmem2_RID;
wire   [0:0] gmem2_RUSER;
wire   [1:0] gmem2_RRESP;
wire    gmem2_BVALID;
reg    gmem2_BREADY;
wire   [1:0] gmem2_BRESP;
wire   [0:0] gmem2_BID;
wire   [0:0] gmem2_BUSER;
reg   [30:0] l_reg_684;
reg   [30:0] i_1_reg_695;
reg   [30:0] i_2_reg_742;
reg   [30:0] l_1_reg_812;
reg   [31:0] c_1_reg_878;
reg   [95:0] indvar_flatten133_reg_890;
reg   [63:0] indvar_flatten104_reg_901;
reg   [31:0] fh_1_reg_912;
reg   [31:0] fw_1_reg_923;
reg   [30:0] l_2_reg_992;
reg   [30:0] i_5_reg_1003;
reg   [30:0] fw_reg_1103;
reg   [15:0] empty_65_reg_1114;
reg   [30:0] i_6_reg_1139;
wire   [31:0] grp_fu_1165_p2;
reg   [31:0] reg_1184;
wire    ap_CS_fsm_state77;
(* use_dsp48 = "no" *) wire  signed [9:0] grp_fu_1170_p2;
reg  signed [9:0] reg_1188;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state128;
reg   [0:0] debugip_read_reg_3523;
reg   [31:0] FW_read_reg_3531;
reg   [31:0] FH_read_reg_3552;
reg  signed [31:0] W_read_reg_3566;
reg  signed [31:0] H_read_reg_3576;
reg  signed [31:0] C_read_reg_3582;
reg   [31:0] F_read_reg_3593;
reg   [31:0] debug_dx_read_reg_3603;
reg   [31:0] debug_x_read_reg_3608;
reg   [31:0] db_read_reg_3613;
reg   [31:0] b_read_reg_3618;
reg   [31:0] dwt_read_reg_3623;
reg   [31:0] wt_read_reg_3629;
wire   [9:0] empty_fu_1192_p1;
reg   [9:0] empty_reg_3634;
wire  signed [9:0] empty_48_fu_1196_p1;
reg  signed [9:0] empty_48_reg_3639;
(* use_dsp48 = "no" *) wire  signed [9:0] outH_fu_1204_p2;
reg  signed [9:0] outH_reg_3647;
wire    ap_CS_fsm_state2;
wire   [9:0] trunc_ln44_fu_1214_p1;
reg   [9:0] trunc_ln44_reg_3653;
wire   [31:0] outW_fu_1218_p2;
reg   [31:0] outW_reg_3658;
wire   [0:0] icmp_ln49_fu_1224_p2;
wire   [63:0] grp_fu_1235_p2;
reg   [63:0] bound_reg_3677;
wire    ap_CS_fsm_state3;
wire   [30:0] empty_49_fu_1241_p1;
reg   [30:0] empty_49_reg_3683;
wire    ap_CS_fsm_state4;
wire   [0:0] grp_fu_1150_p2;
reg   [0:0] cmp57438_reg_3698;
wire    ap_CS_fsm_state8;
wire  signed [30:0] trunc_ln49_fu_1257_p1;
reg  signed [30:0] trunc_ln49_reg_3702;
wire  signed [30:0] trunc_ln49_1_fu_1260_p1;
reg  signed [30:0] trunc_ln49_1_reg_3707;
wire  signed [30:0] empty_50_fu_1263_p1;
reg  signed [30:0] empty_50_reg_3713;
wire   [94:0] grp_fu_1251_p2;
reg   [94:0] bound5_reg_3718;
wire   [0:0] grp_fu_1155_p2;
reg   [0:0] icmp_ln51_reg_3723;
wire   [94:0] add_ln49_1_fu_1266_p2;
reg   [94:0] add_ln49_1_reg_3728;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln49_1_fu_1277_p2;
wire   [30:0] grp_fu_1272_p2;
reg   [30:0] empty_51_reg_3737;
wire    ap_CS_fsm_state10;
wire   [30:0] tmp_fu_1286_p2;
reg   [30:0] tmp_reg_3743;
wire   [3:0] trunc_ln53_fu_1291_p1;
reg   [3:0] trunc_ln53_reg_3748;
wire  signed [30:0] add_ln49_fu_1295_p2;
reg  signed [30:0] add_ln49_reg_3753;
wire   [0:0] icmp_ln50_fu_1301_p2;
reg   [0:0] icmp_ln50_reg_3758;
wire   [30:0] select_ln49_2_fu_1306_p3;
reg   [30:0] select_ln49_2_reg_3768;
wire   [1:0] trunc_ln49_2_fu_1314_p1;
reg   [1:0] trunc_ln49_2_reg_3773;
wire   [0:0] select_ln49_5_fu_1323_p3;
reg   [0:0] select_ln49_5_reg_3779;
wire   [30:0] grp_fu_1350_p2;
reg   [30:0] p_mid1_reg_3811;
wire    ap_CS_fsm_state13;
wire  signed [30:0] select_ln50_1_fu_1417_p3;
reg  signed [30:0] select_ln50_1_reg_3817;
wire    ap_CS_fsm_state14;
wire  signed [5:0] add_ln53_fu_1439_p2;
reg  signed [5:0] add_ln53_reg_3822;
wire   [31:0] select_ln50_3_fu_1445_p3;
reg   [31:0] select_ln50_3_reg_3828;
wire   [30:0] grp_fu_1452_p2;
reg   [30:0] mul_ln50_reg_3833;
wire    ap_CS_fsm_state16;
wire   [31:0] select_ln50_fu_1460_p3;
reg   [31:0] select_ln50_reg_3838;
wire    ap_CS_fsm_state17;
wire  signed [30:0] tmp11_fu_1472_p2;
reg  signed [30:0] tmp11_reg_3844;
wire   [30:0] grp_fu_1477_p2;
reg   [30:0] empty_54_reg_3849;
wire    ap_CS_fsm_state19;
reg   [31:0] gmem_addr_2_reg_3854;
wire    ap_CS_fsm_state20;
wire   [7:0] add_ln53_3_fu_1562_p2;
reg   [7:0] add_ln53_3_reg_3860;
wire   [30:0] add_ln52_fu_1568_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state28_pp0_stage0_iter0;
reg    ap_block_state29_pp0_stage0_iter1;
wire    ap_block_state30_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln52_fu_1578_p2;
reg   [0:0] icmp_ln52_reg_3870_pp0_iter1_reg;
wire   [7:0] add_ln53_4_fu_1587_p2;
reg   [7:0] add_ln53_4_reg_3874;
reg   [7:0] add_ln53_4_reg_3874_pp0_iter1_reg;
reg   [15:0] gmem_addr_2_read_reg_3879;
wire   [31:0] add_ln51_fu_1596_p2;
wire    ap_CS_fsm_state31;
wire   [63:0] select_ln50_4_fu_1607_p3;
wire   [30:0] add_ln62_fu_1614_p2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state38_pp1_stage0_iter0;
reg    ap_block_state39_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln62_fu_1620_p2;
wire   [1:0] trunc_ln63_fu_1625_p1;
reg   [1:0] trunc_ln63_reg_3903;
reg   [15:0] bbuf_V_2_load_reg_3907;
reg   [15:0] bbuf_V_2_1_load_reg_3912;
reg   [15:0] bbuf_V_2_3_load_reg_3917;
reg   [31:0] gmem_addr_1_reg_3940;
wire   [31:0] sub_ln70_fu_1678_p2;
reg   [31:0] sub_ln70_reg_3947;
wire   [0:0] icmp_ln73_fu_1683_p2;
reg   [0:0] icmp_ln73_reg_3953;
wire   [30:0] trunc_ln88_fu_1688_p1;
reg   [30:0] trunc_ln88_reg_3958;
wire    ap_CS_fsm_state46;
wire   [30:0] add_ln88_fu_1691_p2;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state47_pp2_stage0_iter0;
reg    ap_block_state48_pp2_stage0_iter1;
reg    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln88_fu_1697_p2;
wire   [1:0] trunc_ln89_fu_1702_p1;
reg   [1:0] trunc_ln89_reg_3975;
reg   [15:0] dbbuf_V_2_1_load_reg_3979;
reg   [15:0] dbbuf_V_2_2_load_reg_3984;
reg   [15:0] dbbuf_V_2_4_load_reg_3989;
wire    ap_CS_fsm_state49;
wire   [63:0] cast61_fu_1733_p1;
reg   [63:0] cast61_reg_3999;
wire   [63:0] grp_fu_1736_p2;
reg   [63:0] bound62_reg_4005;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state51;
wire  signed [30:0] trunc_ln93_fu_1754_p1;
reg  signed [30:0] trunc_ln93_reg_4022;
wire    ap_CS_fsm_state52;
wire  signed [30:0] grp_fu_1760_p2;
reg  signed [30:0] empty_71_reg_4034;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
wire  signed [30:0] grp_fu_1769_p2;
reg  signed [30:0] empty_72_reg_4052;
wire   [94:0] grp_fu_1748_p2;
reg   [94:0] bound73_reg_4058;
reg   [0:0] icmp_ln95_reg_4064;
wire    ap_CS_fsm_state56;
wire   [3:0] trunc_ln97_fu_1783_p1;
reg   [3:0] trunc_ln97_reg_4075;
wire   [94:0] add_ln93_1_fu_1787_p2;
reg   [94:0] add_ln93_1_reg_4080;
wire    ap_CS_fsm_state57;
wire   [30:0] grp_fu_1778_p2;
reg   [30:0] empty_73_reg_4085;
wire   [0:0] icmp_ln94_fu_1798_p2;
reg   [0:0] icmp_ln94_reg_4093;
wire   [0:0] icmp_ln93_fu_1793_p2;
wire   [0:0] cmp176393_fu_1803_p2;
reg   [0:0] cmp176393_reg_4125;
wire  signed [30:0] select_ln93_1_fu_1841_p3;
reg  signed [30:0] select_ln93_1_reg_4134;
wire    ap_CS_fsm_state58;
wire   [0:0] select_ln93_4_fu_1889_p3;
reg   [0:0] select_ln93_4_reg_4140;
wire   [31:0] select_ln94_fu_1906_p3;
reg   [31:0] select_ln94_reg_4145;
wire  signed [30:0] trunc_ln94_1_fu_1914_p1;
reg  signed [30:0] trunc_ln94_1_reg_4151;
wire  signed [5:0] add_ln97_fu_1934_p2;
reg  signed [5:0] add_ln97_reg_4156;
wire   [31:0] select_ln94_3_fu_1940_p3;
reg   [31:0] select_ln94_3_reg_4162;
wire  signed [30:0] trunc_ln95_fu_1948_p1;
reg  signed [30:0] trunc_ln95_reg_4167;
wire   [30:0] grp_fu_1952_p2;
reg   [30:0] mul_ln93_reg_4172;
wire    ap_CS_fsm_state60;
wire   [30:0] grp_fu_1956_p2;
reg   [30:0] p_mid166_reg_4177;
wire   [30:0] grp_fu_1960_p2;
reg   [30:0] empty_76_reg_4182;
wire   [30:0] empty_77_fu_1980_p2;
reg   [30:0] empty_77_reg_4187;
wire    ap_CS_fsm_state61;
reg   [31:0] gmem_addr_3_reg_4192;
wire    ap_CS_fsm_state62;
wire   [7:0] add_ln97_3_fu_2067_p2;
reg   [7:0] add_ln97_3_reg_4198;
wire   [30:0] add_ln96_fu_2073_p2;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state70_pp3_stage0_iter0;
reg    ap_block_state71_pp3_stage0_iter1;
wire    ap_block_state72_pp3_stage0_iter2;
reg    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln96_fu_2083_p2;
reg   [0:0] icmp_ln96_reg_4208_pp3_iter1_reg;
wire   [7:0] add_ln97_4_fu_2092_p2;
reg   [7:0] add_ln97_4_reg_4212;
reg   [7:0] add_ln97_4_reg_4212_pp3_iter1_reg;
reg   [15:0] gmem_addr_3_read_reg_4217;
wire   [31:0] add_ln95_fu_2101_p2;
wire    ap_CS_fsm_state73;
wire   [63:0] select_ln94_4_fu_2112_p3;
wire   [63:0] grp_fu_1811_p2;
reg   [63:0] bound96_reg_4232;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state78;
wire  signed [9:0] trunc_ln103_fu_2144_p1;
reg  signed [9:0] trunc_ln103_reg_4258;
wire   [31:0] sub_ln103_fu_2152_p2;
reg   [31:0] sub_ln103_reg_4263;
wire   [95:0] grp_fu_2125_p2;
reg   [95:0] bound109_reg_4268;
wire   [62:0] grp_fu_2138_p2;
reg   [62:0] bound138_reg_4273;
wire   [0:0] icmp_ln108_fu_2157_p2;
reg   [0:0] icmp_ln108_reg_4278;
wire   [62:0] add_ln103_4_fu_2162_p2;
reg   [62:0] add_ln103_4_reg_4283;
wire    ap_CS_fsm_state80;
wire   [0:0] icmp_ln104_fu_2195_p2;
reg   [0:0] icmp_ln104_reg_4291;
wire   [0:0] icmp_ln103_fu_2184_p2;
wire   [30:0] select_ln103_1_fu_2201_p3;
reg   [30:0] select_ln103_1_reg_4296;
wire   [1:0] select_ln103_2_fu_2217_p3;
reg   [1:0] select_ln103_2_reg_4306;
wire   [0:0] select_ln103_3_fu_2231_p3;
reg   [0:0] select_ln103_3_reg_4313;
wire   [0:0] select_ln103_4_fu_2245_p3;
reg   [0:0] select_ln103_4_reg_4319;
wire   [31:0] select_ln103_fu_2253_p3;
reg   [31:0] select_ln103_reg_4326;
wire    ap_CS_fsm_state82;
wire   [9:0] trunc_ln104_fu_2260_p1;
reg   [9:0] trunc_ln104_reg_4331;
wire  signed [5:0] sext_ln703_fu_2284_p1;
reg  signed [5:0] sext_ln703_reg_4339;
wire    ap_CS_fsm_state83;
wire   [9:0] empty_85_fu_2288_p2;
reg   [9:0] empty_85_reg_4344;
wire   [15:0] tmp_2_fu_2293_p5;
wire   [31:0] add_ln105_fu_2304_p2;
reg   [31:0] add_ln105_reg_4354;
wire    ap_CS_fsm_state84;
wire   [9:0] trunc_ln105_fu_2315_p1;
reg   [9:0] trunc_ln105_reg_4362;
wire   [0:0] icmp_ln105_fu_2310_p2;
wire   [31:0] add_ln104_fu_2384_p2;
reg  signed [15:0] r_V_reg_4377;
wire    ap_CS_fsm_state86;
wire  signed [28:0] sext_ln1118_1_fu_2389_p1;
reg  signed [28:0] sext_ln1118_1_reg_4382;
wire   [9:0] empty_81_fu_2402_p2;
reg   [9:0] empty_81_reg_4388;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state87_pp4_stage0_iter0;
wire    ap_block_state89_pp4_stage0_iter1;
wire    ap_block_state91_pp4_stage0_iter2;
wire    ap_block_state93_pp4_stage0_iter3;
wire    ap_block_state95_pp4_stage0_iter4;
wire    ap_block_state97_pp4_stage0_iter5;
wire    ap_block_pp4_stage0_11001;
wire   [95:0] add_ln106_1_fu_2407_p2;
reg   [95:0] add_ln106_1_reg_4394;
wire    ap_CS_fsm_pp4_stage1;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state88_pp4_stage1_iter0;
wire    ap_block_state90_pp4_stage1_iter1;
wire    ap_block_state92_pp4_stage1_iter2;
wire    ap_block_state94_pp4_stage1_iter3;
wire    ap_block_state96_pp4_stage1_iter4;
wire    ap_block_pp4_stage1_11001;
wire   [9:0] empty_82_fu_2422_p2;
reg   [9:0] empty_82_reg_4399;
wire   [0:0] icmp_ln106_fu_2431_p2;
reg   [0:0] icmp_ln106_reg_4404;
reg   [0:0] icmp_ln106_reg_4404_pp4_iter1_reg;
reg   [0:0] icmp_ln106_reg_4404_pp4_iter2_reg;
reg   [0:0] icmp_ln106_reg_4404_pp4_iter3_reg;
reg   [0:0] icmp_ln106_reg_4404_pp4_iter4_reg;
wire   [0:0] icmp_ln107_fu_2442_p2;
reg   [0:0] icmp_ln107_reg_4408;
wire   [31:0] select_ln106_fu_2447_p3;
reg   [31:0] select_ln106_reg_4416;
wire   [9:0] p_mid1115_fu_2459_p2;
reg   [9:0] p_mid1115_reg_4421;
wire   [31:0] select_ln106_2_fu_2464_p3;
reg   [31:0] select_ln106_2_reg_4427;
wire   [3:0] trunc_ln106_2_fu_2472_p1;
reg   [3:0] trunc_ln106_2_reg_4432;
wire   [0:0] select_ln106_5_fu_2489_p3;
reg   [0:0] select_ln106_5_reg_4437;
wire   [31:0] add_ln107_fu_2496_p2;
reg   [31:0] add_ln107_reg_4444;
wire   [9:0] trunc_ln107_1_fu_2502_p1;
reg   [9:0] trunc_ln107_1_reg_4449;
wire   [5:0] select_ln107_1_fu_2510_p3;
reg   [5:0] select_ln107_1_reg_4454;
wire   [63:0] add_ln107_2_fu_2518_p2;
reg   [63:0] add_ln107_2_reg_4459;
wire   [7:0] trunc_ln1118_fu_2600_p1;
reg   [7:0] trunc_ln1118_reg_4464;
wire   [5:0] trunc_ln1118_1_fu_2604_p1;
reg   [5:0] trunc_ln1118_1_reg_4469;
wire   [31:0] select_ln107_3_fu_2615_p3;
reg   [31:0] select_ln107_3_reg_4479;
reg    ap_enable_reg_pp4_iter1;
wire   [9:0] trunc_ln109_fu_2620_p1;
reg   [9:0] trunc_ln109_reg_4484;
reg   [9:0] trunc_ln109_reg_4484_pp4_iter2_reg;
wire   [7:0] trunc_ln1118_2_fu_2624_p1;
reg   [7:0] trunc_ln1118_2_reg_4489;
wire   [31:0] add_ln108_fu_2628_p2;
reg   [31:0] add_ln108_reg_4494;
wire   [63:0] select_ln107_4_fu_2634_p3;
reg   [63:0] select_ln107_4_reg_4499;
wire   [7:0] add_ln1118_5_fu_2652_p2;
reg   [7:0] add_ln1118_5_reg_4504;
reg   [7:0] dwbuf_V_addr_2_reg_4514;
reg   [7:0] dwbuf_V_addr_2_reg_4514_pp4_iter3_reg;
reg   [7:0] dwbuf_V_addr_2_reg_4514_pp4_iter4_reg;
reg   [9:0] dx_addr_1_reg_4530;
reg   [9:0] dx_addr_1_reg_4530_pp4_iter3_reg;
wire   [0:0] addr_cmp_fu_2679_p2;
reg   [0:0] addr_cmp_reg_4535;
wire   [15:0] add_ln703_1_fu_2745_p2;
wire    ap_CS_fsm_state98;
wire   [94:0] add_ln120_1_fu_2750_p2;
reg   [94:0] add_ln120_1_reg_4560;
wire    ap_CS_fsm_state99;
wire   [3:0] trunc_ln124_fu_2765_p1;
reg   [3:0] trunc_ln124_reg_4570;
wire   [0:0] icmp_ln120_fu_2769_p2;
wire   [30:0] grp_fu_2760_p2;
reg   [30:0] empty_86_reg_4579;
wire   [0:0] icmp_ln121_fu_2780_p2;
reg   [0:0] icmp_ln121_reg_4584;
wire  signed [30:0] select_ln120_1_fu_2785_p3;
reg  signed [30:0] select_ln120_1_reg_4592;
reg    ap_block_state100_io;
wire   [1:0] trunc_ln120_fu_2793_p1;
reg   [1:0] trunc_ln120_reg_4598;
wire   [0:0] select_ln120_4_fu_2802_p3;
reg   [0:0] select_ln120_4_reg_4604;
wire   [31:0] select_ln121_fu_2815_p3;
reg   [31:0] select_ln121_reg_4611;
wire  signed [30:0] trunc_ln122_fu_2823_p1;
reg  signed [30:0] trunc_ln122_reg_4617;
wire  signed [30:0] trunc_ln121_1_fu_2874_p1;
reg  signed [30:0] trunc_ln121_1_reg_4622;
wire    ap_CS_fsm_state101;
wire  signed [5:0] add_ln124_fu_2893_p2;
reg  signed [5:0] add_ln124_reg_4627;
wire   [31:0] select_ln121_3_fu_2899_p3;
reg   [31:0] select_ln121_3_reg_4633;
wire   [30:0] grp_fu_2834_p2;
reg   [30:0] mul_ln120_reg_4638;
wire    ap_CS_fsm_state102;
wire   [30:0] grp_fu_2906_p2;
reg   [30:0] empty_90_reg_4643;
wire   [30:0] grp_fu_2910_p2;
reg   [30:0] p_mid1153_reg_4648;
wire    ap_CS_fsm_state103;
wire   [30:0] empty_91_fu_2930_p2;
reg   [30:0] empty_91_reg_4653;
wire    ap_CS_fsm_state104;
reg   [31:0] gmem_addr_4_reg_4658;
wire    ap_CS_fsm_state105;
wire   [7:0] add_ln124_3_fu_3017_p2;
reg   [7:0] add_ln124_3_reg_4664;
wire   [30:0] add_ln123_fu_3023_p2;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state107_pp5_stage0_iter0;
wire    ap_block_state108_pp5_stage0_iter1;
wire    ap_block_state109_pp5_stage0_iter2;
reg    ap_block_state109_io;
reg    ap_block_pp5_stage0_11001;
wire   [0:0] icmp_ln123_fu_3033_p2;
wire   [15:0] dwbuf_V_q1;
reg   [15:0] dwbuf_V_load_reg_4683;
reg    ap_enable_reg_pp5_iter1;
wire   [31:0] add_ln122_fu_3052_p2;
wire   [63:0] select_ln121_4_fu_3063_p3;
wire   [30:0] add_ln131_fu_3070_p2;
reg    ap_enable_reg_pp6_iter0;
wire    ap_block_state115_pp6_stage0_iter0;
wire    ap_block_state116_pp6_stage0_iter1;
reg    ap_block_state116_io;
reg    ap_block_pp6_stage0_11001;
wire   [0:0] icmp_ln131_fu_3076_p2;
wire   [15:0] tmp_3_fu_3085_p5;
reg   [15:0] tmp_3_reg_4707;
wire    ap_CS_fsm_state122;
wire   [63:0] grp_fu_3108_p2;
reg   [63:0] bound27_reg_4722;
wire    ap_CS_fsm_state123;
wire    ap_CS_fsm_state124;
reg   [0:0] cmp99323_reg_4738;
wire  signed [9:0] trunc_ln70_fu_3126_p1;
reg  signed [9:0] trunc_ln70_reg_4742;
wire   [30:0] trunc_ln70_1_fu_3129_p1;
reg   [30:0] trunc_ln70_1_reg_4747;
wire   [95:0] grp_fu_3120_p2;
reg   [95:0] bound41_reg_4752;
wire   [30:0] add_ln70_2_fu_3132_p2;
reg   [30:0] add_ln70_2_reg_4757;
wire    ap_CS_fsm_state129;
wire   [9:0] empty_60_fu_3151_p2;
reg   [9:0] empty_60_reg_4765;
wire   [0:0] icmp_ln70_fu_3138_p2;
wire   [15:0] tmp_1_fu_3156_p5;
reg   [15:0] tmp_1_reg_4772;
wire   [95:0] add_ln71_1_fu_3168_p2;
reg   [95:0] add_ln71_1_reg_4778;
wire    ap_CS_fsm_state130;
wire   [9:0] empty_61_fu_3178_p2;
reg   [9:0] empty_61_reg_4783;
wire   [0:0] icmp_ln72_fu_3194_p2;
reg   [0:0] icmp_ln72_reg_4791;
wire   [0:0] icmp_ln71_fu_3183_p2;
wire   [31:0] select_ln71_1_fu_3207_p3;
reg   [31:0] select_ln71_1_reg_4798;
wire  signed [9:0] trunc_ln71_fu_3215_p1;
reg  signed [9:0] trunc_ln71_reg_4803;
wire   [0:0] select_ln71_4_fu_3232_p3;
reg   [0:0] select_ln71_4_reg_4808;
wire   [9:0] trunc_ln72_1_fu_3245_p1;
reg   [9:0] trunc_ln72_1_reg_4814;
wire   [9:0] select_ln72_1_fu_3249_p3;
reg   [9:0] select_ln72_1_reg_4819;
wire   [31:0] select_ln72_3_fu_3257_p3;
reg   [31:0] select_ln72_3_reg_4824;
wire    ap_CS_fsm_state131;
wire   [31:0] select_ln72_fu_3285_p3;
reg   [31:0] select_ln72_reg_4834;
wire    ap_CS_fsm_state133;
wire   [9:0] trunc_ln73_fu_3293_p1;
reg   [9:0] trunc_ln73_reg_4839;
wire   [9:0] mul_ln71_fu_3297_p2;
reg   [9:0] mul_ln71_reg_4845;
wire    ap_CS_fsm_state134;
reg   [9:0] y_addr_reg_4850;
wire   [31:0] add_ln75_fu_3305_p2;
reg   [31:0] add_ln75_reg_4855;
wire    ap_CS_fsm_state135;
wire  signed [9:0] empty_63_fu_3325_p2;
reg  signed [9:0] empty_63_reg_4863;
wire   [0:0] icmp_ln75_fu_3311_p2;
wire   [31:0] add_ln73_fu_3330_p2;
wire   [63:0] select_ln72_4_fu_3341_p3;
wire   [9:0] add_ln77_fu_3352_p2;
reg   [9:0] add_ln77_reg_4878;
wire    ap_CS_fsm_state136;
wire   [30:0] add_ln76_fu_3357_p2;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter0;
wire    ap_block_state137_pp7_stage0_iter0;
wire    ap_block_state138_pp7_stage0_iter1;
wire    ap_block_state139_pp7_stage0_iter2;
wire    ap_block_pp7_stage0_11001;
wire   [0:0] icmp_ln76_fu_3367_p2;
reg   [0:0] icmp_ln76_reg_4888;
reg   [0:0] icmp_ln76_reg_4888_pp7_iter1_reg;
wire   [15:0] add_ln703_fu_3386_p2;
reg    ap_enable_reg_pp7_iter2;
wire  signed [31:0] grp_fu_3097_p2;
reg  signed [31:0] tmp21_reg_4902;
wire    ap_CS_fsm_state142;
wire   [31:0] grp_fu_3392_p2;
reg   [31:0] mul293_reg_4907;
wire    ap_CS_fsm_state144;
wire   [0:0] icmp_ln140_fu_3396_p2;
wire    ap_CS_fsm_state145;
wire   [30:0] trunc_ln140_fu_3401_p1;
reg   [30:0] trunc_ln140_reg_4917;
wire  signed [31:0] sext_ln140_fu_3413_p1;
reg  signed [31:0] sext_ln140_reg_4922;
wire  signed [31:0] sext_ln140_1_fu_3426_p1;
reg  signed [31:0] sext_ln140_1_reg_4927;
wire   [30:0] add_ln140_fu_3430_p2;
reg   [30:0] add_ln140_reg_4932;
reg    ap_enable_reg_pp8_iter0;
wire    ap_block_state146_pp8_stage0_iter0;
wire    ap_block_state148_pp8_stage0_iter1;
reg    ap_block_state148_io;
wire    ap_block_state150_pp8_stage0_iter2;
reg    ap_block_state150_io;
wire    ap_block_state152_pp8_stage0_iter3;
reg    ap_block_state154_pp8_stage0_iter4;
reg    ap_block_pp8_stage0_11001;
wire   [0:0] icmp_ln140_1_fu_3436_p2;
reg   [0:0] icmp_ln140_1_reg_4937_pp8_iter2_reg;
reg   [31:0] gmem2_addr_reg_4946;
reg   [31:0] gmem2_addr_1_reg_4957;
reg   [31:0] gmem2_addr_1_reg_4957_pp8_iter1_reg;
reg   [15:0] x_load_1_reg_4963;
reg   [15:0] dx_load_reg_4968;
wire    ap_CS_fsm_state27;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state28;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state37;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_flush_enable;
wire    ap_CS_fsm_state69;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state70;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_pp4_stage1_subdone;
reg    ap_condition_pp4_exit_iter0_state88;
wire    ap_block_pp4_stage0_subdone;
reg    ap_enable_reg_pp4_iter2;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter4;
reg    ap_enable_reg_pp4_iter5;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state107;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state115;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_flush_enable;
reg    ap_enable_reg_pp7_iter1;
reg    ap_block_pp8_stage0_subdone;
reg    ap_condition_pp8_exit_iter0_state146;
wire    ap_block_state147_pp8_stage1_iter0;
wire    ap_block_state149_pp8_stage1_iter1;
reg    ap_block_state149_io;
wire    ap_block_state151_pp8_stage1_iter2;
wire    ap_block_state153_pp8_stage1_iter3;
reg    ap_block_state155_pp8_stage1_iter4;
reg    ap_block_pp8_stage1_subdone;
reg    ap_enable_reg_pp8_iter3;
reg   [7:0] wbuf_V_address0;
reg    wbuf_V_ce0;
reg    wbuf_V_we0;
wire  signed [15:0] wbuf_V_q0;
reg   [7:0] dwbuf_V_address0;
reg    dwbuf_V_ce0;
reg    dwbuf_V_we0;
reg   [15:0] dwbuf_V_d0;
reg   [7:0] dwbuf_V_address1;
reg    dwbuf_V_ce1;
reg   [94:0] indvar_flatten22_reg_625;
reg  signed [30:0] i_reg_636;
reg   [63:0] indvar_flatten_reg_648;
reg   [31:0] j_reg_660;
reg   [31:0] k_reg_672;
reg   [15:0] bbuf_V_2_2_reg_706;
reg    ap_predicate_op397_readreq_state40;
reg    ap_block_state40_io;
reg   [15:0] bbuf_V_1_2_reg_718;
reg   [15:0] bbuf_V_0_2_reg_730;
reg   [31:0] j_1_reg_753;
reg   [94:0] indvar_flatten91_reg_765;
reg   [30:0] i_3_reg_776;
reg   [63:0] indvar_flatten68_reg_788;
reg   [31:0] k_1_reg_800;
reg   [62:0] indvar_flatten144_reg_823;
reg   [30:0] f_1_reg_834;
reg   [31:0] h_1_reg_845;
reg   [31:0] w_1_reg_857;
reg   [15:0] dbbuf_V_2_8_reg_868;
reg   [31:0] ap_phi_mux_c_1_phi_fu_882_p4;
wire    ap_block_pp4_stage0;
reg   [95:0] ap_phi_mux_indvar_flatten133_phi_fu_894_p4;
wire    ap_block_pp4_stage1;
reg   [63:0] ap_phi_mux_indvar_flatten104_phi_fu_905_p4;
reg   [31:0] ap_phi_mux_fh_1_phi_fu_916_p4;
reg   [31:0] ap_phi_mux_fw_1_phi_fu_927_p4;
reg   [94:0] indvar_flatten178_reg_935;
reg    ap_block_state114;
reg   [31:0] j_2_reg_946;
reg   [30:0] i_4_reg_958;
reg   [63:0] indvar_flatten155_reg_969;
reg   [31:0] k_2_reg_981;
reg   [30:0] f_reg_1014;
reg   [95:0] indvar_flatten57_reg_1025;
reg   [31:0] c_reg_1036;
reg   [63:0] indvar_flatten36_reg_1047;
reg   [31:0] h_reg_1059;
reg   [31:0] w_reg_1070;
reg   [15:0] empty_62_reg_1082;
wire    ap_CS_fsm_state141;
reg   [31:0] fh_reg_1092;
reg   [15:0] empty_67_reg_1126;
wire    ap_CS_fsm_state140;
reg   [30:0] ap_phi_mux_i_6_phi_fu_1143_p4;
wire   [31:0] zext_ln53_4_fu_1592_p1;
wire   [31:0] zext_ln97_4_fu_2097_p1;
wire   [31:0] p_cast45_fu_2324_p1;
wire   [31:0] zext_ln1118_5_fu_2657_p1;
wire   [31:0] zext_ln1118_fu_2666_p1;
wire   [31:0] zext_ln124_4_fu_3047_p1;
wire   [31:0] zext_ln74_fu_3301_p1;
wire   [31:0] zext_ln1116_fu_3381_p1;
wire    ap_block_pp7_stage0;
wire   [31:0] zext_ln141_fu_3441_p1;
wire  signed [31:0] sext_ln62_fu_1339_p1;
wire  signed [31:0] sext_ln52_fu_1523_p1;
wire  signed [31:0] sext_ln88_fu_1662_p1;
wire  signed [31:0] sext_ln96_fu_2028_p1;
wire  signed [31:0] sext_ln123_fu_2978_p1;
wire   [31:0] add_ln141_fu_3447_p2;
wire   [31:0] add_ln142_fu_3458_p2;
reg    ap_block_state11_io;
reg    ap_predicate_op870_writeresp_state121;
reg    ap_block_state121;
wire    ap_block_pp5_stage0_01001;
wire    ap_block_pp6_stage0_01001;
reg    ap_block_pp8_stage1_11001;
reg    ap_block_pp8_stage1_01001;
reg    ap_block_pp8_stage0_01001;
reg   [31:0] reuse_addr_reg_fu_264;
reg   [15:0] reuse_reg_fu_268;
reg   [15:0] bbuf_V_2_fu_280;
reg   [15:0] bbuf_V_2_1_fu_284;
reg   [15:0] bbuf_V_2_3_fu_288;
reg   [15:0] dbbuf_V_2_1_fu_292;
reg   [15:0] dbbuf_V_2_2_fu_296;
reg   [15:0] dbbuf_V_2_4_fu_300;
reg   [15:0] dbbuf_V_0_2_fu_304;
wire   [15:0] dbbuf_V_0_6_fu_2362_p3;
reg   [15:0] dbbuf_V_0_3_fu_308;
wire   [15:0] dbbuf_V_0_5_fu_2355_p3;
reg   [15:0] dbbuf_V_2_3_fu_312;
wire   [15:0] dbbuf_V_2_7_fu_2341_p3;
wire    ap_CS_fsm_state85;
reg   [31:0] x_Addr_A_orig;
reg   [31:0] dx_Addr_A_orig;
reg   [31:0] y_Addr_A_orig;
wire   [31:0] grp_fu_1160_p2;
wire  signed [31:0] empty_48_fu_1196_p0;
wire   [9:0] sub_ln43_fu_1200_p2;
wire   [31:0] sub_ln44_fu_1210_p2;
wire   [31:0] grp_fu_1235_p0;
wire   [31:0] grp_fu_1235_p1;
wire   [30:0] grp_fu_1251_p0;
wire   [63:0] grp_fu_1251_p1;
wire   [30:0] trunc_ln50_fu_1282_p1;
wire   [0:0] icmp_ln51_1_fu_1318_p2;
wire   [30:0] trunc_ln3_fu_1330_p4;
wire    ap_CS_fsm_state12;
wire   [3:0] tmp_5_fu_1369_p3;
wire   [4:0] zext_ln53_1_fu_1376_p1;
wire   [4:0] zext_ln53_fu_1366_p1;
wire   [4:0] sub_ln53_fu_1380_p2;
wire   [31:0] select_ln49_fu_1354_p3;
wire   [31:0] add_ln50_fu_1401_p2;
wire   [30:0] trunc_ln50_1_fu_1407_p1;
wire   [30:0] select_ln49_1_fu_1361_p3;
wire   [30:0] tmp_mid1_fu_1411_p2;
wire   [30:0] select_ln49_3_fu_1390_p3;
wire   [3:0] trunc_ln53_1_fu_1424_p1;
wire   [3:0] select_ln49_4_fu_1395_p3;
wire   [3:0] select_ln50_2_fu_1428_p3;
wire  signed [5:0] sext_ln50_fu_1386_p1;
wire   [5:0] zext_ln53_2_fu_1435_p1;
wire    ap_CS_fsm_state15;
wire   [0:0] or_ln50_fu_1456_p2;
wire   [30:0] trunc_ln51_fu_1468_p1;
wire    ap_CS_fsm_state18;
wire   [7:0] tmp_4_fu_1484_p3;
wire  signed [29:0] sext_ln53_1_fu_1491_p1;
wire  signed [29:0] sext_ln53_fu_1481_p1;
wire   [31:0] tmp_7_fu_1501_p3;
wire   [31:0] empty_55_fu_1508_p2;
wire   [30:0] trunc_ln5_fu_1513_p4;
wire   [5:0] trunc_ln53_2_fu_1533_p1;
wire   [29:0] add_ln53_1_fu_1495_p2;
wire   [29:0] zext_ln53_3_fu_1536_p1;
wire   [29:0] add_ln53_2_fu_1540_p2;
wire   [5:0] trunc_ln53_4_fu_1550_p1;
wire   [7:0] p_shl1_cast_fu_1554_p3;
wire   [7:0] trunc_ln53_3_fu_1546_p1;
wire   [31:0] l_cast_fu_1574_p1;
wire   [7:0] trunc_ln53_5_fu_1583_p1;
wire   [63:0] add_ln50_1_fu_1601_p2;
wire   [30:0] trunc_ln8_fu_1653_p4;
wire   [31:0] add_ln70_fu_1673_p2;
wire   [31:0] grp_fu_1736_p0;
wire   [31:0] grp_fu_1736_p1;
wire   [30:0] grp_fu_1748_p0;
wire   [63:0] grp_fu_1748_p1;
wire  signed [30:0] grp_fu_1760_p0;
wire  signed [30:0] grp_fu_1760_p1;
wire  signed [30:0] grp_fu_1769_p1;
wire  signed [30:0] grp_fu_1778_p0;
wire   [31:0] grp_fu_1811_p0;
wire   [31:0] grp_fu_1811_p1;
wire   [30:0] add_ln93_fu_1828_p2;
wire   [1:0] trunc_ln93_2_fu_1848_p1;
wire   [3:0] tmp_s_fu_1856_p3;
wire   [4:0] zext_ln97_1_fu_1864_p1;
wire   [4:0] zext_ln97_fu_1852_p1;
wire   [4:0] sub_ln97_fu_1868_p2;
wire   [0:0] icmp_ln95_1_fu_1884_p2;
wire   [31:0] select_ln93_fu_1834_p3;
wire   [0:0] or_ln94_fu_1901_p2;
wire   [31:0] add_ln94_fu_1895_p2;
wire   [3:0] trunc_ln97_1_fu_1918_p1;
wire   [3:0] select_ln93_3_fu_1878_p3;
wire   [3:0] select_ln94_2_fu_1922_p3;
wire  signed [5:0] sext_ln94_fu_1874_p1;
wire   [5:0] zext_ln97_2_fu_1930_p1;
wire    ap_CS_fsm_state59;
wire   [30:0] select_ln93_2_fu_1964_p3;
wire   [30:0] tmp18_fu_1976_p2;
wire   [30:0] select_ln94_1_fu_1970_p3;
wire   [7:0] tmp_6_fu_1989_p3;
wire  signed [29:0] sext_ln97_1_fu_1996_p1;
wire  signed [29:0] sext_ln97_fu_1986_p1;
wire   [31:0] tmp_8_fu_2006_p3;
wire   [31:0] empty_78_fu_2013_p2;
wire   [30:0] trunc_ln_fu_2018_p4;
wire   [5:0] trunc_ln97_2_fu_2038_p1;
wire   [29:0] add_ln97_1_fu_2000_p2;
wire   [29:0] zext_ln97_3_fu_2041_p1;
wire   [29:0] add_ln97_2_fu_2045_p2;
wire   [5:0] trunc_ln97_4_fu_2055_p1;
wire   [7:0] p_shl3_cast_fu_2059_p3;
wire   [7:0] trunc_ln97_3_fu_2051_p1;
wire   [31:0] l_1_cast_fu_2079_p1;
wire   [7:0] trunc_ln97_5_fu_2088_p1;
wire   [63:0] add_ln94_1_fu_2106_p2;
wire   [31:0] grp_fu_2125_p0;
wire   [63:0] grp_fu_2125_p1;
wire   [30:0] grp_fu_2138_p0;
wire   [31:0] grp_fu_2138_p1;
wire   [31:0] add_ln103_fu_2147_p2;
wire   [1:0] empty_79_fu_2168_p1;
wire   [30:0] add_ln103_2_fu_2189_p2;
wire   [1:0] empty_83_fu_2213_p1;
wire   [0:0] icmp_ln703_2_fu_2225_p2;
wire   [0:0] icmp_ln703_fu_2172_p2;
wire   [0:0] icmp_ln703_3_fu_2239_p2;
wire   [0:0] icmp_ln703_1_fu_2178_p2;
wire   [3:0] tmp_9_fu_2267_p3;
wire   [4:0] zext_ln1118_2_fu_2274_p1;
wire   [4:0] zext_ln1118_1_fu_2264_p1;
wire   [4:0] sub_ln1118_fu_2278_p2;
wire  signed [9:0] grp_fu_3469_p3;
wire   [9:0] empty_80_fu_2319_p2;
wire   [15:0] dbbuf_V_2_fu_2334_p3;
wire   [15:0] dbbuf_V_0_fu_2348_p3;
wire  signed [15:0] sext_ln1118_1_fu_2389_p0;
wire  signed [9:0] empty_81_fu_2402_p0;
wire   [9:0] trunc_ln107_fu_2413_p1;
wire   [9:0] tmp19_fu_2417_p2;
wire   [31:0] add_ln106_fu_2436_p2;
wire  signed [9:0] p_mid1115_fu_2459_p0;
wire   [5:0] trunc_ln727_fu_2427_p1;
wire   [0:0] icmp_ln108_1_fu_2484_p2;
wire   [5:0] trunc_ln727_1_fu_2506_p1;
wire   [5:0] select_ln106_3_fu_2476_p3;
wire   [5:0] zext_ln1118_3_fu_2529_p1;
wire  signed [5:0] add_ln1118_1_fu_2532_p2;
wire   [7:0] tmp_13_fu_2541_p3;
wire  signed [29:0] sext_ln1118_4_fu_2549_p1;
wire  signed [29:0] sext_ln1118_3_fu_2537_p1;
wire   [9:0] p_mid1121_fu_2559_p2;
wire   [0:0] or_ln107_fu_2569_p2;
wire   [9:0] tmp19_mid1_fu_2581_p2;
wire   [9:0] select_ln106_1_fu_2524_p3;
wire   [29:0] add_ln1118_2_fu_2553_p2;
wire   [29:0] zext_ln1118_4_fu_2591_p1;
wire   [29:0] add_ln1118_3_fu_2594_p2;
wire   [9:0] p_mid1100_fu_2585_p2;
wire   [9:0] select_ln106_4_fu_2563_p3;
wire   [31:0] select_ln107_fu_2573_p3;
wire   [7:0] p_shl7_cast_fu_2640_p3;
wire   [7:0] add_ln1118_4_fu_2647_p2;
wire  signed [9:0] grp_fu_3477_p3;
(* use_dsp48 = "no" *) wire   [9:0] add_ln1118_fu_2662_p2;
wire   [15:0] lhs_2_fu_2697_p3;
wire  signed [28:0] grp_fu_3484_p3;
wire  signed [28:0] grp_fu_3492_p3;
wire  signed [30:0] grp_fu_2760_p0;
wire   [30:0] add_ln120_fu_2774_p2;
wire   [0:0] icmp_ln122_fu_2797_p2;
wire   [0:0] or_ln121_fu_2809_p2;
wire   [3:0] tmp_10_fu_2841_p3;
wire   [4:0] zext_ln124_1_fu_2848_p1;
wire   [4:0] zext_ln124_fu_2838_p1;
wire   [4:0] sub_ln124_fu_2852_p2;
wire   [31:0] select_ln120_fu_2827_p3;
wire   [31:0] add_ln121_fu_2868_p2;
wire   [3:0] trunc_ln124_1_fu_2878_p1;
wire   [3:0] select_ln120_3_fu_2862_p3;
wire   [3:0] select_ln121_2_fu_2882_p3;
wire  signed [5:0] sext_ln121_fu_2858_p1;
wire   [5:0] zext_ln124_2_fu_2889_p1;
wire   [30:0] select_ln120_2_fu_2914_p3;
wire   [30:0] tmp20_fu_2926_p2;
wire   [30:0] select_ln121_1_fu_2920_p3;
wire   [7:0] tmp_11_fu_2939_p3;
wire  signed [29:0] sext_ln124_1_fu_2946_p1;
wire  signed [29:0] sext_ln124_fu_2936_p1;
wire   [31:0] tmp_12_fu_2956_p3;
wire   [31:0] empty_92_fu_2963_p2;
wire   [30:0] trunc_ln1_fu_2968_p4;
wire   [5:0] trunc_ln124_2_fu_2988_p1;
wire   [29:0] add_ln124_1_fu_2950_p2;
wire   [29:0] zext_ln124_3_fu_2991_p1;
wire   [29:0] add_ln124_2_fu_2995_p2;
wire   [5:0] trunc_ln124_4_fu_3005_p1;
wire   [7:0] p_shl5_cast_fu_3009_p3;
wire   [7:0] trunc_ln124_3_fu_3001_p1;
wire   [31:0] l_2_cast_fu_3029_p1;
wire   [7:0] trunc_ln124_5_fu_3038_p1;
wire   [7:0] add_ln124_4_fu_3042_p2;
wire   [63:0] add_ln121_1_fu_3057_p2;
wire   [1:0] tmp_3_fu_3085_p4;
wire   [31:0] grp_fu_3108_p0;
wire   [31:0] grp_fu_3108_p1;
wire   [31:0] grp_fu_3120_p0;
wire   [63:0] grp_fu_3120_p1;
wire  signed [9:0] empty_60_fu_3151_p0;
wire   [1:0] tmp_1_fu_3156_p4;
wire   [9:0] trunc_ln72_fu_3174_p1;
wire   [31:0] add_ln71_fu_3188_p2;
wire   [0:0] icmp_ln73_1_fu_3227_p2;
wire   [31:0] select_ln71_fu_3199_p3;
wire   [31:0] add_ln72_fu_3239_p2;
wire   [9:0] select_ln71_2_fu_3219_p3;
wire   [9:0] p_mid132_fu_3270_p2;
wire   [9:0] select_ln71_3_fu_3265_p3;
wire   [0:0] or_ln72_fu_3281_p2;
wire  signed [9:0] grp_fu_3500_p3;
wire   [9:0] trunc_ln75_fu_3316_p1;
wire   [9:0] tmp17_fu_3320_p2;
wire   [63:0] add_ln72_1_fu_3335_p2;
wire   [9:0] empty_64_fu_3348_p2;
wire   [31:0] fw_cast_fu_3363_p1;
wire   [9:0] trunc_ln77_fu_3372_p1;
wire   [9:0] add_ln1116_fu_3376_p2;
wire    ap_CS_fsm_state143;
wire   [30:0] trunc_ln4_fu_3404_p4;
wire   [30:0] trunc_ln140_1_fu_3417_p4;
wire  signed [9:0] grp_fu_3469_p0;
wire   [9:0] grp_fu_3469_p2;
wire  signed [9:0] grp_fu_3477_p0;
wire  signed [15:0] grp_fu_3484_p1;
wire   [28:0] grp_fu_3484_p2;
wire  signed [15:0] grp_fu_3492_p1;
wire   [28:0] grp_fu_3492_p2;
wire  signed [9:0] grp_fu_3500_p0;
wire   [9:0] grp_fu_3500_p2;
reg    grp_fu_2760_ce;
reg    grp_fu_3097_ce;
wire    ap_CS_fsm_state156;
reg   [127:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp8;
wire    ap_enable_pp8;
wire   [63:0] grp_fu_1235_p00;
wire   [63:0] grp_fu_1235_p10;
wire   [94:0] grp_fu_1251_p00;
wire   [94:0] grp_fu_1251_p10;
wire   [63:0] grp_fu_1736_p00;
wire   [63:0] grp_fu_1736_p10;
wire   [94:0] grp_fu_1748_p00;
wire   [94:0] grp_fu_1748_p10;
wire   [63:0] grp_fu_1811_p10;
wire   [95:0] grp_fu_2125_p00;
wire   [95:0] grp_fu_2125_p10;
wire   [62:0] grp_fu_2138_p00;
wire   [62:0] grp_fu_2138_p10;
wire   [63:0] grp_fu_3108_p00;
wire   [63:0] grp_fu_3108_p10;
wire   [95:0] grp_fu_3120_p00;
wire   [95:0] grp_fu_3120_p10;
reg    ap_condition_4371;
reg    ap_condition_4375;
reg    ap_condition_2250;
reg    ap_condition_2262;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 128'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp8_iter1 = 1'b0;
#0 ap_enable_reg_pp8_iter4 = 1'b0;
#0 ap_enable_reg_pp8_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp8_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp8_iter3 = 1'b0;
end

conv_combined_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .wt(wt),
    .dwt(dwt),
    .b(b),
    .db(db),
    .debug_x(debug_x),
    .debug_dx(debug_dx),
    .F(F),
    .C(C),
    .H(H),
    .W(W),
    .FH(FH),
    .FW(FW),
    .fwprop(fwprop),
    .debugip(debugip),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

conv_combined_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(gmem_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(gmem_AWLEN),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(gmem_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

conv_combined_gmem2_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM2_CACHE_VALUE ))
gmem2_m_axi_U(
    .AWVALID(m_axi_gmem2_AWVALID),
    .AWREADY(m_axi_gmem2_AWREADY),
    .AWADDR(m_axi_gmem2_AWADDR),
    .AWID(m_axi_gmem2_AWID),
    .AWLEN(m_axi_gmem2_AWLEN),
    .AWSIZE(m_axi_gmem2_AWSIZE),
    .AWBURST(m_axi_gmem2_AWBURST),
    .AWLOCK(m_axi_gmem2_AWLOCK),
    .AWCACHE(m_axi_gmem2_AWCACHE),
    .AWPROT(m_axi_gmem2_AWPROT),
    .AWQOS(m_axi_gmem2_AWQOS),
    .AWREGION(m_axi_gmem2_AWREGION),
    .AWUSER(m_axi_gmem2_AWUSER),
    .WVALID(m_axi_gmem2_WVALID),
    .WREADY(m_axi_gmem2_WREADY),
    .WDATA(m_axi_gmem2_WDATA),
    .WSTRB(m_axi_gmem2_WSTRB),
    .WLAST(m_axi_gmem2_WLAST),
    .WID(m_axi_gmem2_WID),
    .WUSER(m_axi_gmem2_WUSER),
    .ARVALID(m_axi_gmem2_ARVALID),
    .ARREADY(m_axi_gmem2_ARREADY),
    .ARADDR(m_axi_gmem2_ARADDR),
    .ARID(m_axi_gmem2_ARID),
    .ARLEN(m_axi_gmem2_ARLEN),
    .ARSIZE(m_axi_gmem2_ARSIZE),
    .ARBURST(m_axi_gmem2_ARBURST),
    .ARLOCK(m_axi_gmem2_ARLOCK),
    .ARCACHE(m_axi_gmem2_ARCACHE),
    .ARPROT(m_axi_gmem2_ARPROT),
    .ARQOS(m_axi_gmem2_ARQOS),
    .ARREGION(m_axi_gmem2_ARREGION),
    .ARUSER(m_axi_gmem2_ARUSER),
    .RVALID(m_axi_gmem2_RVALID),
    .RREADY(m_axi_gmem2_RREADY),
    .RDATA(m_axi_gmem2_RDATA),
    .RLAST(m_axi_gmem2_RLAST),
    .RID(m_axi_gmem2_RID),
    .RUSER(m_axi_gmem2_RUSER),
    .RRESP(m_axi_gmem2_RRESP),
    .BVALID(m_axi_gmem2_BVALID),
    .BREADY(m_axi_gmem2_BREADY),
    .BRESP(m_axi_gmem2_BRESP),
    .BID(m_axi_gmem2_BID),
    .BUSER(m_axi_gmem2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem2_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem2_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem2_RDATA),
    .I_RID(gmem2_RID),
    .I_RUSER(gmem2_RUSER),
    .I_RRESP(gmem2_RRESP),
    .I_RLAST(gmem2_RLAST),
    .I_AWVALID(gmem2_AWVALID),
    .I_AWREADY(gmem2_AWREADY),
    .I_AWADDR(gmem2_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem2_WVALID),
    .I_WREADY(gmem2_WREADY),
    .I_WDATA(gmem2_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(gmem2_BVALID),
    .I_BREADY(gmem2_BREADY),
    .I_BRESP(gmem2_BRESP),
    .I_BID(gmem2_BID),
    .I_BUSER(gmem2_BUSER)
);

conv_combined_wbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
wbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(wbuf_V_address0),
    .ce0(wbuf_V_ce0),
    .we0(wbuf_V_we0),
    .d0(gmem_addr_2_read_reg_3879),
    .q0(wbuf_V_q0)
);

conv_combined_dwbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
dwbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dwbuf_V_address0),
    .ce0(dwbuf_V_ce0),
    .we0(dwbuf_V_we0),
    .d0(dwbuf_V_d0),
    .address1(dwbuf_V_address1),
    .ce1(dwbuf_V_ce1),
    .q1(dwbuf_V_q1)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1235_p0),
    .din1(grp_fu_1235_p1),
    .ce(1'b1),
    .dout(grp_fu_1235_p2)
);

conv_combined_mul_31ns_64ns_95_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
mul_31ns_64ns_95_5_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1251_p0),
    .din1(grp_fu_1251_p1),
    .ce(1'b1),
    .dout(grp_fu_1251_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(i_reg_636),
    .din1(trunc_ln49_1_reg_3707),
    .ce(1'b1),
    .dout(grp_fu_1272_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(add_ln49_reg_3753),
    .din1(trunc_ln49_1_reg_3707),
    .ce(1'b1),
    .dout(grp_fu_1350_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln50_1_reg_3817),
    .din1(trunc_ln49_reg_3702),
    .ce(1'b1),
    .dout(grp_fu_1452_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp11_reg_3844),
    .din1(empty_50_reg_3713),
    .ce(1'b1),
    .dout(grp_fu_1477_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1736_p0),
    .din1(grp_fu_1736_p1),
    .ce(1'b1),
    .dout(grp_fu_1736_p2)
);

conv_combined_mul_31ns_64ns_95_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
mul_31ns_64ns_95_5_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1748_p0),
    .din1(grp_fu_1748_p1),
    .ce(1'b1),
    .dout(grp_fu_1748_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1760_p0),
    .din1(grp_fu_1760_p1),
    .ce(1'b1),
    .dout(grp_fu_1760_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(empty_71_reg_4034),
    .din1(grp_fu_1769_p1),
    .ce(1'b1),
    .dout(grp_fu_1769_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1778_p0),
    .din1(empty_71_reg_4034),
    .ce(1'b1),
    .dout(grp_fu_1778_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1811_p0),
    .din1(grp_fu_1811_p1),
    .ce(1'b1),
    .dout(grp_fu_1811_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln93_1_reg_4134),
    .din1(empty_72_reg_4052),
    .ce(1'b1),
    .dout(grp_fu_1952_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln94_1_reg_4151),
    .din1(empty_71_reg_4034),
    .ce(1'b1),
    .dout(grp_fu_1956_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln95_reg_4167),
    .din1(trunc_ln93_reg_4022),
    .ce(1'b1),
    .dout(grp_fu_1960_p2)
);

conv_combined_mul_32ns_64ns_96_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 96 ))
mul_32ns_64ns_96_5_1_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2125_p0),
    .din1(grp_fu_2125_p1),
    .ce(1'b1),
    .dout(grp_fu_2125_p2)
);

conv_combined_mul_31ns_32ns_63_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_31ns_32ns_63_2_1_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2138_p0),
    .din1(grp_fu_2138_p1),
    .ce(1'b1),
    .dout(grp_fu_2138_p2)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U18(
    .din0(grp_fu_3469_p3),
    .din1(reg_1188),
    .dout(empty_85_fu_2288_p2)
);

conv_combined_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U19(
    .din0(dbbuf_V_0_2_fu_304),
    .din1(dbbuf_V_0_3_fu_308),
    .din2(dbbuf_V_2_3_fu_312),
    .din3(select_ln103_2_reg_4306),
    .dout(tmp_2_fu_2293_p5)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U20(
    .din0(empty_81_fu_2402_p0),
    .din1(empty_48_reg_3639),
    .dout(empty_81_fu_2402_p2)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U21(
    .din0(p_mid1115_fu_2459_p0),
    .din1(empty_48_reg_3639),
    .dout(p_mid1115_fu_2459_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2760_p0),
    .din1(empty_71_reg_4034),
    .ce(grp_fu_2760_ce),
    .dout(grp_fu_2760_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln120_1_reg_4592),
    .din1(empty_72_reg_4052),
    .ce(1'b1),
    .dout(grp_fu_2834_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln122_reg_4617),
    .din1(trunc_ln93_reg_4022),
    .ce(1'b1),
    .dout(grp_fu_2906_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln121_1_reg_4622),
    .din1(empty_71_reg_4034),
    .ce(1'b1),
    .dout(grp_fu_2910_p2)
);

conv_combined_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U26(
    .din0(dbbuf_V_0_2_fu_304),
    .din1(dbbuf_V_0_3_fu_308),
    .din2(dbbuf_V_2_3_fu_312),
    .din3(tmp_3_fu_3085_p4),
    .dout(tmp_3_fu_3085_p5)
);

conv_combined_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U27(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(C_read_reg_3582),
    .din1(W_read_reg_3566),
    .ce(grp_fu_3097_ce),
    .dout(grp_fu_3097_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U28(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3108_p0),
    .din1(grp_fu_3108_p1),
    .ce(1'b1),
    .dout(grp_fu_3108_p2)
);

conv_combined_mul_32ns_64ns_96_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 96 ))
mul_32ns_64ns_96_5_1_U29(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3120_p0),
    .din1(grp_fu_3120_p1),
    .ce(1'b1),
    .dout(grp_fu_3120_p2)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U30(
    .din0(empty_60_fu_3151_p0),
    .din1(outH_reg_3647),
    .dout(empty_60_fu_3151_p2)
);

conv_combined_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U31(
    .din0(bbuf_V_0_2_reg_730),
    .din1(bbuf_V_1_2_reg_718),
    .din2(bbuf_V_2_2_reg_706),
    .din3(tmp_1_fu_3156_p4),
    .dout(tmp_1_fu_3156_p5)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U32(
    .din0(trunc_ln71_reg_4803),
    .din1(empty_48_reg_3639),
    .dout(mul_ln71_fu_3297_p2)
);

conv_combined_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U33(
    .din0(empty_63_reg_4863),
    .din1(trunc_ln70_reg_4742),
    .dout(empty_64_fu_3348_p2)
);

conv_combined_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U34(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp21_reg_4902),
    .din1(H_read_reg_3576),
    .ce(1'b1),
    .dout(grp_fu_3392_p2)
);

conv_combined_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3469_p0),
    .din1(outH_reg_3647),
    .din2(grp_fu_3469_p2),
    .ce(1'b1),
    .dout(grp_fu_3469_p3)
);

conv_combined_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3477_p0),
    .din1(trunc_ln103_reg_4258),
    .din2(trunc_ln105_reg_4362),
    .ce(1'b1),
    .dout(grp_fu_3477_p3)
);

conv_combined_mac_muladd_16s_16s_29ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
mac_muladd_16s_16s_29ns_29_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(wbuf_V_q0),
    .din1(grp_fu_3484_p1),
    .din2(grp_fu_3484_p2),
    .ce(1'b1),
    .dout(grp_fu_3484_p3)
);

conv_combined_mac_muladd_16s_16s_29ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
mac_muladd_16s_16s_29ns_29_4_1_U38(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(x_Dout_A),
    .din1(grp_fu_3492_p1),
    .din2(grp_fu_3492_p2),
    .ce(1'b1),
    .dout(grp_fu_3492_p3)
);

conv_combined_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U39(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3500_p0),
    .din1(reg_1188),
    .din2(grp_fu_3500_p2),
    .ce(1'b1),
    .dout(grp_fu_3500_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state28))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state28)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state28);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp2_flush_enable)) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state46)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state46)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state70))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state70)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state70);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state88) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state86)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state88)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state88);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b0)) | ((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end else if ((1'b1 == ap_CS_fsm_state86)) begin
            ap_enable_reg_pp4_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state107) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state106))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state107)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state107);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state106))) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state115))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if (((icmp_ln120_reg_4575 == 1'd1) & (1'b0 == ap_block_state100_io) & (1'b1 == ap_CS_fsm_state100))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state115))) begin
            ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state115);
        end else if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end else if (((icmp_ln120_reg_4575 == 1'd1) & (1'b0 == ap_block_state100_io) & (1'b1 == ap_CS_fsm_state100))) begin
            ap_enable_reg_pp6_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp7_flush_enable)) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state136) & (cmp99323_reg_4738 == 1'd1))) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end else if (((1'b1 == ap_CS_fsm_state136) & (cmp99323_reg_4738 == 1'd1))) begin
            ap_enable_reg_pp7_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage0_subdone) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b1 == ap_condition_pp8_exit_iter0_state146))) begin
            ap_enable_reg_pp8_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state145) & (icmp_ln140_fu_3396_p2 == 1'd1))) begin
            ap_enable_reg_pp8_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage1_subdone) & (1'b1 == ap_CS_fsm_pp8_stage1))) begin
            ap_enable_reg_pp8_iter1 <= ap_enable_reg_pp8_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage1_subdone) & (1'b1 == ap_CS_fsm_pp8_stage1))) begin
            ap_enable_reg_pp8_iter2 <= ap_enable_reg_pp8_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage1_subdone) & (1'b1 == ap_CS_fsm_pp8_stage1))) begin
            ap_enable_reg_pp8_iter3 <= ap_enable_reg_pp8_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage1_subdone) & (1'b1 == ap_CS_fsm_pp8_stage1))) begin
            ap_enable_reg_pp8_iter4 <= ap_enable_reg_pp8_iter3;
        end else if (((1'b1 == ap_CS_fsm_state145) & (icmp_ln140_fu_3396_p2 == 1'd1))) begin
            ap_enable_reg_pp8_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4404 == 1'd0))) begin
        c_1_reg_878 <= select_ln106_2_reg_4427;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        c_1_reg_878 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state135) & (icmp_ln75_fu_3311_p2 == 1'd1))) begin
        c_reg_1036 <= select_ln71_1_reg_4798;
    end else if (((1'b1 == ap_CS_fsm_state129) & (icmp_ln70_fu_3138_p2 == 1'd0))) begin
        c_reg_1036 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) & (icmp_ln93_fu_1793_p2 == 1'd1))) begin
        dbbuf_V_0_2_fu_304 <= dbbuf_V_2_1_load_reg_3979;
    end else if (((1'b1 == ap_CS_fsm_state84) & (icmp_ln105_fu_2310_p2 == 1'd1) & (cmp176393_reg_4125 == 1'd1))) begin
        dbbuf_V_0_2_fu_304 <= dbbuf_V_0_6_fu_2362_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) & (icmp_ln93_fu_1793_p2 == 1'd1))) begin
        dbbuf_V_0_3_fu_308 <= dbbuf_V_2_2_load_reg_3984;
    end else if (((1'b1 == ap_CS_fsm_state84) & (icmp_ln105_fu_2310_p2 == 1'd1) & (cmp176393_reg_4125 == 1'd1))) begin
        dbbuf_V_0_3_fu_308 <= dbbuf_V_0_5_fu_2355_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) & (icmp_ln93_fu_1793_p2 == 1'd1))) begin
        dbbuf_V_2_3_fu_312 <= dbbuf_V_2_4_load_reg_3989;
    end else if (((1'b1 == ap_CS_fsm_state84) & (icmp_ln105_fu_2310_p2 == 1'd1) & (cmp176393_reg_4125 == 1'd1))) begin
        dbbuf_V_2_3_fu_312 <= dbbuf_V_2_7_fu_2341_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state83) & (cmp176393_reg_4125 == 1'd1))) begin
        dbbuf_V_2_8_reg_868 <= tmp_2_fu_2293_p5;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        dbbuf_V_2_8_reg_868 <= add_ln703_1_fu_2745_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        empty_62_reg_1082 <= tmp_1_reg_4772;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        empty_62_reg_1082 <= empty_67_reg_1126;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (cmp99323_reg_4738 == 1'd1))) begin
        empty_65_reg_1114 <= empty_62_reg_1082;
    end else if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter2 == 1'b1) & (icmp_ln76_reg_4888_pp7_iter1_reg == 1'd0))) begin
        empty_65_reg_1114 <= add_ln703_fu_3386_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (cmp99323_reg_4738 == 1'd0))) begin
        empty_67_reg_1126 <= empty_62_reg_1082;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        empty_67_reg_1126 <= empty_65_reg_1114;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) & ((icmp_ln105_fu_2310_p2 == 1'd1) | (cmp176393_reg_4125 == 1'd0)))) begin
        f_1_reg_834 <= select_ln103_1_reg_4296;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        f_1_reg_834 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        f_reg_1014 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state130) & (icmp_ln71_fu_3183_p2 == 1'd1))) begin
        f_reg_1014 <= add_ln70_2_reg_4757;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4404 == 1'd0))) begin
        fh_1_reg_912 <= select_ln107_3_reg_4479;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        fh_1_reg_912 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        fh_reg_1092 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        fh_reg_1092 <= add_ln75_reg_4855;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4404 == 1'd0))) begin
        fw_1_reg_923 <= add_ln108_reg_4494;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        fw_1_reg_923 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (cmp99323_reg_4738 == 1'd1))) begin
        fw_reg_1103 <= 31'd0;
    end else if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln76_fu_3367_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        fw_reg_1103 <= add_ln76_fu_3357_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) & ((icmp_ln105_fu_2310_p2 == 1'd1) | (cmp176393_reg_4125 == 1'd0)))) begin
        h_1_reg_845 <= add_ln104_fu_2384_p2;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        h_1_reg_845 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state135) & (icmp_ln75_fu_3311_p2 == 1'd1))) begin
        h_reg_1059 <= select_ln72_3_reg_4824;
    end else if (((1'b1 == ap_CS_fsm_state129) & (icmp_ln70_fu_3138_p2 == 1'd0))) begin
        h_reg_1059 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln62_fu_1620_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_1_reg_695 <= add_ln62_fu_1614_p2;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        i_1_reg_695 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln88_fu_1697_p2 == 1'd0))) begin
        i_2_reg_742 <= add_ln88_fu_1691_p2;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        i_2_reg_742 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        i_3_reg_776 <= select_ln93_1_reg_4134;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        i_3_reg_776 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln103_fu_2184_p2 == 1'd1))) begin
        i_4_reg_958 <= 31'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147408_reg_4048 == 1'd1)) & (1'b1 == ap_CS_fsm_state114))) begin
        i_4_reg_958 <= select_ln120_1_reg_4592;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_4575 == 1'd1) & (1'b0 == ap_block_state100_io) & (1'b1 == ap_CS_fsm_state100))) begin
        i_5_reg_1003 <= 31'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln131_fu_3076_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        i_5_reg_1003 <= add_ln131_fu_3070_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state145) & (icmp_ln140_fu_3396_p2 == 1'd1))) begin
        i_6_reg_1139 <= 31'd0;
    end else if (((icmp_ln140_1_reg_4937 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        i_6_reg_1139 <= add_ln140_reg_4932;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_reg_636 <= select_ln49_2_reg_3768;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_reg_636 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4404 == 1'd0))) begin
        indvar_flatten104_reg_901 <= select_ln107_4_reg_4499;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        indvar_flatten104_reg_901 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4404 == 1'd0))) begin
        indvar_flatten133_reg_890 <= add_ln106_1_reg_4394;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        indvar_flatten133_reg_890 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) & ((icmp_ln105_fu_2310_p2 == 1'd1) | (cmp176393_reg_4125 == 1'd0)))) begin
        indvar_flatten144_reg_823 <= add_ln103_4_reg_4283;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        indvar_flatten144_reg_823 <= 63'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln103_fu_2184_p2 == 1'd1))) begin
        indvar_flatten155_reg_969 <= 64'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147408_reg_4048 == 1'd1)) & (1'b1 == ap_CS_fsm_state114))) begin
        indvar_flatten155_reg_969 <= select_ln121_4_fu_3063_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln103_fu_2184_p2 == 1'd1))) begin
        indvar_flatten178_reg_935 <= 95'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147408_reg_4048 == 1'd1)) & (1'b1 == ap_CS_fsm_state114))) begin
        indvar_flatten178_reg_935 <= add_ln120_1_reg_4560;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten22_reg_625 <= add_ln49_1_reg_3728;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten22_reg_625 <= 95'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state135) & (icmp_ln75_fu_3311_p2 == 1'd1))) begin
        indvar_flatten36_reg_1047 <= select_ln72_4_fu_3341_p3;
    end else if (((1'b1 == ap_CS_fsm_state129) & (icmp_ln70_fu_3138_p2 == 1'd0))) begin
        indvar_flatten36_reg_1047 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state135) & (icmp_ln75_fu_3311_p2 == 1'd1))) begin
        indvar_flatten57_reg_1025 <= add_ln71_1_reg_4778;
    end else if (((1'b1 == ap_CS_fsm_state129) & (icmp_ln70_fu_3138_p2 == 1'd0))) begin
        indvar_flatten57_reg_1025 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        indvar_flatten68_reg_788 <= select_ln94_4_fu_2112_p3;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        indvar_flatten68_reg_788 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        indvar_flatten91_reg_765 <= add_ln93_1_reg_4080;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        indvar_flatten91_reg_765 <= 95'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten_reg_648 <= select_ln50_4_fu_1607_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten_reg_648 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        j_1_reg_753 <= select_ln94_3_reg_4162;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        j_1_reg_753 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln103_fu_2184_p2 == 1'd1))) begin
        j_2_reg_946 <= 32'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147408_reg_4048 == 1'd1)) & (1'b1 == ap_CS_fsm_state114))) begin
        j_2_reg_946 <= select_ln121_3_reg_4633;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        j_reg_660 <= select_ln50_3_reg_3828;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        j_reg_660 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        k_1_reg_800 <= add_ln95_fu_2101_p2;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        k_1_reg_800 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln103_fu_2184_p2 == 1'd1))) begin
        k_2_reg_981 <= 32'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp147408_reg_4048 == 1'd1)) & (1'b1 == ap_CS_fsm_state114))) begin
        k_2_reg_981 <= add_ln122_fu_3052_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        k_reg_672 <= add_ln51_fu_1596_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_reg_672 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        l_1_reg_812 <= 31'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln96_fu_2083_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        l_1_reg_812 <= add_ln96_fu_2073_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state106))) begin
        l_2_reg_992 <= 31'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln123_fu_3033_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        l_2_reg_992 <= add_ln123_fu_3023_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        l_reg_684 <= 31'd0;
    end else if (((icmp_ln52_fu_1578_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        l_reg_684 <= add_ln52_fu_1568_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) & (icmp_ln105_fu_2310_p2 == 1'd0) & (cmp176393_reg_4125 == 1'd1))) begin
        reuse_addr_reg_fu_264 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln106_reg_4404_pp4_iter1_reg == 1'd0))) begin
        reuse_addr_reg_fu_264 <= zext_ln1118_fu_2666_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        reuse_reg_fu_268 <= 16'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1) & (icmp_ln106_reg_4404_pp4_iter3_reg == 1'd0))) begin
        reuse_reg_fu_268 <= {{grp_fu_3484_p3[28:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state83) & (cmp176393_reg_4125 == 1'd1))) begin
        w_1_reg_857 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        w_1_reg_857 <= add_ln105_reg_4354;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state135) & (icmp_ln75_fu_3311_p2 == 1'd1))) begin
        w_reg_1070 <= add_ln73_fu_3330_p2;
    end else if (((1'b1 == ap_CS_fsm_state129) & (icmp_ln70_fu_3138_p2 == 1'd0))) begin
        w_reg_1070 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        C_read_reg_3582 <= C;
        FH_read_reg_3552 <= FH;
        FW_read_reg_3531 <= FW;
        F_read_reg_3593 <= F;
        H_read_reg_3576 <= H;
        W_read_reg_3566 <= W;
        b_read_reg_3618 <= b;
        db_read_reg_3613 <= db;
        debug_dx_read_reg_3603 <= debug_dx;
        debug_x_read_reg_3608 <= debug_x;
        debugip_read_reg_3523 <= debugip;
        dwt_read_reg_3623 <= dwt;
        empty_48_reg_3639 <= empty_48_fu_1196_p1;
        empty_reg_3634 <= empty_fu_1192_p1;
        fwprop_read_reg_3527 <= fwprop;
        wt_read_reg_3629 <= wt;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        add_ln103_4_reg_4283 <= add_ln103_4_fu_2162_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) & (cmp176393_reg_4125 == 1'd1))) begin
        add_ln105_reg_4354 <= add_ln105_fu_2304_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        add_ln106_1_reg_4394 <= add_ln106_1_fu_2407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln106_fu_2431_p2 == 1'd0))) begin
        add_ln107_2_reg_4459 <= add_ln107_2_fu_2518_p2;
        add_ln107_reg_4444 <= add_ln107_fu_2496_p2;
        icmp_ln107_reg_4408 <= icmp_ln107_fu_2442_p2;
        p_mid1115_reg_4421 <= p_mid1115_fu_2459_p2;
        select_ln106_5_reg_4437 <= select_ln106_5_fu_2489_p3;
        select_ln106_reg_4416 <= select_ln106_fu_2447_p3;
        select_ln107_1_reg_4454 <= select_ln107_1_fu_2510_p3;
        trunc_ln106_2_reg_4432 <= trunc_ln106_2_fu_2472_p1;
        trunc_ln107_1_reg_4449 <= trunc_ln107_1_fu_2502_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4404 == 1'd0))) begin
        add_ln108_reg_4494 <= add_ln108_fu_2628_p2;
        select_ln107_3_reg_4479 <= select_ln107_3_fu_2615_p3;
        select_ln107_4_reg_4499 <= select_ln107_4_fu_2634_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln106_reg_4404 == 1'd0))) begin
        add_ln1118_5_reg_4504 <= add_ln1118_5_fu_2652_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        add_ln120_1_reg_4560 <= add_ln120_1_fu_2750_p2;
        icmp_ln120_reg_4575 <= icmp_ln120_fu_2769_p2;
        trunc_ln124_reg_4570 <= trunc_ln124_fu_2765_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp147408_reg_4048 == 1'd1) & (1'b1 == ap_CS_fsm_state105))) begin
        add_ln124_3_reg_4664 <= add_ln124_3_fu_3017_p2;
        gmem_addr_4_reg_4658 <= sext_ln123_fu_2978_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        add_ln124_reg_4627 <= add_ln124_fu_2893_p2;
        select_ln121_3_reg_4633 <= select_ln121_3_fu_2899_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        add_ln140_reg_4932 <= add_ln140_fu_3430_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln49_1_reg_3728 <= add_ln49_1_fu_1266_p2;
        icmp_ln49_1_reg_3733 <= icmp_ln49_1_fu_1277_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln49_1_reg_3733 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        add_ln49_reg_3753 <= add_ln49_fu_1295_p2;
        icmp_ln50_reg_3758 <= icmp_ln50_fu_1301_p2;
        select_ln49_2_reg_3768 <= select_ln49_2_fu_1306_p3;
        select_ln49_5_reg_3779 <= select_ln49_5_fu_1323_p3;
        trunc_ln49_2_reg_3773 <= trunc_ln49_2_fu_1314_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp57438_reg_3698 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        add_ln53_3_reg_3860 <= add_ln53_3_fu_1562_p2;
        gmem_addr_2_reg_3854 <= sext_ln52_fu_1523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_1578_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln53_4_reg_3874 <= add_ln53_4_fu_1587_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln53_4_reg_3874_pp0_iter1_reg <= add_ln53_4_reg_3874;
        icmp_ln52_reg_3870 <= icmp_ln52_fu_1578_p2;
        icmp_ln52_reg_3870_pp0_iter1_reg <= icmp_ln52_reg_3870;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln53_reg_3822 <= add_ln53_fu_1439_p2;
        select_ln50_1_reg_3817 <= select_ln50_1_fu_1417_p3;
        select_ln50_3_reg_3828 <= select_ln50_3_fu_1445_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state129)) begin
        add_ln70_2_reg_4757 <= add_ln70_2_fu_3132_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        add_ln71_1_reg_4778 <= add_ln71_1_fu_3168_p2;
        empty_61_reg_4783 <= empty_61_fu_3178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        add_ln75_reg_4855 <= add_ln75_fu_3305_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (cmp99323_reg_4738 == 1'd1))) begin
        add_ln77_reg_4878 <= add_ln77_fu_3352_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        add_ln93_1_reg_4080 <= add_ln93_1_fu_1787_p2;
        empty_73_reg_4085 <= grp_fu_1778_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp147408_reg_4048 == 1'd1) & (1'b1 == ap_CS_fsm_state62))) begin
        add_ln97_3_reg_4198 <= add_ln97_3_fu_2067_p2;
        gmem_addr_3_reg_4192 <= sext_ln96_fu_2028_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln96_fu_2083_p2 == 1'd0))) begin
        add_ln97_4_reg_4212 <= add_ln97_4_fu_2092_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln97_4_reg_4212_pp3_iter1_reg <= add_ln97_4_reg_4212;
        icmp_ln96_reg_4208 <= icmp_ln96_fu_2083_p2;
        icmp_ln96_reg_4208_pp3_iter1_reg <= icmp_ln96_reg_4208;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        add_ln97_reg_4156 <= add_ln97_fu_1934_p2;
        select_ln93_1_reg_4134 <= select_ln93_1_fu_1841_p3;
        select_ln93_4_reg_4140 <= select_ln93_4_fu_1889_p3;
        select_ln94_3_reg_4162 <= select_ln94_3_fu_1940_p3;
        select_ln94_reg_4145 <= select_ln94_fu_1906_p3;
        trunc_ln94_1_reg_4151 <= trunc_ln94_1_fu_1914_p1;
        trunc_ln95_reg_4167 <= trunc_ln95_fu_1948_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln106_reg_4404_pp4_iter1_reg == 1'd0))) begin
        addr_cmp_reg_4535 <= addr_cmp_fu_2679_p2;
        dx_addr_1_reg_4530 <= zext_ln1118_fu_2666_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln49_reg_3663 == 1'd1) & (1'b0 == ap_block_state40_io) & (1'b1 == ap_CS_fsm_state40))) begin
        bbuf_V_0_2_reg_730 <= bbuf_V_2_load_reg_3907;
        bbuf_V_1_2_reg_718 <= bbuf_V_2_1_load_reg_3912;
        bbuf_V_2_2_reg_706 <= bbuf_V_2_3_load_reg_3917;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln63_reg_3903 == 2'd1) & (icmp_ln62_reg_3899 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        bbuf_V_2_1_fu_284 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        bbuf_V_2_1_load_reg_3912 <= bbuf_V_2_1_fu_284;
        bbuf_V_2_3_load_reg_3917 <= bbuf_V_2_3_fu_288;
        bbuf_V_2_load_reg_3907 <= bbuf_V_2_fu_280;
    end
end

always @ (posedge ap_clk) begin
    if ((~(trunc_ln63_reg_3903 == 2'd1) & ~(trunc_ln63_reg_3903 == 2'd0) & (icmp_ln62_reg_3899 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        bbuf_V_2_3_fu_288 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln63_reg_3903 == 2'd0) & (icmp_ln62_reg_3899 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        bbuf_V_2_fu_280 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        bound109_reg_4268 <= grp_fu_2125_p2;
        bound138_reg_4273 <= grp_fu_2138_p2;
        icmp_ln108_reg_4278 <= icmp_ln108_fu_2157_p2;
        sub_ln103_reg_4263 <= sub_ln103_fu_2152_p2;
        trunc_ln103_reg_4258 <= trunc_ln103_fu_2144_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        bound27_reg_4722 <= grp_fu_3108_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        bound41_reg_4752 <= grp_fu_3120_p2;
        cmp99323_reg_4738 <= grp_fu_1150_p2;
        trunc_ln70_1_reg_4747 <= trunc_ln70_1_fu_3129_p1;
        trunc_ln70_reg_4742 <= trunc_ln70_fu_3126_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        bound5_reg_3718 <= grp_fu_1251_p2;
        cmp57438_reg_3698 <= grp_fu_1150_p2;
        empty_50_reg_3713 <= empty_50_fu_1263_p1;
        icmp_ln51_reg_3723 <= grp_fu_1155_p2;
        trunc_ln49_1_reg_3707 <= trunc_ln49_1_fu_1260_p1;
        trunc_ln49_reg_3702 <= trunc_ln49_fu_1257_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        bound62_reg_4005 <= grp_fu_1736_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bound73_reg_4058 <= grp_fu_1748_p2;
        cmp147408_reg_4048 <= grp_fu_1150_p2;
        empty_72_reg_4052 <= grp_fu_1769_p2;
        icmp_ln95_reg_4064 <= grp_fu_1155_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        bound96_reg_4232 <= grp_fu_1811_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bound_reg_3677 <= grp_fu_1235_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        cast61_reg_3999[31 : 0] <= cast61_fu_1733_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) & (icmp_ln93_fu_1793_p2 == 1'd1))) begin
        cmp176393_reg_4125 <= cmp176393_fu_1803_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_reg_3971 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (trunc_ln89_reg_3975 == 2'd0))) begin
        dbbuf_V_2_1_fu_292 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dbbuf_V_2_1_load_reg_3979 <= dbbuf_V_2_1_fu_292;
        dbbuf_V_2_2_load_reg_3984 <= dbbuf_V_2_2_fu_296;
        dbbuf_V_2_4_load_reg_3989 <= dbbuf_V_2_4_fu_300;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_reg_3971 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (trunc_ln89_reg_3975 == 2'd1))) begin
        dbbuf_V_2_2_fu_296 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~(trunc_ln89_reg_3975 == 2'd1) & ~(trunc_ln89_reg_3975 == 2'd0) & (icmp_ln88_reg_3971 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dbbuf_V_2_4_fu_300 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln106_reg_4404_pp4_iter1_reg == 1'd0))) begin
        dwbuf_V_addr_2_reg_4514 <= zext_ln1118_5_fu_2657_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        dwbuf_V_addr_2_reg_4514_pp4_iter3_reg <= dwbuf_V_addr_2_reg_4514;
        dwbuf_V_addr_2_reg_4514_pp4_iter4_reg <= dwbuf_V_addr_2_reg_4514_pp4_iter3_reg;
        empty_81_reg_4388 <= empty_81_fu_2402_p2;
        trunc_ln109_reg_4484_pp4_iter2_reg <= trunc_ln109_reg_4484;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln123_reg_4674 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        dwbuf_V_load_reg_4683 <= dwbuf_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        dx_addr_1_reg_4530_pp4_iter3_reg <= dx_addr_1_reg_4530;
        empty_82_reg_4399 <= empty_82_fu_2422_p2;
        icmp_ln106_reg_4404 <= icmp_ln106_fu_2431_p2;
        icmp_ln106_reg_4404_pp4_iter1_reg <= icmp_ln106_reg_4404;
        icmp_ln106_reg_4404_pp4_iter2_reg <= icmp_ln106_reg_4404_pp4_iter1_reg;
        icmp_ln106_reg_4404_pp4_iter3_reg <= icmp_ln106_reg_4404_pp4_iter2_reg;
        icmp_ln106_reg_4404_pp4_iter4_reg <= icmp_ln106_reg_4404_pp4_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln140_1_reg_4937 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        dx_load_reg_4968 <= dx_Dout_A;
        x_load_1_reg_4963 <= x_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        empty_49_reg_3683 <= empty_49_fu_1241_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        empty_51_reg_3737 <= grp_fu_1272_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        empty_54_reg_3849 <= grp_fu_1477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state129) & (icmp_ln70_fu_3138_p2 == 1'd0))) begin
        empty_60_reg_4765 <= empty_60_fu_3151_p2;
        tmp_1_reg_4772 <= tmp_1_fu_3156_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state135) & (icmp_ln75_fu_3311_p2 == 1'd0))) begin
        empty_63_reg_4863 <= empty_63_fu_3325_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        empty_71_reg_4034 <= grp_fu_1760_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        empty_76_reg_4182 <= grp_fu_1960_p2;
        mul_ln93_reg_4172 <= grp_fu_1952_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        empty_77_reg_4187 <= empty_77_fu_1980_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        empty_85_reg_4344 <= empty_85_fu_2288_p2;
        sext_ln703_reg_4339 <= sext_ln703_fu_2284_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        empty_86_reg_4579 <= grp_fu_2760_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        empty_90_reg_4643 <= grp_fu_2906_p2;
        mul_ln120_reg_4638 <= grp_fu_2834_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        empty_91_reg_4653 <= empty_91_fu_2930_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (icmp_ln140_1_fu_3436_p2 == 1'd0))) begin
        gmem2_addr_1_reg_4957 <= add_ln142_fu_3458_p2;
        gmem2_addr_reg_4946 <= add_ln141_fu_3447_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        gmem2_addr_1_reg_4957_pp8_iter1_reg <= gmem2_addr_1_reg_4957;
        icmp_ln140_1_reg_4937 <= icmp_ln140_1_fu_3436_p2;
        icmp_ln140_1_reg_4937_pp8_iter1_reg <= icmp_ln140_1_reg_4937;
        icmp_ln140_1_reg_4937_pp8_iter2_reg <= icmp_ln140_1_reg_4937_pp8_iter1_reg;
        icmp_ln140_1_reg_4937_pp8_iter3_reg <= icmp_ln140_1_reg_4937_pp8_iter2_reg;
        icmp_ln140_1_reg_4937_pp8_iter4_reg <= icmp_ln140_1_reg_4937_pp8_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((fwprop_read_reg_3527 == 1'd0) & (icmp_ln49_reg_3663 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        gmem_addr_1_reg_3940 <= sext_ln88_fu_1662_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_reg_3870 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_addr_2_read_reg_3879 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_reg_4208 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        gmem_addr_3_read_reg_4217 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln103_fu_2184_p2 == 1'd0))) begin
        icmp_ln104_reg_4291 <= icmp_ln104_fu_2195_p2;
        select_ln103_1_reg_4296 <= select_ln103_1_fu_2201_p3;
        select_ln103_2_reg_4306 <= select_ln103_2_fu_2217_p3;
        select_ln103_3_reg_4313 <= select_ln103_3_fu_2231_p3;
        select_ln103_4_reg_4319 <= select_ln103_4_fu_2245_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_4575 == 1'd0) & (1'b1 == ap_CS_fsm_state100))) begin
        icmp_ln121_reg_4584 <= icmp_ln121_fu_2780_p2;
        select_ln120_4_reg_4604 <= select_ln120_4_fu_2802_p3;
        select_ln121_reg_4611 <= select_ln121_fu_2815_p3;
        trunc_ln120_reg_4598 <= trunc_ln120_fu_2793_p1;
        trunc_ln122_reg_4617 <= trunc_ln122_fu_2823_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln123_reg_4674 <= icmp_ln123_fu_3033_p2;
        icmp_ln123_reg_4674_pp5_iter1_reg <= icmp_ln123_reg_4674;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        icmp_ln131_reg_4703 <= icmp_ln131_fu_3076_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln49_reg_3663 <= icmp_ln49_fu_1224_p2;
        outH_reg_3647 <= outH_fu_1204_p2;
        outW_reg_3658 <= outW_fu_1218_p2;
        trunc_ln44_reg_3653 <= trunc_ln44_fu_1214_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln62_reg_3899 <= icmp_ln62_fu_1620_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state130) & (icmp_ln71_fu_3183_p2 == 1'd0))) begin
        icmp_ln72_reg_4791 <= icmp_ln72_fu_3194_p2;
        select_ln71_1_reg_4798 <= select_ln71_1_fu_3207_p3;
        select_ln71_4_reg_4808 <= select_ln71_4_fu_3232_p3;
        select_ln72_1_reg_4819 <= select_ln72_1_fu_3249_p3;
        select_ln72_3_reg_4824 <= select_ln72_3_fu_3257_p3;
        trunc_ln71_reg_4803 <= trunc_ln71_fu_3215_p1;
        trunc_ln72_1_reg_4814 <= trunc_ln72_1_fu_3245_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((fwprop_read_reg_3527 == 1'd1) & (icmp_ln49_reg_3663 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        icmp_ln73_reg_3953 <= icmp_ln73_fu_1683_p2;
        sub_ln70_reg_3947 <= sub_ln70_fu_1678_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        icmp_ln76_reg_4888 <= icmp_ln76_fu_3367_p2;
        icmp_ln76_reg_4888_pp7_iter1_reg <= icmp_ln76_reg_4888;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln88_reg_3971 <= icmp_ln88_fu_1697_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) & (icmp_ln93_fu_1793_p2 == 1'd0))) begin
        icmp_ln94_reg_4093 <= icmp_ln94_fu_1798_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        mul293_reg_4907 <= grp_fu_3392_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        mul_ln50_reg_3833 <= grp_fu_1452_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        mul_ln71_reg_4845 <= mul_ln71_fu_3297_p2;
        y_addr_reg_4850 <= zext_ln74_fu_3301_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state103) & (select_ln120_4_reg_4604 == 1'd1))) begin
        p_mid1153_reg_4648 <= grp_fu_2910_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state60) & (select_ln93_4_reg_4140 == 1'd1))) begin
        p_mid166_reg_4177 <= grp_fu_1956_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_mid1_reg_3811 <= grp_fu_1350_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        r_V_reg_4377 <= dy_Dout_A;
        sext_ln1118_1_reg_4382 <= sext_ln1118_1_fu_2389_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state77) | ((fwprop_read_reg_3527 == 1'd1) & (icmp_ln49_reg_3663 == 1'd1) & (1'b1 == ap_CS_fsm_state40)))) begin
        reg_1184 <= grp_fu_1165_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state79))) begin
        reg_1188 <= grp_fu_1170_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        select_ln103_reg_4326 <= select_ln103_fu_2253_p3;
        trunc_ln104_reg_4331 <= trunc_ln104_fu_2260_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln106_fu_2431_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        select_ln106_2_reg_4427 <= select_ln106_2_fu_2464_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_4575 == 1'd0) & (1'b0 == ap_block_state100_io) & (1'b1 == ap_CS_fsm_state100))) begin
        select_ln120_1_reg_4592 <= select_ln120_1_fu_2785_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        select_ln50_reg_3838 <= select_ln50_fu_1460_p3;
        tmp11_reg_3844 <= tmp11_fu_1472_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state133)) begin
        select_ln72_reg_4834 <= select_ln72_fu_3285_p3;
        trunc_ln73_reg_4839 <= trunc_ln73_fu_3293_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state145) & (icmp_ln140_fu_3396_p2 == 1'd1))) begin
        sext_ln140_1_reg_4927 <= sext_ln140_1_fu_3426_p1;
        sext_ln140_reg_4922 <= sext_ln140_fu_3413_p1;
        trunc_ln140_reg_4917 <= trunc_ln140_fu_3401_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state142)) begin
        tmp21_reg_4902 <= grp_fu_3097_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln131_fu_3076_p2 == 1'd0))) begin
        tmp_3_reg_4707 <= tmp_3_fu_3085_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_reg_3743 <= tmp_fu_1286_p2;
        trunc_ln53_reg_3748 <= trunc_ln53_fu_1291_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) & (icmp_ln105_fu_2310_p2 == 1'd0) & (cmp176393_reg_4125 == 1'd1))) begin
        trunc_ln105_reg_4362 <= trunc_ln105_fu_2315_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln106_reg_4404 == 1'd0))) begin
        trunc_ln109_reg_4484 <= trunc_ln109_fu_2620_p1;
        trunc_ln1118_1_reg_4469 <= trunc_ln1118_1_fu_2604_p1;
        trunc_ln1118_2_reg_4489 <= trunc_ln1118_2_fu_2624_p1;
        trunc_ln1118_reg_4464 <= trunc_ln1118_fu_2600_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state101) & (select_ln120_4_reg_4604 == 1'd1))) begin
        trunc_ln121_1_reg_4622 <= trunc_ln121_1_fu_2874_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln62_fu_1620_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln63_reg_3903 <= trunc_ln63_fu_1625_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        trunc_ln88_reg_3958 <= trunc_ln88_fu_1688_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln88_fu_1697_p2 == 1'd0))) begin
        trunc_ln89_reg_3975 <= trunc_ln89_fu_1702_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        trunc_ln93_reg_4022 <= trunc_ln93_fu_1754_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        trunc_ln97_reg_4075 <= trunc_ln97_fu_1783_p1;
    end
end

always @ (*) begin
    if ((icmp_ln52_fu_1578_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln62_fu_1620_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln88_fu_1697_p2 == 1'd1))) begin
        ap_condition_pp2_flush_enable = 1'b1;
    end else begin
        ap_condition_pp2_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln96_fu_2083_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state70 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state70 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln106_fu_2431_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state88 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state88 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln123_fu_3033_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state107 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state107 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln131_fu_3076_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state115 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state115 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln76_fu_3367_p2 == 1'd1))) begin
        ap_condition_pp7_flush_enable = 1'b1;
    end else begin
        ap_condition_pp7_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln140_1_fu_3436_p2 == 1'd1)) begin
        ap_condition_pp8_exit_iter0_state146 = 1'b1;
    end else begin
        ap_condition_pp8_exit_iter0_state146 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state156)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter2 == 1'b0) & (ap_enable_reg_pp8_iter4 == 1'b0) & (ap_enable_reg_pp8_iter1 == 1'b0) & (ap_enable_reg_pp8_iter3 == 1'b0) & (ap_enable_reg_pp8_iter0 == 1'b0))) begin
        ap_idle_pp8 = 1'b1;
    end else begin
        ap_idle_pp8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4404 == 1'd0))) begin
        ap_phi_mux_c_1_phi_fu_882_p4 = select_ln106_2_reg_4427;
    end else begin
        ap_phi_mux_c_1_phi_fu_882_p4 = c_1_reg_878;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4404 == 1'd0))) begin
        ap_phi_mux_fh_1_phi_fu_916_p4 = select_ln107_3_reg_4479;
    end else begin
        ap_phi_mux_fh_1_phi_fu_916_p4 = fh_1_reg_912;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4404 == 1'd0))) begin
        ap_phi_mux_fw_1_phi_fu_927_p4 = add_ln108_reg_4494;
    end else begin
        ap_phi_mux_fw_1_phi_fu_927_p4 = fw_1_reg_923;
    end
end

always @ (*) begin
    if (((icmp_ln140_1_reg_4937 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        ap_phi_mux_i_6_phi_fu_1143_p4 = add_ln140_reg_4932;
    end else begin
        ap_phi_mux_i_6_phi_fu_1143_p4 = i_6_reg_1139;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4404 == 1'd0))) begin
        ap_phi_mux_indvar_flatten104_phi_fu_905_p4 = select_ln107_4_reg_4499;
    end else begin
        ap_phi_mux_indvar_flatten104_phi_fu_905_p4 = indvar_flatten104_reg_901;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4404 == 1'd0))) begin
        ap_phi_mux_indvar_flatten133_phi_fu_894_p4 = add_ln106_1_reg_4394;
    end else begin
        ap_phi_mux_indvar_flatten133_phi_fu_894_p4 = indvar_flatten133_reg_890;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state156)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1))) begin
        dwbuf_V_address0 = dwbuf_V_addr_2_reg_4514_pp4_iter4_reg;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        dwbuf_V_address0 = zext_ln97_4_fu_2097_p1;
    end else begin
        dwbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        dwbuf_V_address1 = zext_ln124_4_fu_3047_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1))) begin
        dwbuf_V_address1 = dwbuf_V_addr_2_reg_4514_pp4_iter3_reg;
    end else begin
        dwbuf_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        dwbuf_V_ce0 = 1'b1;
    end else begin
        dwbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1)))) begin
        dwbuf_V_ce1 = 1'b1;
    end else begin
        dwbuf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1))) begin
        dwbuf_V_d0 = {{grp_fu_3492_p3[28:13]}};
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        dwbuf_V_d0 = gmem_addr_3_read_reg_4217;
    end else begin
        dwbuf_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1) & (icmp_ln106_reg_4404_pp4_iter4_reg == 1'd0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln96_reg_4208_pp3_iter1_reg == 1'd0)))) begin
        dwbuf_V_we0 = 1'b1;
    end else begin
        dwbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        dx_Addr_A_orig = zext_ln141_fu_3441_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1))) begin
        dx_Addr_A_orig = dx_addr_1_reg_4530_pp4_iter3_reg;
    end else if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        dx_Addr_A_orig = zext_ln1118_fu_2666_p1;
    end else begin
        dx_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)) | ((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1)))) begin
        dx_EN_A = 1'b1;
    end else begin
        dx_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1) & (icmp_ln106_reg_4404_pp4_iter3_reg == 1'd0))) begin
        dx_WEN_A = 2'd3;
    end else begin
        dx_WEN_A = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84))) begin
        dy_EN_A = 1'b1;
    end else begin
        dy_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp8_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_4375)) begin
            gmem2_AWADDR = gmem2_addr_1_reg_4957_pp8_iter1_reg;
        end else if ((1'b1 == ap_condition_4371)) begin
            gmem2_AWADDR = gmem2_addr_reg_4946;
        end else begin
            gmem2_AWADDR = 'bx;
        end
    end else begin
        gmem2_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln140_1_reg_4937_pp8_iter1_reg == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1)) | ((icmp_ln140_1_reg_4937 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)))) begin
        gmem2_AWVALID = 1'b1;
    end else begin
        gmem2_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln140_1_reg_4937_pp8_iter4_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1)) | ((icmp_ln140_1_reg_4937_pp8_iter3_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)))) begin
        gmem2_BREADY = 1'b1;
    end else begin
        gmem2_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln140_1_reg_4937_pp8_iter1_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_2262)) begin
            gmem2_WDATA = dx_load_reg_4968;
        end else if ((1'b1 == ap_condition_2250)) begin
            gmem2_WDATA = x_load_1_reg_4963;
        end else begin
            gmem2_WDATA = 'bx;
        end
    end else begin
        gmem2_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter2 == 1'b1) & (icmp_ln140_1_reg_4937_pp8_iter1_reg == 1'd0) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)) | ((icmp_ln140_1_reg_4937_pp8_iter1_reg == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1)))) begin
        gmem2_WVALID = 1'b1;
    end else begin
        gmem2_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln140_1_reg_4937_pp8_iter1_reg == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1)) | ((icmp_ln140_1_reg_4937 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0)))) begin
        gmem2_blk_n_AW = m_axi_gmem2_AWREADY;
    end else begin
        gmem2_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln140_1_reg_4937_pp8_iter4_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1)) | ((icmp_ln140_1_reg_4937_pp8_iter3_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0)))) begin
        gmem2_blk_n_B = m_axi_gmem2_BVALID;
    end else begin
        gmem2_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter2 == 1'b1) & (icmp_ln140_1_reg_4937_pp8_iter1_reg == 1'd0) & (1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0)) | ((icmp_ln140_1_reg_4937_pp8_iter1_reg == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1)))) begin
        gmem2_blk_n_W = m_axi_gmem2_WREADY;
    end else begin
        gmem2_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state63))) begin
        gmem_ARADDR = gmem_addr_3_reg_4192;
    end else if (((1'b0 == ap_block_state40_io) & (ap_predicate_op397_readreq_state40 == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        gmem_ARADDR = sext_ln88_fu_1662_p1;
    end else if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        gmem_ARADDR = gmem_addr_2_reg_3854;
    end else if (((icmp_ln49_1_reg_3733 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
        gmem_ARADDR = sext_ln62_fu_1339_p1;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state63)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        gmem_ARLEN = FW_read_reg_3531;
    end else if ((((icmp_ln49_1_reg_3733 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11)) | ((1'b0 == ap_block_state40_io) & (ap_predicate_op397_readreq_state40 == 1'b1) & (1'b1 == ap_CS_fsm_state40)))) begin
        gmem_ARLEN = F_read_reg_3593;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln49_1_reg_3733 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state63)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((1'b0 == ap_block_state40_io) & (ap_predicate_op397_readreq_state40 == 1'b1) & (1'b1 == ap_CS_fsm_state40)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state106))) begin
        gmem_AWADDR = gmem_addr_4_reg_4658;
    end else if (((icmp_ln120_reg_4575 == 1'd1) & (1'b0 == ap_block_state100_io) & (1'b1 == ap_CS_fsm_state100))) begin
        gmem_AWADDR = gmem_addr_1_reg_3940;
    end else begin
        gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state106))) begin
        gmem_AWLEN = FW_read_reg_3531;
    end else if (((icmp_ln120_reg_4575 == 1'd1) & (1'b0 == ap_block_state100_io) & (1'b1 == ap_CS_fsm_state100))) begin
        gmem_AWLEN = F_read_reg_3593;
    end else begin
        gmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln120_reg_4575 == 1'd1) & (1'b0 == ap_block_state100_io) & (1'b1 == ap_CS_fsm_state100)) | ((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state106)))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((gmem_BVALID == 1'b0) & (ap_predicate_op870_writeresp_state121 == 1'b1)) & (ap_predicate_op870_writeresp_state121 == 1'b1) & (1'b1 == ap_CS_fsm_state121)) | (~((gmem_BVALID == 1'b0) & (cmp147408_reg_4048 == 1'd1)) & (cmp147408_reg_4048 == 1'd1) & (1'b1 == ap_CS_fsm_state114)))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln96_reg_4208 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln88_reg_3971 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln62_reg_3899 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln52_reg_3870 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln131_reg_4703 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0_01001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        gmem_WDATA = tmp_3_reg_4707;
    end else if (((icmp_ln123_reg_4674_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_01001))) begin
        gmem_WDATA = dwbuf_V_load_reg_4683;
    end else begin
        gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln123_reg_4674_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((icmp_ln131_reg_4703 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state21) | ((fwprop_read_reg_3527 == 1'd0) & (icmp_ln49_reg_3663 == 1'd1) & (1'b1 == ap_CS_fsm_state40)) | ((icmp_ln49_1_reg_3733 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | ((icmp_ln120_reg_4575 == 1'd1) & (1'b1 == ap_CS_fsm_state100)))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((cmp147408_reg_4048 == 1'd1) & (1'b1 == ap_CS_fsm_state114)) | ((fwprop_read_reg_3527 == 1'd0) & (icmp_ln49_reg_3663 == 1'd1) & (1'b1 == ap_CS_fsm_state121)))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln96_reg_4208 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln88_reg_3971 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln62_reg_3899 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln52_reg_3870 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln123_reg_4674_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((icmp_ln131_reg_4703 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0)))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state99) | ((1'b0 == ap_block_state100_io) & (1'b1 == ap_CS_fsm_state100)))) begin
        grp_fu_2760_ce = 1'b1;
    end else begin
        grp_fu_2760_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state142) | (~((gmem_BVALID == 1'b0) & (ap_predicate_op870_writeresp_state121 == 1'b1)) & (1'b1 == ap_CS_fsm_state121)))) begin
        grp_fu_3097_ce = 1'b1;
    end else begin
        grp_fu_3097_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        wbuf_V_address0 = zext_ln1118_5_fu_2657_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        wbuf_V_address0 = zext_ln53_4_fu_1592_p1;
    end else begin
        wbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1)))) begin
        wbuf_V_ce0 = 1'b1;
    end else begin
        wbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln52_reg_3870_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        wbuf_V_we0 = 1'b1;
    end else begin
        wbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_Addr_A_orig = zext_ln141_fu_3441_p1;
    end else if (((1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        x_Addr_A_orig = zext_ln1116_fu_3381_p1;
    end else if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        x_Addr_A_orig = zext_ln1118_fu_2666_p1;
    end else begin
        x_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)) | ((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter2 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1)))) begin
        x_EN_A = 1'b1;
    end else begin
        x_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        y_Addr_A_orig = y_addr_reg_4850;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        y_Addr_A_orig = zext_ln74_fu_3301_p1;
    end else begin
        y_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        y_Din_A = empty_65_reg_1114;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        y_Din_A = tmp_1_reg_4772;
    end else begin
        y_Din_A = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state134))) begin
        y_EN_A = 1'b1;
    end else begin
        y_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state134))) begin
        y_WEN_A = 2'd3;
    end else begin
        y_WEN_A = 2'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln49_fu_1224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln49_1_reg_3733 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else if (((icmp_ln49_1_reg_3733 == 1'd0) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((cmp57438_reg_3698 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln52_fu_1578_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln52_fu_1578_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((fwprop_read_reg_3527 == 1'd1) & (icmp_ln49_reg_3663 == 1'd1) & (1'b0 == ap_block_state40_io) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end else if (((icmp_ln49_reg_3663 == 1'd0) & (1'b0 == ap_block_state40_io) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end else if (((fwprop_read_reg_3527 == 1'd0) & (icmp_ln49_reg_3663 == 1'd1) & (1'b0 == ap_block_state40_io) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((1'b1 == ap_CS_fsm_state57) & (icmp_ln93_fu_1793_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            if (((cmp147408_reg_4048 == 1'd0) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state63 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln96_fu_2083_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln96_fu_2083_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln103_fu_2184_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            if (((1'b1 == ap_CS_fsm_state84) & ((icmp_ln105_fu_2310_p2 == 1'd1) | (cmp176393_reg_4125 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1) & (ap_enable_reg_pp4_iter4 == 1'b0)) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1) & (ap_enable_reg_pp4_iter4 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((~((1'b0 == ap_block_pp4_stage1_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln106_fu_2431_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)) & (1'b0 == ap_block_pp4_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((1'b0 == ap_block_pp4_stage1_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln106_fu_2431_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            if (((icmp_ln120_reg_4575 == 1'd1) & (1'b0 == ap_block_state100_io) & (1'b1 == ap_CS_fsm_state100))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((icmp_ln120_reg_4575 == 1'd0) & (1'b0 == ap_block_state100_io) & (1'b1 == ap_CS_fsm_state100))) begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            if (((cmp147408_reg_4048 == 1'd0) & (1'b1 == ap_CS_fsm_state105))) begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end
        end
        ap_ST_fsm_state106 : begin
            if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state106))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln123_fu_3033_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)) & ~((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0)) | ((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln123_fu_3033_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            if ((~((gmem_BVALID == 1'b0) & (cmp147408_reg_4048 == 1'd1)) & (1'b1 == ap_CS_fsm_state114))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end
        end
        ap_ST_fsm_pp6_stage0 : begin
            if (~((1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln131_fu_3076_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln131_fu_3076_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state117;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            if ((~((gmem_BVALID == 1'b0) & (ap_predicate_op870_writeresp_state121 == 1'b1)) & (debugip_read_reg_3523 == 1'd0) & (1'b1 == ap_CS_fsm_state121))) begin
                ap_NS_fsm = ap_ST_fsm_state156;
            end else if ((~((gmem_BVALID == 1'b0) & (ap_predicate_op870_writeresp_state121 == 1'b1)) & (debugip_read_reg_3523 == 1'd1) & (1'b1 == ap_CS_fsm_state121))) begin
                ap_NS_fsm = ap_ST_fsm_state142;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            if (((1'b1 == ap_CS_fsm_state129) & (icmp_ln70_fu_3138_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end
        end
        ap_ST_fsm_state130 : begin
            if (((1'b1 == ap_CS_fsm_state130) & (icmp_ln71_fu_3183_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state129;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state131;
            end
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            if (((1'b1 == ap_CS_fsm_state135) & (icmp_ln75_fu_3311_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state136;
            end
        end
        ap_ST_fsm_state136 : begin
            if (((1'b1 == ap_CS_fsm_state136) & (cmp99323_reg_4738 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state141;
            end
        end
        ap_ST_fsm_pp7_stage0 : begin
            if (~((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if (((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state140;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            if (((1'b1 == ap_CS_fsm_state145) & (icmp_ln140_fu_3396_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state156;
            end
        end
        ap_ST_fsm_pp8_stage0 : begin
            if ((~((ap_enable_reg_pp8_iter1 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone) & (icmp_ln140_1_fu_3436_p2 == 1'd1) & (ap_enable_reg_pp8_iter0 == 1'b1)) & (1'b0 == ap_block_pp8_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage1;
            end else if (((ap_enable_reg_pp8_iter1 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone) & (icmp_ln140_1_fu_3436_p2 == 1'd1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state156;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end
        end
        ap_ST_fsm_pp8_stage1 : begin
            if ((~((ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage1_subdone) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter3 == 1'b0)) & (1'b0 == ap_block_pp8_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else if (((ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage1_subdone) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter3 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state156;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage1;
            end
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln103_2_fu_2189_p2 = (f_1_reg_834 + 31'd1);

assign add_ln103_4_fu_2162_p2 = (indvar_flatten144_reg_823 + 63'd1);

assign add_ln103_fu_2147_p2 = ($signed(W_read_reg_3566) + $signed(32'd1));

assign add_ln104_fu_2384_p2 = (select_ln103_reg_4326 + 32'd1);

assign add_ln105_fu_2304_p2 = (w_1_reg_857 + 32'd1);

assign add_ln106_1_fu_2407_p2 = (ap_phi_mux_indvar_flatten133_phi_fu_894_p4 + 96'd1);

assign add_ln106_fu_2436_p2 = (c_1_reg_878 + 32'd1);

assign add_ln107_2_fu_2518_p2 = (ap_phi_mux_indvar_flatten104_phi_fu_905_p4 + 64'd1);

assign add_ln107_fu_2496_p2 = (select_ln106_fu_2447_p3 + 32'd1);

assign add_ln108_fu_2628_p2 = (select_ln107_fu_2573_p3 + 32'd1);

assign add_ln1116_fu_3376_p2 = (add_ln77_reg_4878 + trunc_ln77_fu_3372_p1);

assign add_ln1118_1_fu_2532_p2 = ($signed(sext_ln703_reg_4339) + $signed(zext_ln1118_3_fu_2529_p1));

assign add_ln1118_2_fu_2553_p2 = ($signed(sext_ln1118_4_fu_2549_p1) + $signed(sext_ln1118_3_fu_2537_p1));

assign add_ln1118_3_fu_2594_p2 = (add_ln1118_2_fu_2553_p2 + zext_ln1118_4_fu_2591_p1);

assign add_ln1118_4_fu_2647_p2 = (p_shl7_cast_fu_2640_p3 + trunc_ln1118_reg_4464);

assign add_ln1118_5_fu_2652_p2 = (add_ln1118_4_fu_2647_p2 + trunc_ln1118_2_reg_4489);

assign add_ln1118_fu_2662_p2 = ($signed(grp_fu_3477_p3) + $signed(trunc_ln109_reg_4484_pp4_iter2_reg));

assign add_ln120_1_fu_2750_p2 = (indvar_flatten178_reg_935 + 95'd1);

assign add_ln120_fu_2774_p2 = (i_4_reg_958 + 31'd1);

assign add_ln121_1_fu_3057_p2 = (indvar_flatten155_reg_969 + 64'd1);

assign add_ln121_fu_2868_p2 = (select_ln120_fu_2827_p3 + 32'd1);

assign add_ln122_fu_3052_p2 = (select_ln121_reg_4611 + 32'd1);

assign add_ln123_fu_3023_p2 = (l_2_reg_992 + 31'd1);

assign add_ln124_1_fu_2950_p2 = ($signed(sext_ln124_1_fu_2946_p1) + $signed(sext_ln124_fu_2936_p1));

assign add_ln124_2_fu_2995_p2 = (add_ln124_1_fu_2950_p2 + zext_ln124_3_fu_2991_p1);

assign add_ln124_3_fu_3017_p2 = (p_shl5_cast_fu_3009_p3 + trunc_ln124_3_fu_3001_p1);

assign add_ln124_4_fu_3042_p2 = (add_ln124_3_reg_4664 + trunc_ln124_5_fu_3038_p1);

assign add_ln124_fu_2893_p2 = ($signed(sext_ln121_fu_2858_p1) + $signed(zext_ln124_2_fu_2889_p1));

assign add_ln131_fu_3070_p2 = (i_5_reg_1003 + 31'd1);

assign add_ln140_fu_3430_p2 = (ap_phi_mux_i_6_phi_fu_1143_p4 + 31'd1);

assign add_ln141_fu_3447_p2 = ($signed(zext_ln141_fu_3441_p1) + $signed(sext_ln140_reg_4922));

assign add_ln142_fu_3458_p2 = ($signed(zext_ln141_fu_3441_p1) + $signed(sext_ln140_1_reg_4927));

assign add_ln49_1_fu_1266_p2 = (indvar_flatten22_reg_625 + 95'd1);

assign add_ln49_fu_1295_p2 = ($signed(i_reg_636) + $signed(31'd1));

assign add_ln50_1_fu_1601_p2 = (indvar_flatten_reg_648 + 64'd1);

assign add_ln50_fu_1401_p2 = (select_ln49_fu_1354_p3 + 32'd1);

assign add_ln51_fu_1596_p2 = (select_ln50_reg_3838 + 32'd1);

assign add_ln52_fu_1568_p2 = (l_reg_684 + 31'd1);

assign add_ln53_1_fu_1495_p2 = ($signed(sext_ln53_1_fu_1491_p1) + $signed(sext_ln53_fu_1481_p1));

assign add_ln53_2_fu_1540_p2 = (add_ln53_1_fu_1495_p2 + zext_ln53_3_fu_1536_p1);

assign add_ln53_3_fu_1562_p2 = (p_shl1_cast_fu_1554_p3 + trunc_ln53_3_fu_1546_p1);

assign add_ln53_4_fu_1587_p2 = (add_ln53_3_reg_3860 + trunc_ln53_5_fu_1583_p1);

assign add_ln53_fu_1439_p2 = ($signed(sext_ln50_fu_1386_p1) + $signed(zext_ln53_2_fu_1435_p1));

assign add_ln62_fu_1614_p2 = (i_1_reg_695 + 31'd1);

assign add_ln703_1_fu_2745_p2 = ($signed(r_V_reg_4377) + $signed(dbbuf_V_2_8_reg_868));

assign add_ln703_fu_3386_p2 = (x_Dout_A + empty_65_reg_1114);

assign add_ln70_2_fu_3132_p2 = (f_reg_1014 + 31'd1);

assign add_ln70_fu_1673_p2 = ($signed(W_read_reg_3566) + $signed(32'd1));

assign add_ln71_1_fu_3168_p2 = (indvar_flatten57_reg_1025 + 96'd1);

assign add_ln71_fu_3188_p2 = (c_reg_1036 + 32'd1);

assign add_ln72_1_fu_3335_p2 = (indvar_flatten36_reg_1047 + 64'd1);

assign add_ln72_fu_3239_p2 = (select_ln71_fu_3199_p3 + 32'd1);

assign add_ln73_fu_3330_p2 = (select_ln72_reg_4834 + 32'd1);

assign add_ln75_fu_3305_p2 = (fh_reg_1092 + 32'd1);

assign add_ln76_fu_3357_p2 = (fw_reg_1103 + 31'd1);

assign add_ln77_fu_3352_p2 = (empty_64_fu_3348_p2 + trunc_ln73_reg_4839);

assign add_ln88_fu_1691_p2 = (i_2_reg_742 + 31'd1);

assign add_ln93_1_fu_1787_p2 = (indvar_flatten91_reg_765 + 95'd1);

assign add_ln93_fu_1828_p2 = (i_3_reg_776 + 31'd1);

assign add_ln94_1_fu_2106_p2 = (indvar_flatten68_reg_788 + 64'd1);

assign add_ln94_fu_1895_p2 = (select_ln93_fu_1834_p3 + 32'd1);

assign add_ln95_fu_2101_p2 = (select_ln94_reg_4145 + 32'd1);

assign add_ln96_fu_2073_p2 = (l_1_reg_812 + 31'd1);

assign add_ln97_1_fu_2000_p2 = ($signed(sext_ln97_1_fu_1996_p1) + $signed(sext_ln97_fu_1986_p1));

assign add_ln97_2_fu_2045_p2 = (add_ln97_1_fu_2000_p2 + zext_ln97_3_fu_2041_p1);

assign add_ln97_3_fu_2067_p2 = (p_shl3_cast_fu_2059_p3 + trunc_ln97_3_fu_2051_p1);

assign add_ln97_4_fu_2092_p2 = (add_ln97_3_reg_4198 + trunc_ln97_5_fu_2088_p1);

assign add_ln97_fu_1934_p2 = ($signed(sext_ln94_fu_1874_p1) + $signed(zext_ln97_2_fu_1930_p1));

assign addr_cmp_fu_2679_p2 = ((reuse_addr_reg_fu_264 == zext_ln1118_fu_2666_p1) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_pp8_stage0 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_pp8_stage1 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd83];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln52_reg_3870 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln52_reg_3870 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln62_reg_3899 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln62_reg_3899 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln88_reg_3971 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln88_reg_3971 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln96_reg_4208 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln96_reg_4208 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_block_state109_io));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_block_state109_io));
end

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_block_state116_io));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_block_state116_io));
end

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp8_stage0_01001 = ((gmem2_BVALID == 1'b0) & (icmp_ln140_1_reg_4937_pp8_iter3_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp8_stage0_11001 = (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b1 == ap_block_state150_io)) | ((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_block_state148_io)) | ((gmem2_BVALID == 1'b0) & (icmp_ln140_1_reg_4937_pp8_iter3_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp8_stage0_subdone = (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b1 == ap_block_state150_io)) | ((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_block_state148_io)) | ((gmem2_BVALID == 1'b0) & (icmp_ln140_1_reg_4937_pp8_iter3_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1)));
end

assign ap_block_pp8_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp8_stage1_01001 = ((gmem2_BVALID == 1'b0) & (icmp_ln140_1_reg_4937_pp8_iter4_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp8_stage1_11001 = (((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_block_state149_io)) | ((gmem2_BVALID == 1'b0) & (icmp_ln140_1_reg_4937_pp8_iter4_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp8_stage1_subdone = (((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_block_state149_io)) | ((gmem2_BVALID == 1'b0) & (icmp_ln140_1_reg_4937_pp8_iter4_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_state100_io = ((gmem_AWREADY == 1'b0) & (icmp_ln120_reg_4575 == 1'd1));
end

assign ap_block_state107_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state109_io = ((gmem_WREADY == 1'b0) & (icmp_ln123_reg_4674_pp5_iter1_reg == 1'd0));
end

assign ap_block_state109_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state114 = ((gmem_BVALID == 1'b0) & (cmp147408_reg_4048 == 1'd1));
end

assign ap_block_state115_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state116_io = ((gmem_WREADY == 1'b0) & (icmp_ln131_reg_4703 == 1'd0));
end

assign ap_block_state116_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((gmem_ARREADY == 1'b0) & (icmp_ln49_1_reg_3733 == 1'd1));
end

always @ (*) begin
    ap_block_state121 = ((gmem_BVALID == 1'b0) & (ap_predicate_op870_writeresp_state121 == 1'b1));
end

assign ap_block_state137_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp8_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state147_pp8_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state148_io = ((gmem2_AWREADY == 1'b0) & (icmp_ln140_1_reg_4937 == 1'd0));
end

assign ap_block_state148_pp8_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state149_io = (((gmem2_WREADY == 1'b0) & (icmp_ln140_1_reg_4937_pp8_iter1_reg == 1'd0)) | ((gmem2_AWREADY == 1'b0) & (icmp_ln140_1_reg_4937_pp8_iter1_reg == 1'd0)));
end

assign ap_block_state149_pp8_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state150_io = ((gmem2_WREADY == 1'b0) & (icmp_ln140_1_reg_4937_pp8_iter1_reg == 1'd0));
end

assign ap_block_state150_pp8_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state151_pp8_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state152_pp8_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state153_pp8_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state154_pp8_stage0_iter4 = ((gmem2_BVALID == 1'b0) & (icmp_ln140_1_reg_4937_pp8_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state155_pp8_stage1_iter4 = ((gmem2_BVALID == 1'b0) & (icmp_ln140_1_reg_4937_pp8_iter4_reg == 1'd0));
end

assign ap_block_state28_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp0_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln52_reg_3870 == 1'd0));
end

assign ap_block_state30_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state39_pp1_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln62_reg_3899 == 1'd0));
end

always @ (*) begin
    ap_block_state40_io = ((gmem_ARREADY == 1'b0) & (ap_predicate_op397_readreq_state40 == 1'b1));
end

assign ap_block_state47_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state48_pp2_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln88_reg_3971 == 1'd0));
end

assign ap_block_state70_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state71_pp3_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln96_reg_4208 == 1'd0));
end

assign ap_block_state72_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp4_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp4_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp4_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp4_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp4_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2250 = ((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage1_01001) & (1'b1 == ap_CS_fsm_pp8_stage1));
end

always @ (*) begin
    ap_condition_2262 = ((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_01001) & (1'b1 == ap_CS_fsm_pp8_stage0));
end

always @ (*) begin
    ap_condition_4371 = ((icmp_ln140_1_reg_4937 == 1'd0) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0));
end

always @ (*) begin
    ap_condition_4375 = ((icmp_ln140_1_reg_4937_pp8_iter1_reg == 1'd0) & (1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp8 = (ap_idle_pp8 ^ 1'b1);

always @ (*) begin
    ap_predicate_op397_readreq_state40 = ((fwprop_read_reg_3527 == 1'd0) & (icmp_ln49_reg_3663 == 1'd1));
end

always @ (*) begin
    ap_predicate_op870_writeresp_state121 = ((fwprop_read_reg_3527 == 1'd0) & (icmp_ln49_reg_3663 == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cast61_fu_1733_p1 = FH_read_reg_3552;

assign cmp176393_fu_1803_p2 = (($signed(outW_reg_3658) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign dbbuf_V_0_5_fu_2355_p3 = ((select_ln103_4_reg_4319[0:0] == 1'b1) ? dbbuf_V_0_3_fu_308 : dbbuf_V_0_fu_2348_p3);

assign dbbuf_V_0_6_fu_2362_p3 = ((select_ln103_4_reg_4319[0:0] == 1'b1) ? dbbuf_V_2_8_reg_868 : dbbuf_V_0_2_fu_304);

assign dbbuf_V_0_fu_2348_p3 = ((select_ln103_3_reg_4313[0:0] == 1'b1) ? dbbuf_V_2_8_reg_868 : dbbuf_V_0_3_fu_308);

assign dbbuf_V_2_7_fu_2341_p3 = ((select_ln103_4_reg_4319[0:0] == 1'b1) ? dbbuf_V_2_3_fu_312 : dbbuf_V_2_fu_2334_p3);

assign dbbuf_V_2_fu_2334_p3 = ((select_ln103_3_reg_4313[0:0] == 1'b1) ? dbbuf_V_2_3_fu_312 : dbbuf_V_2_8_reg_868);

assign dx_Addr_A = dx_Addr_A_orig << 32'd1;

assign dx_Clk_A = ap_clk;

assign dx_Din_A = {{grp_fu_3484_p3[28:13]}};

assign dx_Rst_A = ap_rst_n_inv;

assign dy_Addr_A = p_cast45_fu_2324_p1 << 32'd1;

assign dy_Clk_A = ap_clk;

assign dy_Din_A = 16'd0;

assign dy_Rst_A = ap_rst_n_inv;

assign dy_WEN_A = 2'd0;

assign empty_48_fu_1196_p0 = H;

assign empty_48_fu_1196_p1 = empty_48_fu_1196_p0[9:0];

assign empty_49_fu_1241_p1 = F_read_reg_3593[30:0];

assign empty_50_fu_1263_p1 = FW_read_reg_3531[30:0];

assign empty_55_fu_1508_p2 = (tmp_7_fu_1501_p3 + wt_read_reg_3629);

assign empty_60_fu_3151_p0 = f_reg_1014[9:0];

assign empty_61_fu_3178_p2 = (trunc_ln72_fu_3174_p1 + empty_60_reg_4765);

assign empty_63_fu_3325_p2 = (tmp17_fu_3320_p2 + select_ln72_1_reg_4819);

assign empty_77_fu_1980_p2 = (tmp18_fu_1976_p2 + select_ln94_1_fu_1970_p3);

assign empty_78_fu_2013_p2 = (tmp_8_fu_2006_p3 + dwt_read_reg_3623);

assign empty_79_fu_2168_p1 = f_1_reg_834[1:0];

assign empty_80_fu_2319_p2 = (trunc_ln105_fu_2315_p1 + empty_85_reg_4344);

assign empty_81_fu_2402_p0 = ap_phi_mux_c_1_phi_fu_882_p4[9:0];

assign empty_82_fu_2422_p2 = (tmp19_fu_2417_p2 + empty_81_reg_4388);

assign empty_83_fu_2213_p1 = add_ln103_2_fu_2189_p2[1:0];

assign empty_91_fu_2930_p2 = (tmp20_fu_2926_p2 + select_ln121_1_fu_2920_p3);

assign empty_92_fu_2963_p2 = (tmp_12_fu_2956_p3 + dwt_read_reg_3623);

assign empty_fu_1192_p1 = FH[9:0];

assign fw_cast_fu_3363_p1 = fw_reg_1103;

assign grp_fu_1150_p2 = (($signed(FW_read_reg_3531) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign grp_fu_1155_p2 = ((FH_read_reg_3552 == 32'd0) ? 1'b1 : 1'b0);

assign grp_fu_1160_p2 = ($signed(H_read_reg_3576) + $signed(32'd1));

assign grp_fu_1165_p2 = (grp_fu_1160_p2 - FH_read_reg_3552);

assign grp_fu_1170_p2 = (trunc_ln44_reg_3653 + 10'd1);

assign grp_fu_1235_p0 = grp_fu_1235_p00;

assign grp_fu_1235_p00 = $unsigned(C_read_reg_3582);

assign grp_fu_1235_p1 = grp_fu_1235_p10;

assign grp_fu_1235_p10 = FH_read_reg_3552;

assign grp_fu_1251_p0 = grp_fu_1251_p00;

assign grp_fu_1251_p00 = empty_49_fu_1241_p1;

assign grp_fu_1251_p1 = grp_fu_1251_p10;

assign grp_fu_1251_p10 = bound_reg_3677;

assign grp_fu_1736_p0 = grp_fu_1736_p00;

assign grp_fu_1736_p00 = $unsigned(C_read_reg_3582);

assign grp_fu_1736_p1 = grp_fu_1736_p10;

assign grp_fu_1736_p10 = FH_read_reg_3552;

assign grp_fu_1748_p0 = grp_fu_1748_p00;

assign grp_fu_1748_p00 = trunc_ln88_reg_3958;

assign grp_fu_1748_p1 = grp_fu_1748_p10;

assign grp_fu_1748_p10 = bound62_reg_4005;

assign grp_fu_1760_p0 = FW_read_reg_3531[30:0];

assign grp_fu_1760_p1 = FH_read_reg_3552[30:0];

assign grp_fu_1769_p1 = C_read_reg_3582[30:0];

assign grp_fu_1778_p0 = j_1_reg_753[30:0];

assign grp_fu_1811_p0 = cast61_reg_3999;

assign grp_fu_1811_p1 = grp_fu_1811_p10;

assign grp_fu_1811_p10 = FW_read_reg_3531;

assign grp_fu_2125_p0 = grp_fu_2125_p00;

assign grp_fu_2125_p00 = $unsigned(C_read_reg_3582);

assign grp_fu_2125_p1 = grp_fu_2125_p10;

assign grp_fu_2125_p10 = bound96_reg_4232;

assign grp_fu_2138_p0 = grp_fu_2138_p00;

assign grp_fu_2138_p00 = trunc_ln88_reg_3958;

assign grp_fu_2138_p1 = grp_fu_2138_p10;

assign grp_fu_2138_p10 = reg_1184;

assign grp_fu_2760_p0 = j_2_reg_946[30:0];

assign grp_fu_3108_p0 = grp_fu_3108_p00;

assign grp_fu_3108_p00 = reg_1184;

assign grp_fu_3108_p1 = grp_fu_3108_p10;

assign grp_fu_3108_p10 = sub_ln70_reg_3947;

assign grp_fu_3120_p0 = grp_fu_3120_p00;

assign grp_fu_3120_p00 = $unsigned(C_read_reg_3582);

assign grp_fu_3120_p1 = grp_fu_3120_p10;

assign grp_fu_3120_p10 = bound27_reg_4722;

assign grp_fu_3469_p0 = select_ln103_1_fu_2201_p3[9:0];

assign grp_fu_3469_p2 = select_ln103_fu_2253_p3[9:0];

assign grp_fu_3477_p0 = ((select_ln106_5_reg_4437[0:0] == 1'b1) ? p_mid1100_fu_2585_p2 : select_ln106_4_fu_2563_p3);

assign grp_fu_3484_p1 = sext_ln1118_1_reg_4382;

assign grp_fu_3484_p2 = {{lhs_2_fu_2697_p3}, {13'd0}};

assign grp_fu_3492_p1 = sext_ln1118_1_reg_4382;

assign grp_fu_3492_p2 = {{dwbuf_V_q1}, {13'd0}};

assign grp_fu_3500_p0 = ((select_ln71_4_reg_4808[0:0] == 1'b1) ? p_mid132_fu_3270_p2 : select_ln71_3_fu_3265_p3);

assign grp_fu_3500_p2 = select_ln72_fu_3285_p3[9:0];

assign icmp_ln103_fu_2184_p2 = ((indvar_flatten144_reg_823 == bound138_reg_4273) ? 1'b1 : 1'b0);

assign icmp_ln104_fu_2195_p2 = ((h_1_reg_845 == reg_1184) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_2310_p2 = ((w_1_reg_857 == sub_ln103_reg_4263) ? 1'b1 : 1'b0);

assign icmp_ln106_fu_2431_p2 = ((ap_phi_mux_indvar_flatten133_phi_fu_894_p4 == bound109_reg_4268) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_2442_p2 = ((ap_phi_mux_indvar_flatten104_phi_fu_905_p4 == bound96_reg_4232) ? 1'b1 : 1'b0);

assign icmp_ln108_1_fu_2484_p2 = ((ap_phi_mux_fw_1_phi_fu_927_p4 == FW_read_reg_3531) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_2157_p2 = ((FW_read_reg_3531 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln120_fu_2769_p2 = ((indvar_flatten178_reg_935 == bound73_reg_4058) ? 1'b1 : 1'b0);

assign icmp_ln121_fu_2780_p2 = ((indvar_flatten155_reg_969 == bound62_reg_4005) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_2797_p2 = ((k_2_reg_981 == FH_read_reg_3552) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_3033_p2 = ((l_2_cast_fu_3029_p1 == FW_read_reg_3531) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_3076_p2 = ((i_5_reg_1003 == trunc_ln88_reg_3958) ? 1'b1 : 1'b0);

assign icmp_ln140_1_fu_3436_p2 = ((ap_phi_mux_i_6_phi_fu_1143_p4 == trunc_ln140_reg_4917) ? 1'b1 : 1'b0);

assign icmp_ln140_fu_3396_p2 = (($signed(mul293_reg_4907) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln49_1_fu_1277_p2 = ((indvar_flatten22_reg_625 == bound5_reg_3718) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_1224_p2 = (($signed(F_read_reg_3593) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_1301_p2 = ((indvar_flatten_reg_648 == bound_reg_3677) ? 1'b1 : 1'b0);

assign icmp_ln51_1_fu_1318_p2 = ((k_reg_672 == FH_read_reg_3552) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_1578_p2 = ((l_cast_fu_1574_p1 == FW_read_reg_3531) ? 1'b1 : 1'b0);

assign icmp_ln62_fu_1620_p2 = ((i_1_reg_695 == empty_49_reg_3683) ? 1'b1 : 1'b0);

assign icmp_ln703_1_fu_2178_p2 = ((empty_79_fu_2168_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln703_2_fu_2225_p2 = ((empty_83_fu_2213_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln703_3_fu_2239_p2 = ((empty_83_fu_2213_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln703_fu_2172_p2 = ((empty_79_fu_2168_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_3138_p2 = ((f_reg_1014 == trunc_ln70_1_reg_4747) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_3183_p2 = ((indvar_flatten57_reg_1025 == bound41_reg_4752) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_3194_p2 = ((indvar_flatten36_reg_1047 == bound27_reg_4722) ? 1'b1 : 1'b0);

assign icmp_ln73_1_fu_3227_p2 = ((w_reg_1070 == sub_ln70_reg_3947) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_1683_p2 = ((add_ln70_fu_1673_p2 == FW_read_reg_3531) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_3311_p2 = ((fh_reg_1092 == FH_read_reg_3552) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_3367_p2 = ((fw_cast_fu_3363_p1 == FW_read_reg_3531) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_1697_p2 = ((i_2_reg_742 == trunc_ln88_reg_3958) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_1793_p2 = ((indvar_flatten91_reg_765 == bound73_reg_4058) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_1798_p2 = ((indvar_flatten68_reg_788 == bound62_reg_4005) ? 1'b1 : 1'b0);

assign icmp_ln95_1_fu_1884_p2 = ((k_1_reg_800 == FH_read_reg_3552) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_2083_p2 = ((l_1_cast_fu_2079_p1 == FW_read_reg_3531) ? 1'b1 : 1'b0);

assign l_1_cast_fu_2079_p1 = l_1_reg_812;

assign l_2_cast_fu_3029_p1 = l_2_reg_992;

assign l_cast_fu_1574_p1 = l_reg_684;

assign lhs_2_fu_2697_p3 = ((addr_cmp_reg_4535[0:0] == 1'b1) ? reuse_reg_fu_268 : dx_Dout_A);

assign or_ln107_fu_2569_p2 = (select_ln106_5_reg_4437 | icmp_ln107_reg_4408);

assign or_ln121_fu_2809_p2 = (select_ln120_4_fu_2802_p3 | icmp_ln121_fu_2780_p2);

assign or_ln50_fu_1456_p2 = (select_ln49_5_reg_3779 | icmp_ln50_reg_3758);

assign or_ln72_fu_3281_p2 = (select_ln71_4_reg_4808 | icmp_ln72_reg_4791);

assign or_ln94_fu_1901_p2 = (select_ln93_4_fu_1889_p3 | icmp_ln94_reg_4093);

assign outH_fu_1204_p2 = (sub_ln43_fu_1200_p2 + 10'd1);

assign outW_fu_1218_p2 = (sub_ln44_fu_1210_p2 + 32'd1);

assign p_cast45_fu_2324_p1 = empty_80_fu_2319_p2;

assign p_mid1100_fu_2585_p2 = (tmp19_mid1_fu_2581_p2 + select_ln106_1_fu_2524_p3);

assign p_mid1115_fu_2459_p0 = add_ln106_fu_2436_p2[9:0];

assign p_mid1121_fu_2559_p2 = (trunc_ln104_reg_4331 + p_mid1115_reg_4421);

assign p_mid132_fu_3270_p2 = (trunc_ln72_1_reg_4814 + empty_60_reg_4765);

assign p_shl1_cast_fu_1554_p3 = {{trunc_ln53_4_fu_1550_p1}, {2'd0}};

assign p_shl3_cast_fu_2059_p3 = {{trunc_ln97_4_fu_2055_p1}, {2'd0}};

assign p_shl5_cast_fu_3009_p3 = {{trunc_ln124_4_fu_3005_p1}, {2'd0}};

assign p_shl7_cast_fu_2640_p3 = {{trunc_ln1118_1_reg_4469}, {2'd0}};

assign select_ln103_1_fu_2201_p3 = ((icmp_ln104_fu_2195_p2[0:0] == 1'b1) ? add_ln103_2_fu_2189_p2 : f_1_reg_834);

assign select_ln103_2_fu_2217_p3 = ((icmp_ln104_fu_2195_p2[0:0] == 1'b1) ? empty_83_fu_2213_p1 : empty_79_fu_2168_p1);

assign select_ln103_3_fu_2231_p3 = ((icmp_ln104_fu_2195_p2[0:0] == 1'b1) ? icmp_ln703_2_fu_2225_p2 : icmp_ln703_fu_2172_p2);

assign select_ln103_4_fu_2245_p3 = ((icmp_ln104_fu_2195_p2[0:0] == 1'b1) ? icmp_ln703_3_fu_2239_p2 : icmp_ln703_1_fu_2178_p2);

assign select_ln103_fu_2253_p3 = ((icmp_ln104_reg_4291[0:0] == 1'b1) ? 32'd0 : h_1_reg_845);

assign select_ln106_1_fu_2524_p3 = ((icmp_ln107_reg_4408[0:0] == 1'b1) ? p_mid1115_reg_4421 : empty_81_reg_4388);

assign select_ln106_2_fu_2464_p3 = ((icmp_ln107_fu_2442_p2[0:0] == 1'b1) ? add_ln106_fu_2436_p2 : c_1_reg_878);

assign select_ln106_3_fu_2476_p3 = ((icmp_ln107_fu_2442_p2[0:0] == 1'b1) ? 6'd0 : trunc_ln727_fu_2427_p1);

assign select_ln106_4_fu_2563_p3 = ((icmp_ln107_reg_4408[0:0] == 1'b1) ? p_mid1121_fu_2559_p2 : empty_82_reg_4399);

assign select_ln106_5_fu_2489_p3 = ((icmp_ln107_fu_2442_p2[0:0] == 1'b1) ? icmp_ln108_reg_4278 : icmp_ln108_1_fu_2484_p2);

assign select_ln106_fu_2447_p3 = ((icmp_ln107_fu_2442_p2[0:0] == 1'b1) ? 32'd0 : ap_phi_mux_fh_1_phi_fu_916_p4);

assign select_ln107_1_fu_2510_p3 = ((select_ln106_5_fu_2489_p3[0:0] == 1'b1) ? trunc_ln727_1_fu_2506_p1 : select_ln106_3_fu_2476_p3);

assign select_ln107_3_fu_2615_p3 = ((select_ln106_5_reg_4437[0:0] == 1'b1) ? add_ln107_reg_4444 : select_ln106_reg_4416);

assign select_ln107_4_fu_2634_p3 = ((icmp_ln107_reg_4408[0:0] == 1'b1) ? 64'd1 : add_ln107_2_reg_4459);

assign select_ln107_fu_2573_p3 = ((or_ln107_fu_2569_p2[0:0] == 1'b1) ? 32'd0 : fw_1_reg_923);

assign select_ln120_1_fu_2785_p3 = ((icmp_ln121_fu_2780_p2[0:0] == 1'b1) ? add_ln120_fu_2774_p2 : i_4_reg_958);

assign select_ln120_2_fu_2914_p3 = ((icmp_ln121_reg_4584[0:0] == 1'b1) ? 31'd0 : empty_86_reg_4579);

assign select_ln120_3_fu_2862_p3 = ((icmp_ln121_reg_4584[0:0] == 1'b1) ? 4'd0 : trunc_ln124_reg_4570);

assign select_ln120_4_fu_2802_p3 = ((icmp_ln121_fu_2780_p2[0:0] == 1'b1) ? icmp_ln95_reg_4064 : icmp_ln122_fu_2797_p2);

assign select_ln120_fu_2827_p3 = ((icmp_ln121_reg_4584[0:0] == 1'b1) ? 32'd0 : j_2_reg_946);

assign select_ln121_1_fu_2920_p3 = ((select_ln120_4_reg_4604[0:0] == 1'b1) ? p_mid1153_reg_4648 : select_ln120_2_fu_2914_p3);

assign select_ln121_2_fu_2882_p3 = ((select_ln120_4_reg_4604[0:0] == 1'b1) ? trunc_ln124_1_fu_2878_p1 : select_ln120_3_fu_2862_p3);

assign select_ln121_3_fu_2899_p3 = ((select_ln120_4_reg_4604[0:0] == 1'b1) ? add_ln121_fu_2868_p2 : select_ln120_fu_2827_p3);

assign select_ln121_4_fu_3063_p3 = ((icmp_ln121_reg_4584[0:0] == 1'b1) ? 64'd1 : add_ln121_1_fu_3057_p2);

assign select_ln121_fu_2815_p3 = ((or_ln121_fu_2809_p2[0:0] == 1'b1) ? 32'd0 : k_2_reg_981);

assign select_ln49_1_fu_1361_p3 = ((icmp_ln50_reg_3758[0:0] == 1'b1) ? p_mid1_reg_3811 : empty_51_reg_3737);

assign select_ln49_2_fu_1306_p3 = ((icmp_ln50_fu_1301_p2[0:0] == 1'b1) ? add_ln49_fu_1295_p2 : i_reg_636);

assign select_ln49_3_fu_1390_p3 = ((icmp_ln50_reg_3758[0:0] == 1'b1) ? p_mid1_reg_3811 : tmp_reg_3743);

assign select_ln49_4_fu_1395_p3 = ((icmp_ln50_reg_3758[0:0] == 1'b1) ? 4'd0 : trunc_ln53_reg_3748);

assign select_ln49_5_fu_1323_p3 = ((icmp_ln50_fu_1301_p2[0:0] == 1'b1) ? icmp_ln51_reg_3723 : icmp_ln51_1_fu_1318_p2);

assign select_ln49_fu_1354_p3 = ((icmp_ln50_reg_3758[0:0] == 1'b1) ? 32'd0 : j_reg_660);

assign select_ln50_1_fu_1417_p3 = ((select_ln49_5_reg_3779[0:0] == 1'b1) ? tmp_mid1_fu_1411_p2 : select_ln49_3_fu_1390_p3);

assign select_ln50_2_fu_1428_p3 = ((select_ln49_5_reg_3779[0:0] == 1'b1) ? trunc_ln53_1_fu_1424_p1 : select_ln49_4_fu_1395_p3);

assign select_ln50_3_fu_1445_p3 = ((select_ln49_5_reg_3779[0:0] == 1'b1) ? add_ln50_fu_1401_p2 : select_ln49_fu_1354_p3);

assign select_ln50_4_fu_1607_p3 = ((icmp_ln50_reg_3758[0:0] == 1'b1) ? 64'd1 : add_ln50_1_fu_1601_p2);

assign select_ln50_fu_1460_p3 = ((or_ln50_fu_1456_p2[0:0] == 1'b1) ? 32'd0 : k_reg_672);

assign select_ln71_1_fu_3207_p3 = ((icmp_ln72_fu_3194_p2[0:0] == 1'b1) ? add_ln71_fu_3188_p2 : c_reg_1036);

assign select_ln71_2_fu_3219_p3 = ((icmp_ln72_fu_3194_p2[0:0] == 1'b1) ? 10'd0 : trunc_ln72_fu_3174_p1);

assign select_ln71_3_fu_3265_p3 = ((icmp_ln72_reg_4791[0:0] == 1'b1) ? empty_60_reg_4765 : empty_61_reg_4783);

assign select_ln71_4_fu_3232_p3 = ((icmp_ln72_fu_3194_p2[0:0] == 1'b1) ? icmp_ln73_reg_3953 : icmp_ln73_1_fu_3227_p2);

assign select_ln71_fu_3199_p3 = ((icmp_ln72_fu_3194_p2[0:0] == 1'b1) ? 32'd0 : h_reg_1059);

assign select_ln72_1_fu_3249_p3 = ((select_ln71_4_fu_3232_p3[0:0] == 1'b1) ? trunc_ln72_1_fu_3245_p1 : select_ln71_2_fu_3219_p3);

assign select_ln72_3_fu_3257_p3 = ((select_ln71_4_fu_3232_p3[0:0] == 1'b1) ? add_ln72_fu_3239_p2 : select_ln71_fu_3199_p3);

assign select_ln72_4_fu_3341_p3 = ((icmp_ln72_reg_4791[0:0] == 1'b1) ? 64'd1 : add_ln72_1_fu_3335_p2);

assign select_ln72_fu_3285_p3 = ((or_ln72_fu_3281_p2[0:0] == 1'b1) ? 32'd0 : w_reg_1070);

assign select_ln93_1_fu_1841_p3 = ((icmp_ln94_reg_4093[0:0] == 1'b1) ? add_ln93_fu_1828_p2 : i_3_reg_776);

assign select_ln93_2_fu_1964_p3 = ((icmp_ln94_reg_4093[0:0] == 1'b1) ? 31'd0 : empty_73_reg_4085);

assign select_ln93_3_fu_1878_p3 = ((icmp_ln94_reg_4093[0:0] == 1'b1) ? 4'd0 : trunc_ln97_reg_4075);

assign select_ln93_4_fu_1889_p3 = ((icmp_ln94_reg_4093[0:0] == 1'b1) ? icmp_ln95_reg_4064 : icmp_ln95_1_fu_1884_p2);

assign select_ln93_fu_1834_p3 = ((icmp_ln94_reg_4093[0:0] == 1'b1) ? 32'd0 : j_1_reg_753);

assign select_ln94_1_fu_1970_p3 = ((select_ln93_4_reg_4140[0:0] == 1'b1) ? p_mid166_reg_4177 : select_ln93_2_fu_1964_p3);

assign select_ln94_2_fu_1922_p3 = ((select_ln93_4_fu_1889_p3[0:0] == 1'b1) ? trunc_ln97_1_fu_1918_p1 : select_ln93_3_fu_1878_p3);

assign select_ln94_3_fu_1940_p3 = ((select_ln93_4_fu_1889_p3[0:0] == 1'b1) ? add_ln94_fu_1895_p2 : select_ln93_fu_1834_p3);

assign select_ln94_4_fu_2112_p3 = ((icmp_ln94_reg_4093[0:0] == 1'b1) ? 64'd1 : add_ln94_1_fu_2106_p2);

assign select_ln94_fu_1906_p3 = ((or_ln94_fu_1901_p2[0:0] == 1'b1) ? 32'd0 : k_1_reg_800);

assign sext_ln1118_1_fu_2389_p0 = dy_Dout_A;

assign sext_ln1118_1_fu_2389_p1 = sext_ln1118_1_fu_2389_p0;

assign sext_ln1118_3_fu_2537_p1 = add_ln1118_1_fu_2532_p2;

assign sext_ln1118_4_fu_2549_p1 = $signed(tmp_13_fu_2541_p3);

assign sext_ln121_fu_2858_p1 = $signed(sub_ln124_fu_2852_p2);

assign sext_ln123_fu_2978_p1 = $signed(trunc_ln1_fu_2968_p4);

assign sext_ln124_1_fu_2946_p1 = $signed(tmp_11_fu_2939_p3);

assign sext_ln124_fu_2936_p1 = add_ln124_reg_4627;

assign sext_ln140_1_fu_3426_p1 = $signed(trunc_ln140_1_fu_3417_p4);

assign sext_ln140_fu_3413_p1 = $signed(trunc_ln4_fu_3404_p4);

assign sext_ln50_fu_1386_p1 = $signed(sub_ln53_fu_1380_p2);

assign sext_ln52_fu_1523_p1 = $signed(trunc_ln5_fu_1513_p4);

assign sext_ln53_1_fu_1491_p1 = $signed(tmp_4_fu_1484_p3);

assign sext_ln53_fu_1481_p1 = add_ln53_reg_3822;

assign sext_ln62_fu_1339_p1 = $signed(trunc_ln3_fu_1330_p4);

assign sext_ln703_fu_2284_p1 = $signed(sub_ln1118_fu_2278_p2);

assign sext_ln88_fu_1662_p1 = $signed(trunc_ln8_fu_1653_p4);

assign sext_ln94_fu_1874_p1 = $signed(sub_ln97_fu_1868_p2);

assign sext_ln96_fu_2028_p1 = $signed(trunc_ln_fu_2018_p4);

assign sext_ln97_1_fu_1996_p1 = $signed(tmp_6_fu_1989_p3);

assign sext_ln97_fu_1986_p1 = add_ln97_reg_4156;

assign sub_ln103_fu_2152_p2 = (add_ln103_fu_2147_p2 - FW_read_reg_3531);

assign sub_ln1118_fu_2278_p2 = (zext_ln1118_2_fu_2274_p1 - zext_ln1118_1_fu_2264_p1);

assign sub_ln124_fu_2852_p2 = (zext_ln124_1_fu_2848_p1 - zext_ln124_fu_2838_p1);

assign sub_ln43_fu_1200_p2 = ($signed(empty_48_reg_3639) - $signed(empty_reg_3634));

assign sub_ln44_fu_1210_p2 = ($signed(W_read_reg_3566) - $signed(FW_read_reg_3531));

assign sub_ln53_fu_1380_p2 = (zext_ln53_1_fu_1376_p1 - zext_ln53_fu_1366_p1);

assign sub_ln70_fu_1678_p2 = (add_ln70_fu_1673_p2 - FW_read_reg_3531);

assign sub_ln97_fu_1868_p2 = (zext_ln97_1_fu_1864_p1 - zext_ln97_fu_1852_p1);

assign tmp11_fu_1472_p2 = (trunc_ln51_fu_1468_p1 + mul_ln50_reg_3833);

assign tmp17_fu_3320_p2 = (mul_ln71_reg_4845 + trunc_ln75_fu_3316_p1);

assign tmp18_fu_1976_p2 = (mul_ln93_reg_4172 + empty_76_reg_4182);

assign tmp19_fu_2417_p2 = (trunc_ln104_reg_4331 + trunc_ln107_fu_2413_p1);

assign tmp19_mid1_fu_2581_p2 = (trunc_ln104_reg_4331 + trunc_ln107_1_reg_4449);

assign tmp20_fu_2926_p2 = (mul_ln120_reg_4638 + empty_90_reg_4643);

assign tmp_10_fu_2841_p3 = {{trunc_ln120_reg_4598}, {2'd0}};

assign tmp_11_fu_2939_p3 = {{add_ln124_reg_4627}, {2'd0}};

assign tmp_12_fu_2956_p3 = {{empty_91_reg_4653}, {1'd0}};

assign tmp_13_fu_2541_p3 = {{add_ln1118_1_fu_2532_p2}, {2'd0}};

assign tmp_1_fu_3156_p4 = f_reg_1014[1:0];

assign tmp_3_fu_3085_p4 = i_5_reg_1003[1:0];

assign tmp_4_fu_1484_p3 = {{add_ln53_reg_3822}, {2'd0}};

assign tmp_5_fu_1369_p3 = {{trunc_ln49_2_reg_3773}, {2'd0}};

assign tmp_6_fu_1989_p3 = {{add_ln97_reg_4156}, {2'd0}};

assign tmp_7_fu_1501_p3 = {{empty_54_reg_3849}, {1'd0}};

assign tmp_8_fu_2006_p3 = {{empty_77_reg_4187}, {1'd0}};

assign tmp_9_fu_2267_p3 = {{select_ln103_2_reg_4306}, {2'd0}};

assign tmp_fu_1286_p2 = (trunc_ln50_fu_1282_p1 + empty_51_reg_3737);

assign tmp_mid1_fu_1411_p2 = (trunc_ln50_1_fu_1407_p1 + select_ln49_1_fu_1361_p3);

assign tmp_s_fu_1856_p3 = {{trunc_ln93_2_fu_1848_p1}, {2'd0}};

assign trunc_ln103_fu_2144_p1 = W_read_reg_3566[9:0];

assign trunc_ln104_fu_2260_p1 = select_ln103_fu_2253_p3[9:0];

assign trunc_ln105_fu_2315_p1 = w_1_reg_857[9:0];

assign trunc_ln106_2_fu_2472_p1 = select_ln106_2_fu_2464_p3[3:0];

assign trunc_ln107_1_fu_2502_p1 = add_ln107_fu_2496_p2[9:0];

assign trunc_ln107_fu_2413_p1 = ap_phi_mux_fh_1_phi_fu_916_p4[9:0];

assign trunc_ln109_fu_2620_p1 = select_ln107_fu_2573_p3[9:0];

assign trunc_ln1118_1_fu_2604_p1 = add_ln1118_3_fu_2594_p2[5:0];

assign trunc_ln1118_2_fu_2624_p1 = select_ln107_fu_2573_p3[7:0];

assign trunc_ln1118_fu_2600_p1 = add_ln1118_3_fu_2594_p2[7:0];

assign trunc_ln120_fu_2793_p1 = select_ln120_1_fu_2785_p3[1:0];

assign trunc_ln121_1_fu_2874_p1 = add_ln121_fu_2868_p2[30:0];

assign trunc_ln122_fu_2823_p1 = select_ln121_fu_2815_p3[30:0];

assign trunc_ln124_1_fu_2878_p1 = add_ln121_fu_2868_p2[3:0];

assign trunc_ln124_2_fu_2988_p1 = select_ln121_reg_4611[5:0];

assign trunc_ln124_3_fu_3001_p1 = add_ln124_2_fu_2995_p2[7:0];

assign trunc_ln124_4_fu_3005_p1 = add_ln124_2_fu_2995_p2[5:0];

assign trunc_ln124_5_fu_3038_p1 = l_2_reg_992[7:0];

assign trunc_ln124_fu_2765_p1 = j_2_reg_946[3:0];

assign trunc_ln140_1_fu_3417_p4 = {{debug_dx_read_reg_3603[31:1]}};

assign trunc_ln140_fu_3401_p1 = mul293_reg_4907[30:0];

assign trunc_ln1_fu_2968_p4 = {{empty_92_fu_2963_p2[31:1]}};

assign trunc_ln3_fu_1330_p4 = {{b_read_reg_3618[31:1]}};

assign trunc_ln44_fu_1214_p1 = sub_ln44_fu_1210_p2[9:0];

assign trunc_ln49_1_fu_1260_p1 = C_read_reg_3582[30:0];

assign trunc_ln49_2_fu_1314_p1 = select_ln49_2_fu_1306_p3[1:0];

assign trunc_ln49_fu_1257_p1 = FH_read_reg_3552[30:0];

assign trunc_ln4_fu_3404_p4 = {{debug_x_read_reg_3608[31:1]}};

assign trunc_ln50_1_fu_1407_p1 = add_ln50_fu_1401_p2[30:0];

assign trunc_ln50_fu_1282_p1 = j_reg_660[30:0];

assign trunc_ln51_fu_1468_p1 = select_ln50_fu_1460_p3[30:0];

assign trunc_ln53_1_fu_1424_p1 = add_ln50_fu_1401_p2[3:0];

assign trunc_ln53_2_fu_1533_p1 = select_ln50_reg_3838[5:0];

assign trunc_ln53_3_fu_1546_p1 = add_ln53_2_fu_1540_p2[7:0];

assign trunc_ln53_4_fu_1550_p1 = add_ln53_2_fu_1540_p2[5:0];

assign trunc_ln53_5_fu_1583_p1 = l_reg_684[7:0];

assign trunc_ln53_fu_1291_p1 = j_reg_660[3:0];

assign trunc_ln5_fu_1513_p4 = {{empty_55_fu_1508_p2[31:1]}};

assign trunc_ln63_fu_1625_p1 = i_1_reg_695[1:0];

assign trunc_ln70_1_fu_3129_p1 = F_read_reg_3593[30:0];

assign trunc_ln70_fu_3126_p1 = W_read_reg_3566[9:0];

assign trunc_ln71_fu_3215_p1 = select_ln71_1_fu_3207_p3[9:0];

assign trunc_ln727_1_fu_2506_p1 = add_ln107_fu_2496_p2[5:0];

assign trunc_ln727_fu_2427_p1 = ap_phi_mux_fh_1_phi_fu_916_p4[5:0];

assign trunc_ln72_1_fu_3245_p1 = add_ln72_fu_3239_p2[9:0];

assign trunc_ln72_fu_3174_p1 = h_reg_1059[9:0];

assign trunc_ln73_fu_3293_p1 = select_ln72_fu_3285_p3[9:0];

assign trunc_ln75_fu_3316_p1 = fh_reg_1092[9:0];

assign trunc_ln77_fu_3372_p1 = fw_reg_1103[9:0];

assign trunc_ln88_fu_1688_p1 = F_read_reg_3593[30:0];

assign trunc_ln89_fu_1702_p1 = i_2_reg_742[1:0];

assign trunc_ln8_fu_1653_p4 = {{db_read_reg_3613[31:1]}};

assign trunc_ln93_2_fu_1848_p1 = select_ln93_1_fu_1841_p3[1:0];

assign trunc_ln93_fu_1754_p1 = FW_read_reg_3531[30:0];

assign trunc_ln94_1_fu_1914_p1 = add_ln94_fu_1895_p2[30:0];

assign trunc_ln95_fu_1948_p1 = select_ln94_fu_1906_p3[30:0];

assign trunc_ln97_1_fu_1918_p1 = add_ln94_fu_1895_p2[3:0];

assign trunc_ln97_2_fu_2038_p1 = select_ln94_reg_4145[5:0];

assign trunc_ln97_3_fu_2051_p1 = add_ln97_2_fu_2045_p2[7:0];

assign trunc_ln97_4_fu_2055_p1 = add_ln97_2_fu_2045_p2[5:0];

assign trunc_ln97_5_fu_2088_p1 = l_1_reg_812[7:0];

assign trunc_ln97_fu_1783_p1 = j_1_reg_753[3:0];

assign trunc_ln_fu_2018_p4 = {{empty_78_fu_2013_p2[31:1]}};

assign x_Addr_A = x_Addr_A_orig << 32'd1;

assign x_Clk_A = ap_clk;

assign x_Din_A = 16'd0;

assign x_Rst_A = ap_rst_n_inv;

assign x_WEN_A = 2'd0;

assign y_Addr_A = y_Addr_A_orig << 32'd1;

assign y_Clk_A = ap_clk;

assign y_Rst_A = ap_rst_n_inv;

assign zext_ln1116_fu_3381_p1 = add_ln1116_fu_3376_p2;

assign zext_ln1118_1_fu_2264_p1 = select_ln103_2_reg_4306;

assign zext_ln1118_2_fu_2274_p1 = tmp_9_fu_2267_p3;

assign zext_ln1118_3_fu_2529_p1 = trunc_ln106_2_reg_4432;

assign zext_ln1118_4_fu_2591_p1 = select_ln107_1_reg_4454;

assign zext_ln1118_5_fu_2657_p1 = add_ln1118_5_reg_4504;

assign zext_ln1118_fu_2666_p1 = add_ln1118_fu_2662_p2;

assign zext_ln124_1_fu_2848_p1 = tmp_10_fu_2841_p3;

assign zext_ln124_2_fu_2889_p1 = select_ln121_2_fu_2882_p3;

assign zext_ln124_3_fu_2991_p1 = trunc_ln124_2_fu_2988_p1;

assign zext_ln124_4_fu_3047_p1 = add_ln124_4_fu_3042_p2;

assign zext_ln124_fu_2838_p1 = trunc_ln120_reg_4598;

assign zext_ln141_fu_3441_p1 = ap_phi_mux_i_6_phi_fu_1143_p4;

assign zext_ln53_1_fu_1376_p1 = tmp_5_fu_1369_p3;

assign zext_ln53_2_fu_1435_p1 = select_ln50_2_fu_1428_p3;

assign zext_ln53_3_fu_1536_p1 = trunc_ln53_2_fu_1533_p1;

assign zext_ln53_4_fu_1592_p1 = add_ln53_4_reg_3874_pp0_iter1_reg;

assign zext_ln53_fu_1366_p1 = trunc_ln49_2_reg_3773;

assign zext_ln74_fu_3301_p1 = $unsigned(grp_fu_3500_p3);

assign zext_ln97_1_fu_1864_p1 = tmp_s_fu_1856_p3;

assign zext_ln97_2_fu_1930_p1 = select_ln94_2_fu_1922_p3;

assign zext_ln97_3_fu_2041_p1 = trunc_ln97_2_fu_2038_p1;

assign zext_ln97_4_fu_2097_p1 = add_ln97_4_reg_4212_pp3_iter1_reg;

assign zext_ln97_fu_1852_p1 = trunc_ln93_2_fu_1848_p1;

always @ (posedge ap_clk) begin
    cast61_reg_3999[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //conv_combined
