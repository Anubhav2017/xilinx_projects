Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2020.2 (lin64) Build 3064766 Wed Nov 18 09:12:47 MST 2020
| Date         : Thu May  5 15:12:30 2022
| Host         : anubhav-acer running 64-bit Ubuntu 20.04.4 LTS
| Command      : report_drc -file fwd_fcc_test_wrapper_drc_opted.rpt -pb fwd_fcc_test_wrapper_drc_opted.pb -rpx fwd_fcc_test_wrapper_drc_opted.rpx
| Design       : fwd_fcc_test_wrapper
| Device       : xc7z020clg400-1
| Speed File   : -1
| Design State : Synthesized
---------------------------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 277
+-----------+----------+----------------------------+------------+
| Rule      | Severity | Description                | Violations |
+-----------+----------+----------------------------+------------+
| UTLZ-1    | Error    | Resource utilization       | 5          |
| CHECK-3   | Warning  | Report rule limit reached  | 1          |
| DPIP-1    | Warning  | Input pipelining           | 9          |
| DPOP-1    | Warning  | PREG Output pipelining     | 68         |
| DPOP-2    | Warning  | MREG Output pipelining     | 174        |
| REQP-1840 | Warning  | RAMB18 async control check | 20         |
+-----------+----------+----------------------------+------------+

2. REPORT DETAILS
-----------------
UTLZ-1#1 Error
Resource utilization  - PBlock:ROOT
DSP48E1 over-utilized in Top Level Design (This design requires more DSP48E1 cells than are available in the target device. This design requires 239 of such cell types but only 220 compatible sites are available in the target device. Please analyze your synthesis results and constraints to ensure the design is mapped to Xilinx primitives as expected. If so, please consider targeting a larger device.)ROOT
Related violations: <none>

UTLZ-1#2 Error
Resource utilization  - PBlock:ROOT
DSPs over-utilized in Top Level Design (This design requires more DSPs cells than are available in the target device. This design requires 239 of such cell types but only 220 compatible sites are available in the target device. Please analyze your synthesis results and constraints to ensure the design is mapped to Xilinx primitives as expected. If so, please consider targeting a larger device.)ROOT
Related violations: <none>

UTLZ-1#3 Error
Resource utilization  - PBlock:ROOT
RAMB18 and RAMB36/FIFO over-utilized in Top Level Design (This design requires more RAMB18 and RAMB36/FIFO cells than are available in the target device. This design requires 704 of such cell types but only 280 compatible sites are available in the target device. Please analyze your synthesis results and constraints to ensure the design is mapped to Xilinx primitives as expected. If so, please consider targeting a larger device.)ROOT
Related violations: <none>

UTLZ-1#4 Error
Resource utilization  - PBlock:ROOT
RAMB36/FIFO over-utilized in Top Level Design (This design requires more RAMB36/FIFO cells than are available in the target device. This design requires 346 of such cell types but only 140 compatible sites are available in the target device. Please analyze your synthesis results and constraints to ensure the design is mapped to Xilinx primitives as expected. If so, please consider targeting a larger device.)ROOT
Related violations: <none>

UTLZ-1#5 Error
Resource utilization  - PBlock:ROOT
RAMB36E1 over-utilized in Top Level Design (This design requires more RAMB36E1 cells than are available in the target device. This design requires 346 of such cell types but only 140 compatible sites are available in the target device. Please analyze your synthesis results and constraints to ensure the design is mapped to Xilinx primitives as expected. If so, please consider targeting a larger device.)ROOT
Related violations: <none>

CHECK-3#1 Warning
Report rule limit reached  
REQP-1840 rule limit reached: 20 violations have been found.
Related violations: <none>

DPIP-1#1 Warning
Input pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mac_muladd_16s_16s_23ns_23_4_1_U12/backward_fcc_mac_muladd_16s_16s_23ns_23_4_1_DSP48_1_U/p_reg_reg input fwd_fcc_test_i/backward_fcc_0/inst/mac_muladd_16s_16s_23ns_23_4_1_U12/backward_fcc_mac_muladd_16s_16s_23ns_23_4_1_DSP48_1_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mac_muladd_16s_16s_23ns_23_4_1_U43/conv_bckwd_mac_muladd_16s_16s_23ns_23_4_1_DSP48_3_U/p_reg_reg input fwd_fcc_test_i/conv_bckwd_0/inst/mac_muladd_16s_16s_23ns_23_4_1_U43/conv_bckwd_mac_muladd_16s_16s_23ns_23_4_1_DSP48_3_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mac_muladd_7ns_8ns_10ns_14_4_1_U41/conv_bckwd_mac_muladd_7ns_8ns_10ns_14_4_1_DSP48_1_U/p_reg_reg input fwd_fcc_test_i/conv_bckwd_0/inst/mac_muladd_7ns_8ns_10ns_14_4_1_U41/conv_bckwd_mac_muladd_7ns_8ns_10ns_14_4_1_DSP48_1_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/ama_addmuladd_11ns_10ns_8ns_17ns_17_4_1_U21/conv_fwd_ama_addmuladd_11ns_10ns_8ns_17ns_17_4_1_DSP48_1_U/p_reg_reg input fwd_fcc_test_i/conv_fwd_0/inst/ama_addmuladd_11ns_10ns_8ns_17ns_17_4_1_U21/conv_fwd_ama_addmuladd_11ns_10ns_8ns_17ns_17_4_1_DSP48_1_U/p_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#5 Warning
Input pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/ama_addmuladd_11ns_10ns_8ns_17ns_17_4_1_U21/conv_fwd_ama_addmuladd_11ns_10ns_8ns_17ns_17_4_1_DSP48_1_U/p_reg_reg input fwd_fcc_test_i/conv_fwd_0/inst/ama_addmuladd_11ns_10ns_8ns_17ns_17_4_1_U21/conv_fwd_ama_addmuladd_11ns_10ns_8ns_17ns_17_4_1_DSP48_1_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#6 Warning
Input pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mac_muladd_16s_16s_23ns_23_4_1_U23/conv_fwd_mac_muladd_16s_16s_23ns_23_4_1_DSP48_3_U/p_reg_reg input fwd_fcc_test_i/conv_fwd_0/inst/mac_muladd_16s_16s_23ns_23_4_1_U23/conv_fwd_mac_muladd_16s_16s_23ns_23_4_1_DSP48_3_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#7 Warning
Input pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_mul_14ns_8ns_17_4_1_U22/conv_fwd_mul_mul_14ns_8ns_17_4_1_DSP48_2_U/a_reg_reg input fwd_fcc_test_i/conv_fwd_0/inst/mul_mul_14ns_8ns_17_4_1_U22/conv_fwd_mul_mul_14ns_8ns_17_4_1_DSP48_2_U/a_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#8 Warning
Input pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_mul_14ns_8ns_17_4_1_U22/conv_fwd_mul_mul_14ns_8ns_17_4_1_DSP48_2_U/p_reg_reg input fwd_fcc_test_i/conv_fwd_0/inst/mul_mul_14ns_8ns_17_4_1_U22/conv_fwd_mul_mul_14ns_8ns_17_4_1_DSP48_2_U/p_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#9 Warning
Input pipelining  
DSP fwd_fcc_test_i/forward_fcc_0/inst/mac_muladd_16s_16s_23ns_23_4_1_U5/forward_fcc_mac_muladd_16s_16s_23ns_23_4_1_DSP48_0_U/p_reg_reg input fwd_fcc_test_i/forward_fcc_0/inst/mac_muladd_16s_16s_23ns_23_4_1_U5/forward_fcc_mac_muladd_16s_16s_23ns_23_4_1_DSP48_0_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/add_ln69_fu_1576_p2 output fwd_fcc_test_i/backward_fcc_0/inst/add_ln69_fu_1576_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/add_ln75_fu_1670_p2 output fwd_fcc_test_i/backward_fcc_0/inst/add_ln75_fu_1670_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31ns_32ns_63_2_1_U4/backward_fcc_mul_31ns_32ns_63_2_1_Multiplier_2_U/tmp_product output fwd_fcc_test_i/backward_fcc_0/inst/mul_31ns_32ns_63_2_1_U4/backward_fcc_mul_31ns_32ns_63_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#4 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31ns_32ns_63_2_1_U4/backward_fcc_mul_31ns_32ns_63_2_1_Multiplier_2_U/tmp_product__0 output fwd_fcc_test_i/backward_fcc_0/inst/mul_31ns_32ns_63_2_1_U4/backward_fcc_mul_31ns_32ns_63_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#5 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U1/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U1/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#6 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U3/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U3/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#7 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U7/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U7/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#8 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U9/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U9/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#9 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_32s_32s_32_2_1_U6/backward_fcc_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0 output fwd_fcc_test_i/backward_fcc_0/inst/mul_32s_32s_32_2_1_U6/backward_fcc_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#10 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_bckwd_mul_31ns_32ns_63_2_1_Multiplier_4_U/tmp_product output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_bckwd_mul_31ns_32ns_63_2_1_Multiplier_4_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#11 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_bckwd_mul_31ns_32ns_63_2_1_Multiplier_4_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_bckwd_mul_31ns_32ns_63_2_1_Multiplier_4_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#12 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_64ns_95_5_1_U29/conv_bckwd_mul_31ns_64ns_95_5_1_Multiplier_3_U/tmp_product output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_64ns_95_5_1_U29/conv_bckwd_mul_31ns_64ns_95_5_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#13 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_64ns_95_5_1_U7/conv_bckwd_mul_31ns_64ns_95_5_1_Multiplier_3_U/tmp_product output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_64ns_95_5_1_U7/conv_bckwd_mul_31ns_64ns_95_5_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#14 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U1/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U1/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#15 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U10/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U10/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#16 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U11/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U11/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#17 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U12/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U12/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#18 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U13/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U13/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#19 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U15/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U15/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#20 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U16/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U16/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#21 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U18/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U18/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#22 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U19/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U19/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#23 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U20/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U20/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#24 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U21/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U21/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#25 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U22/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U22/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#26 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U23/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U23/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#27 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U30/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U30/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#28 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U31/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U31/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#29 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U32/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U32/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#30 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U33/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U33/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#31 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U34/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U34/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#32 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U35/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U35/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#33 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U4/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U4/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#34 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U5/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U5/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#35 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U8/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U8/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#36 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U9/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U9/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#37 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product output fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#38 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#39 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U25/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product output fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U25/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#40 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U25/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U25/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#41 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U28/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product output fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U28/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#42 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U28/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U28/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#43 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U3/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product output fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U3/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#44 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U3/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product__0 output fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U3/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#45 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_64ns_96_5_1_U26/conv_bckwd_mul_32ns_64ns_96_5_1_Multiplier_5_U/tmp_product output fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_64ns_96_5_1_U26/conv_bckwd_mul_32ns_64ns_96_5_1_Multiplier_5_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#46 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_fwd_mul_31ns_32ns_63_2_1_Multiplier_6_U/tmp_product output fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_fwd_mul_31ns_32ns_63_2_1_Multiplier_6_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#47 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_fwd_mul_31ns_32ns_63_2_1_Multiplier_6_U/tmp_product__0 output fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_fwd_mul_31ns_32ns_63_2_1_Multiplier_6_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#48 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_64ns_95_5_1_U6/conv_fwd_mul_31ns_64ns_95_5_1_Multiplier_3_U/tmp_product output fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_64ns_95_5_1_U6/conv_fwd_mul_31ns_64ns_95_5_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#49 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_96ns_127_5_1_U13/conv_fwd_mul_31ns_96ns_127_5_1_Multiplier_5_U/tmp_product output fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_96ns_127_5_1_U13/conv_fwd_mul_31ns_96ns_127_5_1_Multiplier_5_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#50 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_96ns_127_5_1_U13/conv_fwd_mul_31ns_96ns_127_5_1_Multiplier_5_U/tmp_product__1 output fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_96ns_127_5_1_U13/conv_fwd_mul_31ns_96ns_127_5_1_Multiplier_5_U/tmp_product__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#51 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U10/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0 output fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U10/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#52 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U17/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0 output fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U17/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#53 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U18/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0 output fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U18/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#54 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U3/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0 output fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U3/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#55 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U4/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0 output fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U4/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#56 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U7/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0 output fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U7/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#57 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U8/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0 output fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U8/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#58 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U9/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0 output fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U9/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#59 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U1/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product output fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U1/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#60 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U1/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U1/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#61 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U11/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product output fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U11/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#62 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U11/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U11/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#63 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product output fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#64 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#65 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_64ns_96_5_1_U12/conv_fwd_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product output fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_64ns_96_5_1_U12/conv_fwd_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#66 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_4ns_8ns_11_1_1_U15/conv_fwd_mul_4ns_8ns_11_1_1_Multiplier_2_U/p output fwd_fcc_test_i/conv_fwd_0/inst/mul_4ns_8ns_11_1_1_U15/conv_fwd_mul_4ns_8ns_11_1_1_Multiplier_2_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#67 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/forward_fcc_0/inst/mul_31s_31s_31_2_1_U1/forward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 output fwd_fcc_test_i/forward_fcc_0/inst/mul_31s_31s_31_2_1_U1/forward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#68 Warning
PREG Output pipelining  
DSP fwd_fcc_test_i/forward_fcc_0/inst/mul_32s_32s_32_2_1_U3/forward_fcc_mul_32s_32s_32_2_1_Multiplier_2_U/tmp_product__17 output fwd_fcc_test_i/forward_fcc_0/inst/mul_32s_32s_32_2_1_U3/forward_fcc_mul_32s_32s_32_2_1_Multiplier_2_U/tmp_product__17/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31ns_32ns_63_2_1_U4/backward_fcc_mul_31ns_32ns_63_2_1_Multiplier_2_U/p_reg multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_31ns_32ns_63_2_1_U4/backward_fcc_mul_31ns_32ns_63_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31ns_32ns_63_2_1_U4/backward_fcc_mul_31ns_32ns_63_2_1_Multiplier_2_U/p_reg__0 multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_31ns_32ns_63_2_1_U4/backward_fcc_mul_31ns_32ns_63_2_1_Multiplier_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31ns_32ns_63_2_1_U4/backward_fcc_mul_31ns_32ns_63_2_1_Multiplier_2_U/tmp_product multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_31ns_32ns_63_2_1_U4/backward_fcc_mul_31ns_32ns_63_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31ns_32ns_63_2_1_U4/backward_fcc_mul_31ns_32ns_63_2_1_Multiplier_2_U/tmp_product__0 multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_31ns_32ns_63_2_1_U4/backward_fcc_mul_31ns_32ns_63_2_1_Multiplier_2_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U1/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U1/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U1/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U1/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U1/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U1/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U3/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U3/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U3/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U3/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U3/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U3/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U7/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U7/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U7/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U7/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U7/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U7/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#14 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U9/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U9/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#15 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U9/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U9/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#16 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U9/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_31s_31s_31_2_1_U9/backward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#17 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_32s_32s_32_2_1_U6/backward_fcc_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_32s_32s_32_2_1_U6/backward_fcc_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#18 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_32s_32s_32_2_1_U6/backward_fcc_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_32s_32s_32_2_1_U6/backward_fcc_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#19 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/backward_fcc_0/inst/mul_32s_32s_32_2_1_U6/backward_fcc_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0 multiplier stage fwd_fcc_test_i/backward_fcc_0/inst/mul_32s_32s_32_2_1_U6/backward_fcc_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#20 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_bckwd_mul_31ns_32ns_63_2_1_Multiplier_4_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_bckwd_mul_31ns_32ns_63_2_1_Multiplier_4_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#21 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_bckwd_mul_31ns_32ns_63_2_1_Multiplier_4_U/p_reg__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_bckwd_mul_31ns_32ns_63_2_1_Multiplier_4_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#22 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_bckwd_mul_31ns_32ns_63_2_1_Multiplier_4_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_bckwd_mul_31ns_32ns_63_2_1_Multiplier_4_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#23 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_bckwd_mul_31ns_32ns_63_2_1_Multiplier_4_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_bckwd_mul_31ns_32ns_63_2_1_Multiplier_4_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#24 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_64ns_95_5_1_U29/conv_bckwd_mul_31ns_64ns_95_5_1_Multiplier_3_U/buff0_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_64ns_95_5_1_U29/conv_bckwd_mul_31ns_64ns_95_5_1_Multiplier_3_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#25 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_64ns_95_5_1_U29/conv_bckwd_mul_31ns_64ns_95_5_1_Multiplier_3_U/buff0_reg__1 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_64ns_95_5_1_U29/conv_bckwd_mul_31ns_64ns_95_5_1_Multiplier_3_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#26 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_64ns_95_5_1_U7/conv_bckwd_mul_31ns_64ns_95_5_1_Multiplier_3_U/buff0_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_64ns_95_5_1_U7/conv_bckwd_mul_31ns_64ns_95_5_1_Multiplier_3_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#27 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_64ns_95_5_1_U7/conv_bckwd_mul_31ns_64ns_95_5_1_Multiplier_3_U/buff0_reg__1 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31ns_64ns_95_5_1_U7/conv_bckwd_mul_31ns_64ns_95_5_1_Multiplier_3_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#28 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U1/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U1/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#29 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U1/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U1/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#30 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U1/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U1/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#31 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U10/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U10/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#32 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U10/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U10/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#33 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U10/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U10/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#34 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U11/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U11/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#35 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U11/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U11/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#36 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U11/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U11/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#37 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U12/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U12/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#38 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U12/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U12/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#39 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U12/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U12/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#40 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U13/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U13/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#41 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U13/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U13/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#42 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U13/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U13/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#43 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U15/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U15/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#44 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U15/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U15/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#45 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U15/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U15/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#46 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U16/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U16/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#47 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U16/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U16/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#48 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U16/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U16/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#49 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U18/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U18/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#50 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U18/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U18/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#51 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U18/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U18/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#52 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U19/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U19/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#53 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U19/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U19/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#54 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U19/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U19/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#55 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U20/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U20/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#56 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U20/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U20/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#57 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U20/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U20/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#58 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U21/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U21/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#59 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U21/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U21/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#60 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U21/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U21/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#61 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U22/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U22/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#62 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U22/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U22/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#63 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U22/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U22/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#64 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U23/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U23/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#65 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U23/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U23/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#66 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U23/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U23/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#67 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U30/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U30/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#68 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U30/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U30/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#69 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U30/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U30/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#70 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U31/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U31/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#71 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U31/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U31/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#72 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U31/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U31/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#73 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U32/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U32/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#74 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U32/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U32/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#75 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U32/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U32/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#76 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U33/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U33/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#77 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U33/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U33/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#78 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U33/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U33/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#79 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U34/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U34/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#80 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U34/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U34/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#81 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U34/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U34/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#82 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U35/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U35/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#83 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U35/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U35/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#84 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U35/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U35/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#85 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U4/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U4/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#86 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U4/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U4/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#87 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U4/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U4/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#88 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U5/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U5/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#89 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U5/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U5/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#90 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U5/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U5/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#91 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U8/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U8/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#92 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U8/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U8/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#93 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U8/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U8/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#94 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U9/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U9/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#95 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U9/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U9/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#96 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U9/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_31s_31s_31_2_1_U9/conv_bckwd_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#97 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#98 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/p_reg__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#99 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#100 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#101 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U25/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U25/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#102 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U25/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/p_reg__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U25/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#103 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U25/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U25/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#104 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U25/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U25/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#105 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U28/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U28/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#106 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U28/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/p_reg__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U28/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#107 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U28/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U28/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#108 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U28/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U28/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#109 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U3/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/p_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U3/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#110 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U3/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/p_reg__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U3/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#111 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U3/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U3/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#112 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U3/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_32ns_64_2_1_U3/conv_bckwd_mul_32ns_32ns_64_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#113 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_64ns_96_5_1_U26/conv_bckwd_mul_32ns_64ns_96_5_1_Multiplier_5_U/buff0_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_64ns_96_5_1_U26/conv_bckwd_mul_32ns_64ns_96_5_1_Multiplier_5_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#114 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_64ns_96_5_1_U26/conv_bckwd_mul_32ns_64ns_96_5_1_Multiplier_5_U/buff0_reg__1 multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_32ns_64ns_96_5_1_U26/conv_bckwd_mul_32ns_64ns_96_5_1_Multiplier_5_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#115 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/mul_ln134_reg_4892_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/mul_ln134_reg_4892_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#116 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/p_cast_reg_4454_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/p_cast_reg_4454_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#117 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/zext_ln34_reg_3759_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/zext_ln34_reg_3759_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#118 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/zext_ln63_reg_4081_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/zext_ln63_reg_4081_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#119 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_bckwd_0/inst/zext_ln89_reg_4314_reg multiplier stage fwd_fcc_test_i/conv_bckwd_0/inst/zext_ln89_reg_4314_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#120 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_fwd_mul_31ns_32ns_63_2_1_Multiplier_6_U/p_reg multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_fwd_mul_31ns_32ns_63_2_1_Multiplier_6_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#121 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_fwd_mul_31ns_32ns_63_2_1_Multiplier_6_U/p_reg__0 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_fwd_mul_31ns_32ns_63_2_1_Multiplier_6_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#122 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_fwd_mul_31ns_32ns_63_2_1_Multiplier_6_U/tmp_product multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_fwd_mul_31ns_32ns_63_2_1_Multiplier_6_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#123 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_fwd_mul_31ns_32ns_63_2_1_Multiplier_6_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_32ns_63_2_1_U14/conv_fwd_mul_31ns_32ns_63_2_1_Multiplier_6_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#124 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_64ns_95_5_1_U6/conv_fwd_mul_31ns_64ns_95_5_1_Multiplier_3_U/buff0_reg multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_64ns_95_5_1_U6/conv_fwd_mul_31ns_64ns_95_5_1_Multiplier_3_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#125 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_64ns_95_5_1_U6/conv_fwd_mul_31ns_64ns_95_5_1_Multiplier_3_U/buff0_reg__1 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_64ns_95_5_1_U6/conv_fwd_mul_31ns_64ns_95_5_1_Multiplier_3_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#126 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_96ns_127_5_1_U13/conv_fwd_mul_31ns_96ns_127_5_1_Multiplier_5_U/buff0_reg__0 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_96ns_127_5_1_U13/conv_fwd_mul_31ns_96ns_127_5_1_Multiplier_5_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#127 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_96ns_127_5_1_U13/conv_fwd_mul_31ns_96ns_127_5_1_Multiplier_5_U/buff0_reg__2 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31ns_96ns_127_5_1_U13/conv_fwd_mul_31ns_96ns_127_5_1_Multiplier_5_U/buff0_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#128 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U10/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/p_reg multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U10/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#129 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U10/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U10/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#130 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U10/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U10/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#131 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U17/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/p_reg multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U17/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#132 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U17/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U17/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#133 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U17/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U17/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#134 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U18/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/p_reg multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U18/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#135 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U18/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U18/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#136 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U18/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U18/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#137 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U3/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/p_reg multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U3/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#138 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U3/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U3/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#139 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U3/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U3/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#140 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U4/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/p_reg multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U4/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#141 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U4/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U4/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#142 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U4/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U4/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#143 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U7/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/p_reg multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U7/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#144 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U7/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U7/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#145 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U7/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U7/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#146 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U8/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/p_reg multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U8/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#147 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U8/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U8/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#148 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U8/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U8/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#149 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U9/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/p_reg multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U9/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#150 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U9/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U9/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#151 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U9/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_31s_31s_31_2_1_U9/conv_fwd_mul_31s_31s_31_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#152 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U1/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U1/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#153 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U1/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U1/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#154 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U1/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U1/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#155 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U1/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U1/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#156 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U11/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U11/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#157 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U11/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U11/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#158 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U11/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U11/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#159 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U11/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U11/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#160 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#161 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#162 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#163 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_32ns_64_2_1_U2/conv_fwd_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#164 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_64ns_96_5_1_U12/conv_fwd_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_64ns_96_5_1_U12/conv_fwd_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#165 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_64ns_96_5_1_U12/conv_fwd_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1 multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_32ns_64ns_96_5_1_U12/conv_fwd_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#166 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_4ns_8ns_11_1_1_U15/conv_fwd_mul_4ns_8ns_11_1_1_Multiplier_2_U/p multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_4ns_8ns_11_1_1_U15/conv_fwd_mul_4ns_8ns_11_1_1_Multiplier_2_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#167 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/mul_ln73_reg_2770_reg multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/mul_ln73_reg_2770_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#168 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/conv_fwd_0/inst/zext_ln31_reg_2189_reg multiplier stage fwd_fcc_test_i/conv_fwd_0/inst/zext_ln31_reg_2189_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#169 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/forward_fcc_0/inst/mul_31s_31s_31_2_1_U1/forward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg multiplier stage fwd_fcc_test_i/forward_fcc_0/inst/mul_31s_31s_31_2_1_U1/forward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#170 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/forward_fcc_0/inst/mul_31s_31s_31_2_1_U1/forward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product multiplier stage fwd_fcc_test_i/forward_fcc_0/inst/mul_31s_31s_31_2_1_U1/forward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#171 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/forward_fcc_0/inst/mul_31s_31s_31_2_1_U1/forward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0 multiplier stage fwd_fcc_test_i/forward_fcc_0/inst/mul_31s_31s_31_2_1_U1/forward_fcc_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#172 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/forward_fcc_0/inst/mul_32s_32s_32_2_1_U3/forward_fcc_mul_32s_32s_32_2_1_Multiplier_2_U/p_reg multiplier stage fwd_fcc_test_i/forward_fcc_0/inst/mul_32s_32s_32_2_1_U3/forward_fcc_mul_32s_32s_32_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#173 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/forward_fcc_0/inst/mul_32s_32s_32_2_1_U3/forward_fcc_mul_32s_32s_32_2_1_Multiplier_2_U/tmp_product multiplier stage fwd_fcc_test_i/forward_fcc_0/inst/mul_32s_32s_32_2_1_U3/forward_fcc_mul_32s_32s_32_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#174 Warning
MREG Output pipelining  
DSP fwd_fcc_test_i/forward_fcc_0/inst/mul_32s_32s_32_2_1_U3/forward_fcc_mul_32s_32s_32_2_1_Multiplier_2_U/tmp_product__17 multiplier stage fwd_fcc_test_i/forward_fcc_0/inst/mul_32s_32s_32_2_1_U3/forward_fcc_mul_32s_32s_32_2_1_Multiplier_2_U/tmp_product__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

REQP-1840#1 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#2 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#3 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[4] (net: fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[0]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#4 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[5] (net: fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#5 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[6] (net: fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#6 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[7] (net: fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#7 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#8 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: fwd_fcc_test_i/backward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#9 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#10 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#11 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[4] (net: fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[0]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#12 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[5] (net: fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#13 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[6] (net: fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#14 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[7] (net: fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#15 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#16 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: fwd_fcc_test_i/conv_fwd_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#17 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/forward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/forward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: fwd_fcc_test_i/forward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#18 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/forward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/forward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: fwd_fcc_test_i/forward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#19 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/forward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/forward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: fwd_fcc_test_i/forward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#20 Warning
RAMB18 async control check  
The RAMB18E1 fwd_fcc_test_i/forward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin fwd_fcc_test_i/forward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: fwd_fcc_test_i/forward_fcc_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (fwd_fcc_test_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>


