// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fcc_combined_fcc_combined,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=134,HLS_SYN_DSP=0,HLS_SYN_FF=5862,HLS_SYN_LUT=5529,HLS_VERSION=2020_2}" *)

module fcc_combined (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST,
        m_axi_gmem2_WID,
        m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY,
        m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID,
        m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA,
        m_axi_gmem2_RLAST,
        m_axi_gmem2_RID,
        m_axi_gmem2_RUSER,
        m_axi_gmem2_RRESP,
        m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP,
        m_axi_gmem2_BID,
        m_axi_gmem2_BUSER,
        x_Addr_A,
        x_EN_A,
        x_WEN_A,
        x_Din_A,
        x_Dout_A,
        x_Clk_A,
        x_Rst_A,
        dx_Addr_A,
        dx_EN_A,
        dx_WEN_A,
        dx_Din_A,
        dx_Dout_A,
        dx_Clk_A,
        dx_Rst_A,
        y_Addr_A,
        y_EN_A,
        y_WEN_A,
        y_Din_A,
        y_Dout_A,
        y_Clk_A,
        y_Rst_A,
        dy_Addr_A,
        dy_EN_A,
        dy_WEN_A,
        dy_Din_A,
        dy_Dout_A,
        dy_Clk_A,
        dy_Rst_A,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 69'd1;
parameter    ap_ST_fsm_state2 = 69'd2;
parameter    ap_ST_fsm_state3 = 69'd4;
parameter    ap_ST_fsm_state4 = 69'd8;
parameter    ap_ST_fsm_state5 = 69'd16;
parameter    ap_ST_fsm_state6 = 69'd32;
parameter    ap_ST_fsm_state7 = 69'd64;
parameter    ap_ST_fsm_state8 = 69'd128;
parameter    ap_ST_fsm_state9 = 69'd256;
parameter    ap_ST_fsm_state10 = 69'd512;
parameter    ap_ST_fsm_state11 = 69'd1024;
parameter    ap_ST_fsm_pp0_stage0 = 69'd2048;
parameter    ap_ST_fsm_state15 = 69'd4096;
parameter    ap_ST_fsm_state16 = 69'd8192;
parameter    ap_ST_fsm_state17 = 69'd16384;
parameter    ap_ST_fsm_state18 = 69'd32768;
parameter    ap_ST_fsm_state19 = 69'd65536;
parameter    ap_ST_fsm_state20 = 69'd131072;
parameter    ap_ST_fsm_state21 = 69'd262144;
parameter    ap_ST_fsm_state22 = 69'd524288;
parameter    ap_ST_fsm_state23 = 69'd1048576;
parameter    ap_ST_fsm_state24 = 69'd2097152;
parameter    ap_ST_fsm_state25 = 69'd4194304;
parameter    ap_ST_fsm_state26 = 69'd8388608;
parameter    ap_ST_fsm_state27 = 69'd16777216;
parameter    ap_ST_fsm_state28 = 69'd33554432;
parameter    ap_ST_fsm_state29 = 69'd67108864;
parameter    ap_ST_fsm_state30 = 69'd134217728;
parameter    ap_ST_fsm_pp1_stage0 = 69'd268435456;
parameter    ap_ST_fsm_state34 = 69'd536870912;
parameter    ap_ST_fsm_state35 = 69'd1073741824;
parameter    ap_ST_fsm_pp2_stage0 = 69'd2147483648;
parameter    ap_ST_fsm_pp2_stage1 = 69'd4294967296;
parameter    ap_ST_fsm_state43 = 69'd8589934592;
parameter    ap_ST_fsm_pp3_stage0 = 69'd17179869184;
parameter    ap_ST_fsm_state47 = 69'd34359738368;
parameter    ap_ST_fsm_state48 = 69'd68719476736;
parameter    ap_ST_fsm_state49 = 69'd137438953472;
parameter    ap_ST_fsm_state50 = 69'd274877906944;
parameter    ap_ST_fsm_state51 = 69'd549755813888;
parameter    ap_ST_fsm_pp4_stage0 = 69'd1099511627776;
parameter    ap_ST_fsm_state55 = 69'd2199023255552;
parameter    ap_ST_fsm_state56 = 69'd4398046511104;
parameter    ap_ST_fsm_state57 = 69'd8796093022208;
parameter    ap_ST_fsm_state58 = 69'd17592186044416;
parameter    ap_ST_fsm_state59 = 69'd35184372088832;
parameter    ap_ST_fsm_pp5_stage0 = 69'd70368744177664;
parameter    ap_ST_fsm_state63 = 69'd140737488355328;
parameter    ap_ST_fsm_state64 = 69'd281474976710656;
parameter    ap_ST_fsm_state65 = 69'd562949953421312;
parameter    ap_ST_fsm_state66 = 69'd1125899906842624;
parameter    ap_ST_fsm_state67 = 69'd2251799813685248;
parameter    ap_ST_fsm_state68 = 69'd4503599627370496;
parameter    ap_ST_fsm_state69 = 69'd9007199254740992;
parameter    ap_ST_fsm_state70 = 69'd18014398509481984;
parameter    ap_ST_fsm_state71 = 69'd36028797018963968;
parameter    ap_ST_fsm_state72 = 69'd72057594037927936;
parameter    ap_ST_fsm_state73 = 69'd144115188075855872;
parameter    ap_ST_fsm_pp6_stage0 = 69'd288230376151711744;
parameter    ap_ST_fsm_state77 = 69'd576460752303423488;
parameter    ap_ST_fsm_state78 = 69'd1152921504606846976;
parameter    ap_ST_fsm_state79 = 69'd2305843009213693952;
parameter    ap_ST_fsm_pp7_stage0 = 69'd4611686018427387904;
parameter    ap_ST_fsm_state86 = 69'd9223372036854775808;
parameter    ap_ST_fsm_state87 = 69'd18446744073709551616;
parameter    ap_ST_fsm_state88 = 69'd36893488147419103232;
parameter    ap_ST_fsm_pp8_stage0 = 69'd73786976294838206464;
parameter    ap_ST_fsm_pp8_stage1 = 69'd147573952589676412928;
parameter    ap_ST_fsm_state99 = 69'd295147905179352825856;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM2_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM2_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_USER_VALUE = 0;
parameter    C_M_AXI_GMEM2_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM2_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM2_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
output   m_axi_gmem2_AWVALID;
input   m_axi_gmem2_AWREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_AWADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_AWID;
output  [7:0] m_axi_gmem2_AWLEN;
output  [2:0] m_axi_gmem2_AWSIZE;
output  [1:0] m_axi_gmem2_AWBURST;
output  [1:0] m_axi_gmem2_AWLOCK;
output  [3:0] m_axi_gmem2_AWCACHE;
output  [2:0] m_axi_gmem2_AWPROT;
output  [3:0] m_axi_gmem2_AWQOS;
output  [3:0] m_axi_gmem2_AWREGION;
output  [C_M_AXI_GMEM2_AWUSER_WIDTH - 1:0] m_axi_gmem2_AWUSER;
output   m_axi_gmem2_WVALID;
input   m_axi_gmem2_WREADY;
output  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_WDATA;
output  [C_M_AXI_GMEM2_WSTRB_WIDTH - 1:0] m_axi_gmem2_WSTRB;
output   m_axi_gmem2_WLAST;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_WID;
output  [C_M_AXI_GMEM2_WUSER_WIDTH - 1:0] m_axi_gmem2_WUSER;
output   m_axi_gmem2_ARVALID;
input   m_axi_gmem2_ARREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_ARADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_ARID;
output  [7:0] m_axi_gmem2_ARLEN;
output  [2:0] m_axi_gmem2_ARSIZE;
output  [1:0] m_axi_gmem2_ARBURST;
output  [1:0] m_axi_gmem2_ARLOCK;
output  [3:0] m_axi_gmem2_ARCACHE;
output  [2:0] m_axi_gmem2_ARPROT;
output  [3:0] m_axi_gmem2_ARQOS;
output  [3:0] m_axi_gmem2_ARREGION;
output  [C_M_AXI_GMEM2_ARUSER_WIDTH - 1:0] m_axi_gmem2_ARUSER;
input   m_axi_gmem2_RVALID;
output   m_axi_gmem2_RREADY;
input  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_RDATA;
input   m_axi_gmem2_RLAST;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_RID;
input  [C_M_AXI_GMEM2_RUSER_WIDTH - 1:0] m_axi_gmem2_RUSER;
input  [1:0] m_axi_gmem2_RRESP;
input   m_axi_gmem2_BVALID;
output   m_axi_gmem2_BREADY;
input  [1:0] m_axi_gmem2_BRESP;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_BID;
input  [C_M_AXI_GMEM2_BUSER_WIDTH - 1:0] m_axi_gmem2_BUSER;
output  [31:0] x_Addr_A;
output   x_EN_A;
output  [1:0] x_WEN_A;
output  [15:0] x_Din_A;
input  [15:0] x_Dout_A;
output   x_Clk_A;
output   x_Rst_A;
output  [31:0] dx_Addr_A;
output   dx_EN_A;
output  [1:0] dx_WEN_A;
output  [15:0] dx_Din_A;
input  [15:0] dx_Dout_A;
output   dx_Clk_A;
output   dx_Rst_A;
output  [31:0] y_Addr_A;
output   y_EN_A;
output  [1:0] y_WEN_A;
output  [15:0] y_Din_A;
input  [15:0] y_Dout_A;
output   y_Clk_A;
output   y_Rst_A;
output  [31:0] dy_Addr_A;
output   dy_EN_A;
output  [1:0] dy_WEN_A;
output  [15:0] dy_Din_A;
input  [15:0] dy_Dout_A;
output   dy_Clk_A;
output   dy_Rst_A;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

reg x_EN_A;
reg dx_EN_A;
reg[1:0] dx_WEN_A;
reg[15:0] dx_Din_A;
reg y_EN_A;
reg[1:0] y_WEN_A;
reg[15:0] y_Din_A;
reg dy_EN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [68:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] wt;
wire   [31:0] dwt;
wire   [31:0] b;
wire   [31:0] db;
wire   [31:0] debug_x;
wire   [31:0] debug_dx;
wire    debugip;
wire   [31:0] xdim;
wire   [31:0] ydim;
wire    fwprop;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state5;
reg   [0:0] icmp_ln43_reg_1751;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln43_1_reg_1776;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter1;
wire    ap_block_pp6_stage0;
reg   [0:0] icmp_ln70_reg_2173;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln91_reg_1920;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state51;
reg    gmem_blk_n_W;
reg    ap_enable_reg_pp4_iter2;
wire    ap_block_pp4_stage0;
reg   [0:0] icmp_ln108_reg_2107;
reg   [0:0] icmp_ln108_reg_2107_pp4_iter1_reg;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state59;
reg   [0:0] cmp36319_reg_1798;
reg    gmem2_blk_n_AW;
wire    ap_CS_fsm_pp8_stage0;
reg    ap_enable_reg_pp8_iter1;
wire    ap_block_pp8_stage0;
reg   [0:0] icmp_ln119_1_reg_2294;
reg    gmem2_blk_n_W;
wire    ap_CS_fsm_pp8_stage1;
wire    ap_block_pp8_stage1;
reg   [0:0] icmp_ln119_1_reg_2294_pp8_iter1_reg;
reg    gmem2_blk_n_B;
reg    ap_enable_reg_pp8_iter4;
reg   [0:0] icmp_ln119_1_reg_2294_pp8_iter3_reg;
reg    ap_enable_reg_pp8_iter2;
reg   [0:0] icmp_ln119_1_reg_2294_pp8_iter4_reg;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
reg   [31:0] gmem_ARLEN;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [15:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg    gmem2_AWVALID;
wire    gmem2_AWREADY;
reg   [31:0] gmem2_AWADDR;
reg    gmem2_WVALID;
wire    gmem2_WREADY;
reg   [15:0] gmem2_WDATA;
wire    gmem2_ARREADY;
wire    gmem2_RVALID;
wire   [15:0] gmem2_RDATA;
wire    gmem2_RLAST;
wire   [0:0] gmem2_RID;
wire   [0:0] gmem2_RUSER;
wire   [1:0] gmem2_RRESP;
wire    gmem2_BVALID;
reg    gmem2_BREADY;
wire   [1:0] gmem2_BRESP;
wire   [0:0] gmem2_BID;
wire   [0:0] gmem2_BUSER;
reg   [30:0] i_reg_556;
reg   [30:0] j_reg_602;
reg   [62:0] indvar_flatten_reg_613;
reg   [30:0] i_5_reg_624;
reg   [31:0] j_1_reg_636;
reg   [30:0] i_7_reg_647;
reg   [30:0] j_4_reg_670;
reg   [31:0] i_1_reg_681;
reg   [30:0] j_2_reg_704;
reg   [31:0] j_3_reg_726;
reg   [15:0] rhs_reg_737;
reg   [30:0] i_2_reg_746;
reg  signed [15:0] reg_769;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_state36_pp2_stage0_iter0;
wire    ap_block_state38_pp2_stage0_iter1;
wire    ap_block_state40_pp2_stage0_iter2;
wire    ap_block_state42_pp2_stage0_iter3;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln96_reg_1944;
wire    ap_block_state89_pp8_stage0_iter0;
wire    ap_block_state91_pp8_stage0_iter1;
reg    ap_block_state91_io;
wire    ap_block_state93_pp8_stage0_iter2;
reg    ap_block_state93_io;
wire    ap_block_state95_pp8_stage0_iter3;
reg    ap_block_state97_pp8_stage0_iter4;
reg    ap_block_pp8_stage0_11001;
wire   [15:0] dwbuf_V_q0;
reg   [15:0] reg_774;
reg    ap_enable_reg_pp2_iter2;
reg   [0:0] icmp_ln96_reg_1944_pp2_iter1_reg;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_state52_pp4_stage0_iter0;
wire    ap_block_state53_pp4_stage0_iter1;
wire    ap_block_state54_pp4_stage0_iter2;
reg    ap_block_state54_io;
reg    ap_block_pp4_stage0_11001;
reg   [0:0] fwprop_read_reg_1661;
reg  signed [31:0] ydim_read_reg_1665;
reg   [31:0] xdim_read_reg_1677;
reg   [0:0] debugip_read_reg_1694;
reg   [31:0] debug_dx_read_reg_1698;
reg   [31:0] debug_x_read_reg_1703;
reg   [31:0] b_read_reg_1708;
reg   [31:0] dwt_read_reg_1713;
reg   [31:0] wt_read_reg_1719;
reg   [0:0] tmp_reg_1724;
wire    ap_CS_fsm_state2;
wire   [64:0] grp_fu_790_p2;
reg   [64:0] mul_ln41_reg_1735;
wire    ap_CS_fsm_state3;
reg   [26:0] tmp_2_reg_1740;
wire   [26:0] sub_ln41_1_fu_827_p2;
reg   [26:0] sub_ln41_1_reg_1746;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln43_fu_833_p2;
wire   [26:0] num_iters_fu_843_p2;
reg   [26:0] num_iters_reg_1755;
wire   [30:0] trunc_ln43_fu_869_p1;
reg   [30:0] trunc_ln43_reg_1766;
wire    ap_CS_fsm_state11;
wire   [30:0] add_ln43_fu_872_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state12_pp0_stage0_iter0;
reg    ap_block_state13_pp0_stage0_iter1;
wire    ap_block_state14_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln43_1_fu_878_p2;
reg   [0:0] icmp_ln43_1_reg_1776_pp0_iter1_reg;
wire   [9:0] trunc_ln44_fu_883_p1;
reg   [9:0] trunc_ln44_reg_1780;
reg   [9:0] trunc_ln44_reg_1780_pp0_iter1_reg;
reg   [15:0] gmem_addr_read_reg_1785;
wire  signed [30:0] trunc_ln49_fu_891_p1;
reg  signed [30:0] trunc_ln49_reg_1790;
wire    ap_CS_fsm_state15;
wire   [0:0] cmp36319_fu_900_p2;
wire    ap_CS_fsm_state16;
wire  signed [38:0] sext_ln49_fu_905_p1;
reg  signed [38:0] sext_ln49_reg_1802;
wire  signed [31:0] sext_ln49_1_fu_908_p1;
reg  signed [31:0] sext_ln49_1_reg_1807;
wire  signed [30:0] grp_fu_894_p2;
reg  signed [30:0] mul_ln53_reg_1812;
wire   [62:0] zext_ln96_fu_911_p1;
reg   [62:0] zext_ln96_reg_1817;
wire   [31:0] add_ln53_fu_914_p2;
reg   [31:0] add_ln53_reg_1822;
wire    ap_CS_fsm_state17;
wire   [37:0] add_ln49_fu_920_p2;
reg   [37:0] add_ln49_reg_1828;
wire   [0:0] icmp_ln49_fu_926_p2;
wire   [30:0] grp_fu_935_p2;
reg   [30:0] mul_ln53_1_reg_1841;
wire    ap_CS_fsm_state18;
wire   [37:0] grp_fu_947_p2;
reg   [37:0] mul_ln53_2_reg_1853;
wire    ap_CS_fsm_state19;
wire   [9:0] trunc_ln54_fu_961_p1;
reg   [9:0] trunc_ln54_reg_1858;
wire    ap_CS_fsm_state20;
wire   [31:0] ub_fu_974_p3;
reg   [31:0] ub_reg_1864;
wire   [0:0] grp_fu_757_p2;
reg   [0:0] icmp_ln90_reg_1871;
wire   [30:0] trunc_ln90_fu_983_p1;
reg   [30:0] trunc_ln90_reg_1875;
wire   [30:0] add_ln90_fu_987_p2;
reg   [30:0] add_ln90_reg_1881;
wire    ap_CS_fsm_state21;
wire   [0:0] icmp_ln90_1_fu_993_p2;
wire   [30:0] grp_fu_998_p2;
reg   [30:0] empty_52_reg_1894;
wire    ap_CS_fsm_state22;
reg   [31:0] gmem_addr_1_reg_1899;
wire    ap_CS_fsm_state23;
wire   [5:0] trunc_ln92_fu_1048_p1;
reg   [5:0] trunc_ln92_reg_1905;
wire   [15:0] tmp_6_fu_1052_p3;
reg   [15:0] tmp_6_reg_1910;
wire    ap_CS_fsm_state30;
wire   [30:0] add_ln91_fu_1059_p2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state31_pp1_stage0_iter0;
reg    ap_block_state32_pp1_stage0_iter1;
wire    ap_block_state33_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln91_fu_1069_p2;
reg   [0:0] icmp_ln91_reg_1920_pp1_iter1_reg;
wire   [15:0] add_ln92_fu_1078_p2;
reg   [15:0] add_ln92_reg_1924;
reg   [15:0] add_ln92_reg_1924_pp1_iter1_reg;
reg   [15:0] gmem_addr_1_read_reg_1929;
wire   [62:0] grp_fu_1006_p2;
reg   [62:0] mul_ln96_reg_1934;
wire    ap_CS_fsm_state35;
wire   [62:0] add_ln96_2_fu_1087_p2;
reg   [62:0] add_ln96_2_reg_1939;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln96_fu_1093_p2;
reg   [0:0] icmp_ln96_reg_1944_pp2_iter2_reg;
wire   [30:0] add_ln96_fu_1098_p2;
reg   [30:0] add_ln96_reg_1948;
wire   [0:0] icmp_ln97_fu_1105_p2;
reg   [0:0] icmp_ln97_reg_1953;
wire   [31:0] select_ln96_fu_1111_p3;
reg   [31:0] select_ln96_reg_1958;
wire   [9:0] trunc_ln96_fu_1119_p1;
reg   [9:0] trunc_ln96_reg_1963;
wire   [15:0] add_ln1118_fu_1150_p2;
reg   [15:0] add_ln1118_reg_1973;
reg   [9:0] dx_addr_2_reg_1978;
reg   [9:0] dx_addr_2_reg_1978_pp2_iter1_reg;
reg   [9:0] dx_addr_2_reg_1978_pp2_iter2_reg;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state37_pp2_stage1_iter0;
wire    ap_block_state39_pp2_stage1_iter1;
wire    ap_block_state41_pp2_stage1_iter2;
wire    ap_block_pp2_stage1_11001;
wire   [30:0] grp_fu_762_p3;
reg   [30:0] select_ln96_2_reg_1993;
reg   [15:0] dwbuf_V_addr_1_reg_2003;
reg   [15:0] dwbuf_V_addr_1_reg_2003_pp2_iter1_reg;
reg   [15:0] dwbuf_V_addr_1_reg_2003_pp2_iter2_reg;
wire   [31:0] add_ln97_fu_1170_p2;
reg   [31:0] add_ln97_reg_2008;
wire   [30:0] add_ln103_fu_1227_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state44_pp3_stage0_iter0;
wire    ap_block_state45_pp3_stage0_iter1;
wire    ap_block_state46_pp3_stage0_iter2;
wire    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln103_fu_1237_p2;
reg   [0:0] icmp_ln103_reg_2048;
reg   [0:0] icmp_ln103_reg_2048_pp3_iter1_reg;
reg   [9:0] dbbuf_V_addr_reg_2052;
reg   [9:0] dbbuf_V_addr_reg_2052_pp3_iter1_reg;
wire   [15:0] dbbuf_V_q1;
reg   [15:0] dbbuf_V_load_reg_2063;
reg    ap_enable_reg_pp3_iter1;
wire   [30:0] trunc_ln107_fu_1258_p1;
reg   [30:0] trunc_ln107_reg_2068;
wire    ap_CS_fsm_state47;
wire   [30:0] add_ln107_fu_1261_p2;
reg   [30:0] add_ln107_reg_2073;
wire    ap_CS_fsm_state48;
wire   [30:0] grp_fu_1272_p2;
reg   [30:0] empty_59_reg_2081;
wire    ap_CS_fsm_state49;
reg   [31:0] gmem_addr_3_reg_2086;
wire    ap_CS_fsm_state50;
wire   [5:0] trunc_ln109_fu_1314_p1;
reg   [5:0] trunc_ln109_reg_2092;
wire   [15:0] tmp_8_fu_1318_p3;
reg   [15:0] tmp_8_reg_2097;
wire   [30:0] add_ln108_fu_1325_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [0:0] icmp_ln108_fu_1335_p2;
wire   [31:0] add_ln65_fu_1354_p2;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state60_pp5_stage0_iter0;
wire    ap_block_state61_pp5_stage0_iter1;
wire    ap_block_state62_pp5_stage0_iter2;
wire    ap_block_pp5_stage0_11001;
wire   [0:0] icmp_ln65_fu_1360_p2;
wire   [30:0] trunc_ln69_fu_1374_p1;
reg   [30:0] trunc_ln69_reg_2133;
wire    ap_CS_fsm_state63;
wire   [30:0] add_ln69_fu_1377_p2;
reg   [30:0] add_ln69_reg_2139;
wire    ap_CS_fsm_state64;
wire   [30:0] grp_fu_1388_p2;
reg   [30:0] empty_45_reg_2147;
wire    ap_CS_fsm_state65;
reg   [31:0] gmem_addr_2_reg_2152;
wire    ap_CS_fsm_state66;
wire   [5:0] trunc_ln71_fu_1430_p1;
reg   [5:0] trunc_ln71_reg_2158;
wire   [15:0] tmp_s_fu_1434_p3;
reg   [15:0] tmp_s_reg_2163;
wire    ap_CS_fsm_state73;
wire   [30:0] add_ln70_fu_1441_p2;
reg    ap_enable_reg_pp6_iter0;
wire    ap_block_state74_pp6_stage0_iter0;
reg    ap_block_state75_pp6_stage0_iter1;
wire    ap_block_state76_pp6_stage0_iter2;
reg    ap_block_pp6_stage0_11001;
wire   [0:0] icmp_ln70_fu_1451_p2;
reg   [0:0] icmp_ln70_reg_2173_pp6_iter1_reg;
wire   [15:0] add_ln71_fu_1460_p2;
reg   [15:0] add_ln71_reg_2177;
reg   [15:0] add_ln71_reg_2177_pp6_iter1_reg;
reg   [15:0] gmem_addr_2_read_reg_2182;
wire   [30:0] add_ln76_fu_1469_p2;
reg   [30:0] add_ln76_reg_2187;
wire    ap_CS_fsm_state78;
wire   [0:0] icmp_ln76_fu_1475_p2;
reg   [9:0] y_addr_reg_2200;
wire   [5:0] trunc_ln1116_fu_1495_p1;
reg   [5:0] trunc_ln1116_reg_2205;
wire   [15:0] bbuf_V_q0;
wire    ap_CS_fsm_state79;
wire   [15:0] tmp_3_fu_1499_p3;
reg   [15:0] tmp_3_reg_2215;
wire   [31:0] add_ln80_fu_1506_p2;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter0;
wire    ap_block_state80_pp7_stage0_iter0;
wire    ap_block_state81_pp7_stage0_iter1;
wire    ap_block_state82_pp7_stage0_iter2;
wire    ap_block_state83_pp7_stage0_iter3;
wire    ap_block_state84_pp7_stage0_iter4;
wire    ap_block_state85_pp7_stage0_iter5;
wire    ap_block_pp7_stage0_11001;
wire   [0:0] icmp_ln80_fu_1512_p2;
reg   [0:0] icmp_ln80_reg_2225;
reg   [0:0] icmp_ln80_reg_2225_pp7_iter1_reg;
reg   [0:0] icmp_ln80_reg_2225_pp7_iter2_reg;
reg   [0:0] icmp_ln80_reg_2225_pp7_iter3_reg;
reg   [0:0] icmp_ln80_reg_2225_pp7_iter4_reg;
wire   [15:0] add_ln1116_fu_1526_p2;
reg   [15:0] add_ln1116_reg_2229;
reg    ap_enable_reg_pp7_iter5;
wire   [31:0] grp_fu_940_p2;
reg   [31:0] mul156_reg_2264;
wire    ap_CS_fsm_state87;
wire   [0:0] icmp_ln119_fu_1561_p2;
wire    ap_CS_fsm_state88;
wire   [30:0] trunc_ln119_fu_1566_p1;
reg   [30:0] trunc_ln119_reg_2274;
wire  signed [31:0] sext_ln119_fu_1578_p1;
reg  signed [31:0] sext_ln119_reg_2279;
wire  signed [31:0] sext_ln119_1_fu_1591_p1;
reg  signed [31:0] sext_ln119_1_reg_2284;
wire   [30:0] add_ln119_fu_1595_p2;
reg   [30:0] add_ln119_reg_2289;
reg    ap_enable_reg_pp8_iter0;
wire   [0:0] icmp_ln119_1_fu_1601_p2;
reg   [0:0] icmp_ln119_1_reg_2294_pp8_iter2_reg;
reg   [31:0] gmem2_addr_reg_2303;
reg   [31:0] gmem2_addr_1_reg_2314;
reg   [31:0] gmem2_addr_1_reg_2314_pp8_iter1_reg;
reg   [15:0] dx_load_reg_2320;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state12;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state31;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state36;
wire    ap_block_pp2_stage1_subdone;
reg    ap_enable_reg_pp2_iter3;
wire    ap_CS_fsm_state43;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state44;
reg    ap_enable_reg_pp3_iter2;
reg    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state52;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state60;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp5_iter2;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state74;
reg    ap_enable_reg_pp6_iter2;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_flush_enable;
reg    ap_enable_reg_pp7_iter1;
reg    ap_enable_reg_pp7_iter2;
reg    ap_enable_reg_pp7_iter3;
reg    ap_enable_reg_pp7_iter4;
reg    ap_condition_pp7_exit_iter4_state84;
reg    ap_block_pp8_stage0_subdone;
reg    ap_condition_pp8_exit_iter0_state89;
wire    ap_block_state90_pp8_stage1_iter0;
wire    ap_block_state92_pp8_stage1_iter1;
reg    ap_block_state92_io;
wire    ap_block_state94_pp8_stage1_iter2;
wire    ap_block_state96_pp8_stage1_iter3;
reg    ap_block_state98_pp8_stage1_iter4;
reg    ap_block_pp8_stage1_subdone;
reg    ap_enable_reg_pp8_iter3;
reg   [15:0] wbuf_V_address0;
reg    wbuf_V_ce0;
reg    wbuf_V_we0;
wire  signed [15:0] wbuf_V_q0;
reg   [9:0] bbuf_V_address0;
reg    bbuf_V_ce0;
reg    bbuf_V_we0;
reg   [15:0] dwbuf_V_address0;
reg    dwbuf_V_ce0;
reg    dwbuf_V_we0;
reg   [15:0] dwbuf_V_d0;
reg    dbbuf_V_ce0;
reg    dbbuf_V_we0;
wire   [15:0] dbbuf_V_d0;
wire   [9:0] dbbuf_V_address1;
reg    dbbuf_V_ce1;
reg   [31:0] k_reg_567;
wire   [0:0] icmp_ln107_fu_1267_p2;
reg   [37:0] phi_mul_reg_578;
reg  signed [30:0] i_3_reg_590;
wire    ap_CS_fsm_state34;
reg   [62:0] ap_phi_mux_indvar_flatten_phi_fu_617_p4;
wire    ap_block_pp2_stage0;
reg   [30:0] ap_phi_mux_i_5_phi_fu_628_p4;
reg   [31:0] ap_phi_mux_j_1_phi_fu_640_p4;
reg  signed [30:0] i_8_reg_658;
reg    ap_block_state59;
reg  signed [30:0] i_4_reg_692;
wire    ap_CS_fsm_state77;
reg   [30:0] i_6_reg_715;
wire    ap_CS_fsm_state86;
wire   [0:0] icmp_ln69_1_fu_1383_p2;
reg   [15:0] ap_phi_mux_rhs_phi_fu_740_p4;
wire    ap_block_pp7_stage0;
reg   [30:0] ap_phi_mux_i_2_phi_fu_750_p4;
wire   [31:0] zext_ln44_fu_887_p1;
wire   [31:0] zext_ln92_fu_1083_p1;
wire   [31:0] zext_ln96_2_fu_1135_p1;
wire   [31:0] zext_ln1118_fu_1144_p1;
wire   [31:0] zext_ln96_3_fu_1160_p1;
wire    ap_block_pp2_stage1;
wire   [31:0] zext_ln1118_1_fu_1165_p1;
wire   [31:0] zext_ln703_fu_1246_p1;
wire    ap_block_pp3_stage0;
wire   [31:0] zext_ln109_fu_1349_p1;
wire   [31:0] zext_ln66_fu_1369_p1;
wire    ap_block_pp5_stage0;
wire   [31:0] zext_ln71_fu_1465_p1;
wire   [31:0] zext_ln78_fu_1489_p1;
wire   [31:0] zext_ln1116_fu_1521_p1;
wire   [31:0] zext_ln1116_1_fu_1531_p1;
wire   [31:0] zext_ln120_fu_1606_p1;
wire  signed [31:0] sext_ln43_fu_858_p1;
wire  signed [31:0] sext_ln91_fu_1038_p1;
wire  signed [31:0] sext_ln108_fu_1304_p1;
wire  signed [31:0] sext_ln70_fu_1420_p1;
wire   [31:0] add_ln120_fu_1612_p2;
wire   [31:0] add_ln121_fu_1623_p2;
reg    ap_block_state5_io;
wire    ap_block_pp4_stage0_01001;
reg    ap_block_pp8_stage1_11001;
reg    ap_block_pp8_stage1_01001;
reg    ap_block_pp8_stage0_01001;
reg   [31:0] dy_Addr_A_orig;
reg   [31:0] x_Addr_A_orig;
reg   [31:0] dx_Addr_A_orig;
wire   [31:0] y_Addr_A_orig;
reg   [31:0] grp_fu_757_p0;
reg   [0:0] grp_fu_762_p0;
reg   [30:0] grp_fu_762_p1;
reg   [30:0] grp_fu_762_p2;
wire  signed [31:0] tmp_fu_779_p1;
wire   [33:0] grp_fu_790_p1;
wire   [64:0] sub_ln41_fu_806_p2;
wire   [26:0] tmp_1_fu_811_p4;
wire   [26:0] select_ln41_fu_821_p3;
wire   [26:0] select_ln41_1_fu_838_p3;
wire   [30:0] trunc_ln_fu_849_p4;
wire  signed [30:0] grp_fu_894_p0;
wire   [6:0] grp_fu_894_p1;
wire  signed [30:0] grp_fu_935_p1;
wire   [31:0] grp_fu_947_p0;
wire   [6:0] grp_fu_947_p1;
wire   [38:0] zext_ln53_1_fu_953_p1;
wire   [31:0] trunc_ln54_1_fu_965_p1;
wire   [0:0] icmp_ln53_fu_956_p2;
wire   [31:0] sub_ln53_fu_969_p2;
wire   [30:0] grp_fu_1006_p0;
wire   [31:0] grp_fu_1006_p1;
wire   [30:0] empty_53_fu_1011_p2;
wire   [31:0] tmp_4_fu_1015_p3;
wire   [31:0] empty_54_fu_1023_p2;
wire   [30:0] trunc_ln9_fu_1028_p4;
wire   [31:0] j_cast_fu_1065_p1;
wire   [15:0] trunc_ln92_1_fu_1074_p1;
wire   [5:0] trunc_ln1118_fu_1123_p1;
wire   [15:0] trunc_ln1118_1_fu_1140_p1;
wire   [15:0] tmp_10_cast_fu_1127_p3;
wire   [9:0] add_ln96_1_fu_1156_p2;
wire  signed [28:0] grp_fu_1634_p3;
wire  signed [28:0] grp_fu_1643_p3;
wire   [31:0] i_7_cast_fu_1233_p1;
wire   [9:0] trunc_ln703_fu_1242_p1;
wire   [30:0] empty_60_fu_1277_p2;
wire   [31:0] tmp_5_fu_1281_p3;
wire   [31:0] empty_61_fu_1289_p2;
wire   [30:0] trunc_ln3_fu_1294_p4;
wire   [31:0] j_4_cast_fu_1331_p1;
wire   [15:0] trunc_ln109_1_fu_1340_p1;
wire   [15:0] add_ln109_fu_1344_p2;
wire   [9:0] trunc_ln66_fu_1365_p1;
wire   [30:0] empty_46_fu_1393_p2;
wire   [31:0] tmp_7_fu_1397_p3;
wire   [31:0] empty_47_fu_1405_p2;
wire   [30:0] trunc_ln2_fu_1410_p4;
wire   [31:0] j_2_cast_fu_1447_p1;
wire   [15:0] trunc_ln71_1_fu_1456_p1;
wire   [9:0] trunc_ln76_fu_1480_p1;
wire   [9:0] add_ln78_fu_1484_p2;
wire   [15:0] trunc_ln1116_1_fu_1517_p1;
wire  signed [28:0] grp_fu_1652_p3;
wire   [30:0] trunc_ln4_fu_1569_p4;
wire   [30:0] trunc_ln119_1_fu_1582_p4;
wire   [28:0] grp_fu_1634_p2;
wire   [28:0] grp_fu_1643_p2;
wire   [28:0] grp_fu_1652_p2;
wire    ap_CS_fsm_state99;
reg   [68:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp8;
wire    ap_enable_pp8;
wire   [62:0] grp_fu_1006_p00;
wire   [37:0] grp_fu_947_p00;
reg    ap_condition_2656;
reg    ap_condition_2660;
reg    ap_condition_1690;
reg    ap_condition_1702;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 69'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp8_iter1 = 1'b0;
#0 ap_enable_reg_pp8_iter4 = 1'b0;
#0 ap_enable_reg_pp8_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter5 = 1'b0;
#0 ap_enable_reg_pp8_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp7_iter3 = 1'b0;
#0 ap_enable_reg_pp7_iter4 = 1'b0;
#0 ap_enable_reg_pp8_iter3 = 1'b0;
end

fcc_combined_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .wt(wt),
    .dwt(dwt),
    .b(b),
    .db(db),
    .debug_x(debug_x),
    .debug_dx(debug_dx),
    .debugip(debugip),
    .xdim(xdim),
    .ydim(ydim),
    .fwprop(fwprop),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

fcc_combined_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(gmem_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_addr_3_reg_2086),
    .I_AWID(1'd0),
    .I_AWLEN(xdim_read_reg_1677),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(reg_774),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

fcc_combined_gmem2_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM2_CACHE_VALUE ))
gmem2_m_axi_U(
    .AWVALID(m_axi_gmem2_AWVALID),
    .AWREADY(m_axi_gmem2_AWREADY),
    .AWADDR(m_axi_gmem2_AWADDR),
    .AWID(m_axi_gmem2_AWID),
    .AWLEN(m_axi_gmem2_AWLEN),
    .AWSIZE(m_axi_gmem2_AWSIZE),
    .AWBURST(m_axi_gmem2_AWBURST),
    .AWLOCK(m_axi_gmem2_AWLOCK),
    .AWCACHE(m_axi_gmem2_AWCACHE),
    .AWPROT(m_axi_gmem2_AWPROT),
    .AWQOS(m_axi_gmem2_AWQOS),
    .AWREGION(m_axi_gmem2_AWREGION),
    .AWUSER(m_axi_gmem2_AWUSER),
    .WVALID(m_axi_gmem2_WVALID),
    .WREADY(m_axi_gmem2_WREADY),
    .WDATA(m_axi_gmem2_WDATA),
    .WSTRB(m_axi_gmem2_WSTRB),
    .WLAST(m_axi_gmem2_WLAST),
    .WID(m_axi_gmem2_WID),
    .WUSER(m_axi_gmem2_WUSER),
    .ARVALID(m_axi_gmem2_ARVALID),
    .ARREADY(m_axi_gmem2_ARREADY),
    .ARADDR(m_axi_gmem2_ARADDR),
    .ARID(m_axi_gmem2_ARID),
    .ARLEN(m_axi_gmem2_ARLEN),
    .ARSIZE(m_axi_gmem2_ARSIZE),
    .ARBURST(m_axi_gmem2_ARBURST),
    .ARLOCK(m_axi_gmem2_ARLOCK),
    .ARCACHE(m_axi_gmem2_ARCACHE),
    .ARPROT(m_axi_gmem2_ARPROT),
    .ARQOS(m_axi_gmem2_ARQOS),
    .ARREGION(m_axi_gmem2_ARREGION),
    .ARUSER(m_axi_gmem2_ARUSER),
    .RVALID(m_axi_gmem2_RVALID),
    .RREADY(m_axi_gmem2_RREADY),
    .RDATA(m_axi_gmem2_RDATA),
    .RLAST(m_axi_gmem2_RLAST),
    .RID(m_axi_gmem2_RID),
    .RUSER(m_axi_gmem2_RUSER),
    .RRESP(m_axi_gmem2_RRESP),
    .BVALID(m_axi_gmem2_BVALID),
    .BREADY(m_axi_gmem2_BREADY),
    .BRESP(m_axi_gmem2_BRESP),
    .BID(m_axi_gmem2_BID),
    .BUSER(m_axi_gmem2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem2_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem2_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem2_RDATA),
    .I_RID(gmem2_RID),
    .I_RUSER(gmem2_RUSER),
    .I_RRESP(gmem2_RRESP),
    .I_RLAST(gmem2_RLAST),
    .I_AWVALID(gmem2_AWVALID),
    .I_AWREADY(gmem2_AWREADY),
    .I_AWADDR(gmem2_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem2_WVALID),
    .I_WREADY(gmem2_WREADY),
    .I_WDATA(gmem2_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(gmem2_BVALID),
    .I_BREADY(gmem2_BREADY),
    .I_BRESP(gmem2_BRESP),
    .I_BID(gmem2_BID),
    .I_BUSER(gmem2_BUSER)
);

fcc_combined_wbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 51200 ),
    .AddressWidth( 16 ))
wbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(wbuf_V_address0),
    .ce0(wbuf_V_ce0),
    .we0(wbuf_V_we0),
    .d0(gmem_addr_2_read_reg_2182),
    .q0(wbuf_V_q0)
);

fcc_combined_bbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
bbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bbuf_V_address0),
    .ce0(bbuf_V_ce0),
    .we0(bbuf_V_we0),
    .d0(gmem_addr_read_reg_1785),
    .q0(bbuf_V_q0)
);

fcc_combined_wbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 51200 ),
    .AddressWidth( 16 ))
dwbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dwbuf_V_address0),
    .ce0(dwbuf_V_ce0),
    .we0(dwbuf_V_we0),
    .d0(dwbuf_V_d0),
    .q0(dwbuf_V_q0)
);

fcc_combined_dbbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
dbbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dbbuf_V_addr_reg_2052_pp3_iter1_reg),
    .ce0(dbbuf_V_ce0),
    .we0(dbbuf_V_we0),
    .d0(dbbuf_V_d0),
    .address1(dbbuf_V_address1),
    .ce1(dbbuf_V_ce1),
    .q1(dbbuf_V_q1)
);

fcc_combined_mul_32s_34ns_65_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 34 ),
    .dout_WIDTH( 65 ))
mul_32s_34ns_65_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ydim_read_reg_1665),
    .din1(grp_fu_790_p1),
    .ce(1'b1),
    .dout(grp_fu_790_p2)
);

fcc_combined_mul_31s_7ns_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 31 ))
mul_31s_7ns_31_2_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_894_p0),
    .din1(grp_fu_894_p1),
    .ce(1'b1),
    .dout(grp_fu_894_p2)
);

fcc_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(mul_ln53_reg_1812),
    .din1(grp_fu_935_p1),
    .ce(1'b1),
    .dout(grp_fu_935_p2)
);

fcc_combined_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ydim_read_reg_1665),
    .din1(xdim_read_reg_1677),
    .ce(1'b1),
    .dout(grp_fu_940_p2)
);

fcc_combined_mul_32ns_7ns_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 38 ))
mul_32ns_7ns_38_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_947_p0),
    .din1(grp_fu_947_p1),
    .ce(1'b1),
    .dout(grp_fu_947_p2)
);

fcc_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(i_3_reg_590),
    .din1(trunc_ln49_reg_1790),
    .ce(1'b1),
    .dout(grp_fu_998_p2)
);

fcc_combined_mul_31ns_32ns_63_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_31ns_32ns_63_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1006_p0),
    .din1(grp_fu_1006_p1),
    .ce(1'b1),
    .dout(grp_fu_1006_p2)
);

fcc_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(i_8_reg_658),
    .din1(trunc_ln49_reg_1790),
    .ce(1'b1),
    .dout(grp_fu_1272_p2)
);

fcc_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(i_4_reg_692),
    .din1(trunc_ln49_reg_1790),
    .ce(1'b1),
    .dout(grp_fu_1388_p2)
);

fcc_combined_mac_muladd_16s_16s_29ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
mac_muladd_16s_16s_29ns_29_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(wbuf_V_q0),
    .din1(dy_Dout_A),
    .din2(grp_fu_1634_p2),
    .ce(1'b1),
    .dout(grp_fu_1634_p3)
);

fcc_combined_mac_muladd_16s_16s_29ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
mac_muladd_16s_16s_29ns_29_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_769),
    .din1(dy_Dout_A),
    .din2(grp_fu_1643_p2),
    .ce(1'b1),
    .dout(grp_fu_1643_p3)
);

fcc_combined_mac_muladd_16s_16s_29ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
mac_muladd_16s_16s_29ns_29_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(x_Dout_A),
    .din1(wbuf_V_q0),
    .din2(grp_fu_1652_p2),
    .ce(1'b1),
    .dout(grp_fu_1652_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state12))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state12)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state12);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state31))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state31)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state31);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state36))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state35)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if ((1'b1 == ap_CS_fsm_state35)) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state44))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state43)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state44)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state44);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state43)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state52))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state52)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state52);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end else if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
            ap_enable_reg_pp4_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state60) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((fwprop_read_reg_1661 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state60)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state60);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if (((fwprop_read_reg_1661 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state74))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state73)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state74)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state74);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end else if ((1'b1 == ap_CS_fsm_state73)) begin
            ap_enable_reg_pp6_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp7_flush_enable)) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state79)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter3 <= ap_enable_reg_pp7_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter4 <= ap_enable_reg_pp7_iter3;
        end else if (((1'b1 == ap_CS_fsm_state79) | ((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_condition_pp7_exit_iter4_state84) & (ap_enable_reg_pp7_iter3 == 1'b0)))) begin
            ap_enable_reg_pp7_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_condition_pp7_exit_iter4_state84))) begin
            ap_enable_reg_pp7_iter5 <= ap_enable_reg_pp7_iter3;
        end else if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter5 <= ap_enable_reg_pp7_iter4;
        end else if ((1'b1 == ap_CS_fsm_state79)) begin
            ap_enable_reg_pp7_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage0_subdone) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b1 == ap_condition_pp8_exit_iter0_state89))) begin
            ap_enable_reg_pp8_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state88) & (icmp_ln119_fu_1561_p2 == 1'd1))) begin
            ap_enable_reg_pp8_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage1_subdone) & (1'b1 == ap_CS_fsm_pp8_stage1))) begin
            ap_enable_reg_pp8_iter1 <= ap_enable_reg_pp8_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage1_subdone) & (1'b1 == ap_CS_fsm_pp8_stage1))) begin
            ap_enable_reg_pp8_iter2 <= ap_enable_reg_pp8_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage1_subdone) & (1'b1 == ap_CS_fsm_pp8_stage1))) begin
            ap_enable_reg_pp8_iter3 <= ap_enable_reg_pp8_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage1_subdone) & (1'b1 == ap_CS_fsm_pp8_stage1))) begin
            ap_enable_reg_pp8_iter4 <= ap_enable_reg_pp8_iter3;
        end else if (((1'b1 == ap_CS_fsm_state88) & (icmp_ln119_fu_1561_p2 == 1'd1))) begin
            ap_enable_reg_pp8_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((fwprop_read_reg_1661 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        i_1_reg_681 <= 32'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln65_fu_1360_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        i_1_reg_681 <= add_ln65_fu_1354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state88) & (icmp_ln119_fu_1561_p2 == 1'd1))) begin
        i_2_reg_746 <= 31'd0;
    end else if (((icmp_ln119_1_reg_2294 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        i_2_reg_746 <= add_ln119_reg_2289;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_757_p2 == 1'd1) & (fwprop_read_reg_1661 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        i_3_reg_590 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        i_3_reg_590 <= add_ln90_reg_1881;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_757_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state63))) begin
        i_4_reg_692 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        i_4_reg_692 <= add_ln69_reg_2139;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_reg_1944 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_5_reg_624 <= select_ln96_2_reg_1993;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        i_5_reg_624 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state64) & (icmp_ln69_1_fu_1383_p2 == 1'd1))) begin
        i_6_reg_715 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        i_6_reg_715 <= add_ln76_reg_2187;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln103_fu_1237_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_7_reg_647 <= add_ln103_fu_1227_p2;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        i_7_reg_647 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_reg_1871 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
        i_8_reg_658 <= 31'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp36319_reg_1798 == 1'd1)) & (1'b1 == ap_CS_fsm_state59))) begin
        i_8_reg_658 <= add_ln107_reg_2073;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_reg_556 <= 31'd0;
    end else if (((icmp_ln43_1_fu_878_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_556 <= add_ln43_fu_872_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_reg_1944 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten_reg_613 <= add_ln96_2_reg_1939;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        indvar_flatten_reg_613 <= 63'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_reg_1944 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j_1_reg_636 <= add_ln97_reg_2008;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        j_1_reg_636 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        j_2_reg_704 <= 31'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln70_fu_1451_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        j_2_reg_704 <= add_ln70_fu_1441_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln80_fu_1512_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        j_3_reg_726 <= add_ln80_fu_1506_p2;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        j_3_reg_726 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
        j_4_reg_670 <= 31'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln108_fu_1335_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        j_4_reg_670 <= add_ln108_fu_1325_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        j_reg_602 <= 31'd0;
    end else if (((icmp_ln91_fu_1069_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_reg_602 <= add_ln91_fu_1059_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) & ((fwprop_read_reg_1661 == 1'd1) | ((icmp_ln90_reg_1871 == 1'd0) | (icmp_ln107_fu_1267_p2 == 1'd1))))) begin
        k_reg_567 <= add_ln53_reg_1822;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        k_reg_567 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) & ((fwprop_read_reg_1661 == 1'd1) | ((icmp_ln90_reg_1871 == 1'd0) | (icmp_ln107_fu_1267_p2 == 1'd1))))) begin
        phi_mul_reg_578 <= add_ln49_reg_1828;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        phi_mul_reg_578 <= 38'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter5 == 1'b1) & (icmp_ln80_reg_2225_pp7_iter4_reg == 1'd0))) begin
        rhs_reg_737 <= {{grp_fu_1652_p3[28:13]}};
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        rhs_reg_737 <= bbuf_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_reg_1871 == 1'd1) & (fwprop_read_reg_1661 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        add_ln107_reg_2073 <= add_ln107_fu_1261_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln80_fu_1512_p2 == 1'd0))) begin
        add_ln1116_reg_2229 <= add_ln1116_fu_1526_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_fu_1093_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln1118_reg_1973 <= add_ln1118_fu_1150_p2;
        add_ln96_reg_1948 <= add_ln96_fu_1098_p2;
        dx_addr_2_reg_1978 <= zext_ln1118_fu_1144_p1;
        icmp_ln97_reg_1953 <= icmp_ln97_fu_1105_p2;
        select_ln96_reg_1958 <= select_ln96_fu_1111_p3;
        trunc_ln96_reg_1963 <= trunc_ln96_fu_1119_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        add_ln119_reg_2289 <= add_ln119_fu_1595_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln49_reg_1828 <= add_ln49_fu_920_p2;
        add_ln53_reg_1822 <= add_ln53_fu_914_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        add_ln69_reg_2139 <= add_ln69_fu_1377_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln70_fu_1451_p2 == 1'd0))) begin
        add_ln71_reg_2177 <= add_ln71_fu_1460_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        add_ln71_reg_2177_pp6_iter1_reg <= add_ln71_reg_2177;
        icmp_ln70_reg_2173 <= icmp_ln70_fu_1451_p2;
        icmp_ln70_reg_2173_pp6_iter1_reg <= icmp_ln70_reg_2173;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        add_ln76_reg_2187 <= add_ln76_fu_1469_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln90_reg_1881 <= add_ln90_fu_987_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_fu_1069_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln92_reg_1924 <= add_ln92_fu_1078_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln92_reg_1924_pp1_iter1_reg <= add_ln92_reg_1924;
        icmp_ln91_reg_1920 <= icmp_ln91_fu_1069_p2;
        icmp_ln91_reg_1920_pp1_iter1_reg <= icmp_ln91_reg_1920;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln96_2_reg_1939 <= add_ln96_2_fu_1087_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln96_reg_1944 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        add_ln97_reg_2008 <= add_ln97_fu_1170_p2;
        select_ln96_2_reg_1993 <= grp_fu_762_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        b_read_reg_1708 <= b;
        debug_dx_read_reg_1698 <= debug_dx;
        debug_x_read_reg_1703 <= debug_x;
        debugip_read_reg_1694 <= debugip;
        dwt_read_reg_1713 <= dwt;
        fwprop_read_reg_1661 <= fwprop;
        tmp_reg_1724 <= tmp_fu_779_p1[32'd31];
        wt_read_reg_1719 <= wt;
        xdim_read_reg_1677 <= xdim;
        ydim_read_reg_1665 <= ydim;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        cmp36319_reg_1798 <= cmp36319_fu_900_p2;
        mul_ln53_reg_1812 <= grp_fu_894_p2;
        sext_ln49_1_reg_1807 <= sext_ln49_1_fu_908_p1;
        sext_ln49_reg_1802 <= sext_ln49_fu_905_p1;
        zext_ln96_reg_1817[31 : 0] <= zext_ln96_fu_911_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln103_fu_1237_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        dbbuf_V_addr_reg_2052 <= zext_ln703_fu_1246_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        dbbuf_V_addr_reg_2052_pp3_iter1_reg <= dbbuf_V_addr_reg_2052;
        icmp_ln103_reg_2048 <= icmp_ln103_fu_1237_p2;
        icmp_ln103_reg_2048_pp3_iter1_reg <= icmp_ln103_reg_2048;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln103_reg_2048 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        dbbuf_V_load_reg_2063 <= dbbuf_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_reg_1944 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        dwbuf_V_addr_1_reg_2003 <= zext_ln1118_1_fu_1165_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        dwbuf_V_addr_1_reg_2003_pp2_iter1_reg <= dwbuf_V_addr_1_reg_2003;
        dwbuf_V_addr_1_reg_2003_pp2_iter2_reg <= dwbuf_V_addr_1_reg_2003_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dx_addr_2_reg_1978_pp2_iter1_reg <= dx_addr_2_reg_1978;
        dx_addr_2_reg_1978_pp2_iter2_reg <= dx_addr_2_reg_1978_pp2_iter1_reg;
        icmp_ln96_reg_1944 <= icmp_ln96_fu_1093_p2;
        icmp_ln96_reg_1944_pp2_iter1_reg <= icmp_ln96_reg_1944;
        icmp_ln96_reg_1944_pp2_iter2_reg <= icmp_ln96_reg_1944_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_1_reg_2294 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        dx_load_reg_2320 <= dx_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        empty_45_reg_2147 <= grp_fu_1388_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        empty_52_reg_1894 <= grp_fu_998_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        empty_59_reg_2081 <= grp_fu_1272_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (icmp_ln119_1_fu_1601_p2 == 1'd0))) begin
        gmem2_addr_1_reg_2314 <= add_ln121_fu_1623_p2;
        gmem2_addr_reg_2303 <= add_ln120_fu_1612_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        gmem2_addr_1_reg_2314_pp8_iter1_reg <= gmem2_addr_1_reg_2314;
        icmp_ln119_1_reg_2294 <= icmp_ln119_1_fu_1601_p2;
        icmp_ln119_1_reg_2294_pp8_iter1_reg <= icmp_ln119_1_reg_2294;
        icmp_ln119_1_reg_2294_pp8_iter2_reg <= icmp_ln119_1_reg_2294_pp8_iter1_reg;
        icmp_ln119_1_reg_2294_pp8_iter3_reg <= icmp_ln119_1_reg_2294_pp8_iter2_reg;
        icmp_ln119_1_reg_2294_pp8_iter4_reg <= icmp_ln119_1_reg_2294_pp8_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1920 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        gmem_addr_1_read_reg_1929 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp36319_reg_1798 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        gmem_addr_1_reg_1899 <= sext_ln91_fu_1038_p1;
        trunc_ln92_reg_1905 <= trunc_ln92_fu_1048_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln70_reg_2173 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        gmem_addr_2_read_reg_2182 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp36319_reg_1798 == 1'd1) & (1'b1 == ap_CS_fsm_state66))) begin
        gmem_addr_2_reg_2152 <= sext_ln70_fu_1420_p1;
        trunc_ln71_reg_2158 <= trunc_ln71_fu_1430_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp36319_reg_1798 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        gmem_addr_3_reg_2086 <= sext_ln108_fu_1304_p1;
        trunc_ln109_reg_2092 <= trunc_ln109_fu_1314_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_1_reg_1776 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_addr_read_reg_1785 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln108_reg_2107 <= icmp_ln108_fu_1335_p2;
        icmp_ln108_reg_2107_pp4_iter1_reg <= icmp_ln108_reg_2107;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln43_1_reg_1776 <= icmp_ln43_1_fu_878_p2;
        icmp_ln43_1_reg_1776_pp0_iter1_reg <= icmp_ln43_1_reg_1776;
        trunc_ln44_reg_1780_pp0_iter1_reg <= trunc_ln44_reg_1780;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        icmp_ln43_reg_1751 <= icmp_ln43_fu_833_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        icmp_ln80_reg_2225 <= icmp_ln80_fu_1512_p2;
        icmp_ln80_reg_2225_pp7_iter1_reg <= icmp_ln80_reg_2225;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp7_stage0_11001)) begin
        icmp_ln80_reg_2225_pp7_iter2_reg <= icmp_ln80_reg_2225_pp7_iter1_reg;
        icmp_ln80_reg_2225_pp7_iter3_reg <= icmp_ln80_reg_2225_pp7_iter2_reg;
        icmp_ln80_reg_2225_pp7_iter4_reg <= icmp_ln80_reg_2225_pp7_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((fwprop_read_reg_1661 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        icmp_ln90_reg_1871 <= grp_fu_757_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        mul156_reg_2264 <= grp_fu_940_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mul_ln41_reg_1735 <= grp_fu_790_p2;
        tmp_2_reg_1740 <= {{grp_fu_790_p2[64:38]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        mul_ln53_1_reg_1841 <= grp_fu_935_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        mul_ln53_2_reg_1853 <= grp_fu_947_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        mul_ln96_reg_1934 <= grp_fu_1006_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        num_iters_reg_1755 <= num_iters_fu_843_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln96_reg_1944 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln119_1_reg_2294 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)))) begin
        reg_769 <= x_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln108_reg_2107 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((icmp_ln96_reg_1944_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        reg_774 <= dwbuf_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state88) & (icmp_ln119_fu_1561_p2 == 1'd1))) begin
        sext_ln119_1_reg_2284 <= sext_ln119_1_fu_1591_p1;
        sext_ln119_reg_2279 <= sext_ln119_fu_1578_p1;
        trunc_ln119_reg_2274 <= trunc_ln119_fu_1566_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1724 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        sub_ln41_1_reg_1746 <= sub_ln41_1_fu_827_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        tmp_3_reg_2215[15 : 10] <= tmp_3_fu_1499_p3[15 : 10];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        tmp_6_reg_1910[15 : 10] <= tmp_6_fu_1052_p3[15 : 10];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        tmp_8_reg_2097[15 : 10] <= tmp_8_fu_1318_p3[15 : 10];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        tmp_s_reg_2163[15 : 10] <= tmp_s_fu_1434_p3[15 : 10];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_reg_1871 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
        trunc_ln107_reg_2068 <= trunc_ln107_fu_1258_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) & (icmp_ln76_fu_1475_p2 == 1'd0))) begin
        trunc_ln1116_reg_2205 <= trunc_ln1116_fu_1495_p1;
        y_addr_reg_2200 <= zext_ln78_fu_1489_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        trunc_ln43_reg_1766 <= trunc_ln43_fu_869_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_1_fu_878_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln44_reg_1780 <= trunc_ln44_fu_883_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        trunc_ln49_reg_1790 <= trunc_ln49_fu_891_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        trunc_ln54_reg_1858 <= trunc_ln54_fu_961_p1;
        ub_reg_1864 <= ub_fu_974_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_757_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state63))) begin
        trunc_ln69_reg_2133 <= trunc_ln69_fu_1374_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_757_p2 == 1'd1) & (fwprop_read_reg_1661 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        trunc_ln90_reg_1875 <= trunc_ln90_fu_983_p1;
    end
end

always @ (*) begin
    if ((icmp_ln43_1_fu_878_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln91_fu_1069_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state31 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state31 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln96_fu_1093_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state36 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state36 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln103_fu_1237_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state44 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state44 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln108_fu_1335_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state52 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state52 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln65_fu_1360_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state60 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state60 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln70_fu_1451_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state74 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state74 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter4 == 1'b1) & (ap_enable_reg_pp7_iter3 == 1'b0))) begin
        ap_condition_pp7_exit_iter4_state84 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter4_state84 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln80_fu_1512_p2 == 1'd1))) begin
        ap_condition_pp7_flush_enable = 1'b1;
    end else begin
        ap_condition_pp7_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln119_1_fu_1601_p2 == 1'd1)) begin
        ap_condition_pp8_exit_iter0_state89 = 1'b1;
    end else begin
        ap_condition_pp8_exit_iter0_state89 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter4 == 1'b0) & (ap_enable_reg_pp7_iter3 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter5 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter2 == 1'b0) & (ap_enable_reg_pp8_iter4 == 1'b0) & (ap_enable_reg_pp8_iter1 == 1'b0) & (ap_enable_reg_pp8_iter3 == 1'b0) & (ap_enable_reg_pp8_iter0 == 1'b0))) begin
        ap_idle_pp8 = 1'b1;
    end else begin
        ap_idle_pp8 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln119_1_reg_2294 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        ap_phi_mux_i_2_phi_fu_750_p4 = add_ln119_reg_2289;
    end else begin
        ap_phi_mux_i_2_phi_fu_750_p4 = i_2_reg_746;
    end
end

always @ (*) begin
    if (((icmp_ln96_reg_1944 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_i_5_phi_fu_628_p4 = select_ln96_2_reg_1993;
    end else begin
        ap_phi_mux_i_5_phi_fu_628_p4 = i_5_reg_624;
    end
end

always @ (*) begin
    if (((icmp_ln96_reg_1944 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_617_p4 = add_ln96_2_reg_1939;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_617_p4 = indvar_flatten_reg_613;
    end
end

always @ (*) begin
    if (((icmp_ln96_reg_1944 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_j_1_phi_fu_640_p4 = add_ln97_reg_2008;
    end else begin
        ap_phi_mux_j_1_phi_fu_640_p4 = j_1_reg_636;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter5 == 1'b1) & (icmp_ln80_reg_2225_pp7_iter4_reg == 1'd0))) begin
        ap_phi_mux_rhs_phi_fu_740_p4 = {{grp_fu_1652_p3[28:13]}};
    end else begin
        ap_phi_mux_rhs_phi_fu_740_p4 = rhs_reg_737;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        bbuf_V_address0 = zext_ln78_fu_1489_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        bbuf_V_address0 = zext_ln44_fu_887_p1;
    end else begin
        bbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        bbuf_V_ce0 = 1'b1;
    end else begin
        bbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln43_1_reg_1776_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        bbuf_V_we0 = 1'b1;
    end else begin
        bbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        dbbuf_V_ce0 = 1'b1;
    end else begin
        dbbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        dbbuf_V_ce1 = 1'b1;
    end else begin
        dbbuf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln103_reg_2048_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        dbbuf_V_we0 = 1'b1;
    end else begin
        dbbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        dwbuf_V_address0 = zext_ln109_fu_1349_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        dwbuf_V_address0 = dwbuf_V_addr_1_reg_2003_pp2_iter2_reg;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        dwbuf_V_address0 = dwbuf_V_addr_1_reg_2003;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        dwbuf_V_address0 = zext_ln92_fu_1083_p1;
    end else begin
        dwbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        dwbuf_V_ce0 = 1'b1;
    end else begin
        dwbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        dwbuf_V_d0 = {{grp_fu_1643_p3[28:13]}};
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        dwbuf_V_d0 = gmem_addr_1_read_reg_1929;
    end else begin
        dwbuf_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln96_reg_1944_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((icmp_ln91_reg_1920_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        dwbuf_V_we0 = 1'b1;
    end else begin
        dwbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        dx_Addr_A_orig = zext_ln120_fu_1606_p1;
    end else if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        dx_Addr_A_orig = zext_ln66_fu_1369_p1;
    end else if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        dx_Addr_A_orig = dx_addr_2_reg_1978_pp2_iter2_reg;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dx_Addr_A_orig = dx_addr_2_reg_1978;
    end else begin
        dx_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        dx_Din_A = 16'd0;
    end else if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        dx_Din_A = {{grp_fu_1634_p3[28:13]}};
    end else begin
        dx_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
        dx_EN_A = 1'b1;
    end else begin
        dx_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln96_reg_1944_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln65_fu_1360_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
        dx_WEN_A = 2'd3;
    end else begin
        dx_WEN_A = 2'd0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        dy_Addr_A_orig = zext_ln703_fu_1246_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        dy_Addr_A_orig = zext_ln96_3_fu_1160_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dy_Addr_A_orig = zext_ln96_2_fu_1135_p1;
    end else begin
        dy_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        dy_EN_A = 1'b1;
    end else begin
        dy_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp8_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_2660)) begin
            gmem2_AWADDR = gmem2_addr_1_reg_2314_pp8_iter1_reg;
        end else if ((1'b1 == ap_condition_2656)) begin
            gmem2_AWADDR = gmem2_addr_reg_2303;
        end else begin
            gmem2_AWADDR = 'bx;
        end
    end else begin
        gmem2_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln119_1_reg_2294_pp8_iter1_reg == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1)) | ((icmp_ln119_1_reg_2294 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)))) begin
        gmem2_AWVALID = 1'b1;
    end else begin
        gmem2_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln119_1_reg_2294_pp8_iter4_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1)) | ((icmp_ln119_1_reg_2294_pp8_iter3_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)))) begin
        gmem2_BREADY = 1'b1;
    end else begin
        gmem2_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln119_1_reg_2294_pp8_iter1_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_1702)) begin
            gmem2_WDATA = dx_load_reg_2320;
        end else if ((1'b1 == ap_condition_1690)) begin
            gmem2_WDATA = reg_769;
        end else begin
            gmem2_WDATA = 'bx;
        end
    end else begin
        gmem2_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter2 == 1'b1) & (icmp_ln119_1_reg_2294_pp8_iter1_reg == 1'd0) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)) | ((icmp_ln119_1_reg_2294_pp8_iter1_reg == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1)))) begin
        gmem2_WVALID = 1'b1;
    end else begin
        gmem2_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln119_1_reg_2294_pp8_iter1_reg == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1)) | ((icmp_ln119_1_reg_2294 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0)))) begin
        gmem2_blk_n_AW = m_axi_gmem2_AWREADY;
    end else begin
        gmem2_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln119_1_reg_2294_pp8_iter4_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1)) | ((icmp_ln119_1_reg_2294_pp8_iter3_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0)))) begin
        gmem2_blk_n_B = m_axi_gmem2_BVALID;
    end else begin
        gmem2_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter2 == 1'b1) & (icmp_ln119_1_reg_2294_pp8_iter1_reg == 1'd0) & (1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0)) | ((icmp_ln119_1_reg_2294_pp8_iter1_reg == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1)))) begin
        gmem2_blk_n_W = m_axi_gmem2_WREADY;
    end else begin
        gmem2_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state67))) begin
        gmem_ARADDR = gmem_addr_2_reg_2152;
    end else if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        gmem_ARADDR = gmem_addr_1_reg_1899;
    end else if (((1'b0 == ap_block_state5_io) & (icmp_ln43_reg_1751 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        gmem_ARADDR = sext_ln43_fu_858_p1;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state67)))) begin
        gmem_ARLEN = xdim_read_reg_1677;
    end else if (((1'b0 == ap_block_state5_io) & (icmp_ln43_reg_1751 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        gmem_ARLEN = ydim_read_reg_1665;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state67)) | ((1'b0 == ap_block_state5_io) & (icmp_ln43_reg_1751 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((gmem_BVALID == 1'b0) & (cmp36319_reg_1798 == 1'd1)) & (cmp36319_reg_1798 == 1'd1) & (1'b1 == ap_CS_fsm_state59))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln91_reg_1920 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln70_reg_2173 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((icmp_ln43_1_reg_1776 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln108_reg_2107_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state67) | ((icmp_ln43_reg_1751 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((cmp36319_reg_1798 == 1'd1) & (1'b1 == ap_CS_fsm_state59))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln91_reg_1920 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln70_reg_2173 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((icmp_ln43_1_reg_1776 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln108_reg_2107_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_757_p0 = ub_reg_1864;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_757_p0 = ub_fu_974_p3;
    end else begin
        grp_fu_757_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp2_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            grp_fu_762_p0 = icmp_ln97_reg_1953;
        end else if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            grp_fu_762_p0 = icmp_ln97_fu_1105_p2;
        end else begin
            grp_fu_762_p0 = 'bx;
        end
    end else begin
        grp_fu_762_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp2_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            grp_fu_762_p1 = add_ln96_reg_1948;
        end else if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            grp_fu_762_p1 = add_ln96_fu_1098_p2;
        end else begin
            grp_fu_762_p1 = 'bx;
        end
    end else begin
        grp_fu_762_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp2_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            grp_fu_762_p2 = i_5_reg_624;
        end else if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            grp_fu_762_p2 = ap_phi_mux_i_5_phi_fu_628_p4;
        end else begin
            grp_fu_762_p2 = 'bx;
        end
    end else begin
        grp_fu_762_p2 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1))) begin
        wbuf_V_address0 = zext_ln1116_1_fu_1531_p1;
    end else if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter2 == 1'b1))) begin
        wbuf_V_address0 = zext_ln71_fu_1465_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        wbuf_V_address0 = zext_ln1118_1_fu_1165_p1;
    end else begin
        wbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter2 == 1'b1)))) begin
        wbuf_V_ce0 = 1'b1;
    end else begin
        wbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln70_reg_2173_pp6_iter1_reg == 1'd0))) begin
        wbuf_V_we0 = 1'b1;
    end else begin
        wbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_Addr_A_orig = zext_ln120_fu_1606_p1;
    end else if (((1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        x_Addr_A_orig = zext_ln1116_fu_1521_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        x_Addr_A_orig = zext_ln1118_fu_1144_p1;
    end else begin
        x_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter2 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1)))) begin
        x_EN_A = 1'b1;
    end else begin
        x_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter5 == 1'b1))) begin
        y_Din_A = {{grp_fu_1652_p3[28:13]}};
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        y_Din_A = bbuf_V_q0;
    end else begin
        y_Din_A = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter5 == 1'b1)))) begin
        y_EN_A = 1'b1;
    end else begin
        y_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter5 == 1'b1) & (icmp_ln80_reg_2225_pp7_iter4_reg == 1'd0)))) begin
        y_WEN_A = 2'd3;
    end else begin
        y_WEN_A = 2'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b0 == ap_block_state5_io) & (icmp_ln43_reg_1751 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if (((1'b0 == ap_block_state5_io) & (icmp_ln43_reg_1751 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln43_1_fu_878_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln43_1_fu_878_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln49_fu_926_p2 == 1'd1) & (debugip_read_reg_1694 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else if (((icmp_ln49_fu_926_p2 == 1'd1) & (debugip_read_reg_1694 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((fwprop_read_reg_1661 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((grp_fu_757_p2 == 1'd1) & (fwprop_read_reg_1661 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln90_1_fu_993_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((cmp36319_reg_1798 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln91_fu_1069_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((icmp_ln91_fu_1069_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((icmp_ln96_fu_1093_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if ((((ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((icmp_ln96_fu_1093_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((icmp_ln103_fu_1237_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((icmp_ln103_fu_1237_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (((1'b1 == ap_CS_fsm_state48) & ((fwprop_read_reg_1661 == 1'd1) | ((icmp_ln90_reg_1871 == 1'd0) | (icmp_ln107_fu_1267_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            if (((cmp36319_reg_1798 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (icmp_ln108_fu_1335_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)) & ~((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) | ((ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (icmp_ln108_fu_1335_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            if ((~((gmem_BVALID == 1'b0) & (cmp36319_reg_1798 == 1'd1)) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln65_fu_1360_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter2 == 1'b1) & (ap_enable_reg_pp5_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter2 == 1'b1) & (ap_enable_reg_pp5_iter1 == 1'b0)) | ((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln65_fu_1360_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state63 : begin
            if (((grp_fu_757_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state64 : begin
            if (((1'b1 == ap_CS_fsm_state64) & (icmp_ln69_1_fu_1383_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            if (((cmp36319_reg_1798 == 1'd0) & (1'b1 == ap_CS_fsm_state66))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state67 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state67))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln70_fu_1451_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1)) & ~((ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter2 == 1'b1)) | ((ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln70_fu_1451_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state78 : begin
            if (((1'b1 == ap_CS_fsm_state78) & (icmp_ln76_fu_1475_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if (~((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter4 == 1'b1) & (ap_enable_reg_pp7_iter3 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if (((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter4 == 1'b1) & (ap_enable_reg_pp7_iter3 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            if (((1'b1 == ap_CS_fsm_state88) & (icmp_ln119_fu_1561_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end
        end
        ap_ST_fsm_pp8_stage0 : begin
            if ((~((ap_enable_reg_pp8_iter1 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone) & (icmp_ln119_1_fu_1601_p2 == 1'd1) & (ap_enable_reg_pp8_iter0 == 1'b1)) & (1'b0 == ap_block_pp8_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage1;
            end else if (((ap_enable_reg_pp8_iter1 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone) & (icmp_ln119_1_fu_1601_p2 == 1'd1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end
        end
        ap_ST_fsm_pp8_stage1 : begin
            if ((~((ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage1_subdone) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter3 == 1'b0)) & (1'b0 == ap_block_pp8_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else if (((ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage1_subdone) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter3 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage1;
            end
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln103_fu_1227_p2 = (i_7_reg_647 + 31'd1);

assign add_ln107_fu_1261_p2 = ($signed(i_8_reg_658) + $signed(31'd1));

assign add_ln108_fu_1325_p2 = (j_4_reg_670 + 31'd1);

assign add_ln109_fu_1344_p2 = (tmp_8_reg_2097 + trunc_ln109_1_fu_1340_p1);

assign add_ln1116_fu_1526_p2 = (tmp_3_reg_2215 + trunc_ln1116_1_fu_1517_p1);

assign add_ln1118_fu_1150_p2 = (tmp_10_cast_fu_1127_p3 + trunc_ln1118_1_fu_1140_p1);

assign add_ln119_fu_1595_p2 = (ap_phi_mux_i_2_phi_fu_750_p4 + 31'd1);

assign add_ln120_fu_1612_p2 = ($signed(zext_ln120_fu_1606_p1) + $signed(sext_ln119_reg_2279));

assign add_ln121_fu_1623_p2 = ($signed(zext_ln120_fu_1606_p1) + $signed(sext_ln119_1_reg_2284));

assign add_ln43_fu_872_p2 = (i_reg_556 + 31'd1);

assign add_ln49_fu_920_p2 = (phi_mul_reg_578 + 38'd50);

assign add_ln53_fu_914_p2 = (k_reg_567 + 32'd1);

assign add_ln65_fu_1354_p2 = (i_1_reg_681 + 32'd1);

assign add_ln69_fu_1377_p2 = ($signed(i_4_reg_692) + $signed(31'd1));

assign add_ln70_fu_1441_p2 = (j_2_reg_704 + 31'd1);

assign add_ln71_fu_1460_p2 = (tmp_s_reg_2163 + trunc_ln71_1_fu_1456_p1);

assign add_ln76_fu_1469_p2 = (i_6_reg_715 + 31'd1);

assign add_ln78_fu_1484_p2 = (trunc_ln76_fu_1480_p1 + trunc_ln54_reg_1858);

assign add_ln80_fu_1506_p2 = (j_3_reg_726 + 32'd1);

assign add_ln90_fu_987_p2 = ($signed(i_3_reg_590) + $signed(31'd1));

assign add_ln91_fu_1059_p2 = (j_reg_602 + 31'd1);

assign add_ln92_fu_1078_p2 = (tmp_6_reg_1910 + trunc_ln92_1_fu_1074_p1);

assign add_ln96_1_fu_1156_p2 = (trunc_ln96_reg_1963 + trunc_ln54_reg_1858);

assign add_ln96_2_fu_1087_p2 = (ap_phi_mux_indvar_flatten_phi_fu_617_p4 + 63'd1);

assign add_ln96_fu_1098_p2 = (ap_phi_mux_i_5_phi_fu_628_p4 + 31'd1);

assign add_ln97_fu_1170_p2 = (select_ln96_reg_1958 + 32'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_pp8_stage0 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_pp8_stage1 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd68];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln43_1_reg_1776 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln43_1_reg_1776 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln91_reg_1920 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln91_reg_1920 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage0_11001 = ((1'b1 == ap_block_state54_io) & (ap_enable_reg_pp4_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp4_stage0_subdone = ((1'b1 == ap_block_state54_io) & (ap_enable_reg_pp4_iter2 == 1'b1));
end

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln70_reg_2173 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln70_reg_2173 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1));
end

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp8_stage0_01001 = ((gmem2_BVALID == 1'b0) & (icmp_ln119_1_reg_2294_pp8_iter3_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp8_stage0_11001 = (((gmem2_BVALID == 1'b0) & (icmp_ln119_1_reg_2294_pp8_iter3_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1)) | ((1'b1 == ap_block_state93_io) & (ap_enable_reg_pp8_iter2 == 1'b1)) | ((1'b1 == ap_block_state91_io) & (ap_enable_reg_pp8_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp8_stage0_subdone = (((gmem2_BVALID == 1'b0) & (icmp_ln119_1_reg_2294_pp8_iter3_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1)) | ((1'b1 == ap_block_state93_io) & (ap_enable_reg_pp8_iter2 == 1'b1)) | ((1'b1 == ap_block_state91_io) & (ap_enable_reg_pp8_iter1 == 1'b1)));
end

assign ap_block_pp8_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp8_stage1_01001 = ((gmem2_BVALID == 1'b0) & (icmp_ln119_1_reg_2294_pp8_iter4_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp8_stage1_11001 = (((gmem2_BVALID == 1'b0) & (icmp_ln119_1_reg_2294_pp8_iter4_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1)) | ((1'b1 == ap_block_state92_io) & (ap_enable_reg_pp8_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp8_stage1_subdone = (((gmem2_BVALID == 1'b0) & (icmp_ln119_1_reg_2294_pp8_iter4_reg == 1'd0) & (ap_enable_reg_pp8_iter4 == 1'b1)) | ((1'b1 == ap_block_state92_io) & (ap_enable_reg_pp8_iter1 == 1'b1)));
end

assign ap_block_state12_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp0_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln43_1_reg_1776 == 1'd0));
end

assign ap_block_state14_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state32_pp1_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln91_reg_1920 == 1'd0));
end

assign ap_block_state33_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state54_io = ((gmem_WREADY == 1'b0) & (icmp_ln108_reg_2107_pp4_iter1_reg == 1'd0));
end

assign ap_block_state54_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state59 = ((gmem_BVALID == 1'b0) & (cmp36319_reg_1798 == 1'd1));
end

always @ (*) begin
    ap_block_state5_io = ((gmem_ARREADY == 1'b0) & (icmp_ln43_reg_1751 == 1'd1));
end

assign ap_block_state60_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state75_pp6_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln70_reg_2173 == 1'd0));
end

assign ap_block_state76_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp7_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp7_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp7_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp8_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp8_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state91_io = ((gmem2_AWREADY == 1'b0) & (icmp_ln119_1_reg_2294 == 1'd0));
end

assign ap_block_state91_pp8_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state92_io = (((gmem2_WREADY == 1'b0) & (icmp_ln119_1_reg_2294_pp8_iter1_reg == 1'd0)) | ((gmem2_AWREADY == 1'b0) & (icmp_ln119_1_reg_2294_pp8_iter1_reg == 1'd0)));
end

assign ap_block_state92_pp8_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state93_io = ((gmem2_WREADY == 1'b0) & (icmp_ln119_1_reg_2294_pp8_iter1_reg == 1'd0));
end

assign ap_block_state93_pp8_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp8_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp8_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp8_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state97_pp8_stage0_iter4 = ((gmem2_BVALID == 1'b0) & (icmp_ln119_1_reg_2294_pp8_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state98_pp8_stage1_iter4 = ((gmem2_BVALID == 1'b0) & (icmp_ln119_1_reg_2294_pp8_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_condition_1690 = ((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage1_01001) & (1'b1 == ap_CS_fsm_pp8_stage1));
end

always @ (*) begin
    ap_condition_1702 = ((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_01001) & (1'b1 == ap_CS_fsm_pp8_stage0));
end

always @ (*) begin
    ap_condition_2656 = ((icmp_ln119_1_reg_2294 == 1'd0) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0));
end

always @ (*) begin
    ap_condition_2660 = ((icmp_ln119_1_reg_2294_pp8_iter1_reg == 1'd0) & (1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp8 = (ap_idle_pp8 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cmp36319_fu_900_p2 = (($signed(xdim_read_reg_1677) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign dbbuf_V_address1 = zext_ln703_fu_1246_p1;

assign dbbuf_V_d0 = (dy_Dout_A + dbbuf_V_load_reg_2063);

assign dx_Addr_A = dx_Addr_A_orig << 32'd1;

assign dx_Clk_A = ap_clk;

assign dx_Rst_A = ap_rst_n_inv;

assign dy_Addr_A = dy_Addr_A_orig << 32'd1;

assign dy_Clk_A = ap_clk;

assign dy_Din_A = 16'd0;

assign dy_Rst_A = ap_rst_n_inv;

assign dy_WEN_A = 2'd0;

assign empty_46_fu_1393_p2 = (empty_45_reg_2147 + mul_ln53_1_reg_1841);

assign empty_47_fu_1405_p2 = (tmp_7_fu_1397_p3 + wt_read_reg_1719);

assign empty_53_fu_1011_p2 = (empty_52_reg_1894 + mul_ln53_1_reg_1841);

assign empty_54_fu_1023_p2 = (tmp_4_fu_1015_p3 + dwt_read_reg_1713);

assign empty_60_fu_1277_p2 = (empty_59_reg_2081 + mul_ln53_1_reg_1841);

assign empty_61_fu_1289_p2 = (tmp_5_fu_1281_p3 + dwt_read_reg_1713);

assign grp_fu_1006_p0 = grp_fu_1006_p00;

assign grp_fu_1006_p00 = trunc_ln90_reg_1875;

assign grp_fu_1006_p1 = zext_ln96_reg_1817;

assign grp_fu_1634_p2 = {{dx_Dout_A}, {13'd0}};

assign grp_fu_1643_p2 = {{reg_774}, {13'd0}};

assign grp_fu_1652_p2 = {{ap_phi_mux_rhs_phi_fu_740_p4}, {13'd0}};

assign grp_fu_757_p2 = (($signed(grp_fu_757_p0) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign grp_fu_762_p3 = ((grp_fu_762_p0[0:0] == 1'b1) ? grp_fu_762_p1 : grp_fu_762_p2);

assign grp_fu_790_p1 = 65'd5497558139;

assign grp_fu_894_p0 = xdim_read_reg_1677[30:0];

assign grp_fu_894_p1 = 31'd50;

assign grp_fu_935_p1 = k_reg_567[30:0];

assign grp_fu_947_p0 = grp_fu_947_p00;

assign grp_fu_947_p00 = add_ln53_reg_1822;

assign grp_fu_947_p1 = 38'd50;

assign i_7_cast_fu_1233_p1 = i_7_reg_647;

assign icmp_ln103_fu_1237_p2 = ((i_7_cast_fu_1233_p1 == ydim_read_reg_1665) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_1267_p2 = ((i_8_reg_658 == trunc_ln107_reg_2068) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_1335_p2 = ((j_4_cast_fu_1331_p1 == xdim_read_reg_1677) ? 1'b1 : 1'b0);

assign icmp_ln119_1_fu_1601_p2 = ((ap_phi_mux_i_2_phi_fu_750_p4 == trunc_ln119_reg_2274) ? 1'b1 : 1'b0);

assign icmp_ln119_fu_1561_p2 = (($signed(mul156_reg_2264) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln43_1_fu_878_p2 = ((i_reg_556 == trunc_ln43_reg_1766) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_833_p2 = (($signed(ydim_read_reg_1665) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_926_p2 = ((k_reg_567 == sext_ln49_1_reg_1807) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_956_p2 = (($signed(sext_ln49_reg_1802) < $signed(zext_ln53_1_fu_953_p1)) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_1360_p2 = ((i_1_reg_681 == xdim_read_reg_1677) ? 1'b1 : 1'b0);

assign icmp_ln69_1_fu_1383_p2 = ((i_4_reg_692 == trunc_ln69_reg_2133) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_1451_p2 = ((j_2_cast_fu_1447_p1 == xdim_read_reg_1677) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_1475_p2 = ((i_6_reg_715 == trunc_ln69_reg_2133) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_1512_p2 = ((j_3_reg_726 == xdim_read_reg_1677) ? 1'b1 : 1'b0);

assign icmp_ln90_1_fu_993_p2 = ((i_3_reg_590 == trunc_ln90_reg_1875) ? 1'b1 : 1'b0);

assign icmp_ln91_fu_1069_p2 = ((j_cast_fu_1065_p1 == xdim_read_reg_1677) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_1093_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_617_p4 == mul_ln96_reg_1934) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_1105_p2 = ((ap_phi_mux_j_1_phi_fu_640_p4 == xdim_read_reg_1677) ? 1'b1 : 1'b0);

assign j_2_cast_fu_1447_p1 = j_2_reg_704;

assign j_4_cast_fu_1331_p1 = j_4_reg_670;

assign j_cast_fu_1065_p1 = j_reg_602;

assign num_iters_fu_843_p2 = (select_ln41_1_fu_838_p3 + 27'd1);

assign select_ln41_1_fu_838_p3 = ((tmp_reg_1724[0:0] == 1'b1) ? sub_ln41_1_reg_1746 : tmp_2_reg_1740);

assign select_ln41_fu_821_p3 = ((tmp_reg_1724[0:0] == 1'b1) ? tmp_1_fu_811_p4 : tmp_2_reg_1740);

assign select_ln96_fu_1111_p3 = ((icmp_ln97_fu_1105_p2[0:0] == 1'b1) ? 32'd0 : ap_phi_mux_j_1_phi_fu_640_p4);

assign sext_ln108_fu_1304_p1 = $signed(trunc_ln3_fu_1294_p4);

assign sext_ln119_1_fu_1591_p1 = $signed(trunc_ln119_1_fu_1582_p4);

assign sext_ln119_fu_1578_p1 = $signed(trunc_ln4_fu_1569_p4);

assign sext_ln43_fu_858_p1 = $signed(trunc_ln_fu_849_p4);

assign sext_ln49_1_fu_908_p1 = $signed(num_iters_reg_1755);

assign sext_ln49_fu_905_p1 = ydim_read_reg_1665;

assign sext_ln70_fu_1420_p1 = $signed(trunc_ln2_fu_1410_p4);

assign sext_ln91_fu_1038_p1 = $signed(trunc_ln9_fu_1028_p4);

assign sub_ln41_1_fu_827_p2 = (27'd0 - select_ln41_fu_821_p3);

assign sub_ln41_fu_806_p2 = (65'd0 - mul_ln41_reg_1735);

assign sub_ln53_fu_969_p2 = ($signed(ydim_read_reg_1665) - $signed(trunc_ln54_1_fu_965_p1));

assign tmp_10_cast_fu_1127_p3 = {{trunc_ln1118_fu_1123_p1}, {10'd0}};

assign tmp_1_fu_811_p4 = {{sub_ln41_fu_806_p2[64:38]}};

assign tmp_3_fu_1499_p3 = {{trunc_ln1116_reg_2205}, {10'd0}};

assign tmp_4_fu_1015_p3 = {{empty_53_fu_1011_p2}, {1'd0}};

assign tmp_5_fu_1281_p3 = {{empty_60_fu_1277_p2}, {1'd0}};

assign tmp_6_fu_1052_p3 = {{trunc_ln92_reg_1905}, {10'd0}};

assign tmp_7_fu_1397_p3 = {{empty_46_fu_1393_p2}, {1'd0}};

assign tmp_8_fu_1318_p3 = {{trunc_ln109_reg_2092}, {10'd0}};

assign tmp_fu_779_p1 = ydim;

assign tmp_s_fu_1434_p3 = {{trunc_ln71_reg_2158}, {10'd0}};

assign trunc_ln107_fu_1258_p1 = ub_reg_1864[30:0];

assign trunc_ln109_1_fu_1340_p1 = j_4_reg_670[15:0];

assign trunc_ln109_fu_1314_p1 = i_8_reg_658[5:0];

assign trunc_ln1116_1_fu_1517_p1 = j_3_reg_726[15:0];

assign trunc_ln1116_fu_1495_p1 = i_6_reg_715[5:0];

assign trunc_ln1118_1_fu_1140_p1 = select_ln96_fu_1111_p3[15:0];

assign trunc_ln1118_fu_1123_p1 = grp_fu_762_p3[5:0];

assign trunc_ln119_1_fu_1582_p4 = {{debug_dx_read_reg_1698[31:1]}};

assign trunc_ln119_fu_1566_p1 = mul156_reg_2264[30:0];

assign trunc_ln2_fu_1410_p4 = {{empty_47_fu_1405_p2[31:1]}};

assign trunc_ln3_fu_1294_p4 = {{empty_61_fu_1289_p2[31:1]}};

assign trunc_ln43_fu_869_p1 = ydim_read_reg_1665[30:0];

assign trunc_ln44_fu_883_p1 = i_reg_556[9:0];

assign trunc_ln49_fu_891_p1 = xdim_read_reg_1677[30:0];

assign trunc_ln4_fu_1569_p4 = {{debug_x_read_reg_1703[31:1]}};

assign trunc_ln54_1_fu_965_p1 = phi_mul_reg_578[31:0];

assign trunc_ln54_fu_961_p1 = phi_mul_reg_578[9:0];

assign trunc_ln66_fu_1365_p1 = i_1_reg_681[9:0];

assign trunc_ln69_fu_1374_p1 = ub_reg_1864[30:0];

assign trunc_ln703_fu_1242_p1 = i_7_reg_647[9:0];

assign trunc_ln71_1_fu_1456_p1 = j_2_reg_704[15:0];

assign trunc_ln71_fu_1430_p1 = i_4_reg_692[5:0];

assign trunc_ln76_fu_1480_p1 = i_6_reg_715[9:0];

assign trunc_ln90_fu_983_p1 = ub_fu_974_p3[30:0];

assign trunc_ln92_1_fu_1074_p1 = j_reg_602[15:0];

assign trunc_ln92_fu_1048_p1 = i_3_reg_590[5:0];

assign trunc_ln96_fu_1119_p1 = grp_fu_762_p3[9:0];

assign trunc_ln9_fu_1028_p4 = {{empty_54_fu_1023_p2[31:1]}};

assign trunc_ln_fu_849_p4 = {{b_read_reg_1708[31:1]}};

assign ub_fu_974_p3 = ((icmp_ln53_fu_956_p2[0:0] == 1'b1) ? sub_ln53_fu_969_p2 : 32'd50);

assign x_Addr_A = x_Addr_A_orig << 32'd1;

assign x_Clk_A = ap_clk;

assign x_Din_A = 16'd0;

assign x_Rst_A = ap_rst_n_inv;

assign x_WEN_A = 2'd0;

assign y_Addr_A = y_Addr_A_orig << 32'd1;

assign y_Addr_A_orig = y_addr_reg_2200;

assign y_Clk_A = ap_clk;

assign y_Rst_A = ap_rst_n_inv;

assign zext_ln109_fu_1349_p1 = add_ln109_fu_1344_p2;

assign zext_ln1116_1_fu_1531_p1 = add_ln1116_reg_2229;

assign zext_ln1116_fu_1521_p1 = trunc_ln1116_1_fu_1517_p1;

assign zext_ln1118_1_fu_1165_p1 = add_ln1118_reg_1973;

assign zext_ln1118_fu_1144_p1 = trunc_ln1118_1_fu_1140_p1;

assign zext_ln120_fu_1606_p1 = ap_phi_mux_i_2_phi_fu_750_p4;

assign zext_ln44_fu_887_p1 = trunc_ln44_reg_1780_pp0_iter1_reg;

assign zext_ln53_1_fu_953_p1 = mul_ln53_2_reg_1853;

assign zext_ln66_fu_1369_p1 = trunc_ln66_fu_1365_p1;

assign zext_ln703_fu_1246_p1 = trunc_ln703_fu_1242_p1;

assign zext_ln71_fu_1465_p1 = add_ln71_reg_2177_pp6_iter1_reg;

assign zext_ln78_fu_1489_p1 = add_ln78_fu_1484_p2;

assign zext_ln92_fu_1083_p1 = add_ln92_reg_1924_pp1_iter1_reg;

assign zext_ln96_2_fu_1135_p1 = trunc_ln96_fu_1119_p1;

assign zext_ln96_3_fu_1160_p1 = add_ln96_1_fu_1156_p2;

assign zext_ln96_fu_911_p1 = xdim_read_reg_1677;

always @ (posedge ap_clk) begin
    zext_ln96_reg_1817[62:32] <= 31'b0000000000000000000000000000000;
    tmp_6_reg_1910[9:0] <= 10'b0000000000;
    tmp_8_reg_2097[9:0] <= 10'b0000000000;
    tmp_s_reg_2163[9:0] <= 10'b0000000000;
    tmp_3_reg_2215[9:0] <= 10'b0000000000;
end

endmodule //fcc_combined
