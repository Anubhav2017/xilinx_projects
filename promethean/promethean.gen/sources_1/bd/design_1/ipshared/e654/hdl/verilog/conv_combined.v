// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv_combined_conv_combined,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=34,HLS_SYN_DSP=0,HLS_SYN_FF=13202,HLS_SYN_LUT=11594,HLS_VERSION=2020_2}" *)

module conv_combined (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        x_Addr_A,
        x_EN_A,
        x_WEN_A,
        x_Din_A,
        x_Dout_A,
        x_Clk_A,
        x_Rst_A,
        dx_Addr_A,
        dx_EN_A,
        dx_WEN_A,
        dx_Din_A,
        dx_Dout_A,
        dx_Clk_A,
        dx_Rst_A,
        y_Addr_A,
        y_EN_A,
        y_WEN_A,
        y_Din_A,
        y_Dout_A,
        y_Clk_A,
        y_Rst_A,
        dy_Addr_A,
        dy_EN_A,
        dy_WEN_A,
        dy_Din_A,
        dy_Dout_A,
        dy_Clk_A,
        dy_Rst_A,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 131'd1;
parameter    ap_ST_fsm_state2 = 131'd2;
parameter    ap_ST_fsm_state3 = 131'd4;
parameter    ap_ST_fsm_state4 = 131'd8;
parameter    ap_ST_fsm_state5 = 131'd16;
parameter    ap_ST_fsm_state6 = 131'd32;
parameter    ap_ST_fsm_state7 = 131'd64;
parameter    ap_ST_fsm_state8 = 131'd128;
parameter    ap_ST_fsm_state9 = 131'd256;
parameter    ap_ST_fsm_state10 = 131'd512;
parameter    ap_ST_fsm_state11 = 131'd1024;
parameter    ap_ST_fsm_state12 = 131'd2048;
parameter    ap_ST_fsm_state13 = 131'd4096;
parameter    ap_ST_fsm_state14 = 131'd8192;
parameter    ap_ST_fsm_state15 = 131'd16384;
parameter    ap_ST_fsm_state16 = 131'd32768;
parameter    ap_ST_fsm_state17 = 131'd65536;
parameter    ap_ST_fsm_state18 = 131'd131072;
parameter    ap_ST_fsm_state19 = 131'd262144;
parameter    ap_ST_fsm_state20 = 131'd524288;
parameter    ap_ST_fsm_state21 = 131'd1048576;
parameter    ap_ST_fsm_state22 = 131'd2097152;
parameter    ap_ST_fsm_state23 = 131'd4194304;
parameter    ap_ST_fsm_state24 = 131'd8388608;
parameter    ap_ST_fsm_state25 = 131'd16777216;
parameter    ap_ST_fsm_state26 = 131'd33554432;
parameter    ap_ST_fsm_state27 = 131'd67108864;
parameter    ap_ST_fsm_pp0_stage0 = 131'd134217728;
parameter    ap_ST_fsm_state31 = 131'd268435456;
parameter    ap_ST_fsm_state32 = 131'd536870912;
parameter    ap_ST_fsm_state33 = 131'd1073741824;
parameter    ap_ST_fsm_state34 = 131'd2147483648;
parameter    ap_ST_fsm_state35 = 131'd4294967296;
parameter    ap_ST_fsm_state36 = 131'd8589934592;
parameter    ap_ST_fsm_state37 = 131'd17179869184;
parameter    ap_ST_fsm_pp1_stage0 = 131'd34359738368;
parameter    ap_ST_fsm_state41 = 131'd68719476736;
parameter    ap_ST_fsm_state42 = 131'd137438953472;
parameter    ap_ST_fsm_state43 = 131'd274877906944;
parameter    ap_ST_fsm_state44 = 131'd549755813888;
parameter    ap_ST_fsm_state45 = 131'd1099511627776;
parameter    ap_ST_fsm_state46 = 131'd2199023255552;
parameter    ap_ST_fsm_state47 = 131'd4398046511104;
parameter    ap_ST_fsm_pp2_stage0 = 131'd8796093022208;
parameter    ap_ST_fsm_state51 = 131'd17592186044416;
parameter    ap_ST_fsm_state52 = 131'd35184372088832;
parameter    ap_ST_fsm_state53 = 131'd70368744177664;
parameter    ap_ST_fsm_state54 = 131'd140737488355328;
parameter    ap_ST_fsm_state55 = 131'd281474976710656;
parameter    ap_ST_fsm_state56 = 131'd562949953421312;
parameter    ap_ST_fsm_state57 = 131'd1125899906842624;
parameter    ap_ST_fsm_state58 = 131'd2251799813685248;
parameter    ap_ST_fsm_state59 = 131'd4503599627370496;
parameter    ap_ST_fsm_state60 = 131'd9007199254740992;
parameter    ap_ST_fsm_state61 = 131'd18014398509481984;
parameter    ap_ST_fsm_state62 = 131'd36028797018963968;
parameter    ap_ST_fsm_state63 = 131'd72057594037927936;
parameter    ap_ST_fsm_state64 = 131'd144115188075855872;
parameter    ap_ST_fsm_state65 = 131'd288230376151711744;
parameter    ap_ST_fsm_state66 = 131'd576460752303423488;
parameter    ap_ST_fsm_state67 = 131'd1152921504606846976;
parameter    ap_ST_fsm_state68 = 131'd2305843009213693952;
parameter    ap_ST_fsm_state69 = 131'd4611686018427387904;
parameter    ap_ST_fsm_state70 = 131'd9223372036854775808;
parameter    ap_ST_fsm_state71 = 131'd18446744073709551616;
parameter    ap_ST_fsm_pp3_stage0 = 131'd36893488147419103232;
parameter    ap_ST_fsm_state75 = 131'd73786976294838206464;
parameter    ap_ST_fsm_state76 = 131'd147573952589676412928;
parameter    ap_ST_fsm_state77 = 131'd295147905179352825856;
parameter    ap_ST_fsm_state78 = 131'd590295810358705651712;
parameter    ap_ST_fsm_state79 = 131'd1180591620717411303424;
parameter    ap_ST_fsm_state80 = 131'd2361183241434822606848;
parameter    ap_ST_fsm_state81 = 131'd4722366482869645213696;
parameter    ap_ST_fsm_state82 = 131'd9444732965739290427392;
parameter    ap_ST_fsm_state83 = 131'd18889465931478580854784;
parameter    ap_ST_fsm_state84 = 131'd37778931862957161709568;
parameter    ap_ST_fsm_state85 = 131'd75557863725914323419136;
parameter    ap_ST_fsm_state86 = 131'd151115727451828646838272;
parameter    ap_ST_fsm_state87 = 131'd302231454903657293676544;
parameter    ap_ST_fsm_state88 = 131'd604462909807314587353088;
parameter    ap_ST_fsm_state89 = 131'd1208925819614629174706176;
parameter    ap_ST_fsm_pp4_stage0 = 131'd2417851639229258349412352;
parameter    ap_ST_fsm_pp4_stage1 = 131'd4835703278458516698824704;
parameter    ap_ST_fsm_state101 = 131'd9671406556917033397649408;
parameter    ap_ST_fsm_state102 = 131'd19342813113834066795298816;
parameter    ap_ST_fsm_state103 = 131'd38685626227668133590597632;
parameter    ap_ST_fsm_state104 = 131'd77371252455336267181195264;
parameter    ap_ST_fsm_state105 = 131'd154742504910672534362390528;
parameter    ap_ST_fsm_state106 = 131'd309485009821345068724781056;
parameter    ap_ST_fsm_state107 = 131'd618970019642690137449562112;
parameter    ap_ST_fsm_state108 = 131'd1237940039285380274899124224;
parameter    ap_ST_fsm_state109 = 131'd2475880078570760549798248448;
parameter    ap_ST_fsm_pp5_stage0 = 131'd4951760157141521099596496896;
parameter    ap_ST_fsm_state113 = 131'd9903520314283042199192993792;
parameter    ap_ST_fsm_state114 = 131'd19807040628566084398385987584;
parameter    ap_ST_fsm_state115 = 131'd39614081257132168796771975168;
parameter    ap_ST_fsm_state116 = 131'd79228162514264337593543950336;
parameter    ap_ST_fsm_state117 = 131'd158456325028528675187087900672;
parameter    ap_ST_fsm_pp6_stage0 = 131'd316912650057057350374175801344;
parameter    ap_ST_fsm_state121 = 131'd633825300114114700748351602688;
parameter    ap_ST_fsm_state122 = 131'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state123 = 131'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state124 = 131'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state125 = 131'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state126 = 131'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state127 = 131'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state128 = 131'd81129638414606681695789005144064;
parameter    ap_ST_fsm_pp7_stage0 = 131'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state132 = 131'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state133 = 131'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state134 = 131'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state135 = 131'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state136 = 131'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state137 = 131'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state138 = 131'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state139 = 131'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state140 = 131'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state141 = 131'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state142 = 131'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state143 = 131'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state144 = 131'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state145 = 131'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state146 = 131'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state147 = 131'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state148 = 131'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state149 = 131'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state150 = 131'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state151 = 131'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_pp8_stage0 = 131'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state155 = 131'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state156 = 131'd1361129467683753853853498429727072845824;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
output  [31:0] x_Addr_A;
output   x_EN_A;
output  [1:0] x_WEN_A;
output  [15:0] x_Din_A;
input  [15:0] x_Dout_A;
output   x_Clk_A;
output   x_Rst_A;
output  [31:0] dx_Addr_A;
output   dx_EN_A;
output  [1:0] dx_WEN_A;
output  [15:0] dx_Din_A;
input  [15:0] dx_Dout_A;
output   dx_Clk_A;
output   dx_Rst_A;
output  [31:0] y_Addr_A;
output   y_EN_A;
output  [1:0] y_WEN_A;
output  [15:0] y_Din_A;
input  [15:0] y_Dout_A;
output   y_Clk_A;
output   y_Rst_A;
output  [31:0] dy_Addr_A;
output   dy_EN_A;
output  [1:0] dy_WEN_A;
output  [15:0] dy_Din_A;
input  [15:0] dy_Dout_A;
output   dy_Clk_A;
output   dy_Rst_A;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

reg x_EN_A;
reg dx_EN_A;
reg[1:0] dx_WEN_A;
reg[15:0] dx_Din_A;
reg y_EN_A;
reg[1:0] y_WEN_A;
reg[15:0] y_Din_A;
reg dy_EN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [130:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] wt;
wire   [31:0] dwt;
wire   [31:0] b;
wire   [31:0] db;
wire   [31:0] F;
wire   [31:0] C;
wire   [31:0] H;
wire   [31:0] W;
wire   [31:0] FH;
wire   [31:0] FW;
wire    fwprop;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state21;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln48_reg_3595;
wire    ap_CS_fsm_state11;
reg   [0:0] icmp_ln45_1_reg_3482;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln58_reg_3624;
wire    ap_CS_fsm_state41;
reg   [0:0] icmp_ln45_reg_3412;
reg   [0:0] fwprop_read_reg_3284;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln88_reg_3658;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state103;
reg   [0:0] icmp_ln120_reg_4218;
reg    gmem_blk_n_W;
reg    ap_enable_reg_pp6_iter2;
wire    ap_block_pp6_stage0;
reg   [0:0] icmp_ln131_reg_4341;
reg   [0:0] icmp_ln131_reg_4341_pp6_iter1_reg;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state125;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln96_reg_3865;
wire    ap_CS_fsm_state109;
reg    ap_enable_reg_pp5_iter2;
wire    ap_block_pp5_stage0;
reg   [0:0] icmp_ln123_reg_4312;
reg   [0:0] icmp_ln123_reg_4312_pp5_iter1_reg;
wire    ap_CS_fsm_state117;
reg   [0:0] cmp155417_reg_3726;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg   [31:0] gmem_AWADDR;
reg   [31:0] gmem_AWLEN;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg   [15:0] gmem_WDATA;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
reg   [31:0] gmem_ARLEN;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [15:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [30:0] l_reg_625;
reg   [30:0] i_1_reg_636;
reg   [30:0] i_3_reg_647;
reg   [30:0] l_1_reg_717;
reg   [31:0] c_1_reg_784;
reg   [95:0] indvar_flatten166_reg_796;
reg   [63:0] indvar_flatten137_reg_807;
reg   [31:0] fh_1_reg_818;
reg   [31:0] fw_1_reg_829;
reg   [30:0] l_2_reg_899;
reg   [30:0] i_6_reg_910;
reg   [31:0] i_2_reg_921;
reg   [30:0] fw_reg_1034;
reg   [15:0] empty_59_reg_1045;
wire   [31:0] grp_fu_1085_p2;
reg   [31:0] reg_1095;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state132;
(* use_dsp48 = "no" *) wire  signed [8:0] grp_fu_1090_p2;
reg  signed [8:0] reg_1099;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state144;
wire   [15:0] dbbuf_V_q0;
reg   [15:0] reg_1103;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter1;
wire    ap_block_state118_pp6_stage0_iter0;
wire    ap_block_state119_pp6_stage0_iter1;
wire    ap_block_state120_pp6_stage0_iter2;
reg    ap_block_state120_io;
reg    ap_block_pp6_stage0_11001;
reg   [31:0] FW_read_reg_3288;
reg   [31:0] FH_read_reg_3309;
reg  signed [31:0] W_read_reg_3323;
reg  signed [31:0] H_read_reg_3333;
reg  signed [31:0] C_read_reg_3339;
reg   [31:0] F_read_reg_3350;
reg   [31:0] db_read_reg_3360;
reg   [31:0] b_read_reg_3365;
reg   [31:0] dwt_read_reg_3370;
reg   [31:0] wt_read_reg_3376;
wire   [8:0] empty_fu_1109_p1;
reg   [8:0] empty_reg_3381;
wire  signed [8:0] empty_43_fu_1113_p1;
reg  signed [8:0] empty_43_reg_3386;
(* use_dsp48 = "no" *) wire  signed [8:0] outH_fu_1121_p2;
reg  signed [8:0] outH_reg_3395;
wire    ap_CS_fsm_state2;
wire   [8:0] trunc_ln40_fu_1131_p1;
reg   [8:0] trunc_ln40_reg_3402;
wire   [31:0] outW_fu_1135_p2;
reg   [31:0] outW_reg_3407;
wire   [0:0] icmp_ln45_fu_1141_p2;
wire   [63:0] grp_fu_1152_p2;
reg   [63:0] bound_reg_3426;
wire    ap_CS_fsm_state3;
wire   [30:0] empty_44_fu_1158_p1;
reg   [30:0] empty_44_reg_3432;
wire    ap_CS_fsm_state4;
wire   [0:0] grp_fu_1070_p2;
reg   [0:0] cmp57447_reg_3447;
wire    ap_CS_fsm_state8;
wire  signed [30:0] trunc_ln45_fu_1174_p1;
reg  signed [30:0] trunc_ln45_reg_3451;
wire  signed [30:0] trunc_ln45_1_fu_1177_p1;
reg  signed [30:0] trunc_ln45_1_reg_3456;
wire  signed [30:0] empty_45_fu_1180_p1;
reg  signed [30:0] empty_45_reg_3462;
wire   [94:0] grp_fu_1168_p2;
reg   [94:0] bound4_reg_3467;
wire   [0:0] grp_fu_1075_p2;
reg   [0:0] icmp_ln47_reg_3472;
wire   [94:0] add_ln45_1_fu_1183_p2;
reg   [94:0] add_ln45_1_reg_3477;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln45_1_fu_1194_p2;
wire   [30:0] grp_fu_1189_p2;
reg   [30:0] empty_46_reg_3486;
wire    ap_CS_fsm_state10;
wire   [30:0] tmp_fu_1203_p2;
reg   [30:0] tmp_reg_3492;
wire   [9:0] trunc_ln49_fu_1208_p1;
reg   [9:0] trunc_ln49_reg_3497;
wire  signed [30:0] add_ln45_fu_1212_p2;
reg  signed [30:0] add_ln45_reg_3502;
wire   [0:0] icmp_ln46_fu_1218_p2;
reg   [0:0] icmp_ln46_reg_3508;
wire   [30:0] grp_fu_1243_p2;
reg   [30:0] p_mid1_reg_3526;
wire    ap_CS_fsm_state13;
wire   [30:0] select_ln45_2_fu_1259_p3;
reg   [30:0] select_ln45_2_reg_3532;
wire    ap_CS_fsm_state14;
wire   [0:0] select_ln45_5_fu_1297_p3;
reg   [0:0] select_ln45_5_reg_3537;
wire  signed [30:0] select_ln46_1_fu_1319_p3;
reg  signed [30:0] select_ln46_1_reg_3542;
wire   [10:0] add_ln49_fu_1343_p2;
reg   [10:0] add_ln49_reg_3547;
wire   [31:0] select_ln46_3_fu_1349_p3;
reg   [31:0] select_ln46_3_reg_3553;
wire   [30:0] grp_fu_1357_p2;
reg   [30:0] mul_ln46_reg_3558;
wire    ap_CS_fsm_state16;
wire   [31:0] select_ln46_fu_1365_p3;
reg   [31:0] select_ln46_reg_3563;
wire    ap_CS_fsm_state17;
wire  signed [30:0] tmp11_fu_1377_p2;
reg  signed [30:0] tmp11_reg_3569;
wire   [30:0] grp_fu_1382_p2;
reg   [30:0] empty_49_reg_3574;
wire    ap_CS_fsm_state19;
reg   [31:0] gmem_addr_2_reg_3579;
wire    ap_CS_fsm_state20;
wire   [13:0] sub_ln49_1_fu_1467_p2;
reg   [13:0] sub_ln49_1_reg_3585;
wire   [30:0] add_ln48_fu_1473_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state28_pp0_stage0_iter0;
reg    ap_block_state29_pp0_stage0_iter1;
wire    ap_block_state30_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln48_fu_1483_p2;
reg   [0:0] icmp_ln48_reg_3595_pp0_iter1_reg;
wire   [13:0] add_ln49_2_fu_1492_p2;
reg   [13:0] add_ln49_2_reg_3599;
reg   [13:0] add_ln49_2_reg_3599_pp0_iter1_reg;
reg   [15:0] gmem_addr_2_read_reg_3604;
wire   [31:0] add_ln47_fu_1501_p2;
wire    ap_CS_fsm_state31;
wire   [63:0] select_ln46_4_fu_1512_p3;
wire   [30:0] add_ln58_fu_1519_p2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state38_pp1_stage0_iter0;
reg    ap_block_state39_pp1_stage0_iter1;
wire    ap_block_state40_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln58_fu_1525_p2;
reg   [0:0] icmp_ln58_reg_3624_pp1_iter1_reg;
wire   [4:0] trunc_ln59_fu_1530_p1;
reg   [4:0] trunc_ln59_reg_3628;
reg   [4:0] trunc_ln59_reg_3628_pp1_iter1_reg;
reg   [15:0] gmem_addr_read_reg_3633;
reg   [31:0] gmem_addr_1_reg_3638;
wire   [30:0] trunc_ln88_fu_1562_p1;
reg   [30:0] trunc_ln88_reg_3645;
wire    ap_CS_fsm_state47;
wire   [30:0] add_ln88_fu_1565_p2;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state48_pp2_stage0_iter0;
reg    ap_block_state49_pp2_stage0_iter1;
wire    ap_block_state50_pp2_stage0_iter2;
reg    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln88_fu_1571_p2;
reg   [0:0] icmp_ln88_reg_3658_pp2_iter1_reg;
wire   [4:0] trunc_ln89_fu_1576_p1;
reg   [4:0] trunc_ln89_reg_3662;
reg   [4:0] trunc_ln89_reg_3662_pp2_iter1_reg;
reg   [15:0] gmem_addr_1_read_reg_3667;
wire    ap_CS_fsm_state51;
wire   [63:0] cast94_fu_1587_p1;
reg   [63:0] cast94_reg_3677;
wire   [63:0] grp_fu_1590_p2;
reg   [63:0] bound95_reg_3683;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
wire  signed [30:0] trunc_ln93_fu_1608_p1;
reg  signed [30:0] trunc_ln93_reg_3700;
wire    ap_CS_fsm_state54;
wire  signed [30:0] grp_fu_1614_p2;
reg  signed [30:0] empty_65_reg_3712;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state57;
wire  signed [30:0] grp_fu_1623_p2;
reg  signed [30:0] empty_66_reg_3730;
wire   [94:0] grp_fu_1602_p2;
reg   [94:0] bound106_reg_3736;
reg   [0:0] icmp_ln95_reg_3742;
wire    ap_CS_fsm_state58;
wire   [9:0] trunc_ln97_fu_1637_p1;
reg   [9:0] trunc_ln97_reg_3753;
wire   [94:0] add_ln93_1_fu_1641_p2;
reg   [94:0] add_ln93_1_reg_3758;
wire    ap_CS_fsm_state59;
wire   [30:0] grp_fu_1632_p2;
reg   [30:0] empty_67_reg_3763;
wire   [0:0] icmp_ln94_fu_1652_p2;
reg   [0:0] icmp_ln94_reg_3771;
wire   [0:0] icmp_ln93_fu_1647_p2;
wire   [0:0] cmp184402_fu_1657_p2;
reg   [0:0] cmp184402_reg_3782;
wire  signed [30:0] select_ln93_1_fu_1683_p3;
reg  signed [30:0] select_ln93_1_reg_3791;
wire    ap_CS_fsm_state60;
wire   [0:0] select_ln93_4_fu_1717_p3;
reg   [0:0] select_ln93_4_reg_3797;
wire   [31:0] select_ln94_fu_1734_p3;
reg   [31:0] select_ln94_reg_3802;
wire  signed [30:0] trunc_ln94_1_fu_1742_p1;
reg  signed [30:0] trunc_ln94_1_reg_3808;
wire   [10:0] add_ln97_fu_1762_p2;
reg   [10:0] add_ln97_reg_3813;
wire   [31:0] select_ln94_3_fu_1768_p3;
reg   [31:0] select_ln94_3_reg_3819;
wire  signed [30:0] trunc_ln95_fu_1776_p1;
reg  signed [30:0] trunc_ln95_reg_3824;
wire   [30:0] grp_fu_1780_p2;
reg   [30:0] mul_ln93_reg_3829;
wire    ap_CS_fsm_state62;
wire   [30:0] grp_fu_1784_p2;
reg   [30:0] p_mid199_reg_3834;
wire   [30:0] grp_fu_1788_p2;
reg   [30:0] empty_70_reg_3839;
wire   [30:0] empty_71_fu_1808_p2;
reg   [30:0] empty_71_reg_3844;
wire    ap_CS_fsm_state63;
reg   [31:0] gmem_addr_3_reg_3849;
wire    ap_CS_fsm_state64;
wire   [13:0] sub_ln97_1_fu_1895_p2;
reg   [13:0] sub_ln97_1_reg_3855;
wire   [30:0] add_ln96_fu_1901_p2;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state72_pp3_stage0_iter0;
reg    ap_block_state73_pp3_stage0_iter1;
wire    ap_block_state74_pp3_stage0_iter2;
reg    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln96_fu_1911_p2;
reg   [0:0] icmp_ln96_reg_3865_pp3_iter1_reg;
wire   [13:0] add_ln97_2_fu_1920_p2;
reg   [13:0] add_ln97_2_reg_3869;
reg   [13:0] add_ln97_2_reg_3869_pp3_iter1_reg;
reg   [15:0] gmem_addr_3_read_reg_3874;
wire   [31:0] add_ln95_fu_1929_p2;
wire    ap_CS_fsm_state75;
wire   [63:0] select_ln94_4_fu_1940_p3;
wire   [63:0] grp_fu_1665_p2;
reg   [63:0] bound129_reg_3889;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state80;
wire  signed [8:0] trunc_ln103_fu_1972_p1;
reg  signed [8:0] trunc_ln103_reg_3915;
wire   [31:0] sub_ln103_fu_1980_p2;
reg   [31:0] sub_ln103_reg_3920;
wire   [95:0] grp_fu_1953_p2;
reg   [95:0] bound142_reg_3925;
wire   [62:0] grp_fu_1966_p2;
reg   [62:0] bound173_reg_3930;
wire   [0:0] icmp_ln108_fu_1985_p2;
reg   [0:0] icmp_ln108_reg_3935;
wire   [62:0] add_ln103_4_fu_1990_p2;
reg   [62:0] add_ln103_4_reg_3940;
wire    ap_CS_fsm_state82;
wire   [0:0] icmp_ln104_fu_2007_p2;
reg   [0:0] icmp_ln104_reg_3948;
wire   [0:0] icmp_ln103_fu_1996_p2;
wire   [30:0] select_ln103_1_fu_2013_p3;
reg   [30:0] select_ln103_1_reg_3953;
wire   [4:0] trunc_ln103_2_fu_2025_p1;
reg   [4:0] trunc_ln103_2_reg_3963;
wire   [31:0] select_ln103_fu_2029_p3;
reg   [31:0] select_ln103_reg_3969;
wire    ap_CS_fsm_state84;
wire   [8:0] trunc_ln104_fu_2036_p1;
reg   [8:0] trunc_ln104_reg_3974;
wire   [10:0] zext_ln104_fu_2051_p1;
reg   [10:0] zext_ln104_reg_3982;
wire    ap_CS_fsm_state85;
wire   [8:0] empty_78_fu_2055_p2;
reg   [8:0] empty_78_reg_3987;
reg   [4:0] dbbuf_V_addr_1_reg_3992;
wire   [31:0] add_ln105_fu_2060_p2;
reg   [31:0] add_ln105_reg_3997;
wire    ap_CS_fsm_state87;
wire   [8:0] trunc_ln105_fu_2071_p1;
reg   [8:0] trunc_ln105_reg_4005;
wire   [0:0] icmp_ln105_fu_2066_p2;
wire   [31:0] add_ln104_fu_2095_p2;
reg  signed [15:0] r_V_reg_4020;
wire    ap_CS_fsm_state89;
wire  signed [28:0] sext_ln1118_1_fu_2100_p1;
reg  signed [28:0] sext_ln1118_1_reg_4025;
wire   [8:0] empty_75_fu_2108_p2;
reg   [8:0] empty_75_reg_4031;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state90_pp4_stage0_iter0;
wire    ap_block_state92_pp4_stage0_iter1;
wire    ap_block_state94_pp4_stage0_iter2;
wire    ap_block_state96_pp4_stage0_iter3;
wire    ap_block_state98_pp4_stage0_iter4;
wire    ap_block_state100_pp4_stage0_iter5;
wire    ap_block_pp4_stage0_11001;
wire   [95:0] add_ln106_1_fu_2113_p2;
reg   [95:0] add_ln106_1_reg_4037;
wire    ap_CS_fsm_pp4_stage1;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state91_pp4_stage1_iter0;
wire    ap_block_state93_pp4_stage1_iter1;
wire    ap_block_state95_pp4_stage1_iter2;
wire    ap_block_state97_pp4_stage1_iter3;
wire    ap_block_state99_pp4_stage1_iter4;
wire    ap_block_pp4_stage1_11001;
wire   [8:0] empty_76_fu_2128_p2;
reg   [8:0] empty_76_reg_4042;
wire   [0:0] icmp_ln106_fu_2137_p2;
reg   [0:0] icmp_ln106_reg_4047;
reg   [0:0] icmp_ln106_reg_4047_pp4_iter1_reg;
reg   [0:0] icmp_ln106_reg_4047_pp4_iter2_reg;
reg   [0:0] icmp_ln106_reg_4047_pp4_iter3_reg;
reg   [0:0] icmp_ln106_reg_4047_pp4_iter4_reg;
wire   [0:0] icmp_ln107_fu_2148_p2;
reg   [0:0] icmp_ln107_reg_4051;
wire   [31:0] select_ln106_fu_2153_p3;
reg   [31:0] select_ln106_reg_4059;
wire   [8:0] p_mid1148_fu_2165_p2;
reg   [8:0] p_mid1148_reg_4064;
wire   [31:0] select_ln106_2_fu_2170_p3;
reg   [31:0] select_ln106_2_reg_4070;
wire   [9:0] trunc_ln106_2_fu_2178_p1;
reg   [9:0] trunc_ln106_2_reg_4075;
wire   [0:0] select_ln106_5_fu_2195_p3;
reg   [0:0] select_ln106_5_reg_4080;
wire   [31:0] add_ln107_fu_2202_p2;
reg   [31:0] add_ln107_reg_4087;
wire   [8:0] trunc_ln107_1_fu_2208_p1;
reg   [8:0] trunc_ln107_1_reg_4092;
wire   [11:0] select_ln107_1_fu_2216_p3;
reg   [11:0] select_ln107_1_reg_4097;
wire   [63:0] add_ln107_2_fu_2224_p2;
reg   [63:0] add_ln107_2_reg_4102;
wire   [13:0] trunc_ln1118_fu_2306_p1;
reg   [13:0] trunc_ln1118_reg_4107;
wire   [11:0] trunc_ln1118_1_fu_2310_p1;
reg   [11:0] trunc_ln1118_1_reg_4112;
wire   [31:0] select_ln107_3_fu_2321_p3;
reg   [31:0] select_ln107_3_reg_4122;
reg    ap_enable_reg_pp4_iter1;
wire   [13:0] trunc_ln109_fu_2326_p1;
reg   [13:0] trunc_ln109_reg_4127;
wire   [8:0] trunc_ln1115_fu_2330_p1;
reg   [8:0] trunc_ln1115_reg_4132;
reg   [8:0] trunc_ln1115_reg_4132_pp4_iter2_reg;
wire   [31:0] add_ln108_fu_2334_p2;
reg   [31:0] add_ln108_reg_4137;
wire   [63:0] select_ln107_4_fu_2340_p3;
reg   [63:0] select_ln107_4_reg_4142;
wire   [13:0] add_ln1118_3_fu_2358_p2;
reg   [13:0] add_ln1118_3_reg_4147;
reg   [13:0] dwbuf_V_addr_2_reg_4157;
reg   [13:0] dwbuf_V_addr_2_reg_4157_pp4_iter3_reg;
reg   [13:0] dwbuf_V_addr_2_reg_4157_pp4_iter4_reg;
reg   [8:0] dx_addr_1_reg_4173;
reg   [8:0] dx_addr_1_reg_4173_pp4_iter3_reg;
wire   [0:0] addr_cmp_fu_2385_p2;
reg   [0:0] addr_cmp_reg_4178;
wire   [15:0] add_ln703_fu_2451_p2;
wire    ap_CS_fsm_state101;
wire   [94:0] add_ln120_1_fu_2456_p2;
reg   [94:0] add_ln120_1_reg_4203;
wire    ap_CS_fsm_state102;
wire   [9:0] trunc_ln124_fu_2471_p1;
reg   [9:0] trunc_ln124_reg_4213;
wire   [0:0] icmp_ln120_fu_2475_p2;
wire   [30:0] grp_fu_2466_p2;
reg   [30:0] empty_79_reg_4222;
wire   [0:0] icmp_ln121_fu_2480_p2;
reg   [0:0] icmp_ln121_reg_4227;
wire   [0:0] select_ln120_4_fu_2490_p3;
reg   [0:0] select_ln120_4_reg_4236;
wire   [31:0] select_ln121_fu_2503_p3;
reg   [31:0] select_ln121_reg_4243;
wire  signed [30:0] trunc_ln122_fu_2511_p1;
reg  signed [30:0] trunc_ln122_reg_4249;
wire  signed [30:0] select_ln120_1_fu_2528_p3;
reg  signed [30:0] select_ln120_1_reg_4254;
wire    ap_CS_fsm_state104;
wire  signed [30:0] trunc_ln121_1_fu_2563_p1;
reg  signed [30:0] trunc_ln121_1_reg_4260;
wire   [10:0] add_ln124_fu_2582_p2;
reg   [10:0] add_ln124_reg_4265;
wire   [31:0] select_ln121_3_fu_2588_p3;
reg   [31:0] select_ln121_3_reg_4271;
wire   [30:0] grp_fu_2595_p2;
reg   [30:0] empty_83_reg_4276;
wire    ap_CS_fsm_state105;
wire   [30:0] grp_fu_2599_p2;
reg   [30:0] mul_ln120_reg_4281;
wire    ap_CS_fsm_state106;
wire   [30:0] grp_fu_2603_p2;
reg   [30:0] p_mid1188_reg_4286;
wire   [30:0] empty_84_fu_2623_p2;
reg   [30:0] empty_84_reg_4291;
wire    ap_CS_fsm_state107;
reg   [31:0] gmem_addr_4_reg_4296;
wire    ap_CS_fsm_state108;
wire   [13:0] sub_ln124_1_fu_2710_p2;
reg   [13:0] sub_ln124_1_reg_4302;
wire   [30:0] add_ln123_fu_2716_p2;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state110_pp5_stage0_iter0;
wire    ap_block_state111_pp5_stage0_iter1;
wire    ap_block_state112_pp5_stage0_iter2;
reg    ap_block_state112_io;
reg    ap_block_pp5_stage0_11001;
wire   [0:0] icmp_ln123_fu_2726_p2;
wire   [15:0] dwbuf_V_q1;
reg   [15:0] dwbuf_V_load_reg_4321;
reg    ap_enable_reg_pp5_iter1;
wire   [31:0] add_ln122_fu_2745_p2;
wire   [63:0] select_ln121_4_fu_2756_p3;
wire   [30:0] add_ln131_fu_2763_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [0:0] icmp_ln131_fu_2769_p2;
wire  signed [31:0] grp_fu_1558_p2;
reg  signed [31:0] mul_ln66_reg_4350;
wire    ap_CS_fsm_state126;
wire   [31:0] grp_fu_2783_p2;
reg   [31:0] mul_ln66_1_reg_4355;
wire    ap_CS_fsm_state128;
wire   [31:0] add_ln66_fu_2787_p2;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter0;
wire    ap_block_state129_pp7_stage0_iter0;
wire    ap_block_state130_pp7_stage0_iter1;
wire    ap_block_state131_pp7_stage0_iter2;
wire    ap_block_pp7_stage0_11001;
wire   [0:0] icmp_ln66_fu_2793_p2;
wire   [31:0] sub_ln70_fu_2812_p2;
reg   [31:0] sub_ln70_reg_4374;
wire   [0:0] icmp_ln73_fu_2817_p2;
reg   [0:0] icmp_ln73_reg_4380;
wire    ap_CS_fsm_state133;
wire   [63:0] grp_fu_2829_p2;
reg   [63:0] bound26_reg_4396;
wire    ap_CS_fsm_state134;
wire    ap_CS_fsm_state135;
wire   [95:0] grp_fu_2841_p2;
reg   [95:0] bound40_reg_4413;
wire    ap_CS_fsm_state139;
wire    ap_CS_fsm_state140;
reg   [0:0] cmp106330_reg_4429;
wire  signed [8:0] trunc_ln70_fu_2863_p1;
reg  signed [8:0] trunc_ln70_reg_4433;
wire   [126:0] grp_fu_2857_p2;
reg   [126:0] bound62_reg_4438;
wire   [0:0] icmp_ln72_fu_2866_p2;
reg   [0:0] icmp_ln72_reg_4443;
wire   [126:0] add_ln70_4_fu_2871_p2;
reg   [126:0] add_ln70_4_reg_4448;
wire    ap_CS_fsm_state145;
wire   [8:0] empty_53_fu_2881_p2;
reg   [8:0] empty_53_reg_4453;
wire   [8:0] empty_54_fu_2890_p2;
reg   [8:0] empty_54_reg_4458;
wire   [8:0] trunc_ln72_fu_2895_p1;
reg   [8:0] trunc_ln72_reg_4463;
wire   [8:0] empty_55_fu_2899_p2;
reg   [8:0] empty_55_reg_4468;
wire   [0:0] icmp_ln71_fu_2916_p2;
reg   [0:0] icmp_ln71_reg_4476;
wire   [0:0] icmp_ln70_fu_2905_p2;
wire   [8:0] p_mid170_fu_2933_p2;
reg   [8:0] p_mid170_reg_4485;
wire   [4:0] select_ln70_2_fu_2946_p3;
reg   [4:0] select_ln70_2_reg_4491;
wire   [0:0] select_ln70_6_fu_2971_p3;
reg   [0:0] select_ln70_6_reg_4496;
wire   [30:0] select_ln70_7_fu_2978_p3;
reg   [30:0] select_ln70_7_reg_4503;
wire   [0:0] or_ln71_fu_2992_p2;
reg   [0:0] or_ln71_reg_4508;
wire  signed [8:0] trunc_ln71_1_fu_2998_p1;
reg  signed [8:0] trunc_ln71_1_reg_4515;
wire   [0:0] select_ln71_4_fu_3002_p3;
reg   [0:0] select_ln71_4_reg_4520;
wire   [31:0] select_ln71_5_fu_3009_p3;
reg   [31:0] select_ln71_5_reg_4528;
wire   [8:0] select_ln71_1_fu_3044_p3;
reg   [8:0] select_ln71_1_reg_4533;
wire    ap_CS_fsm_state146;
wire   [8:0] select_ln72_1_fu_3074_p3;
reg   [8:0] select_ln72_1_reg_4538;
wire   [31:0] select_ln72_3_fu_3094_p3;
reg   [31:0] select_ln72_3_reg_4548;
wire    ap_CS_fsm_state148;
wire   [31:0] select_ln72_fu_3114_p3;
reg   [31:0] select_ln72_reg_4558;
wire   [8:0] trunc_ln73_fu_3122_p1;
reg   [8:0] trunc_ln73_reg_4563;
wire   [15:0] bbuf_V_q0;
wire    ap_CS_fsm_state149;
reg   [8:0] y_addr_reg_4574;
wire   [31:0] add_ln75_fu_3130_p2;
reg   [31:0] add_ln75_reg_4579;
wire    ap_CS_fsm_state150;
wire  signed [8:0] empty_57_fu_3150_p2;
reg  signed [8:0] empty_57_reg_4587;
wire   [0:0] icmp_ln75_fu_3136_p2;
wire   [31:0] add_ln73_fu_3155_p2;
wire   [63:0] select_ln72_4_fu_3166_p3;
wire   [95:0] select_ln71_6_fu_3179_p3;
wire   [8:0] add_ln77_fu_3190_p2;
reg   [8:0] add_ln77_reg_4607;
wire    ap_CS_fsm_state151;
wire   [30:0] add_ln76_fu_3195_p2;
wire    ap_CS_fsm_pp8_stage0;
reg    ap_enable_reg_pp8_iter0;
wire    ap_block_state152_pp8_stage0_iter0;
wire    ap_block_state153_pp8_stage0_iter1;
wire    ap_block_state154_pp8_stage0_iter2;
wire    ap_block_pp8_stage0_11001;
wire   [0:0] icmp_ln76_fu_3205_p2;
reg   [0:0] icmp_ln76_reg_4617;
reg   [0:0] icmp_ln76_reg_4617_pp8_iter1_reg;
wire   [15:0] add_ln703_1_fu_3224_p2;
reg    ap_enable_reg_pp8_iter2;
wire    ap_CS_fsm_state27;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state28;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state37;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state38;
reg    ap_enable_reg_pp1_iter2;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state48;
reg    ap_enable_reg_pp2_iter2;
wire    ap_CS_fsm_state71;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state72;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_pp4_stage1_subdone;
reg    ap_condition_pp4_exit_iter0_state91;
wire    ap_block_pp4_stage0_subdone;
reg    ap_enable_reg_pp4_iter2;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter4;
reg    ap_enable_reg_pp4_iter5;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state110;
reg    ap_block_state103_io;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state118;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state129;
reg    ap_enable_reg_pp7_iter1;
reg    ap_enable_reg_pp7_iter2;
wire    ap_block_pp8_stage0_subdone;
reg    ap_condition_pp8_flush_enable;
reg    ap_enable_reg_pp8_iter1;
reg   [13:0] wbuf_V_address0;
reg    wbuf_V_ce0;
reg    wbuf_V_we0;
wire  signed [15:0] wbuf_V_q0;
reg   [13:0] dwbuf_V_address0;
reg    dwbuf_V_ce0;
reg    dwbuf_V_we0;
reg   [15:0] dwbuf_V_d0;
reg   [13:0] dwbuf_V_address1;
reg    dwbuf_V_ce1;
reg   [4:0] bbuf_V_address0;
reg    bbuf_V_ce0;
reg    bbuf_V_we0;
reg   [4:0] dbbuf_V_address0;
reg    dbbuf_V_ce0;
reg    dbbuf_V_we0;
reg   [15:0] dbbuf_V_d0;
reg   [94:0] indvar_flatten21_reg_566;
reg  signed [30:0] i_reg_577;
reg   [63:0] indvar_flatten_reg_589;
reg   [31:0] j_reg_601;
reg   [31:0] k_reg_613;
reg   [31:0] j_1_reg_658;
reg   [94:0] indvar_flatten124_reg_670;
reg   [30:0] i_4_reg_681;
reg   [63:0] indvar_flatten101_reg_693;
reg   [31:0] k_1_reg_705;
reg   [62:0] indvar_flatten179_reg_728;
reg   [30:0] f_1_reg_739;
reg   [31:0] h_1_reg_750;
reg   [31:0] w_1_reg_762;
reg   [15:0] empty_73_reg_773;
reg   [31:0] ap_phi_mux_c_1_phi_fu_788_p4;
wire    ap_block_pp4_stage0;
reg   [95:0] ap_phi_mux_indvar_flatten166_phi_fu_800_p4;
wire    ap_block_pp4_stage1;
reg   [63:0] ap_phi_mux_indvar_flatten137_phi_fu_811_p4;
reg   [31:0] ap_phi_mux_fh_1_phi_fu_822_p4;
reg   [31:0] ap_phi_mux_fw_1_phi_fu_833_p4;
reg   [94:0] indvar_flatten213_reg_841;
reg    ap_block_state117;
reg   [31:0] j_2_reg_852;
reg   [30:0] i_5_reg_864;
reg   [63:0] indvar_flatten190_reg_876;
reg   [31:0] k_2_reg_888;
reg   [126:0] indvar_flatten90_reg_932;
reg   [30:0] f_reg_943;
reg   [95:0] indvar_flatten56_reg_954;
reg   [31:0] c_reg_966;
reg   [63:0] indvar_flatten35_reg_977;
reg   [31:0] h_reg_989;
reg   [31:0] w_reg_1001;
reg   [15:0] empty_56_reg_1013;
wire    ap_CS_fsm_state156;
reg   [31:0] fh_reg_1023;
reg   [15:0] empty_61_reg_1057;
wire    ap_CS_fsm_state155;
wire   [31:0] zext_ln49_4_fu_1497_p1;
wire   [31:0] zext_ln59_fu_1534_p1;
wire   [31:0] zext_ln89_fu_1580_p1;
wire   [31:0] zext_ln97_4_fu_1925_p1;
wire   [31:0] zext_ln103_fu_2040_p1;
wire   [31:0] p_cast29_fu_2080_p1;
wire   [31:0] zext_ln1118_5_fu_2363_p1;
wire   [31:0] zext_ln1118_fu_2372_p1;
wire   [31:0] zext_ln124_4_fu_2740_p1;
wire   [31:0] zext_ln132_fu_2778_p1;
wire   [31:0] zext_ln67_fu_2802_p1;
wire    ap_block_pp7_stage0;
wire   [31:0] zext_ln70_fu_3101_p1;
wire   [31:0] zext_ln74_fu_3126_p1;
wire   [31:0] zext_ln1116_fu_3219_p1;
wire    ap_block_pp8_stage0;
wire  signed [31:0] sext_ln58_fu_1232_p1;
wire  signed [31:0] sext_ln48_fu_1428_p1;
wire  signed [31:0] sext_ln88_fu_1547_p1;
wire  signed [31:0] sext_ln96_fu_1856_p1;
wire  signed [31:0] sext_ln123_fu_2671_p1;
reg    ap_block_state11_io;
reg    ap_predicate_op368_readreq_state41;
reg    ap_block_state41_io;
reg    ap_predicate_op796_writeresp_state125;
reg    ap_block_state125;
wire    ap_block_pp5_stage0_01001;
wire    ap_block_pp6_stage0_01001;
reg   [31:0] reuse_addr_reg_fu_244;
reg   [15:0] reuse_reg_fu_248;
wire    ap_CS_fsm_state88;
reg   [31:0] x_Addr_A_orig;
reg   [31:0] dx_Addr_A_orig;
reg   [31:0] y_Addr_A_orig;
wire   [31:0] grp_fu_1080_p2;
wire  signed [31:0] empty_43_fu_1113_p0;
wire   [8:0] sub_ln39_fu_1117_p2;
wire   [31:0] sub_ln40_fu_1127_p2;
wire   [31:0] grp_fu_1152_p0;
wire   [31:0] grp_fu_1152_p1;
wire   [30:0] grp_fu_1168_p0;
wire   [63:0] grp_fu_1168_p1;
wire   [30:0] trunc_ln46_fu_1199_p1;
wire   [30:0] trunc_ln3_fu_1223_p4;
wire    ap_CS_fsm_state12;
wire   [4:0] trunc_ln49_1_fu_1265_p1;
wire   [9:0] tmp_2_fu_1269_p3;
wire   [0:0] icmp_ln47_1_fu_1292_p2;
wire   [31:0] select_ln45_fu_1247_p3;
wire   [31:0] add_ln46_fu_1303_p2;
wire   [30:0] trunc_ln46_1_fu_1309_p1;
wire   [30:0] select_ln45_1_fu_1254_p3;
wire   [30:0] tmp_mid1_fu_1313_p2;
wire   [30:0] select_ln45_3_fu_1281_p3;
wire   [9:0] trunc_ln49_2_fu_1327_p1;
wire   [9:0] select_ln45_4_fu_1286_p3;
wire   [9:0] select_ln46_2_fu_1331_p3;
wire   [10:0] zext_ln46_fu_1277_p1;
wire   [10:0] zext_ln49_fu_1339_p1;
wire    ap_CS_fsm_state15;
wire   [0:0] or_ln46_fu_1361_p2;
wire   [30:0] trunc_ln47_fu_1373_p1;
wire    ap_CS_fsm_state18;
wire   [12:0] tmp_1_fu_1389_p3;
wire   [29:0] zext_ln49_2_fu_1396_p1;
wire   [29:0] zext_ln49_1_fu_1386_p1;
wire   [31:0] tmp_4_fu_1406_p3;
wire   [31:0] empty_50_fu_1413_p2;
wire   [30:0] trunc_ln5_fu_1418_p4;
wire   [11:0] trunc_ln49_3_fu_1438_p1;
wire   [29:0] sub_ln49_fu_1400_p2;
wire   [29:0] zext_ln49_3_fu_1441_p1;
wire   [29:0] add_ln49_1_fu_1445_p2;
wire   [11:0] trunc_ln49_5_fu_1455_p1;
wire   [13:0] p_shl1_cast_fu_1459_p3;
wire   [13:0] trunc_ln49_4_fu_1451_p1;
wire   [31:0] l_cast_fu_1479_p1;
wire   [13:0] trunc_ln49_6_fu_1488_p1;
wire   [63:0] add_ln46_1_fu_1506_p2;
wire   [30:0] trunc_ln7_fu_1538_p4;
wire   [31:0] grp_fu_1590_p0;
wire   [31:0] grp_fu_1590_p1;
wire   [30:0] grp_fu_1602_p0;
wire   [63:0] grp_fu_1602_p1;
wire  signed [30:0] grp_fu_1614_p0;
wire  signed [30:0] grp_fu_1614_p1;
wire  signed [30:0] grp_fu_1623_p1;
wire  signed [30:0] grp_fu_1632_p0;
wire   [31:0] grp_fu_1665_p0;
wire   [31:0] grp_fu_1665_p1;
wire   [30:0] add_ln93_fu_1670_p2;
wire   [4:0] trunc_ln97_1_fu_1690_p1;
wire   [9:0] tmp_7_fu_1694_p3;
wire   [0:0] icmp_ln95_1_fu_1712_p2;
wire   [31:0] select_ln93_fu_1676_p3;
wire   [0:0] or_ln94_fu_1729_p2;
wire   [31:0] add_ln94_fu_1723_p2;
wire   [9:0] trunc_ln97_2_fu_1746_p1;
wire   [9:0] select_ln93_3_fu_1706_p3;
wire   [9:0] select_ln94_2_fu_1750_p3;
wire   [10:0] zext_ln94_fu_1702_p1;
wire   [10:0] zext_ln97_fu_1758_p1;
wire    ap_CS_fsm_state61;
wire   [30:0] select_ln93_2_fu_1792_p3;
wire   [30:0] tmp3_fu_1804_p2;
wire   [30:0] select_ln94_1_fu_1798_p3;
wire   [12:0] tmp_3_fu_1817_p3;
wire   [29:0] zext_ln97_2_fu_1824_p1;
wire   [29:0] zext_ln97_1_fu_1814_p1;
wire   [31:0] tmp_9_fu_1834_p3;
wire   [31:0] empty_72_fu_1841_p2;
wire   [30:0] trunc_ln_fu_1846_p4;
wire   [11:0] trunc_ln97_3_fu_1866_p1;
wire   [29:0] sub_ln97_fu_1828_p2;
wire   [29:0] zext_ln97_3_fu_1869_p1;
wire   [29:0] add_ln97_1_fu_1873_p2;
wire   [11:0] trunc_ln97_5_fu_1883_p1;
wire   [13:0] p_shl3_cast_fu_1887_p3;
wire   [13:0] trunc_ln97_4_fu_1879_p1;
wire   [31:0] l_1_cast_fu_1907_p1;
wire   [13:0] trunc_ln97_6_fu_1916_p1;
wire   [63:0] add_ln94_1_fu_1934_p2;
wire   [31:0] grp_fu_1953_p0;
wire   [63:0] grp_fu_1953_p1;
wire   [30:0] grp_fu_1966_p0;
wire   [31:0] grp_fu_1966_p1;
wire   [31:0] add_ln103_fu_1975_p2;
wire   [30:0] add_ln103_2_fu_2001_p2;
wire   [9:0] tmp_s_fu_2044_p3;
wire  signed [8:0] grp_fu_3230_p3;
wire   [8:0] empty_74_fu_2075_p2;
wire  signed [15:0] sext_ln1118_1_fu_2100_p0;
wire  signed [8:0] empty_75_fu_2108_p0;
wire   [8:0] trunc_ln107_fu_2119_p1;
wire   [8:0] tmp4_fu_2123_p2;
wire   [31:0] add_ln106_fu_2142_p2;
wire  signed [8:0] p_mid1148_fu_2165_p0;
wire   [11:0] trunc_ln727_fu_2133_p1;
wire   [0:0] icmp_ln108_1_fu_2190_p2;
wire   [11:0] trunc_ln727_1_fu_2212_p1;
wire   [11:0] select_ln106_3_fu_2182_p3;
wire   [10:0] zext_ln1118_1_fu_2235_p1;
wire   [10:0] add_ln1118_1_fu_2238_p2;
wire   [12:0] tmp_10_fu_2247_p3;
wire   [29:0] zext_ln1118_3_fu_2255_p1;
wire   [29:0] zext_ln1118_2_fu_2243_p1;
wire   [8:0] p_mid1154_fu_2265_p2;
wire   [0:0] or_ln107_fu_2275_p2;
wire   [8:0] tmp4_mid1_fu_2287_p2;
wire   [8:0] select_ln106_1_fu_2230_p3;
wire   [29:0] sub_ln1118_fu_2259_p2;
wire   [29:0] zext_ln1118_4_fu_2297_p1;
wire   [29:0] add_ln1118_2_fu_2300_p2;
wire   [8:0] p_mid1133_fu_2291_p2;
wire   [8:0] select_ln106_4_fu_2269_p3;
wire   [31:0] select_ln107_fu_2279_p3;
wire   [13:0] p_shl7_cast_fu_2346_p3;
wire   [13:0] sub_ln1118_1_fu_2353_p2;
wire  signed [8:0] grp_fu_3238_p3;
(* use_dsp48 = "no" *) wire   [8:0] add_ln1118_fu_2368_p2;
wire   [15:0] lhs_2_fu_2403_p3;
wire  signed [28:0] grp_fu_3245_p3;
wire  signed [28:0] grp_fu_3253_p3;
wire  signed [30:0] grp_fu_2466_p0;
wire   [0:0] icmp_ln122_fu_2485_p2;
wire   [0:0] or_ln121_fu_2497_p2;
wire   [30:0] add_ln120_fu_2515_p2;
wire   [4:0] trunc_ln124_1_fu_2535_p1;
wire   [9:0] tmp_5_fu_2539_p3;
wire   [31:0] select_ln120_fu_2521_p3;
wire   [31:0] add_ln121_fu_2557_p2;
wire   [9:0] trunc_ln124_2_fu_2567_p1;
wire   [9:0] select_ln120_3_fu_2551_p3;
wire   [9:0] select_ln121_2_fu_2571_p3;
wire   [10:0] zext_ln121_fu_2547_p1;
wire   [10:0] zext_ln124_fu_2578_p1;
wire   [30:0] select_ln120_2_fu_2607_p3;
wire   [30:0] tmp5_fu_2619_p2;
wire   [30:0] select_ln121_1_fu_2613_p3;
wire   [12:0] tmp_6_fu_2632_p3;
wire   [29:0] zext_ln124_2_fu_2639_p1;
wire   [29:0] zext_ln124_1_fu_2629_p1;
wire   [31:0] tmp_8_fu_2649_p3;
wire   [31:0] empty_85_fu_2656_p2;
wire   [30:0] trunc_ln1_fu_2661_p4;
wire   [11:0] trunc_ln124_3_fu_2681_p1;
wire   [29:0] sub_ln124_fu_2643_p2;
wire   [29:0] zext_ln124_3_fu_2684_p1;
wire   [29:0] add_ln124_1_fu_2688_p2;
wire   [11:0] trunc_ln124_5_fu_2698_p1;
wire   [13:0] p_shl5_cast_fu_2702_p3;
wire   [13:0] trunc_ln124_4_fu_2694_p1;
wire   [31:0] l_2_cast_fu_2722_p1;
wire   [13:0] trunc_ln124_6_fu_2731_p1;
wire   [13:0] add_ln124_2_fu_2735_p2;
wire   [63:0] add_ln121_1_fu_2750_p2;
wire   [4:0] trunc_ln132_fu_2774_p1;
wire    ap_CS_fsm_state127;
wire   [8:0] trunc_ln67_fu_2798_p1;
wire   [31:0] add_ln70_fu_2807_p2;
wire   [31:0] grp_fu_2829_p0;
wire   [31:0] grp_fu_2829_p1;
wire   [31:0] grp_fu_2841_p0;
wire   [63:0] grp_fu_2841_p1;
wire   [30:0] trunc_ln70_1_fu_2847_p1;
wire   [30:0] grp_fu_2857_p0;
wire   [95:0] grp_fu_2857_p1;
wire  signed [8:0] empty_53_fu_2881_p0;
wire  signed [8:0] empty_54_fu_2890_p0;
wire   [30:0] add_ln70_2_fu_2910_p2;
wire  signed [8:0] p_mid170_fu_2933_p0;
wire   [4:0] trunc_ln70_4_fu_2938_p1;
wire   [4:0] trunc_ln70_5_fu_2942_p1;
wire   [0:0] icmp_ln73_1_fu_2954_p2;
wire   [0:0] icmp_ln72_1_fu_2966_p2;
wire   [31:0] select_ln70_fu_2921_p3;
wire   [31:0] add_ln71_fu_2986_p2;
wire   [0:0] select_ln70_5_fu_2959_p3;
wire   [8:0] p_mid146_fu_3040_p2;
wire   [8:0] select_ln70_3_fu_3022_p3;
wire   [8:0] select_ln70_1_fu_3017_p3;
wire   [8:0] select_ln70_4_fu_3028_p3;
wire   [31:0] select_ln71_fu_3033_p3;
wire   [31:0] add_ln72_fu_3064_p2;
wire   [8:0] trunc_ln72_1_fu_3070_p1;
wire   [8:0] select_ln71_2_fu_3051_p3;
wire   [8:0] p_mid131_fu_3081_p2;
wire   [8:0] select_ln71_3_fu_3057_p3;
wire   [0:0] or_ln72_fu_3105_p2;
wire   [0:0] or_ln72_1_fu_3109_p2;
wire  signed [8:0] grp_fu_3261_p3;
wire   [8:0] trunc_ln75_fu_3141_p1;
wire   [8:0] tmp2_fu_3145_p2;
wire   [63:0] add_ln72_1_fu_3160_p2;
wire   [95:0] add_ln71_1_fu_3173_p2;
wire   [8:0] empty_58_fu_3186_p2;
wire   [31:0] fw_cast_fu_3201_p1;
wire   [8:0] trunc_ln77_fu_3210_p1;
wire   [8:0] add_ln1116_fu_3214_p2;
wire  signed [8:0] grp_fu_3230_p0;
wire   [8:0] grp_fu_3230_p2;
wire  signed [8:0] grp_fu_3238_p0;
wire  signed [15:0] grp_fu_3245_p1;
wire   [28:0] grp_fu_3245_p2;
wire  signed [15:0] grp_fu_3253_p1;
wire   [28:0] grp_fu_3253_p2;
wire  signed [8:0] grp_fu_3261_p0;
wire   [8:0] grp_fu_3261_p2;
reg    grp_fu_1558_ce;
reg    grp_fu_2466_ce;
reg   [130:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp8;
wire    ap_enable_pp8;
wire   [63:0] grp_fu_1152_p00;
wire   [63:0] grp_fu_1152_p10;
wire   [94:0] grp_fu_1168_p00;
wire   [94:0] grp_fu_1168_p10;
wire   [63:0] grp_fu_1590_p00;
wire   [63:0] grp_fu_1590_p10;
wire   [94:0] grp_fu_1602_p00;
wire   [94:0] grp_fu_1602_p10;
wire   [63:0] grp_fu_1665_p10;
wire   [95:0] grp_fu_1953_p00;
wire   [95:0] grp_fu_1953_p10;
wire   [62:0] grp_fu_1966_p00;
wire   [62:0] grp_fu_1966_p10;
wire   [63:0] grp_fu_2829_p00;
wire   [63:0] grp_fu_2829_p10;
wire   [95:0] grp_fu_2841_p00;
wire   [95:0] grp_fu_2841_p10;
wire   [126:0] grp_fu_2857_p00;
wire   [126:0] grp_fu_2857_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 131'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp8_iter0 = 1'b0;
#0 ap_enable_reg_pp8_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp8_iter1 = 1'b0;
end

conv_combined_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .wt(wt),
    .dwt(dwt),
    .b(b),
    .db(db),
    .F(F),
    .C(C),
    .H(H),
    .W(W),
    .FH(FH),
    .FW(FW),
    .fwprop(fwprop),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

conv_combined_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(gmem_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(gmem_AWLEN),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(gmem_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

conv_combined_wbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
wbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(wbuf_V_address0),
    .ce0(wbuf_V_ce0),
    .we0(wbuf_V_we0),
    .d0(gmem_addr_2_read_reg_3604),
    .q0(wbuf_V_q0)
);

conv_combined_dwbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
dwbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dwbuf_V_address0),
    .ce0(dwbuf_V_ce0),
    .we0(dwbuf_V_we0),
    .d0(dwbuf_V_d0),
    .address1(dwbuf_V_address1),
    .ce1(dwbuf_V_ce1),
    .q1(dwbuf_V_q1)
);

conv_combined_bbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
bbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bbuf_V_address0),
    .ce0(bbuf_V_ce0),
    .we0(bbuf_V_we0),
    .d0(gmem_addr_read_reg_3633),
    .q0(bbuf_V_q0)
);

conv_combined_bbuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
dbbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dbbuf_V_address0),
    .ce0(dbbuf_V_ce0),
    .we0(dbbuf_V_we0),
    .d0(dbbuf_V_d0),
    .q0(dbbuf_V_q0)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1152_p0),
    .din1(grp_fu_1152_p1),
    .ce(1'b1),
    .dout(grp_fu_1152_p2)
);

conv_combined_mul_31ns_64ns_95_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
mul_31ns_64ns_95_5_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1168_p0),
    .din1(grp_fu_1168_p1),
    .ce(1'b1),
    .dout(grp_fu_1168_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(i_reg_577),
    .din1(trunc_ln45_1_reg_3456),
    .ce(1'b1),
    .dout(grp_fu_1189_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(add_ln45_reg_3502),
    .din1(trunc_ln45_1_reg_3456),
    .ce(1'b1),
    .dout(grp_fu_1243_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln46_1_reg_3542),
    .din1(trunc_ln45_reg_3451),
    .ce(1'b1),
    .dout(grp_fu_1357_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp11_reg_3569),
    .din1(empty_45_reg_3462),
    .ce(1'b1),
    .dout(grp_fu_1382_p2)
);

conv_combined_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(C_read_reg_3339),
    .din1(W_read_reg_3323),
    .ce(grp_fu_1558_ce),
    .dout(grp_fu_1558_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1590_p0),
    .din1(grp_fu_1590_p1),
    .ce(1'b1),
    .dout(grp_fu_1590_p2)
);

conv_combined_mul_31ns_64ns_95_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
mul_31ns_64ns_95_5_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1602_p0),
    .din1(grp_fu_1602_p1),
    .ce(1'b1),
    .dout(grp_fu_1602_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1614_p0),
    .din1(grp_fu_1614_p1),
    .ce(1'b1),
    .dout(grp_fu_1614_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(empty_65_reg_3712),
    .din1(grp_fu_1623_p1),
    .ce(1'b1),
    .dout(grp_fu_1623_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1632_p0),
    .din1(empty_65_reg_3712),
    .ce(1'b1),
    .dout(grp_fu_1632_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1665_p0),
    .din1(grp_fu_1665_p1),
    .ce(1'b1),
    .dout(grp_fu_1665_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln93_1_reg_3791),
    .din1(empty_66_reg_3730),
    .ce(1'b1),
    .dout(grp_fu_1780_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln94_1_reg_3808),
    .din1(empty_65_reg_3712),
    .ce(1'b1),
    .dout(grp_fu_1784_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln95_reg_3824),
    .din1(trunc_ln93_reg_3700),
    .ce(1'b1),
    .dout(grp_fu_1788_p2)
);

conv_combined_mul_32ns_64ns_96_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 96 ))
mul_32ns_64ns_96_5_1_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1953_p0),
    .din1(grp_fu_1953_p1),
    .ce(1'b1),
    .dout(grp_fu_1953_p2)
);

conv_combined_mul_31ns_32ns_63_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_31ns_32ns_63_2_1_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1966_p0),
    .din1(grp_fu_1966_p1),
    .ce(1'b1),
    .dout(grp_fu_1966_p2)
);

conv_combined_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U19(
    .din0(grp_fu_3230_p3),
    .din1(reg_1099),
    .dout(empty_78_fu_2055_p2)
);

conv_combined_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U20(
    .din0(empty_75_fu_2108_p0),
    .din1(empty_43_reg_3386),
    .dout(empty_75_fu_2108_p2)
);

conv_combined_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U21(
    .din0(p_mid1148_fu_2165_p0),
    .din1(empty_43_reg_3386),
    .dout(p_mid1148_fu_2165_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2466_p0),
    .din1(empty_65_reg_3712),
    .ce(grp_fu_2466_ce),
    .dout(grp_fu_2466_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln122_reg_4249),
    .din1(trunc_ln93_reg_3700),
    .ce(1'b1),
    .dout(grp_fu_2595_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln120_1_reg_4254),
    .din1(empty_66_reg_3730),
    .ce(1'b1),
    .dout(grp_fu_2599_p2)
);

conv_combined_mul_31s_31s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_2_1_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln121_1_reg_4260),
    .din1(empty_65_reg_3712),
    .ce(1'b1),
    .dout(grp_fu_2603_p2)
);

conv_combined_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U26(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(mul_ln66_reg_4350),
    .din1(H_read_reg_3333),
    .ce(1'b1),
    .dout(grp_fu_2783_p2)
);

conv_combined_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U27(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2829_p0),
    .din1(grp_fu_2829_p1),
    .ce(1'b1),
    .dout(grp_fu_2829_p2)
);

conv_combined_mul_32ns_64ns_96_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 96 ))
mul_32ns_64ns_96_5_1_U28(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2841_p0),
    .din1(grp_fu_2841_p1),
    .ce(1'b1),
    .dout(grp_fu_2841_p2)
);

conv_combined_mul_31ns_96ns_127_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 96 ),
    .dout_WIDTH( 127 ))
mul_31ns_96ns_127_5_1_U29(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2857_p0),
    .din1(grp_fu_2857_p1),
    .ce(1'b1),
    .dout(grp_fu_2857_p2)
);

conv_combined_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U30(
    .din0(empty_53_fu_2881_p0),
    .din1(outH_reg_3395),
    .dout(empty_53_fu_2881_p2)
);

conv_combined_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U31(
    .din0(empty_54_fu_2890_p0),
    .din1(empty_43_reg_3386),
    .dout(empty_54_fu_2890_p2)
);

conv_combined_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U32(
    .din0(p_mid170_fu_2933_p0),
    .din1(outH_reg_3395),
    .dout(p_mid170_fu_2933_p2)
);

conv_combined_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U33(
    .din0(trunc_ln71_1_reg_4515),
    .din1(empty_43_reg_3386),
    .dout(p_mid146_fu_3040_p2)
);

conv_combined_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U34(
    .din0(empty_57_reg_4587),
    .din1(trunc_ln70_reg_4433),
    .dout(empty_58_fu_3186_p2)
);

conv_combined_mac_muladd_9s_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_9s_9s_9ns_9_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3230_p0),
    .din1(outH_reg_3395),
    .din2(grp_fu_3230_p2),
    .ce(1'b1),
    .dout(grp_fu_3230_p3)
);

conv_combined_mac_muladd_9s_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_9s_9s_9ns_9_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3238_p0),
    .din1(trunc_ln103_reg_3915),
    .din2(trunc_ln105_reg_4005),
    .ce(1'b1),
    .dout(grp_fu_3238_p3)
);

conv_combined_mac_muladd_16s_16s_29ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
mac_muladd_16s_16s_29ns_29_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(wbuf_V_q0),
    .din1(grp_fu_3245_p1),
    .din2(grp_fu_3245_p2),
    .ce(1'b1),
    .dout(grp_fu_3245_p3)
);

conv_combined_mac_muladd_16s_16s_29ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
mac_muladd_16s_16s_29ns_29_4_1_U38(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(x_Dout_A),
    .din1(grp_fu_3253_p1),
    .din2(grp_fu_3253_p2),
    .ce(1'b1),
    .dout(grp_fu_3253_p3)
);

conv_combined_mac_muladd_9s_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_9s_9s_9ns_9_4_1_U39(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3261_p0),
    .din1(reg_1099),
    .din2(grp_fu_3261_p2),
    .ce(1'b1),
    .dout(grp_fu_3261_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state28))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state28)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state28);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state38))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state38)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state38);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state48))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state48)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state48);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state72))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state71)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state72)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state72);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state71)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state91) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state89)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state91)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state91);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b0)) | ((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end else if ((1'b1 == ap_CS_fsm_state89)) begin
            ap_enable_reg_pp4_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state110) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state109))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state110)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state110);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state109))) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state118))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if (((icmp_ln120_reg_4218 == 1'd1) & (1'b0 == ap_block_state103_io) & (1'b1 == ap_CS_fsm_state103))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state118)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state118);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end else if (((icmp_ln120_reg_4218 == 1'd1) & (1'b0 == ap_block_state103_io) & (1'b1 == ap_CS_fsm_state103))) begin
            ap_enable_reg_pp6_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_condition_pp7_exit_iter0_state129) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state128)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state129)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state129);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end else if ((1'b1 == ap_CS_fsm_state128)) begin
            ap_enable_reg_pp7_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp8_flush_enable)) begin
            ap_enable_reg_pp8_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state151) & (cmp106330_reg_4429 == 1'd1))) begin
            ap_enable_reg_pp8_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter1 <= ap_enable_reg_pp8_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter2 <= ap_enable_reg_pp8_iter1;
        end else if (((1'b1 == ap_CS_fsm_state151) & (cmp106330_reg_4429 == 1'd1))) begin
            ap_enable_reg_pp8_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4047 == 1'd0))) begin
        c_1_reg_784 <= select_ln106_2_reg_4070;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        c_1_reg_784 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state150) & (icmp_ln75_fu_3136_p2 == 1'd1))) begin
        c_reg_966 <= select_ln71_5_reg_4528;
    end else if ((1'b1 == ap_CS_fsm_state144)) begin
        c_reg_966 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        empty_56_reg_1013 <= bbuf_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        empty_56_reg_1013 <= empty_61_reg_1057;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state151) & (cmp106330_reg_4429 == 1'd1))) begin
        empty_59_reg_1045 <= empty_56_reg_1013;
    end else if (((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter2 == 1'b1) & (icmp_ln76_reg_4617_pp8_iter1_reg == 1'd0))) begin
        empty_59_reg_1045 <= add_ln703_1_fu_3224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state151) & (cmp106330_reg_4429 == 1'd0))) begin
        empty_61_reg_1057 <= empty_56_reg_1013;
    end else if ((1'b1 == ap_CS_fsm_state155)) begin
        empty_61_reg_1057 <= empty_59_reg_1045;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        empty_73_reg_773 <= dbbuf_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        empty_73_reg_773 <= add_ln703_fu_2451_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state87) & ((cmp184402_reg_3782 == 1'd0) | (icmp_ln105_fu_2066_p2 == 1'd1)))) begin
        f_1_reg_739 <= select_ln103_1_reg_3953;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        f_1_reg_739 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state150) & (icmp_ln75_fu_3136_p2 == 1'd1))) begin
        f_reg_943 <= select_ln70_7_reg_4503;
    end else if ((1'b1 == ap_CS_fsm_state144)) begin
        f_reg_943 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4047 == 1'd0))) begin
        fh_1_reg_818 <= select_ln107_3_reg_4122;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        fh_1_reg_818 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        fh_reg_1023 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        fh_reg_1023 <= add_ln75_reg_4579;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4047 == 1'd0))) begin
        fw_1_reg_829 <= add_ln108_reg_4137;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        fw_1_reg_829 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state151) & (cmp106330_reg_4429 == 1'd1))) begin
        fw_reg_1034 <= 31'd0;
    end else if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (icmp_ln76_fu_3205_p2 == 1'd0) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        fw_reg_1034 <= add_ln76_fu_3195_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state87) & ((cmp184402_reg_3782 == 1'd0) | (icmp_ln105_fu_2066_p2 == 1'd1)))) begin
        h_1_reg_750 <= add_ln104_fu_2095_p2;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        h_1_reg_750 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state150) & (icmp_ln75_fu_3136_p2 == 1'd1))) begin
        h_reg_989 <= select_ln72_3_reg_4548;
    end else if ((1'b1 == ap_CS_fsm_state144)) begin
        h_reg_989 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        i_1_reg_636 <= 31'd0;
    end else if (((icmp_ln58_fu_1525_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_1_reg_636 <= add_ln58_fu_1519_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln66_fu_2793_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        i_2_reg_921 <= add_ln66_fu_2787_p2;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        i_2_reg_921 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        i_3_reg_647 <= 31'd0;
    end else if (((icmp_ln88_fu_1571_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_3_reg_647 <= add_ln88_fu_1565_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        i_4_reg_681 <= select_ln93_1_reg_3791;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        i_4_reg_681 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln103_fu_1996_p2 == 1'd1))) begin
        i_5_reg_864 <= 31'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp155417_reg_3726 == 1'd1)) & (1'b1 == ap_CS_fsm_state117))) begin
        i_5_reg_864 <= select_ln120_1_reg_4254;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_4218 == 1'd1) & (1'b0 == ap_block_state103_io) & (1'b1 == ap_CS_fsm_state103))) begin
        i_6_reg_910 <= 31'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln131_fu_2769_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        i_6_reg_910 <= add_ln131_fu_2763_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_reg_577 <= select_ln45_2_reg_3532;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_reg_577 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        indvar_flatten101_reg_693 <= select_ln94_4_fu_1940_p3;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        indvar_flatten101_reg_693 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        indvar_flatten124_reg_670 <= add_ln93_1_reg_3758;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        indvar_flatten124_reg_670 <= 95'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4047 == 1'd0))) begin
        indvar_flatten137_reg_807 <= select_ln107_4_reg_4142;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        indvar_flatten137_reg_807 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4047 == 1'd0))) begin
        indvar_flatten166_reg_796 <= add_ln106_1_reg_4037;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        indvar_flatten166_reg_796 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state87) & ((cmp184402_reg_3782 == 1'd0) | (icmp_ln105_fu_2066_p2 == 1'd1)))) begin
        indvar_flatten179_reg_728 <= add_ln103_4_reg_3940;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        indvar_flatten179_reg_728 <= 63'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln103_fu_1996_p2 == 1'd1))) begin
        indvar_flatten190_reg_876 <= 64'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp155417_reg_3726 == 1'd1)) & (1'b1 == ap_CS_fsm_state117))) begin
        indvar_flatten190_reg_876 <= select_ln121_4_fu_2756_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln103_fu_1996_p2 == 1'd1))) begin
        indvar_flatten213_reg_841 <= 95'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp155417_reg_3726 == 1'd1)) & (1'b1 == ap_CS_fsm_state117))) begin
        indvar_flatten213_reg_841 <= add_ln120_1_reg_4203;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten21_reg_566 <= add_ln45_1_reg_3477;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten21_reg_566 <= 95'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state150) & (icmp_ln75_fu_3136_p2 == 1'd1))) begin
        indvar_flatten35_reg_977 <= select_ln72_4_fu_3166_p3;
    end else if ((1'b1 == ap_CS_fsm_state144)) begin
        indvar_flatten35_reg_977 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state150) & (icmp_ln75_fu_3136_p2 == 1'd1))) begin
        indvar_flatten56_reg_954 <= select_ln71_6_fu_3179_p3;
    end else if ((1'b1 == ap_CS_fsm_state144)) begin
        indvar_flatten56_reg_954 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state150) & (icmp_ln75_fu_3136_p2 == 1'd1))) begin
        indvar_flatten90_reg_932 <= add_ln70_4_reg_4448;
    end else if ((1'b1 == ap_CS_fsm_state144)) begin
        indvar_flatten90_reg_932 <= 127'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten_reg_589 <= select_ln46_4_fu_1512_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten_reg_589 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        j_1_reg_658 <= select_ln94_3_reg_3819;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        j_1_reg_658 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln103_fu_1996_p2 == 1'd1))) begin
        j_2_reg_852 <= 32'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp155417_reg_3726 == 1'd1)) & (1'b1 == ap_CS_fsm_state117))) begin
        j_2_reg_852 <= select_ln121_3_reg_4271;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        j_reg_601 <= select_ln46_3_reg_3553;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        j_reg_601 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        k_1_reg_705 <= add_ln95_fu_1929_p2;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        k_1_reg_705 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln103_fu_1996_p2 == 1'd1))) begin
        k_2_reg_888 <= 32'd0;
    end else if ((~((gmem_BVALID == 1'b0) & (cmp155417_reg_3726 == 1'd1)) & (1'b1 == ap_CS_fsm_state117))) begin
        k_2_reg_888 <= add_ln122_fu_2745_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        k_reg_613 <= add_ln47_fu_1501_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_reg_613 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        l_1_reg_717 <= 31'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln96_fu_1911_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        l_1_reg_717 <= add_ln96_fu_1901_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state109))) begin
        l_2_reg_899 <= 31'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln123_fu_2726_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        l_2_reg_899 <= add_ln123_fu_2716_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        l_reg_625 <= 31'd0;
    end else if (((icmp_ln48_fu_1483_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        l_reg_625 <= add_ln48_fu_1473_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp184402_reg_3782 == 1'd1) & (1'b1 == ap_CS_fsm_state87) & (icmp_ln105_fu_2066_p2 == 1'd0))) begin
        reuse_addr_reg_fu_244 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln106_reg_4047_pp4_iter1_reg == 1'd0))) begin
        reuse_addr_reg_fu_244 <= zext_ln1118_fu_2372_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp184402_reg_3782 == 1'd1) & (1'b1 == ap_CS_fsm_state87) & (icmp_ln105_fu_2066_p2 == 1'd0))) begin
        reuse_reg_fu_248 <= 16'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1) & (icmp_ln106_reg_4047_pp4_iter3_reg == 1'd0))) begin
        reuse_reg_fu_248 <= {{grp_fu_3245_p3[28:13]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        w_1_reg_762 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        w_1_reg_762 <= add_ln105_reg_3997;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state150) & (icmp_ln75_fu_3136_p2 == 1'd1))) begin
        w_reg_1001 <= add_ln73_fu_3155_p2;
    end else if ((1'b1 == ap_CS_fsm_state144)) begin
        w_reg_1001 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        C_read_reg_3339 <= C;
        FH_read_reg_3309 <= FH;
        FW_read_reg_3288 <= FW;
        F_read_reg_3350 <= F;
        H_read_reg_3333 <= H;
        W_read_reg_3323 <= W;
        b_read_reg_3365 <= b;
        db_read_reg_3360 <= db;
        dwt_read_reg_3370 <= dwt;
        empty_43_reg_3386 <= empty_43_fu_1113_p1;
        empty_reg_3381 <= empty_fu_1109_p1;
        fwprop_read_reg_3284 <= fwprop;
        wt_read_reg_3376 <= wt;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        add_ln103_4_reg_3940 <= add_ln103_4_fu_1990_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp184402_reg_3782 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
        add_ln105_reg_3997 <= add_ln105_fu_2060_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        add_ln106_1_reg_4037 <= add_ln106_1_fu_2113_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln106_fu_2137_p2 == 1'd0))) begin
        add_ln107_2_reg_4102 <= add_ln107_2_fu_2224_p2;
        add_ln107_reg_4087 <= add_ln107_fu_2202_p2;
        icmp_ln107_reg_4051 <= icmp_ln107_fu_2148_p2;
        p_mid1148_reg_4064 <= p_mid1148_fu_2165_p2;
        select_ln106_5_reg_4080 <= select_ln106_5_fu_2195_p3;
        select_ln106_reg_4059 <= select_ln106_fu_2153_p3;
        select_ln107_1_reg_4097 <= select_ln107_1_fu_2216_p3;
        trunc_ln106_2_reg_4075 <= trunc_ln106_2_fu_2178_p1;
        trunc_ln107_1_reg_4092 <= trunc_ln107_1_fu_2208_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4047 == 1'd0))) begin
        add_ln108_reg_4137 <= add_ln108_fu_2334_p2;
        select_ln107_3_reg_4122 <= select_ln107_3_fu_2321_p3;
        select_ln107_4_reg_4142 <= select_ln107_4_fu_2340_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln106_reg_4047 == 1'd0))) begin
        add_ln1118_3_reg_4147 <= add_ln1118_3_fu_2358_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        add_ln120_1_reg_4203 <= add_ln120_1_fu_2456_p2;
        icmp_ln120_reg_4218 <= icmp_ln120_fu_2475_p2;
        trunc_ln124_reg_4213 <= trunc_ln124_fu_2471_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        add_ln124_reg_4265 <= add_ln124_fu_2582_p2;
        select_ln120_1_reg_4254 <= select_ln120_1_fu_2528_p3;
        select_ln121_3_reg_4271 <= select_ln121_3_fu_2588_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln45_1_reg_3477 <= add_ln45_1_fu_1183_p2;
        icmp_ln45_1_reg_3482 <= icmp_ln45_1_fu_1194_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_1_reg_3482 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        add_ln45_reg_3502 <= add_ln45_fu_1212_p2;
        icmp_ln46_reg_3508 <= icmp_ln46_fu_1218_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_fu_1483_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln49_2_reg_3599 <= add_ln49_2_fu_1492_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln49_2_reg_3599_pp0_iter1_reg <= add_ln49_2_reg_3599;
        icmp_ln48_reg_3595 <= icmp_ln48_fu_1483_p2;
        icmp_ln48_reg_3595_pp0_iter1_reg <= icmp_ln48_reg_3595;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln49_reg_3547 <= add_ln49_fu_1343_p2;
        select_ln45_2_reg_3532 <= select_ln45_2_fu_1259_p3;
        select_ln45_5_reg_3537 <= select_ln45_5_fu_1297_p3;
        select_ln46_1_reg_3542 <= select_ln46_1_fu_1319_p3;
        select_ln46_3_reg_3553 <= select_ln46_3_fu_1349_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state145)) begin
        add_ln70_4_reg_4448 <= add_ln70_4_fu_2871_p2;
        empty_53_reg_4453 <= empty_53_fu_2881_p2;
        empty_54_reg_4458 <= empty_54_fu_2890_p2;
        empty_55_reg_4468 <= empty_55_fu_2899_p2;
        trunc_ln72_reg_4463 <= trunc_ln72_fu_2895_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state150)) begin
        add_ln75_reg_4579 <= add_ln75_fu_3130_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state151) & (cmp106330_reg_4429 == 1'd1))) begin
        add_ln77_reg_4607 <= add_ln77_fu_3190_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        add_ln93_1_reg_3758 <= add_ln93_1_fu_1641_p2;
        empty_67_reg_3763 <= grp_fu_1632_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln96_fu_1911_p2 == 1'd0))) begin
        add_ln97_2_reg_3869 <= add_ln97_2_fu_1920_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln97_2_reg_3869_pp3_iter1_reg <= add_ln97_2_reg_3869;
        icmp_ln96_reg_3865 <= icmp_ln96_fu_1911_p2;
        icmp_ln96_reg_3865_pp3_iter1_reg <= icmp_ln96_reg_3865;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        add_ln97_reg_3813 <= add_ln97_fu_1762_p2;
        select_ln93_1_reg_3791 <= select_ln93_1_fu_1683_p3;
        select_ln93_4_reg_3797 <= select_ln93_4_fu_1717_p3;
        select_ln94_3_reg_3819 <= select_ln94_3_fu_1768_p3;
        select_ln94_reg_3802 <= select_ln94_fu_1734_p3;
        trunc_ln94_1_reg_3808 <= trunc_ln94_1_fu_1742_p1;
        trunc_ln95_reg_3824 <= trunc_ln95_fu_1776_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln106_reg_4047_pp4_iter1_reg == 1'd0))) begin
        addr_cmp_reg_4178 <= addr_cmp_fu_2385_p2;
        dx_addr_1_reg_4173 <= zext_ln1118_fu_2372_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        bound106_reg_3736 <= grp_fu_1602_p2;
        cmp155417_reg_3726 <= grp_fu_1070_p2;
        empty_66_reg_3730 <= grp_fu_1623_p2;
        icmp_ln95_reg_3742 <= grp_fu_1075_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        bound129_reg_3889 <= grp_fu_1665_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        bound142_reg_3925 <= grp_fu_1953_p2;
        bound173_reg_3930 <= grp_fu_1966_p2;
        icmp_ln108_reg_3935 <= icmp_ln108_fu_1985_p2;
        sub_ln103_reg_3920 <= sub_ln103_fu_1980_p2;
        trunc_ln103_reg_3915 <= trunc_ln103_fu_1972_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        bound26_reg_4396 <= grp_fu_2829_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        bound40_reg_4413 <= grp_fu_2841_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        bound4_reg_3467 <= grp_fu_1168_p2;
        cmp57447_reg_3447 <= grp_fu_1070_p2;
        empty_45_reg_3462 <= empty_45_fu_1180_p1;
        icmp_ln47_reg_3472 <= grp_fu_1075_p2;
        trunc_ln45_1_reg_3456 <= trunc_ln45_1_fu_1177_p1;
        trunc_ln45_reg_3451 <= trunc_ln45_fu_1174_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        bound62_reg_4438 <= grp_fu_2857_p2;
        cmp106330_reg_4429 <= grp_fu_1070_p2;
        icmp_ln72_reg_4443 <= icmp_ln72_fu_2866_p2;
        trunc_ln70_reg_4433 <= trunc_ln70_fu_2863_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        bound95_reg_3683 <= grp_fu_1590_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bound_reg_3426 <= grp_fu_1152_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        cast94_reg_3677[31 : 0] <= cast94_fu_1587_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln93_fu_1647_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state59))) begin
        cmp184402_reg_3782 <= cmp184402_fu_1657_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp184402_reg_3782 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
        dbbuf_V_addr_1_reg_3992 <= zext_ln103_fu_2040_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln106_reg_4047_pp4_iter1_reg == 1'd0))) begin
        dwbuf_V_addr_2_reg_4157 <= zext_ln1118_5_fu_2363_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        dwbuf_V_addr_2_reg_4157_pp4_iter3_reg <= dwbuf_V_addr_2_reg_4157;
        dwbuf_V_addr_2_reg_4157_pp4_iter4_reg <= dwbuf_V_addr_2_reg_4157_pp4_iter3_reg;
        empty_75_reg_4031 <= empty_75_fu_2108_p2;
        trunc_ln1115_reg_4132_pp4_iter2_reg <= trunc_ln1115_reg_4132;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln123_reg_4312 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        dwbuf_V_load_reg_4321 <= dwbuf_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        dx_addr_1_reg_4173_pp4_iter3_reg <= dx_addr_1_reg_4173;
        empty_76_reg_4042 <= empty_76_fu_2128_p2;
        icmp_ln106_reg_4047 <= icmp_ln106_fu_2137_p2;
        icmp_ln106_reg_4047_pp4_iter1_reg <= icmp_ln106_reg_4047;
        icmp_ln106_reg_4047_pp4_iter2_reg <= icmp_ln106_reg_4047_pp4_iter1_reg;
        icmp_ln106_reg_4047_pp4_iter3_reg <= icmp_ln106_reg_4047_pp4_iter2_reg;
        icmp_ln106_reg_4047_pp4_iter4_reg <= icmp_ln106_reg_4047_pp4_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        empty_44_reg_3432 <= empty_44_fu_1158_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        empty_46_reg_3486 <= grp_fu_1189_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        empty_49_reg_3574 <= grp_fu_1382_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state150) & (icmp_ln75_fu_3136_p2 == 1'd0))) begin
        empty_57_reg_4587 <= empty_57_fu_3150_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        empty_65_reg_3712 <= grp_fu_1614_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        empty_70_reg_3839 <= grp_fu_1788_p2;
        mul_ln93_reg_3829 <= grp_fu_1780_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        empty_71_reg_3844 <= empty_71_fu_1808_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        empty_78_reg_3987 <= empty_78_fu_2055_p2;
        zext_ln104_reg_3982[9 : 5] <= zext_ln104_fu_2051_p1[9 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        empty_79_reg_4222 <= grp_fu_2466_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        empty_83_reg_4276 <= grp_fu_2595_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        empty_84_reg_4291 <= empty_84_fu_2623_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_reg_3658 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        gmem_addr_1_read_reg_3667 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((fwprop_read_reg_3284 == 1'd0) & (icmp_ln45_reg_3412 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        gmem_addr_1_reg_3638 <= sext_ln88_fu_1547_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_reg_3595 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_addr_2_read_reg_3604 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp57447_reg_3447 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        gmem_addr_2_reg_3579 <= sext_ln48_fu_1428_p1;
        sub_ln49_1_reg_3585 <= sub_ln49_1_fu_1467_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_reg_3865 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        gmem_addr_3_read_reg_3874 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp155417_reg_3726 == 1'd1) & (1'b1 == ap_CS_fsm_state64))) begin
        gmem_addr_3_reg_3849 <= sext_ln96_fu_1856_p1;
        sub_ln97_1_reg_3855 <= sub_ln97_1_fu_1895_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp155417_reg_3726 == 1'd1) & (1'b1 == ap_CS_fsm_state108))) begin
        gmem_addr_4_reg_4296 <= sext_ln123_fu_2671_p1;
        sub_ln124_1_reg_4302 <= sub_ln124_1_fu_2710_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_reg_3624 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        gmem_addr_read_reg_3633 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln103_fu_1996_p2 == 1'd0))) begin
        icmp_ln104_reg_3948 <= icmp_ln104_fu_2007_p2;
        select_ln103_1_reg_3953 <= select_ln103_1_fu_2013_p3;
        trunc_ln103_2_reg_3963 <= trunc_ln103_2_fu_2025_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_4218 == 1'd0) & (1'b1 == ap_CS_fsm_state103))) begin
        icmp_ln121_reg_4227 <= icmp_ln121_fu_2480_p2;
        select_ln120_4_reg_4236 <= select_ln120_4_fu_2490_p3;
        select_ln121_reg_4243 <= select_ln121_fu_2503_p3;
        trunc_ln122_reg_4249 <= trunc_ln122_fu_2511_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln123_reg_4312 <= icmp_ln123_fu_2726_p2;
        icmp_ln123_reg_4312_pp5_iter1_reg <= icmp_ln123_reg_4312;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        icmp_ln131_reg_4341 <= icmp_ln131_fu_2769_p2;
        icmp_ln131_reg_4341_pp6_iter1_reg <= icmp_ln131_reg_4341;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln45_reg_3412 <= icmp_ln45_fu_1141_p2;
        outH_reg_3395 <= outH_fu_1121_p2;
        outW_reg_3407 <= outW_fu_1135_p2;
        trunc_ln40_reg_3402 <= trunc_ln40_fu_1131_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln58_reg_3624 <= icmp_ln58_fu_1525_p2;
        icmp_ln58_reg_3624_pp1_iter1_reg <= icmp_ln58_reg_3624;
        trunc_ln59_reg_3628_pp1_iter1_reg <= trunc_ln59_reg_3628;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state145) & (icmp_ln70_fu_2905_p2 == 1'd0))) begin
        icmp_ln71_reg_4476 <= icmp_ln71_fu_2916_p2;
        or_ln71_reg_4508 <= or_ln71_fu_2992_p2;
        p_mid170_reg_4485 <= p_mid170_fu_2933_p2;
        select_ln70_2_reg_4491 <= select_ln70_2_fu_2946_p3;
        select_ln70_6_reg_4496 <= select_ln70_6_fu_2971_p3;
        select_ln70_7_reg_4503 <= select_ln70_7_fu_2978_p3;
        select_ln71_4_reg_4520 <= select_ln71_4_fu_3002_p3;
        select_ln71_5_reg_4528 <= select_ln71_5_fu_3009_p3;
        trunc_ln71_1_reg_4515 <= trunc_ln71_1_fu_2998_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_3412 == 1'd1) & (1'b1 == ap_CS_fsm_state132))) begin
        icmp_ln73_reg_4380 <= icmp_ln73_fu_2817_p2;
        sub_ln70_reg_4374 <= sub_ln70_fu_2812_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        icmp_ln76_reg_4617 <= icmp_ln76_fu_3205_p2;
        icmp_ln76_reg_4617_pp8_iter1_reg <= icmp_ln76_reg_4617;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln88_reg_3658 <= icmp_ln88_fu_1571_p2;
        icmp_ln88_reg_3658_pp2_iter1_reg <= icmp_ln88_reg_3658;
        trunc_ln89_reg_3662_pp2_iter1_reg <= trunc_ln89_reg_3662;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln93_fu_1647_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state59))) begin
        icmp_ln94_reg_3771 <= icmp_ln94_fu_1652_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        mul_ln120_reg_4281 <= grp_fu_2599_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        mul_ln46_reg_3558 <= grp_fu_1357_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        mul_ln66_1_reg_4355 <= grp_fu_2783_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        mul_ln66_reg_4350 <= grp_fu_1558_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state106) & (select_ln120_4_reg_4236 == 1'd1))) begin
        p_mid1188_reg_4286 <= grp_fu_2603_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln93_4_reg_3797 == 1'd1) & (1'b1 == ap_CS_fsm_state62))) begin
        p_mid199_reg_3834 <= grp_fu_1784_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_mid1_reg_3526 <= grp_fu_1243_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        r_V_reg_4020 <= dy_Dout_A;
        sext_ln1118_1_reg_4025 <= sext_ln1118_1_fu_2100_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((icmp_ln45_reg_3412 == 1'd1) & (1'b1 == ap_CS_fsm_state132)))) begin
        reg_1095 <= grp_fu_1085_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state81))) begin
        reg_1099 <= grp_fu_1090_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state86) | ((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln131_reg_4341 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)))) begin
        reg_1103 <= dbbuf_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        select_ln103_reg_3969 <= select_ln103_fu_2029_p3;
        trunc_ln104_reg_3974 <= trunc_ln104_fu_2036_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln106_fu_2137_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        select_ln106_2_reg_4070 <= select_ln106_2_fu_2170_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        select_ln46_reg_3563 <= select_ln46_fu_1365_p3;
        tmp11_reg_3569 <= tmp11_fu_1377_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        select_ln71_1_reg_4533 <= select_ln71_1_fu_3044_p3;
        select_ln72_1_reg_4538 <= select_ln72_1_fu_3074_p3;
        select_ln72_3_reg_4548 <= select_ln72_3_fu_3094_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        select_ln72_reg_4558 <= select_ln72_fu_3114_p3;
        trunc_ln73_reg_4563 <= trunc_ln73_fu_3122_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_reg_3492 <= tmp_fu_1203_p2;
        trunc_ln49_reg_3497 <= trunc_ln49_fu_1208_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp184402_reg_3782 == 1'd1) & (1'b1 == ap_CS_fsm_state87) & (icmp_ln105_fu_2066_p2 == 1'd0))) begin
        trunc_ln105_reg_4005 <= trunc_ln105_fu_2071_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln106_reg_4047 == 1'd0))) begin
        trunc_ln109_reg_4127 <= trunc_ln109_fu_2326_p1;
        trunc_ln1115_reg_4132 <= trunc_ln1115_fu_2330_p1;
        trunc_ln1118_1_reg_4112 <= trunc_ln1118_1_fu_2310_p1;
        trunc_ln1118_reg_4107 <= trunc_ln1118_fu_2306_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state104) & (select_ln120_4_reg_4236 == 1'd1))) begin
        trunc_ln121_1_reg_4260 <= trunc_ln121_1_fu_2563_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_fu_1525_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln59_reg_3628 <= trunc_ln59_fu_1530_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        trunc_ln88_reg_3645 <= trunc_ln88_fu_1562_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_fu_1571_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        trunc_ln89_reg_3662 <= trunc_ln89_fu_1576_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        trunc_ln93_reg_3700 <= trunc_ln93_fu_1608_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        trunc_ln97_reg_3753 <= trunc_ln97_fu_1637_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        y_addr_reg_4574 <= zext_ln74_fu_3126_p1;
    end
end

always @ (*) begin
    if ((icmp_ln48_fu_1483_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln58_fu_1525_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state38 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state38 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln88_fu_1571_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state48 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state48 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln96_fu_1911_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state72 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state72 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln106_fu_2137_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state91 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state91 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln123_fu_2726_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state110 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state110 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln131_fu_2769_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state118 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state118 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln66_fu_2793_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state129 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state129 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0_subdone) & (1'b1 == ap_CS_fsm_pp8_stage0) & (icmp_ln76_fu_3205_p2 == 1'd1))) begin
        ap_condition_pp8_flush_enable = 1'b1;
    end else begin
        ap_condition_pp8_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((~((gmem_BVALID == 1'b0) & (ap_predicate_op796_writeresp_state125 == 1'b1)) & (1'b1 == ap_CS_fsm_state125))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter1 == 1'b0) & (ap_enable_reg_pp8_iter2 == 1'b0) & (ap_enable_reg_pp8_iter0 == 1'b0))) begin
        ap_idle_pp8 = 1'b1;
    end else begin
        ap_idle_pp8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4047 == 1'd0))) begin
        ap_phi_mux_c_1_phi_fu_788_p4 = select_ln106_2_reg_4070;
    end else begin
        ap_phi_mux_c_1_phi_fu_788_p4 = c_1_reg_784;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4047 == 1'd0))) begin
        ap_phi_mux_fh_1_phi_fu_822_p4 = select_ln107_3_reg_4122;
    end else begin
        ap_phi_mux_fh_1_phi_fu_822_p4 = fh_1_reg_818;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4047 == 1'd0))) begin
        ap_phi_mux_fw_1_phi_fu_833_p4 = add_ln108_reg_4137;
    end else begin
        ap_phi_mux_fw_1_phi_fu_833_p4 = fw_1_reg_829;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4047 == 1'd0))) begin
        ap_phi_mux_indvar_flatten137_phi_fu_811_p4 = select_ln107_4_reg_4142;
    end else begin
        ap_phi_mux_indvar_flatten137_phi_fu_811_p4 = indvar_flatten137_reg_807;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln106_reg_4047 == 1'd0))) begin
        ap_phi_mux_indvar_flatten166_phi_fu_800_p4 = add_ln106_1_reg_4037;
    end else begin
        ap_phi_mux_indvar_flatten166_phi_fu_800_p4 = indvar_flatten166_reg_796;
    end
end

always @ (*) begin
    if ((~((gmem_BVALID == 1'b0) & (ap_predicate_op796_writeresp_state125 == 1'b1)) & (1'b1 == ap_CS_fsm_state125))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        bbuf_V_address0 = zext_ln70_fu_3101_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        bbuf_V_address0 = zext_ln59_fu_1534_p1;
    end else begin
        bbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        bbuf_V_ce0 = 1'b1;
    end else begin
        bbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_3624_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        bbuf_V_we0 = 1'b1;
    end else begin
        bbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        dbbuf_V_address0 = zext_ln132_fu_2778_p1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        dbbuf_V_address0 = dbbuf_V_addr_1_reg_3992;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        dbbuf_V_address0 = zext_ln103_fu_2040_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        dbbuf_V_address0 = zext_ln89_fu_1580_p1;
    end else begin
        dbbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state85) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1)))) begin
        dbbuf_V_ce0 = 1'b1;
    end else begin
        dbbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        dbbuf_V_d0 = empty_73_reg_773;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        dbbuf_V_d0 = gmem_addr_1_read_reg_3667;
    end else begin
        dbbuf_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_3658_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((cmp184402_reg_3782 == 1'd1) & (1'b1 == ap_CS_fsm_state87) & (icmp_ln105_fu_2066_p2 == 1'd1)))) begin
        dbbuf_V_we0 = 1'b1;
    end else begin
        dbbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1))) begin
        dwbuf_V_address0 = dwbuf_V_addr_2_reg_4157_pp4_iter4_reg;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        dwbuf_V_address0 = zext_ln97_4_fu_1925_p1;
    end else begin
        dwbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        dwbuf_V_address1 = zext_ln124_4_fu_2740_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1))) begin
        dwbuf_V_address1 = dwbuf_V_addr_2_reg_4157_pp4_iter3_reg;
    end else begin
        dwbuf_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        dwbuf_V_ce0 = 1'b1;
    end else begin
        dwbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1)))) begin
        dwbuf_V_ce1 = 1'b1;
    end else begin
        dwbuf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1))) begin
        dwbuf_V_d0 = {{grp_fu_3253_p3[28:13]}};
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        dwbuf_V_d0 = gmem_addr_3_read_reg_3874;
    end else begin
        dwbuf_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1) & (icmp_ln106_reg_4047_pp4_iter4_reg == 1'd0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln96_reg_3865_pp3_iter1_reg == 1'd0)))) begin
        dwbuf_V_we0 = 1'b1;
    end else begin
        dwbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        dx_Addr_A_orig = zext_ln67_fu_2802_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1))) begin
        dx_Addr_A_orig = dx_addr_1_reg_4173_pp4_iter3_reg;
    end else if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        dx_Addr_A_orig = zext_ln1118_fu_2372_p1;
    end else begin
        dx_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        dx_Din_A = 16'd0;
    end else if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1))) begin
        dx_Din_A = {{grp_fu_3245_p3[28:13]}};
    end else begin
        dx_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter2 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1)))) begin
        dx_EN_A = 1'b1;
    end else begin
        dx_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln66_fu_2793_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1) & (icmp_ln106_reg_4047_pp4_iter3_reg == 1'd0)))) begin
        dx_WEN_A = 2'd3;
    end else begin
        dx_WEN_A = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state87))) begin
        dy_EN_A = 1'b1;
    end else begin
        dy_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state65))) begin
        gmem_ARADDR = gmem_addr_3_reg_3849;
    end else if (((1'b0 == ap_block_state41_io) & (ap_predicate_op368_readreq_state41 == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
        gmem_ARADDR = sext_ln88_fu_1547_p1;
    end else if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        gmem_ARADDR = gmem_addr_2_reg_3579;
    end else if (((icmp_ln45_1_reg_3482 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
        gmem_ARADDR = sext_ln58_fu_1232_p1;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state65)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        gmem_ARLEN = FW_read_reg_3288;
    end else if ((((icmp_ln45_1_reg_3482 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11)) | ((1'b0 == ap_block_state41_io) & (ap_predicate_op368_readreq_state41 == 1'b1) & (1'b1 == ap_CS_fsm_state41)))) begin
        gmem_ARLEN = F_read_reg_3350;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln45_1_reg_3482 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11)) | ((1'b0 == ap_block_state41_io) & (ap_predicate_op368_readreq_state41 == 1'b1) & (1'b1 == ap_CS_fsm_state41)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state65)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state109))) begin
        gmem_AWADDR = gmem_addr_4_reg_4296;
    end else if (((icmp_ln120_reg_4218 == 1'd1) & (1'b0 == ap_block_state103_io) & (1'b1 == ap_CS_fsm_state103))) begin
        gmem_AWADDR = gmem_addr_1_reg_3638;
    end else begin
        gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state109))) begin
        gmem_AWLEN = FW_read_reg_3288;
    end else if (((icmp_ln120_reg_4218 == 1'd1) & (1'b0 == ap_block_state103_io) & (1'b1 == ap_CS_fsm_state103))) begin
        gmem_AWLEN = F_read_reg_3350;
    end else begin
        gmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln120_reg_4218 == 1'd1) & (1'b0 == ap_block_state103_io) & (1'b1 == ap_CS_fsm_state103)) | ((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state109)))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((gmem_BVALID == 1'b0) & (ap_predicate_op796_writeresp_state125 == 1'b1)) & (ap_predicate_op796_writeresp_state125 == 1'b1) & (1'b1 == ap_CS_fsm_state125)) | (~((gmem_BVALID == 1'b0) & (cmp155417_reg_3726 == 1'd1)) & (cmp155417_reg_3726 == 1'd1) & (1'b1 == ap_CS_fsm_state117)))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln96_reg_3865 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln88_reg_3658 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln58_reg_3624 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln48_reg_3595 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln131_reg_4341_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_01001))) begin
        gmem_WDATA = reg_1103;
    end else if (((icmp_ln123_reg_4312_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_01001))) begin
        gmem_WDATA = dwbuf_V_load_reg_4321;
    end else begin
        gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln123_reg_4312_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((icmp_ln131_reg_4341_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state21) | ((fwprop_read_reg_3284 == 1'd0) & (icmp_ln45_reg_3412 == 1'd1) & (1'b1 == ap_CS_fsm_state41)) | ((icmp_ln45_1_reg_3482 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state109) | ((icmp_ln120_reg_4218 == 1'd1) & (1'b1 == ap_CS_fsm_state103)))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((cmp155417_reg_3726 == 1'd1) & (1'b1 == ap_CS_fsm_state117)) | ((fwprop_read_reg_3284 == 1'd0) & (icmp_ln45_reg_3412 == 1'd1) & (1'b1 == ap_CS_fsm_state125)))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln96_reg_3865 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln88_reg_3658 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln58_reg_3624 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln48_reg_3595 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln123_reg_4312_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((icmp_ln131_reg_4341_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0)))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state126) | ((1'b0 == ap_block_state41_io) & (1'b1 == ap_CS_fsm_state41)))) begin
        grp_fu_1558_ce = 1'b1;
    end else begin
        grp_fu_1558_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state102) | ((1'b0 == ap_block_state103_io) & (1'b1 == ap_CS_fsm_state103)))) begin
        grp_fu_2466_ce = 1'b1;
    end else begin
        grp_fu_2466_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        wbuf_V_address0 = zext_ln1118_5_fu_2363_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        wbuf_V_address0 = zext_ln49_4_fu_1497_p1;
    end else begin
        wbuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1)))) begin
        wbuf_V_ce0 = 1'b1;
    end else begin
        wbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln48_reg_3595_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        wbuf_V_we0 = 1'b1;
    end else begin
        wbuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_Addr_A_orig = zext_ln1116_fu_3219_p1;
    end else if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        x_Addr_A_orig = zext_ln1118_fu_2372_p1;
    end else begin
        x_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter2 == 1'b1)) | ((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter1 == 1'b1)) | ((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1)))) begin
        x_EN_A = 1'b1;
    end else begin
        x_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        y_Addr_A_orig = y_addr_reg_4574;
    end else if ((1'b1 == ap_CS_fsm_state149)) begin
        y_Addr_A_orig = zext_ln74_fu_3126_p1;
    end else begin
        y_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        y_Din_A = empty_59_reg_1045;
    end else if ((1'b1 == ap_CS_fsm_state149)) begin
        y_Din_A = bbuf_V_q0;
    end else begin
        y_Din_A = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state149))) begin
        y_EN_A = 1'b1;
    end else begin
        y_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state149))) begin
        y_WEN_A = 2'd3;
    end else begin
        y_WEN_A = 2'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln45_fu_1141_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln45_1_reg_3482 == 1'd1) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else if (((icmp_ln45_1_reg_3482 == 1'd0) & (1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((cmp57447_reg_3447 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln48_fu_1483_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln48_fu_1483_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln58_fu_1525_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((icmp_ln58_fu_1525_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((fwprop_read_reg_3284 == 1'd0) & (icmp_ln45_reg_3412 == 1'd0) & (1'b0 == ap_block_state41_io) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state125;
            end else if (((fwprop_read_reg_3284 == 1'd0) & (icmp_ln45_reg_3412 == 1'd1) & (1'b0 == ap_block_state41_io) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else if (((fwprop_read_reg_3284 == 1'd1) & (1'b0 == ap_block_state41_io) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((icmp_ln88_fu_1571_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((icmp_ln88_fu_1571_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            if (((icmp_ln93_fu_1647_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            if (((cmp155417_reg_3726 == 1'd0) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state65 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state65))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln96_fu_1911_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln96_fu_1911_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln103_fu_1996_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            if (((cmp184402_reg_3782 == 1'd0) & (1'b1 == ap_CS_fsm_state85))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            if (((1'b1 == ap_CS_fsm_state87) & ((cmp184402_reg_3782 == 1'd0) | (icmp_ln105_fu_2066_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1) & (ap_enable_reg_pp4_iter4 == 1'b0)) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1) & (ap_enable_reg_pp4_iter4 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((~((1'b0 == ap_block_pp4_stage1_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln106_fu_2137_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)) & (1'b0 == ap_block_pp4_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((1'b0 == ap_block_pp4_stage1_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln106_fu_2137_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            if (((icmp_ln120_reg_4218 == 1'd1) & (1'b0 == ap_block_state103_io) & (1'b1 == ap_CS_fsm_state103))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((icmp_ln120_reg_4218 == 1'd0) & (1'b0 == ap_block_state103_io) & (1'b1 == ap_CS_fsm_state103))) begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            if (((cmp155417_reg_3726 == 1'd0) & (1'b1 == ap_CS_fsm_state108))) begin
                ap_NS_fsm = ap_ST_fsm_state117;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end
        end
        ap_ST_fsm_state109 : begin
            if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state109))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln123_fu_2726_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)) & ~((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0)) | ((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln123_fu_2726_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            if ((~((gmem_BVALID == 1'b0) & (cmp155417_reg_3726 == 1'd1)) & (1'b1 == ap_CS_fsm_state117))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state117;
            end
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln131_fu_2769_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1)) & ~((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln131_fu_2769_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            if ((~((gmem_BVALID == 1'b0) & (ap_predicate_op796_writeresp_state125 == 1'b1)) & (1'b1 == ap_CS_fsm_state125))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state125;
            end
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (icmp_ln66_fu_2793_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter2 == 1'b1) & (ap_enable_reg_pp7_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter2 == 1'b1) & (ap_enable_reg_pp7_iter1 == 1'b0)) | ((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (icmp_ln66_fu_2793_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state132;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state132 : begin
            if (((icmp_ln45_reg_3412 == 1'd1) & (1'b1 == ap_CS_fsm_state132))) begin
                ap_NS_fsm = ap_ST_fsm_state133;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state125;
            end
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            if (((1'b1 == ap_CS_fsm_state145) & (icmp_ln70_fu_2905_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state125;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state146;
            end
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            if (((1'b1 == ap_CS_fsm_state150) & (icmp_ln75_fu_3136_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state145;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state151;
            end
        end
        ap_ST_fsm_state151 : begin
            if (((1'b1 == ap_CS_fsm_state151) & (cmp106330_reg_4429 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state156;
            end
        end
        ap_ST_fsm_pp8_stage0 : begin
            if (~((1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter1 == 1'b0) & (ap_enable_reg_pp8_iter2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else if (((1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter1 == 1'b0) & (ap_enable_reg_pp8_iter2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state155;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln103_2_fu_2001_p2 = (f_1_reg_739 + 31'd1);

assign add_ln103_4_fu_1990_p2 = (indvar_flatten179_reg_728 + 63'd1);

assign add_ln103_fu_1975_p2 = ($signed(W_read_reg_3323) + $signed(32'd1));

assign add_ln104_fu_2095_p2 = (select_ln103_reg_3969 + 32'd1);

assign add_ln105_fu_2060_p2 = (w_1_reg_762 + 32'd1);

assign add_ln106_1_fu_2113_p2 = (ap_phi_mux_indvar_flatten166_phi_fu_800_p4 + 96'd1);

assign add_ln106_fu_2142_p2 = (c_1_reg_784 + 32'd1);

assign add_ln107_2_fu_2224_p2 = (ap_phi_mux_indvar_flatten137_phi_fu_811_p4 + 64'd1);

assign add_ln107_fu_2202_p2 = (select_ln106_fu_2153_p3 + 32'd1);

assign add_ln108_fu_2334_p2 = (select_ln107_fu_2279_p3 + 32'd1);

assign add_ln1116_fu_3214_p2 = (add_ln77_reg_4607 + trunc_ln77_fu_3210_p1);

assign add_ln1118_1_fu_2238_p2 = (zext_ln104_reg_3982 + zext_ln1118_1_fu_2235_p1);

assign add_ln1118_2_fu_2300_p2 = (sub_ln1118_fu_2259_p2 + zext_ln1118_4_fu_2297_p1);

assign add_ln1118_3_fu_2358_p2 = (sub_ln1118_1_fu_2353_p2 + trunc_ln109_reg_4127);

assign add_ln1118_fu_2368_p2 = ($signed(grp_fu_3238_p3) + $signed(trunc_ln1115_reg_4132_pp4_iter2_reg));

assign add_ln120_1_fu_2456_p2 = (indvar_flatten213_reg_841 + 95'd1);

assign add_ln120_fu_2515_p2 = (i_5_reg_864 + 31'd1);

assign add_ln121_1_fu_2750_p2 = (indvar_flatten190_reg_876 + 64'd1);

assign add_ln121_fu_2557_p2 = (select_ln120_fu_2521_p3 + 32'd1);

assign add_ln122_fu_2745_p2 = (select_ln121_reg_4243 + 32'd1);

assign add_ln123_fu_2716_p2 = (l_2_reg_899 + 31'd1);

assign add_ln124_1_fu_2688_p2 = (sub_ln124_fu_2643_p2 + zext_ln124_3_fu_2684_p1);

assign add_ln124_2_fu_2735_p2 = (sub_ln124_1_reg_4302 + trunc_ln124_6_fu_2731_p1);

assign add_ln124_fu_2582_p2 = (zext_ln121_fu_2547_p1 + zext_ln124_fu_2578_p1);

assign add_ln131_fu_2763_p2 = (i_6_reg_910 + 31'd1);

assign add_ln45_1_fu_1183_p2 = (indvar_flatten21_reg_566 + 95'd1);

assign add_ln45_fu_1212_p2 = ($signed(i_reg_577) + $signed(31'd1));

assign add_ln46_1_fu_1506_p2 = (indvar_flatten_reg_589 + 64'd1);

assign add_ln46_fu_1303_p2 = (select_ln45_fu_1247_p3 + 32'd1);

assign add_ln47_fu_1501_p2 = (select_ln46_reg_3563 + 32'd1);

assign add_ln48_fu_1473_p2 = (l_reg_625 + 31'd1);

assign add_ln49_1_fu_1445_p2 = (sub_ln49_fu_1400_p2 + zext_ln49_3_fu_1441_p1);

assign add_ln49_2_fu_1492_p2 = (sub_ln49_1_reg_3585 + trunc_ln49_6_fu_1488_p1);

assign add_ln49_fu_1343_p2 = (zext_ln46_fu_1277_p1 + zext_ln49_fu_1339_p1);

assign add_ln58_fu_1519_p2 = (i_1_reg_636 + 31'd1);

assign add_ln66_fu_2787_p2 = (i_2_reg_921 + 32'd1);

assign add_ln703_1_fu_3224_p2 = (x_Dout_A + empty_59_reg_1045);

assign add_ln703_fu_2451_p2 = ($signed(r_V_reg_4020) + $signed(empty_73_reg_773));

assign add_ln70_2_fu_2910_p2 = (f_reg_943 + 31'd1);

assign add_ln70_4_fu_2871_p2 = (indvar_flatten90_reg_932 + 127'd1);

assign add_ln70_fu_2807_p2 = ($signed(W_read_reg_3323) + $signed(32'd1));

assign add_ln71_1_fu_3173_p2 = (indvar_flatten56_reg_954 + 96'd1);

assign add_ln71_fu_2986_p2 = (select_ln70_fu_2921_p3 + 32'd1);

assign add_ln72_1_fu_3160_p2 = (indvar_flatten35_reg_977 + 64'd1);

assign add_ln72_fu_3064_p2 = (select_ln71_fu_3033_p3 + 32'd1);

assign add_ln73_fu_3155_p2 = (select_ln72_reg_4558 + 32'd1);

assign add_ln75_fu_3130_p2 = (fh_reg_1023 + 32'd1);

assign add_ln76_fu_3195_p2 = (fw_reg_1034 + 31'd1);

assign add_ln77_fu_3190_p2 = (empty_58_fu_3186_p2 + trunc_ln73_reg_4563);

assign add_ln88_fu_1565_p2 = (i_3_reg_647 + 31'd1);

assign add_ln93_1_fu_1641_p2 = (indvar_flatten124_reg_670 + 95'd1);

assign add_ln93_fu_1670_p2 = (i_4_reg_681 + 31'd1);

assign add_ln94_1_fu_1934_p2 = (indvar_flatten101_reg_693 + 64'd1);

assign add_ln94_fu_1723_p2 = (select_ln93_fu_1676_p3 + 32'd1);

assign add_ln95_fu_1929_p2 = (select_ln94_reg_3802 + 32'd1);

assign add_ln96_fu_1901_p2 = (l_1_reg_717 + 31'd1);

assign add_ln97_1_fu_1873_p2 = (sub_ln97_fu_1828_p2 + zext_ln97_3_fu_1869_p1);

assign add_ln97_2_fu_1920_p2 = (sub_ln97_1_reg_3855 + trunc_ln97_6_fu_1916_p1);

assign add_ln97_fu_1762_p2 = (zext_ln94_fu_1702_p1 + zext_ln97_fu_1758_p1);

assign addr_cmp_fu_2385_p2 = ((reuse_addr_reg_fu_244 == zext_ln1118_fu_2372_p1) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd98];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_pp8_stage0 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state148 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln48_reg_3595 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln48_reg_3595 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln58_reg_3624 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln58_reg_3624 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln88_reg_3658 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln88_reg_3658 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln96_reg_3865 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln96_reg_3865 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_block_state112_io));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_block_state112_io));
end

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b1 == ap_block_state120_io));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b1 == ap_block_state120_io));
end

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state103_io = ((gmem_AWREADY == 1'b0) & (icmp_ln120_reg_4218 == 1'd1));
end

assign ap_block_state110_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state112_io = ((gmem_WREADY == 1'b0) & (icmp_ln123_reg_4312_pp5_iter1_reg == 1'd0));
end

assign ap_block_state112_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state117 = ((gmem_BVALID == 1'b0) & (cmp155417_reg_3726 == 1'd1));
end

assign ap_block_state118_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((gmem_ARREADY == 1'b0) & (icmp_ln45_1_reg_3482 == 1'd1));
end

always @ (*) begin
    ap_block_state120_io = ((gmem_WREADY == 1'b0) & (icmp_ln131_reg_4341_pp6_iter1_reg == 1'd0));
end

assign ap_block_state120_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state125 = ((gmem_BVALID == 1'b0) & (ap_predicate_op796_writeresp_state125 == 1'b1));
end

assign ap_block_state129_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state130_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state152_pp8_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state153_pp8_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state154_pp8_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp0_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln48_reg_3595 == 1'd0));
end

assign ap_block_state30_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state39_pp1_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln58_reg_3624 == 1'd0));
end

assign ap_block_state40_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state41_io = ((gmem_ARREADY == 1'b0) & (ap_predicate_op368_readreq_state41 == 1'b1));
end

assign ap_block_state48_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state49_pp2_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln88_reg_3658 == 1'd0));
end

assign ap_block_state50_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state73_pp3_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln96_reg_3865 == 1'd0));
end

assign ap_block_state74_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp4_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp4_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp4_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp4_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp4_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp8 = (ap_idle_pp8 ^ 1'b1);

always @ (*) begin
    ap_predicate_op368_readreq_state41 = ((fwprop_read_reg_3284 == 1'd0) & (icmp_ln45_reg_3412 == 1'd1));
end

always @ (*) begin
    ap_predicate_op796_writeresp_state125 = ((fwprop_read_reg_3284 == 1'd0) & (icmp_ln45_reg_3412 == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cast94_fu_1587_p1 = FH_read_reg_3309;

assign cmp184402_fu_1657_p2 = (($signed(outW_reg_3407) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign dx_Addr_A = dx_Addr_A_orig << 32'd1;

assign dx_Clk_A = ap_clk;

assign dx_Rst_A = ap_rst_n_inv;

assign dy_Addr_A = p_cast29_fu_2080_p1 << 32'd1;

assign dy_Clk_A = ap_clk;

assign dy_Din_A = 16'd0;

assign dy_Rst_A = ap_rst_n_inv;

assign dy_WEN_A = 2'd0;

assign empty_43_fu_1113_p0 = H;

assign empty_43_fu_1113_p1 = empty_43_fu_1113_p0[8:0];

assign empty_44_fu_1158_p1 = F_read_reg_3350[30:0];

assign empty_45_fu_1180_p1 = FW_read_reg_3288[30:0];

assign empty_50_fu_1413_p2 = (tmp_4_fu_1406_p3 + wt_read_reg_3376);

assign empty_53_fu_2881_p0 = f_reg_943[8:0];

assign empty_54_fu_2890_p0 = c_reg_966[8:0];

assign empty_55_fu_2899_p2 = (trunc_ln72_fu_2895_p1 + empty_53_fu_2881_p2);

assign empty_57_fu_3150_p2 = (tmp2_fu_3145_p2 + select_ln72_1_reg_4538);

assign empty_71_fu_1808_p2 = (tmp3_fu_1804_p2 + select_ln94_1_fu_1798_p3);

assign empty_72_fu_1841_p2 = (tmp_9_fu_1834_p3 + dwt_read_reg_3370);

assign empty_74_fu_2075_p2 = (trunc_ln105_fu_2071_p1 + empty_78_reg_3987);

assign empty_75_fu_2108_p0 = ap_phi_mux_c_1_phi_fu_788_p4[8:0];

assign empty_76_fu_2128_p2 = (tmp4_fu_2123_p2 + empty_75_reg_4031);

assign empty_84_fu_2623_p2 = (tmp5_fu_2619_p2 + select_ln121_1_fu_2613_p3);

assign empty_85_fu_2656_p2 = (tmp_8_fu_2649_p3 + dwt_read_reg_3370);

assign empty_fu_1109_p1 = FH[8:0];

assign fw_cast_fu_3201_p1 = fw_reg_1034;

assign grp_fu_1070_p2 = (($signed(FW_read_reg_3288) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign grp_fu_1075_p2 = ((FH_read_reg_3309 == 32'd0) ? 1'b1 : 1'b0);

assign grp_fu_1080_p2 = ($signed(H_read_reg_3333) + $signed(32'd1));

assign grp_fu_1085_p2 = (grp_fu_1080_p2 - FH_read_reg_3309);

assign grp_fu_1090_p2 = (trunc_ln40_reg_3402 + 9'd1);

assign grp_fu_1152_p0 = grp_fu_1152_p00;

assign grp_fu_1152_p00 = $unsigned(C_read_reg_3339);

assign grp_fu_1152_p1 = grp_fu_1152_p10;

assign grp_fu_1152_p10 = FH_read_reg_3309;

assign grp_fu_1168_p0 = grp_fu_1168_p00;

assign grp_fu_1168_p00 = empty_44_fu_1158_p1;

assign grp_fu_1168_p1 = grp_fu_1168_p10;

assign grp_fu_1168_p10 = bound_reg_3426;

assign grp_fu_1590_p0 = grp_fu_1590_p00;

assign grp_fu_1590_p00 = $unsigned(C_read_reg_3339);

assign grp_fu_1590_p1 = grp_fu_1590_p10;

assign grp_fu_1590_p10 = FH_read_reg_3309;

assign grp_fu_1602_p0 = grp_fu_1602_p00;

assign grp_fu_1602_p00 = trunc_ln88_reg_3645;

assign grp_fu_1602_p1 = grp_fu_1602_p10;

assign grp_fu_1602_p10 = bound95_reg_3683;

assign grp_fu_1614_p0 = FW_read_reg_3288[30:0];

assign grp_fu_1614_p1 = FH_read_reg_3309[30:0];

assign grp_fu_1623_p1 = C_read_reg_3339[30:0];

assign grp_fu_1632_p0 = j_1_reg_658[30:0];

assign grp_fu_1665_p0 = cast94_reg_3677;

assign grp_fu_1665_p1 = grp_fu_1665_p10;

assign grp_fu_1665_p10 = FW_read_reg_3288;

assign grp_fu_1953_p0 = grp_fu_1953_p00;

assign grp_fu_1953_p00 = $unsigned(C_read_reg_3339);

assign grp_fu_1953_p1 = grp_fu_1953_p10;

assign grp_fu_1953_p10 = bound129_reg_3889;

assign grp_fu_1966_p0 = grp_fu_1966_p00;

assign grp_fu_1966_p00 = trunc_ln88_reg_3645;

assign grp_fu_1966_p1 = grp_fu_1966_p10;

assign grp_fu_1966_p10 = reg_1095;

assign grp_fu_2466_p0 = j_2_reg_852[30:0];

assign grp_fu_2829_p0 = grp_fu_2829_p00;

assign grp_fu_2829_p00 = reg_1095;

assign grp_fu_2829_p1 = grp_fu_2829_p10;

assign grp_fu_2829_p10 = sub_ln70_reg_4374;

assign grp_fu_2841_p0 = grp_fu_2841_p00;

assign grp_fu_2841_p00 = $unsigned(C_read_reg_3339);

assign grp_fu_2841_p1 = grp_fu_2841_p10;

assign grp_fu_2841_p10 = bound26_reg_4396;

assign grp_fu_2857_p0 = grp_fu_2857_p00;

assign grp_fu_2857_p00 = trunc_ln70_1_fu_2847_p1;

assign grp_fu_2857_p1 = grp_fu_2857_p10;

assign grp_fu_2857_p10 = bound40_reg_4413;

assign grp_fu_3230_p0 = select_ln103_1_fu_2013_p3[8:0];

assign grp_fu_3230_p2 = select_ln103_fu_2029_p3[8:0];

assign grp_fu_3238_p0 = ((select_ln106_5_reg_4080[0:0] == 1'b1) ? p_mid1133_fu_2291_p2 : select_ln106_4_fu_2269_p3);

assign grp_fu_3245_p1 = sext_ln1118_1_reg_4025;

assign grp_fu_3245_p2 = {{lhs_2_fu_2403_p3}, {13'd0}};

assign grp_fu_3253_p1 = sext_ln1118_1_reg_4025;

assign grp_fu_3253_p2 = {{dwbuf_V_q1}, {13'd0}};

assign grp_fu_3261_p0 = ((select_ln71_4_reg_4520[0:0] == 1'b1) ? p_mid131_fu_3081_p2 : select_ln71_3_fu_3057_p3);

assign grp_fu_3261_p2 = select_ln72_fu_3114_p3[8:0];

assign icmp_ln103_fu_1996_p2 = ((indvar_flatten179_reg_728 == bound173_reg_3930) ? 1'b1 : 1'b0);

assign icmp_ln104_fu_2007_p2 = ((h_1_reg_750 == reg_1095) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_2066_p2 = ((w_1_reg_762 == sub_ln103_reg_3920) ? 1'b1 : 1'b0);

assign icmp_ln106_fu_2137_p2 = ((ap_phi_mux_indvar_flatten166_phi_fu_800_p4 == bound142_reg_3925) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_2148_p2 = ((ap_phi_mux_indvar_flatten137_phi_fu_811_p4 == bound129_reg_3889) ? 1'b1 : 1'b0);

assign icmp_ln108_1_fu_2190_p2 = ((ap_phi_mux_fw_1_phi_fu_833_p4 == FW_read_reg_3288) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_1985_p2 = ((FW_read_reg_3288 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln120_fu_2475_p2 = ((indvar_flatten213_reg_841 == bound106_reg_3736) ? 1'b1 : 1'b0);

assign icmp_ln121_fu_2480_p2 = ((indvar_flatten190_reg_876 == bound95_reg_3683) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_2485_p2 = ((k_2_reg_888 == FH_read_reg_3309) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_2726_p2 = ((l_2_cast_fu_2722_p1 == FW_read_reg_3288) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_2769_p2 = ((i_6_reg_910 == trunc_ln88_reg_3645) ? 1'b1 : 1'b0);

assign icmp_ln45_1_fu_1194_p2 = ((indvar_flatten21_reg_566 == bound4_reg_3467) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_1141_p2 = (($signed(F_read_reg_3350) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_1218_p2 = ((indvar_flatten_reg_589 == bound_reg_3426) ? 1'b1 : 1'b0);

assign icmp_ln47_1_fu_1292_p2 = ((k_reg_613 == FH_read_reg_3309) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_1483_p2 = ((l_cast_fu_1479_p1 == FW_read_reg_3288) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_1525_p2 = ((i_1_reg_636 == empty_44_reg_3432) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_2793_p2 = ((i_2_reg_921 == mul_ln66_1_reg_4355) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_2905_p2 = ((indvar_flatten90_reg_932 == bound62_reg_4438) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_2916_p2 = ((indvar_flatten56_reg_954 == bound40_reg_4413) ? 1'b1 : 1'b0);

assign icmp_ln72_1_fu_2966_p2 = ((indvar_flatten35_reg_977 == bound26_reg_4396) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_2866_p2 = ((bound26_reg_4396 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln73_1_fu_2954_p2 = ((w_reg_1001 == sub_ln70_reg_4374) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_2817_p2 = ((add_ln70_fu_2807_p2 == FW_read_reg_3288) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_3136_p2 = ((fh_reg_1023 == FH_read_reg_3309) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_3205_p2 = ((fw_cast_fu_3201_p1 == FW_read_reg_3288) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_1571_p2 = ((i_3_reg_647 == trunc_ln88_reg_3645) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_1647_p2 = ((indvar_flatten124_reg_670 == bound106_reg_3736) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_1652_p2 = ((indvar_flatten101_reg_693 == bound95_reg_3683) ? 1'b1 : 1'b0);

assign icmp_ln95_1_fu_1712_p2 = ((k_1_reg_705 == FH_read_reg_3309) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_1911_p2 = ((l_1_cast_fu_1907_p1 == FW_read_reg_3288) ? 1'b1 : 1'b0);

assign l_1_cast_fu_1907_p1 = l_1_reg_717;

assign l_2_cast_fu_2722_p1 = l_2_reg_899;

assign l_cast_fu_1479_p1 = l_reg_625;

assign lhs_2_fu_2403_p3 = ((addr_cmp_reg_4178[0:0] == 1'b1) ? reuse_reg_fu_248 : dx_Dout_A);

assign or_ln107_fu_2275_p2 = (select_ln106_5_reg_4080 | icmp_ln107_reg_4051);

assign or_ln121_fu_2497_p2 = (select_ln120_4_fu_2490_p3 | icmp_ln121_fu_2480_p2);

assign or_ln46_fu_1361_p2 = (select_ln45_5_reg_3537 | icmp_ln46_reg_3508);

assign or_ln71_fu_2992_p2 = (select_ln70_6_fu_2971_p3 | icmp_ln71_fu_2916_p2);

assign or_ln72_1_fu_3109_p2 = (or_ln72_fu_3105_p2 | icmp_ln71_reg_4476);

assign or_ln72_fu_3105_p2 = (select_ln71_4_reg_4520 | select_ln70_6_reg_4496);

assign or_ln94_fu_1729_p2 = (select_ln93_4_fu_1717_p3 | icmp_ln94_reg_3771);

assign outH_fu_1121_p2 = (sub_ln39_fu_1117_p2 + 9'd1);

assign outW_fu_1135_p2 = (sub_ln40_fu_1127_p2 + 32'd1);

assign p_cast29_fu_2080_p1 = empty_74_fu_2075_p2;

assign p_mid1133_fu_2291_p2 = (tmp4_mid1_fu_2287_p2 + select_ln106_1_fu_2230_p3);

assign p_mid1148_fu_2165_p0 = add_ln106_fu_2142_p2[8:0];

assign p_mid1154_fu_2265_p2 = (trunc_ln104_reg_3974 + p_mid1148_reg_4064);

assign p_mid131_fu_3081_p2 = (trunc_ln72_1_fu_3070_p1 + select_ln70_1_fu_3017_p3);

assign p_mid170_fu_2933_p0 = add_ln70_2_fu_2910_p2[8:0];

assign p_shl1_cast_fu_1459_p3 = {{trunc_ln49_5_fu_1455_p1}, {2'd0}};

assign p_shl3_cast_fu_1887_p3 = {{trunc_ln97_5_fu_1883_p1}, {2'd0}};

assign p_shl5_cast_fu_2702_p3 = {{trunc_ln124_5_fu_2698_p1}, {2'd0}};

assign p_shl7_cast_fu_2346_p3 = {{trunc_ln1118_1_reg_4112}, {2'd0}};

assign select_ln103_1_fu_2013_p3 = ((icmp_ln104_fu_2007_p2[0:0] == 1'b1) ? add_ln103_2_fu_2001_p2 : f_1_reg_739);

assign select_ln103_fu_2029_p3 = ((icmp_ln104_reg_3948[0:0] == 1'b1) ? 32'd0 : h_1_reg_750);

assign select_ln106_1_fu_2230_p3 = ((icmp_ln107_reg_4051[0:0] == 1'b1) ? p_mid1148_reg_4064 : empty_75_reg_4031);

assign select_ln106_2_fu_2170_p3 = ((icmp_ln107_fu_2148_p2[0:0] == 1'b1) ? add_ln106_fu_2142_p2 : c_1_reg_784);

assign select_ln106_3_fu_2182_p3 = ((icmp_ln107_fu_2148_p2[0:0] == 1'b1) ? 12'd0 : trunc_ln727_fu_2133_p1);

assign select_ln106_4_fu_2269_p3 = ((icmp_ln107_reg_4051[0:0] == 1'b1) ? p_mid1154_fu_2265_p2 : empty_76_reg_4042);

assign select_ln106_5_fu_2195_p3 = ((icmp_ln107_fu_2148_p2[0:0] == 1'b1) ? icmp_ln108_reg_3935 : icmp_ln108_1_fu_2190_p2);

assign select_ln106_fu_2153_p3 = ((icmp_ln107_fu_2148_p2[0:0] == 1'b1) ? 32'd0 : ap_phi_mux_fh_1_phi_fu_822_p4);

assign select_ln107_1_fu_2216_p3 = ((select_ln106_5_fu_2195_p3[0:0] == 1'b1) ? trunc_ln727_1_fu_2212_p1 : select_ln106_3_fu_2182_p3);

assign select_ln107_3_fu_2321_p3 = ((select_ln106_5_reg_4080[0:0] == 1'b1) ? add_ln107_reg_4087 : select_ln106_reg_4059);

assign select_ln107_4_fu_2340_p3 = ((icmp_ln107_reg_4051[0:0] == 1'b1) ? 64'd1 : add_ln107_2_reg_4102);

assign select_ln107_fu_2279_p3 = ((or_ln107_fu_2275_p2[0:0] == 1'b1) ? 32'd0 : fw_1_reg_829);

assign select_ln120_1_fu_2528_p3 = ((icmp_ln121_reg_4227[0:0] == 1'b1) ? add_ln120_fu_2515_p2 : i_5_reg_864);

assign select_ln120_2_fu_2607_p3 = ((icmp_ln121_reg_4227[0:0] == 1'b1) ? 31'd0 : empty_79_reg_4222);

assign select_ln120_3_fu_2551_p3 = ((icmp_ln121_reg_4227[0:0] == 1'b1) ? 10'd0 : trunc_ln124_reg_4213);

assign select_ln120_4_fu_2490_p3 = ((icmp_ln121_fu_2480_p2[0:0] == 1'b1) ? icmp_ln95_reg_3742 : icmp_ln122_fu_2485_p2);

assign select_ln120_fu_2521_p3 = ((icmp_ln121_reg_4227[0:0] == 1'b1) ? 32'd0 : j_2_reg_852);

assign select_ln121_1_fu_2613_p3 = ((select_ln120_4_reg_4236[0:0] == 1'b1) ? p_mid1188_reg_4286 : select_ln120_2_fu_2607_p3);

assign select_ln121_2_fu_2571_p3 = ((select_ln120_4_reg_4236[0:0] == 1'b1) ? trunc_ln124_2_fu_2567_p1 : select_ln120_3_fu_2551_p3);

assign select_ln121_3_fu_2588_p3 = ((select_ln120_4_reg_4236[0:0] == 1'b1) ? add_ln121_fu_2557_p2 : select_ln120_fu_2521_p3);

assign select_ln121_4_fu_2756_p3 = ((icmp_ln121_reg_4227[0:0] == 1'b1) ? 64'd1 : add_ln121_1_fu_2750_p2);

assign select_ln121_fu_2503_p3 = ((or_ln121_fu_2497_p2[0:0] == 1'b1) ? 32'd0 : k_2_reg_888);

assign select_ln45_1_fu_1254_p3 = ((icmp_ln46_reg_3508[0:0] == 1'b1) ? p_mid1_reg_3526 : empty_46_reg_3486);

assign select_ln45_2_fu_1259_p3 = ((icmp_ln46_reg_3508[0:0] == 1'b1) ? add_ln45_reg_3502 : i_reg_577);

assign select_ln45_3_fu_1281_p3 = ((icmp_ln46_reg_3508[0:0] == 1'b1) ? p_mid1_reg_3526 : tmp_reg_3492);

assign select_ln45_4_fu_1286_p3 = ((icmp_ln46_reg_3508[0:0] == 1'b1) ? 10'd0 : trunc_ln49_reg_3497);

assign select_ln45_5_fu_1297_p3 = ((icmp_ln46_reg_3508[0:0] == 1'b1) ? icmp_ln47_reg_3472 : icmp_ln47_1_fu_1292_p2);

assign select_ln45_fu_1247_p3 = ((icmp_ln46_reg_3508[0:0] == 1'b1) ? 32'd0 : j_reg_601);

assign select_ln46_1_fu_1319_p3 = ((select_ln45_5_fu_1297_p3[0:0] == 1'b1) ? tmp_mid1_fu_1313_p2 : select_ln45_3_fu_1281_p3);

assign select_ln46_2_fu_1331_p3 = ((select_ln45_5_fu_1297_p3[0:0] == 1'b1) ? trunc_ln49_2_fu_1327_p1 : select_ln45_4_fu_1286_p3);

assign select_ln46_3_fu_1349_p3 = ((select_ln45_5_fu_1297_p3[0:0] == 1'b1) ? add_ln46_fu_1303_p2 : select_ln45_fu_1247_p3);

assign select_ln46_4_fu_1512_p3 = ((icmp_ln46_reg_3508[0:0] == 1'b1) ? 64'd1 : add_ln46_1_fu_1506_p2);

assign select_ln46_fu_1365_p3 = ((or_ln46_fu_1361_p2[0:0] == 1'b1) ? 32'd0 : k_reg_613);

assign select_ln70_1_fu_3017_p3 = ((icmp_ln71_reg_4476[0:0] == 1'b1) ? p_mid170_reg_4485 : empty_53_reg_4453);

assign select_ln70_2_fu_2946_p3 = ((icmp_ln71_fu_2916_p2[0:0] == 1'b1) ? trunc_ln70_4_fu_2938_p1 : trunc_ln70_5_fu_2942_p1);

assign select_ln70_3_fu_3022_p3 = ((icmp_ln71_reg_4476[0:0] == 1'b1) ? 9'd0 : empty_54_reg_4458);

assign select_ln70_4_fu_3028_p3 = ((icmp_ln71_reg_4476[0:0] == 1'b1) ? p_mid170_reg_4485 : empty_55_reg_4468);

assign select_ln70_5_fu_2959_p3 = ((icmp_ln71_fu_2916_p2[0:0] == 1'b1) ? icmp_ln73_reg_4380 : icmp_ln73_1_fu_2954_p2);

assign select_ln70_6_fu_2971_p3 = ((icmp_ln71_fu_2916_p2[0:0] == 1'b1) ? icmp_ln72_reg_4443 : icmp_ln72_1_fu_2966_p2);

assign select_ln70_7_fu_2978_p3 = ((icmp_ln71_fu_2916_p2[0:0] == 1'b1) ? add_ln70_2_fu_2910_p2 : f_reg_943);

assign select_ln70_fu_2921_p3 = ((icmp_ln71_fu_2916_p2[0:0] == 1'b1) ? 32'd0 : c_reg_966);

assign select_ln71_1_fu_3044_p3 = ((select_ln70_6_reg_4496[0:0] == 1'b1) ? p_mid146_fu_3040_p2 : select_ln70_3_fu_3022_p3);

assign select_ln71_2_fu_3051_p3 = ((or_ln71_reg_4508[0:0] == 1'b1) ? 9'd0 : trunc_ln72_reg_4463);

assign select_ln71_3_fu_3057_p3 = ((select_ln70_6_reg_4496[0:0] == 1'b1) ? select_ln70_1_fu_3017_p3 : select_ln70_4_fu_3028_p3);

assign select_ln71_4_fu_3002_p3 = ((select_ln70_6_fu_2971_p3[0:0] == 1'b1) ? icmp_ln73_reg_4380 : select_ln70_5_fu_2959_p3);

assign select_ln71_5_fu_3009_p3 = ((select_ln70_6_fu_2971_p3[0:0] == 1'b1) ? add_ln71_fu_2986_p2 : select_ln70_fu_2921_p3);

assign select_ln71_6_fu_3179_p3 = ((icmp_ln71_reg_4476[0:0] == 1'b1) ? 96'd1 : add_ln71_1_fu_3173_p2);

assign select_ln71_fu_3033_p3 = ((or_ln71_reg_4508[0:0] == 1'b1) ? 32'd0 : h_reg_989);

assign select_ln72_1_fu_3074_p3 = ((select_ln71_4_reg_4520[0:0] == 1'b1) ? trunc_ln72_1_fu_3070_p1 : select_ln71_2_fu_3051_p3);

assign select_ln72_3_fu_3094_p3 = ((select_ln71_4_reg_4520[0:0] == 1'b1) ? add_ln72_fu_3064_p2 : select_ln71_fu_3033_p3);

assign select_ln72_4_fu_3166_p3 = ((or_ln71_reg_4508[0:0] == 1'b1) ? 64'd1 : add_ln72_1_fu_3160_p2);

assign select_ln72_fu_3114_p3 = ((or_ln72_1_fu_3109_p2[0:0] == 1'b1) ? 32'd0 : w_reg_1001);

assign select_ln93_1_fu_1683_p3 = ((icmp_ln94_reg_3771[0:0] == 1'b1) ? add_ln93_fu_1670_p2 : i_4_reg_681);

assign select_ln93_2_fu_1792_p3 = ((icmp_ln94_reg_3771[0:0] == 1'b1) ? 31'd0 : empty_67_reg_3763);

assign select_ln93_3_fu_1706_p3 = ((icmp_ln94_reg_3771[0:0] == 1'b1) ? 10'd0 : trunc_ln97_reg_3753);

assign select_ln93_4_fu_1717_p3 = ((icmp_ln94_reg_3771[0:0] == 1'b1) ? icmp_ln95_reg_3742 : icmp_ln95_1_fu_1712_p2);

assign select_ln93_fu_1676_p3 = ((icmp_ln94_reg_3771[0:0] == 1'b1) ? 32'd0 : j_1_reg_658);

assign select_ln94_1_fu_1798_p3 = ((select_ln93_4_reg_3797[0:0] == 1'b1) ? p_mid199_reg_3834 : select_ln93_2_fu_1792_p3);

assign select_ln94_2_fu_1750_p3 = ((select_ln93_4_fu_1717_p3[0:0] == 1'b1) ? trunc_ln97_2_fu_1746_p1 : select_ln93_3_fu_1706_p3);

assign select_ln94_3_fu_1768_p3 = ((select_ln93_4_fu_1717_p3[0:0] == 1'b1) ? add_ln94_fu_1723_p2 : select_ln93_fu_1676_p3);

assign select_ln94_4_fu_1940_p3 = ((icmp_ln94_reg_3771[0:0] == 1'b1) ? 64'd1 : add_ln94_1_fu_1934_p2);

assign select_ln94_fu_1734_p3 = ((or_ln94_fu_1729_p2[0:0] == 1'b1) ? 32'd0 : k_1_reg_705);

assign sext_ln1118_1_fu_2100_p0 = dy_Dout_A;

assign sext_ln1118_1_fu_2100_p1 = sext_ln1118_1_fu_2100_p0;

assign sext_ln123_fu_2671_p1 = $signed(trunc_ln1_fu_2661_p4);

assign sext_ln48_fu_1428_p1 = $signed(trunc_ln5_fu_1418_p4);

assign sext_ln58_fu_1232_p1 = $signed(trunc_ln3_fu_1223_p4);

assign sext_ln88_fu_1547_p1 = $signed(trunc_ln7_fu_1538_p4);

assign sext_ln96_fu_1856_p1 = $signed(trunc_ln_fu_1846_p4);

assign sub_ln103_fu_1980_p2 = (add_ln103_fu_1975_p2 - FW_read_reg_3288);

assign sub_ln1118_1_fu_2353_p2 = (p_shl7_cast_fu_2346_p3 - trunc_ln1118_reg_4107);

assign sub_ln1118_fu_2259_p2 = (zext_ln1118_3_fu_2255_p1 - zext_ln1118_2_fu_2243_p1);

assign sub_ln124_1_fu_2710_p2 = (p_shl5_cast_fu_2702_p3 - trunc_ln124_4_fu_2694_p1);

assign sub_ln124_fu_2643_p2 = (zext_ln124_2_fu_2639_p1 - zext_ln124_1_fu_2629_p1);

assign sub_ln39_fu_1117_p2 = ($signed(empty_43_reg_3386) - $signed(empty_reg_3381));

assign sub_ln40_fu_1127_p2 = ($signed(W_read_reg_3323) - $signed(FW_read_reg_3288));

assign sub_ln49_1_fu_1467_p2 = (p_shl1_cast_fu_1459_p3 - trunc_ln49_4_fu_1451_p1);

assign sub_ln49_fu_1400_p2 = (zext_ln49_2_fu_1396_p1 - zext_ln49_1_fu_1386_p1);

assign sub_ln70_fu_2812_p2 = (add_ln70_fu_2807_p2 - FW_read_reg_3288);

assign sub_ln97_1_fu_1895_p2 = (p_shl3_cast_fu_1887_p3 - trunc_ln97_4_fu_1879_p1);

assign sub_ln97_fu_1828_p2 = (zext_ln97_2_fu_1824_p1 - zext_ln97_1_fu_1814_p1);

assign tmp11_fu_1377_p2 = (trunc_ln47_fu_1373_p1 + mul_ln46_reg_3558);

assign tmp2_fu_3145_p2 = (select_ln71_1_reg_4533 + trunc_ln75_fu_3141_p1);

assign tmp3_fu_1804_p2 = (mul_ln93_reg_3829 + empty_70_reg_3839);

assign tmp4_fu_2123_p2 = (trunc_ln104_reg_3974 + trunc_ln107_fu_2119_p1);

assign tmp4_mid1_fu_2287_p2 = (trunc_ln104_reg_3974 + trunc_ln107_1_reg_4092);

assign tmp5_fu_2619_p2 = (mul_ln120_reg_4281 + empty_83_reg_4276);

assign tmp_10_fu_2247_p3 = {{add_ln1118_1_fu_2238_p2}, {2'd0}};

assign tmp_1_fu_1389_p3 = {{add_ln49_reg_3547}, {2'd0}};

assign tmp_2_fu_1269_p3 = {{trunc_ln49_1_fu_1265_p1}, {5'd0}};

assign tmp_3_fu_1817_p3 = {{add_ln97_reg_3813}, {2'd0}};

assign tmp_4_fu_1406_p3 = {{empty_49_reg_3574}, {1'd0}};

assign tmp_5_fu_2539_p3 = {{trunc_ln124_1_fu_2535_p1}, {5'd0}};

assign tmp_6_fu_2632_p3 = {{add_ln124_reg_4265}, {2'd0}};

assign tmp_7_fu_1694_p3 = {{trunc_ln97_1_fu_1690_p1}, {5'd0}};

assign tmp_8_fu_2649_p3 = {{empty_84_reg_4291}, {1'd0}};

assign tmp_9_fu_1834_p3 = {{empty_71_reg_3844}, {1'd0}};

assign tmp_fu_1203_p2 = (trunc_ln46_fu_1199_p1 + empty_46_reg_3486);

assign tmp_mid1_fu_1313_p2 = (trunc_ln46_1_fu_1309_p1 + select_ln45_1_fu_1254_p3);

assign tmp_s_fu_2044_p3 = {{trunc_ln103_2_reg_3963}, {5'd0}};

assign trunc_ln103_2_fu_2025_p1 = select_ln103_1_fu_2013_p3[4:0];

assign trunc_ln103_fu_1972_p1 = W_read_reg_3323[8:0];

assign trunc_ln104_fu_2036_p1 = select_ln103_fu_2029_p3[8:0];

assign trunc_ln105_fu_2071_p1 = w_1_reg_762[8:0];

assign trunc_ln106_2_fu_2178_p1 = select_ln106_2_fu_2170_p3[9:0];

assign trunc_ln107_1_fu_2208_p1 = add_ln107_fu_2202_p2[8:0];

assign trunc_ln107_fu_2119_p1 = ap_phi_mux_fh_1_phi_fu_822_p4[8:0];

assign trunc_ln109_fu_2326_p1 = select_ln107_fu_2279_p3[13:0];

assign trunc_ln1115_fu_2330_p1 = select_ln107_fu_2279_p3[8:0];

assign trunc_ln1118_1_fu_2310_p1 = add_ln1118_2_fu_2300_p2[11:0];

assign trunc_ln1118_fu_2306_p1 = add_ln1118_2_fu_2300_p2[13:0];

assign trunc_ln121_1_fu_2563_p1 = add_ln121_fu_2557_p2[30:0];

assign trunc_ln122_fu_2511_p1 = select_ln121_fu_2503_p3[30:0];

assign trunc_ln124_1_fu_2535_p1 = select_ln120_1_fu_2528_p3[4:0];

assign trunc_ln124_2_fu_2567_p1 = add_ln121_fu_2557_p2[9:0];

assign trunc_ln124_3_fu_2681_p1 = select_ln121_reg_4243[11:0];

assign trunc_ln124_4_fu_2694_p1 = add_ln124_1_fu_2688_p2[13:0];

assign trunc_ln124_5_fu_2698_p1 = add_ln124_1_fu_2688_p2[11:0];

assign trunc_ln124_6_fu_2731_p1 = l_2_reg_899[13:0];

assign trunc_ln124_fu_2471_p1 = j_2_reg_852[9:0];

assign trunc_ln132_fu_2774_p1 = i_6_reg_910[4:0];

assign trunc_ln1_fu_2661_p4 = {{empty_85_fu_2656_p2[31:1]}};

assign trunc_ln3_fu_1223_p4 = {{b_read_reg_3365[31:1]}};

assign trunc_ln40_fu_1131_p1 = sub_ln40_fu_1127_p2[8:0];

assign trunc_ln45_1_fu_1177_p1 = C_read_reg_3339[30:0];

assign trunc_ln45_fu_1174_p1 = FH_read_reg_3309[30:0];

assign trunc_ln46_1_fu_1309_p1 = add_ln46_fu_1303_p2[30:0];

assign trunc_ln46_fu_1199_p1 = j_reg_601[30:0];

assign trunc_ln47_fu_1373_p1 = select_ln46_fu_1365_p3[30:0];

assign trunc_ln49_1_fu_1265_p1 = select_ln45_2_fu_1259_p3[4:0];

assign trunc_ln49_2_fu_1327_p1 = add_ln46_fu_1303_p2[9:0];

assign trunc_ln49_3_fu_1438_p1 = select_ln46_reg_3563[11:0];

assign trunc_ln49_4_fu_1451_p1 = add_ln49_1_fu_1445_p2[13:0];

assign trunc_ln49_5_fu_1455_p1 = add_ln49_1_fu_1445_p2[11:0];

assign trunc_ln49_6_fu_1488_p1 = l_reg_625[13:0];

assign trunc_ln49_fu_1208_p1 = j_reg_601[9:0];

assign trunc_ln59_fu_1530_p1 = i_1_reg_636[4:0];

assign trunc_ln5_fu_1418_p4 = {{empty_50_fu_1413_p2[31:1]}};

assign trunc_ln67_fu_2798_p1 = i_2_reg_921[8:0];

assign trunc_ln70_1_fu_2847_p1 = F_read_reg_3350[30:0];

assign trunc_ln70_4_fu_2938_p1 = add_ln70_2_fu_2910_p2[4:0];

assign trunc_ln70_5_fu_2942_p1 = f_reg_943[4:0];

assign trunc_ln70_fu_2863_p1 = W_read_reg_3323[8:0];

assign trunc_ln71_1_fu_2998_p1 = add_ln71_fu_2986_p2[8:0];

assign trunc_ln727_1_fu_2212_p1 = add_ln107_fu_2202_p2[11:0];

assign trunc_ln727_fu_2133_p1 = ap_phi_mux_fh_1_phi_fu_822_p4[11:0];

assign trunc_ln72_1_fu_3070_p1 = add_ln72_fu_3064_p2[8:0];

assign trunc_ln72_fu_2895_p1 = h_reg_989[8:0];

assign trunc_ln73_fu_3122_p1 = select_ln72_fu_3114_p3[8:0];

assign trunc_ln75_fu_3141_p1 = fh_reg_1023[8:0];

assign trunc_ln77_fu_3210_p1 = fw_reg_1034[8:0];

assign trunc_ln7_fu_1538_p4 = {{db_read_reg_3360[31:1]}};

assign trunc_ln88_fu_1562_p1 = F_read_reg_3350[30:0];

assign trunc_ln89_fu_1576_p1 = i_3_reg_647[4:0];

assign trunc_ln93_fu_1608_p1 = FW_read_reg_3288[30:0];

assign trunc_ln94_1_fu_1742_p1 = add_ln94_fu_1723_p2[30:0];

assign trunc_ln95_fu_1776_p1 = select_ln94_fu_1734_p3[30:0];

assign trunc_ln97_1_fu_1690_p1 = select_ln93_1_fu_1683_p3[4:0];

assign trunc_ln97_2_fu_1746_p1 = add_ln94_fu_1723_p2[9:0];

assign trunc_ln97_3_fu_1866_p1 = select_ln94_reg_3802[11:0];

assign trunc_ln97_4_fu_1879_p1 = add_ln97_1_fu_1873_p2[13:0];

assign trunc_ln97_5_fu_1883_p1 = add_ln97_1_fu_1873_p2[11:0];

assign trunc_ln97_6_fu_1916_p1 = l_1_reg_717[13:0];

assign trunc_ln97_fu_1637_p1 = j_1_reg_658[9:0];

assign trunc_ln_fu_1846_p4 = {{empty_72_fu_1841_p2[31:1]}};

assign x_Addr_A = x_Addr_A_orig << 32'd1;

assign x_Clk_A = ap_clk;

assign x_Din_A = 16'd0;

assign x_Rst_A = ap_rst_n_inv;

assign x_WEN_A = 2'd0;

assign y_Addr_A = y_Addr_A_orig << 32'd1;

assign y_Clk_A = ap_clk;

assign y_Rst_A = ap_rst_n_inv;

assign zext_ln103_fu_2040_p1 = trunc_ln103_2_reg_3963;

assign zext_ln104_fu_2051_p1 = tmp_s_fu_2044_p3;

assign zext_ln1116_fu_3219_p1 = add_ln1116_fu_3214_p2;

assign zext_ln1118_1_fu_2235_p1 = trunc_ln106_2_reg_4075;

assign zext_ln1118_2_fu_2243_p1 = add_ln1118_1_fu_2238_p2;

assign zext_ln1118_3_fu_2255_p1 = tmp_10_fu_2247_p3;

assign zext_ln1118_4_fu_2297_p1 = select_ln107_1_reg_4097;

assign zext_ln1118_5_fu_2363_p1 = add_ln1118_3_reg_4147;

assign zext_ln1118_fu_2372_p1 = add_ln1118_fu_2368_p2;

assign zext_ln121_fu_2547_p1 = tmp_5_fu_2539_p3;

assign zext_ln124_1_fu_2629_p1 = add_ln124_reg_4265;

assign zext_ln124_2_fu_2639_p1 = tmp_6_fu_2632_p3;

assign zext_ln124_3_fu_2684_p1 = trunc_ln124_3_fu_2681_p1;

assign zext_ln124_4_fu_2740_p1 = add_ln124_2_fu_2735_p2;

assign zext_ln124_fu_2578_p1 = select_ln121_2_fu_2571_p3;

assign zext_ln132_fu_2778_p1 = trunc_ln132_fu_2774_p1;

assign zext_ln46_fu_1277_p1 = tmp_2_fu_1269_p3;

assign zext_ln49_1_fu_1386_p1 = add_ln49_reg_3547;

assign zext_ln49_2_fu_1396_p1 = tmp_1_fu_1389_p3;

assign zext_ln49_3_fu_1441_p1 = trunc_ln49_3_fu_1438_p1;

assign zext_ln49_4_fu_1497_p1 = add_ln49_2_reg_3599_pp0_iter1_reg;

assign zext_ln49_fu_1339_p1 = select_ln46_2_fu_1331_p3;

assign zext_ln59_fu_1534_p1 = trunc_ln59_reg_3628_pp1_iter1_reg;

assign zext_ln67_fu_2802_p1 = trunc_ln67_fu_2798_p1;

assign zext_ln70_fu_3101_p1 = select_ln70_2_reg_4491;

assign zext_ln74_fu_3126_p1 = $unsigned(grp_fu_3261_p3);

assign zext_ln89_fu_1580_p1 = trunc_ln89_reg_3662_pp2_iter1_reg;

assign zext_ln94_fu_1702_p1 = tmp_7_fu_1694_p3;

assign zext_ln97_1_fu_1814_p1 = add_ln97_reg_3813;

assign zext_ln97_2_fu_1824_p1 = tmp_3_fu_1817_p3;

assign zext_ln97_3_fu_1869_p1 = trunc_ln97_3_fu_1866_p1;

assign zext_ln97_4_fu_1925_p1 = add_ln97_2_reg_3869_pp3_iter1_reg;

assign zext_ln97_fu_1758_p1 = select_ln94_2_fu_1750_p3;

always @ (posedge ap_clk) begin
    cast94_reg_3677[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln104_reg_3982[4:0] <= 5'b00000;
    zext_ln104_reg_3982[10] <= 1'b0;
end

endmodule //conv_combined
