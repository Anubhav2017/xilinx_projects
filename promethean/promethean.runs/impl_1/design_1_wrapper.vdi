#-----------------------------------------------------------
# Vivado v2020.2 (64-bit)
# SW Build 3064766 on Wed Nov 18 09:12:47 MST 2020
# IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
# Start of session at: Sun Jun  5 19:24:15 2022
# Process ID: 467694
# Current directory: /home/anubhav/xilinx_projects/promethean/promethean.runs/impl_1
# Command line: vivado -log design_1_wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace
# Log file: /home/anubhav/xilinx_projects/promethean/promethean.runs/impl_1/design_1_wrapper.vdi
# Journal file: /home/anubhav/xilinx_projects/promethean/promethean.runs/impl_1/vivado.jou
#-----------------------------------------------------------
source design_1_wrapper.tcl -notrace
Command: open_checkpoint design_1_wrapper_routed.dcp

Starting open_checkpoint Task

Time (s): cpu = 00:00:00.08 ; elapsed = 00:00:00.05 . Memory (MB): peak = 2363.789 ; gain = 0.000 ; free physical = 14429 ; free virtual = 23926
INFO: [Device 21-403] Loading part xc7z020clg400-1
Netlist sorting complete. Time (s): cpu = 00:00:00.65 ; elapsed = 00:00:00.65 . Memory (MB): peak = 2363.906 ; gain = 0.000 ; free physical = 13996 ; free virtual = 23491
INFO: [Netlist 29-17] Analyzing 7827 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.2
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 3006.875 ; gain = 105.961 ; free physical = 13188 ; free virtual = 22683
Restored from archive | CPU: 3.830000 secs | Memory: 104.106277 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 3006.875 ; gain = 105.961 ; free physical = 13188 ; free virtual = 22683
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3006.875 ; gain = 0.000 ; free physical = 13196 ; free virtual = 22691
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 104 instances were transformed.
  RAM16X1S => RAM32X1S (RAMS32): 32 instances
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 3 instances
  RAM32X1D => RAM32X1D (RAMD32(x2)): 1 instance 
  RAM32X1S => RAM32X1S (RAMS32): 48 instances
  SRLC32E => SRL16E: 20 instances

INFO: [Project 1-604] Checkpoint was created with Vivado v2020.2 (64-bit) build 3064766
open_checkpoint: Time (s): cpu = 00:00:26 ; elapsed = 00:00:28 . Memory (MB): peak = 3006.875 ; gain = 649.023 ; free physical = 13195 ; free virtual = 22691
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/Xilinx/Vivado/2020.2/data/ip'.
INFO: [DRC 23-27] Running DRC with 8 threads
ERROR: [DRC RTSTAT-6] Partial route conflicts: 13 net(s) have a partial conflict. The problem bus(es) and/or net(s) are design_1_i/fcc3/inst/D[5]_alias, design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/fwprop_read_reg_1240_reg[0][0], design_1_i/loss_derivative_0/inst/i_2_reg_468_reg[23], design_1_i/fcc3/inst/i_7_reg_511_reg_n_9_[3], design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg_0[8], design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0_0[2], design_1_i/fcc3/inst/dwbuf_V_U/fcc_combined_dwbuf_V_ram_U/q1[14], design_1_i/fcc3/inst/gmem_m_axi_U/bus_read/fifo_rreq/q_reg[61]_0[46], design_1_i/fcc3/inst/gmem_m_axi_U/bus_read/sect_len_buf_reg_n_9_[1], design_1_i/fcc3/inst/gmem_m_axi_U/bus_read/start_addr_reg_n_9_[13], design_1_i/fcc2/inst/trunc_ln5_reg_1495[3], design_1_i/relu3/inst/y_Din_A[11], and design_1_i/fcc3/inst/ydim_read_reg_1244[12].
WARNING: [DRC CHECK-3] Report rule limit reached: REQP-1840 rule limit reached: 20 violations have been found.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg input design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product input design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/conv2/inst/mac_muladd_9s_9s_9ns_9_4_1_U39/conv_combined_mac_muladd_9s_9s_9ns_9_4_1_DSP48_0_U/p_reg_reg input design_1_i/conv2/inst/mac_muladd_9s_9s_9ns_9_4_1_U39/conv_combined_mac_muladd_9s_9s_9ns_9_4_1_DSP48_0_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/fcc1/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg input design_1_i/fcc1/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg input design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg input design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg input design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mac_muladd_9s_9s_9ns_9_4_1_U36/conv_combined_mac_muladd_9s_9s_9ns_9_4_1_DSP48_0_U/p_reg_reg output design_1_i/conv1/inst/mac_muladd_9s_9s_9ns_9_4_1_U36/conv_combined_mac_muladd_9s_9s_9ns_9_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product output design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0 output design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product output design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product output design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product output design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product__1 output design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product output design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product output design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 output design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product output design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product output design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product output design_1_i/conv1/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product output design_1_i/conv1/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product output design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0 output design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product output design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product output design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product output design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product__1 output design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product output design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0 output design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product output design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 output design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product output design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product output design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product output design_1_i/conv2/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product output design_1_i/conv2/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product output design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0 output design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc1/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc1/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc1/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg output design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc2/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product output design_1_i/fcc2/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc2/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0 output design_1_i/fcc2/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc2/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc2/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc2/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc2/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc2/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc2/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg output design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc3/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product output design_1_i/fcc3/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc3/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0 output design_1_i/fcc3/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_534/mul_50ns_47ns_97_5_1_U1/loss_derivative_mul_50ns_47ns_97_5_1_Multiplier_0_U/tmp_product output design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_534/mul_50ns_47ns_97_5_1_U1/loss_derivative_mul_50ns_47ns_97_5_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_534/mul_50ns_50ns_100_5_1_U2/loss_derivative_mul_50ns_50ns_100_5_1_Multiplier_1_U/tmp_product output design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_534/mul_50ns_50ns_100_5_1_U2/loss_derivative_mul_50ns_50ns_100_5_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/loss_derivative_0/inst/grp_log_16_3_s_fu_546/mac_mulsub_24ns_4ns_29ns_29_4_1_U12/loss_derivative_mac_mulsub_24ns_4ns_29ns_29_4_1_DSP48_1_U/p_reg_reg output design_1_i/loss_derivative_0/inst/grp_log_16_3_s_fu_546/mac_mulsub_24ns_4ns_29ns_29_4_1_U12/loss_derivative_mac_mulsub_24ns_4ns_29ns_29_4_1_DSP48_1_U/p_reg_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0 multiplier stage design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0 multiplier stage design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0 multiplier stage design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__0 multiplier stage design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__2 multiplier stage design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg multiplier stage design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg multiplier stage design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0 multiplier stage design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 multiplier stage design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg multiplier stage design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1 multiplier stage design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg multiplier stage design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1 multiplier stage design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage design_1_i/conv1/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage design_1_i/conv1/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0 multiplier stage design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0 multiplier stage design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0 multiplier stage design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__0 multiplier stage design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__2 multiplier stage design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg multiplier stage design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg multiplier stage design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0 multiplier stage design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 multiplier stage design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg multiplier stage design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1 multiplier stage design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg multiplier stage design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1 multiplier stage design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage design_1_i/conv2/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage design_1_i/conv2/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/p_reg multiplier stage design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/p_reg__0 multiplier stage design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[4] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[0]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[5] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[6] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[7] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[4] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[0]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[5] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[6] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[7] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC RTSTAT-10] No routable loads: 33 net(s) have no routable loads. The problem bus(es) and/or net(s) are design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/rd_rst_reg[2:0], design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/rd_rst_reg[2:0], design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/rd_rst_reg[2:0]... and (the first 15 of 21 listed).
INFO: [Vivado 12-3199] DRC finished with 1 Errors, 233 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
ERROR: [Vivado 12-1345] Error(s) found during DRC. Bitgen not run.
INFO: [Common 17-83] Releasing license: Implementation
20 Infos, 205 Warnings, 0 Critical Warnings and 2 Errors encountered.
write_bitstream failed
write_bitstream: Time (s): cpu = 00:00:38 ; elapsed = 00:00:13 . Memory (MB): peak = 3492.984 ; gain = 486.109 ; free physical = 12965 ; free virtual = 22461
ERROR: [Common 17-39] 'write_bitstream' failed due to earlier errors.

INFO: [Common 17-206] Exiting Vivado at Sun Jun  5 19:25:03 2022...
