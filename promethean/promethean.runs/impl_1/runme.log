
*** Running vivado
    with args -log design_1_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace


****** Vivado v2020.2 (64-bit)
  **** SW Build 3064766 on Wed Nov 18 09:12:47 MST 2020
  **** IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source design_1_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/anubhav/xilinx_projects/ip_repo_promethean'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/Xilinx/Vivado/2020.2/data/ip'.
Command: link_design -top design_1_wrapper -part xc7z020clg400-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xc7z020clg400-1
Netlist sorting complete. Time (s): cpu = 00:00:00.71 ; elapsed = 00:00:00.71 . Memory (MB): peak = 2357.973 ; gain = 0.000 ; free physical = 15916 ; free virtual = 25246
INFO: [Netlist 29-17] Analyzing 7883 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.2
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0_board.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0_board.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_us/inst'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_us/inst'
Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_auto_us_1/design_1_auto_us_1_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s01_couplers/auto_us/inst'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_auto_us_1/design_1_auto_us_1_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s01_couplers/auto_us/inst'
Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_auto_us_2/design_1_auto_us_2_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s04_couplers/auto_us/inst'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_auto_us_2/design_1_auto_us_2_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s04_couplers/auto_us/inst'
Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_auto_us_3/design_1_auto_us_3_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s07_couplers/auto_us/inst'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_auto_us_3/design_1_auto_us_3_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s07_couplers/auto_us/inst'
Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_auto_us_4/design_1_auto_us_4_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s08_couplers/auto_us/inst'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_auto_us_4/design_1_auto_us_4_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s08_couplers/auto_us/inst'
Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_auto_us_5/design_1_auto_us_5_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s10_couplers/auto_us/inst'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_auto_us_5/design_1_auto_us_5_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s10_couplers/auto_us/inst'
Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_auto_us_6/design_1_auto_us_6_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s13_couplers/auto_us/inst'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_auto_us_6/design_1_auto_us_6_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s13_couplers/auto_us/inst'
Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_auto_us_7/design_1_auto_us_7_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s15_couplers/auto_us/inst'
Finished Parsing XDC File [/home/anubhav/xilinx_projects/promethean/promethean.gen/sources_1/bd/design_1/ip/design_1_auto_us_7/design_1_auto_us_7_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s15_couplers/auto_us/inst'
INFO: [Project 1-1715] 1 XPM XDC files have been applied to the design.
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 2870.152 ; gain = 0.000 ; free physical = 15809 ; free virtual = 25131
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 84 instances were transformed.
  RAM16X1S => RAM32X1S (RAMS32): 32 instances
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 3 instances
  RAM32X1D => RAM32X1D (RAMD32(x2)): 1 instance 
  RAM32X1S => RAM32X1S (RAMS32): 48 instances

11 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:21 ; elapsed = 00:00:23 . Memory (MB): peak = 2870.152 ; gain = 512.250 ; free physical = 15808 ; free virtual = 25131
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:02 ; elapsed = 00:00:00.77 . Memory (MB): peak = 2870.152 ; gain = 0.000 ; free physical = 15804 ; free virtual = 25125

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 1671e80c9

Time (s): cpu = 00:00:11 ; elapsed = 00:00:07 . Memory (MB): peak = 3002.719 ; gain = 132.566 ; free physical = 15346 ; free virtual = 24616

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 2 inverter(s) to 4 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 1a6b96ad4

Time (s): cpu = 00:00:05 ; elapsed = 00:00:02 . Memory (MB): peak = 3184.562 ; gain = 0.000 ; free physical = 15308 ; free virtual = 24578
INFO: [Opt 31-389] Phase Retarget created 22 cells and removed 70 cells
INFO: [Opt 31-1021] In phase Retarget, 24 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 16 inverter(s) to 80 load pin(s).
Phase 2 Constant propagation | Checksum: 2077117eb

Time (s): cpu = 00:00:07 ; elapsed = 00:00:04 . Memory (MB): peak = 3184.562 ; gain = 0.000 ; free physical = 15306 ; free virtual = 24577
INFO: [Opt 31-389] Phase Constant propagation created 2622 cells and removed 5323 cells
INFO: [Opt 31-1021] In phase Constant propagation, 24 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 3 Sweep
Phase 3 Sweep | Checksum: 1cb0cb608

Time (s): cpu = 00:00:09 ; elapsed = 00:00:06 . Memory (MB): peak = 3184.562 ; gain = 0.000 ; free physical = 15304 ; free virtual = 24574
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 250 cells
INFO: [Opt 31-1021] In phase Sweep, 96 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 1cb0cb608

Time (s): cpu = 00:00:10 ; elapsed = 00:00:07 . Memory (MB): peak = 3184.562 ; gain = 0.000 ; free physical = 15305 ; free virtual = 24575
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: 1cb0cb608

Time (s): cpu = 00:00:10 ; elapsed = 00:00:07 . Memory (MB): peak = 3184.562 ; gain = 0.000 ; free physical = 15305 ; free virtual = 24575
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: 1cb0cb608

Time (s): cpu = 00:00:10 ; elapsed = 00:00:07 . Memory (MB): peak = 3184.562 ; gain = 0.000 ; free physical = 15304 ; free virtual = 24574
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Post Processing Netlist, 33 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |              22  |              70  |                                             24  |
|  Constant propagation         |            2622  |            5323  |                                             24  |
|  Sweep                        |               0  |             250  |                                             96  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                             33  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00.12 ; elapsed = 00:00:00.12 . Memory (MB): peak = 3184.562 ; gain = 0.000 ; free physical = 15303 ; free virtual = 24573
Ending Logic Optimization Task | Checksum: ce5b6e45

Time (s): cpu = 00:00:13 ; elapsed = 00:00:10 . Memory (MB): peak = 3184.562 ; gain = 0.000 ; free physical = 15303 ; free virtual = 24573

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 11 BRAM(s) out of a total of 80 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 17 WE to EN ports
Number of BRAM Ports augmented: 47 newly gated: 28 Total Ports: 160
Number of Flops added for Enable Generation: 4

Ending PowerOpt Patch Enables Task | Checksum: 128f8df5c

Time (s): cpu = 00:00:00.43 ; elapsed = 00:00:00.41 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 15161 ; free virtual = 24431
Ending Power Optimization Task | Checksum: 128f8df5c

Time (s): cpu = 00:00:27 ; elapsed = 00:00:10 . Memory (MB): peak = 3890.484 ; gain = 705.922 ; free physical = 15250 ; free virtual = 24520

Starting Final Cleanup Task

Starting Logic Optimization Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Logic Optimization Task | Checksum: 1587cd23e

Time (s): cpu = 00:00:12 ; elapsed = 00:00:05 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 15254 ; free virtual = 24524
Ending Final Cleanup Task | Checksum: 1587cd23e

Time (s): cpu = 00:00:13 ; elapsed = 00:00:07 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 15254 ; free virtual = 24524

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 15254 ; free virtual = 24524
Ending Netlist Obfuscation Task | Checksum: 1587cd23e

Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 15254 ; free virtual = 24524
INFO: [Common 17-83] Releasing license: Implementation
38 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:01:08 ; elapsed = 00:00:35 . Memory (MB): peak = 3890.484 ; gain = 1020.332 ; free physical = 15256 ; free virtual = 24527
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00.08 ; elapsed = 00:00:00.02 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 15251 ; free virtual = 24524
INFO: [Common 17-1381] The checkpoint '/home/anubhav/xilinx_projects/promethean/promethean.runs/impl_1/design_1_wrapper_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:15 ; elapsed = 00:00:10 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 15231 ; free virtual = 24520
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/anubhav/xilinx_projects/promethean/promethean.runs/impl_1/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:27 ; elapsed = 00:00:06 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 15009 ; free virtual = 24298
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 8 threads
WARNING: [DRC CHECK-3] Report rule limit reached: REQP-1840 rule limit reached: 20 violations have been found.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[4] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[0]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[5] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[6] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[7] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[4] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[0]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[5] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[6] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[7] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors, 21 Warnings
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 8 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 15007 ; free virtual = 24297
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 923a0dd3

Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.04 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 15007 ; free virtual = 24297
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 15007 ; free virtual = 24297

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: f32cff3c

Time (s): cpu = 00:00:04 ; elapsed = 00:00:02 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 15061 ; free virtual = 24351

Phase 1.3 Build Placer Netlist Model
WARNING: [Place 30-34] Design utilization is very high. Please run report_utilization command to see design utilization.
Phase 1.3 Build Placer Netlist Model | Checksum: 1896baf45

Time (s): cpu = 00:00:27 ; elapsed = 00:00:11 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14926 ; free virtual = 24223

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 1896baf45

Time (s): cpu = 00:00:27 ; elapsed = 00:00:11 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14929 ; free virtual = 24225
Phase 1 Placer Initialization | Checksum: 1896baf45

Time (s): cpu = 00:00:27 ; elapsed = 00:00:11 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14961 ; free virtual = 24257

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: 1a41a169a

Time (s): cpu = 00:00:36 ; elapsed = 00:00:14 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14908 ; free virtual = 24196

Phase 2.2 Update Timing before SLR Path Opt
Phase 2.2 Update Timing before SLR Path Opt | Checksum: d207a5e8

Time (s): cpu = 00:00:44 ; elapsed = 00:00:16 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14907 ; free virtual = 24196

Phase 2.3 Global Placement Core

Phase 2.3.1 Physical Synthesis In Placer
INFO: [Physopt 32-1035] Found 1009 LUTNM shape to break, 1738 LUT instances to create LUTNM shape
INFO: [Physopt 32-1044] Break lutnm for timing: one critical 437, two critical 572, total 0, new lutff created 0
INFO: [Physopt 32-775] End 1 Pass. Optimized 282 nets or cells. Created 0 new cell, deleted 282 existing cells and moved 0 existing cell
INFO: [Physopt 32-65] No nets found for high-fanout optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-117] Net design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/addr1[0] could not be optimized because driver design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/ram_reg_0_i_26 could not be replicated
INFO: [Physopt 32-117] Net design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/addr1[9] could not be optimized because driver design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/ram_reg_0_i_17 could not be replicated
INFO: [Physopt 32-117] Net design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/addr1[1] could not be optimized because driver design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/ram_reg_0_i_25 could not be replicated
INFO: [Physopt 32-117] Net design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/addr1[8] could not be optimized because driver design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/ram_reg_0_i_18 could not be replicated
INFO: [Physopt 32-117] Net design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/addr1[5] could not be optimized because driver design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/ram_reg_0_i_21 could not be replicated
INFO: [Physopt 32-117] Net design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/addr1[7] could not be optimized because driver design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/ram_reg_0_i_19 could not be replicated
INFO: [Physopt 32-117] Net design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/addr1[11] could not be optimized because driver design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/ram_reg_0_i_15 could not be replicated
INFO: [Physopt 32-117] Net design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/addr1[6] could not be optimized because driver design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/ram_reg_0_i_20 could not be replicated
INFO: [Physopt 32-117] Net design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/addr1[4] could not be optimized because driver design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/ram_reg_0_i_22 could not be replicated
INFO: [Physopt 32-117] Net design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/addr1[2] could not be optimized because driver design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/ram_reg_0_i_24 could not be replicated
INFO: [Physopt 32-117] Net design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/addr1[10] could not be optimized because driver design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/ram_reg_0_i_16 could not be replicated
INFO: [Physopt 32-117] Net design_1_i/conv2/inst/dwbuf_V_U/conv_combined_dwbuf_V_ram_U/dwbuf_V_address1[6] could not be optimized because driver design_1_i/conv2/inst/dwbuf_V_U/conv_combined_dwbuf_V_ram_U/ram_reg_0_i_24 could not be replicated
INFO: [Physopt 32-117] Net design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/addr1[3] could not be optimized because driver design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/ram_reg_0_i_23 could not be replicated
INFO: [Physopt 32-68] No nets found for critical-cell optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-457] Pass 1. Identified 18 candidate cells for DSP register optimization.
INFO: [Physopt 32-665] Processed cell design_1_i/loss_derivative_0/inst/grp_log_16_3_s_fu_546/mac_mulsub_24ns_4ns_29ns_29_4_1_U12/loss_derivative_mac_mulsub_24ns_4ns_29ns_29_4_1_DSP48_1_U/p_reg_reg. 15 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_534/mul_50ns_47ns_97_5_1_U1/loss_derivative_mul_50ns_47ns_97_5_1_Multiplier_0_U/buff1_reg__0. 16 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product. 17 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/fcc1/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg. 6 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg. 14 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_534/mul_50ns_47ns_97_5_1_U1/loss_derivative_mul_50ns_47ns_97_5_1_Multiplier_0_U/tmp_product. 16 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg. 12 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0. 47 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff1_reg__0. 13 registers were pushed out.
INFO: [Physopt 32-666] Processed cell design_1_i/fcc1/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg. No change.
INFO: [Physopt 32-665] Processed cell design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_534/mul_50ns_47ns_97_5_1_U1/loss_derivative_mul_50ns_47ns_97_5_1_Multiplier_0_U/buff1_reg. 16 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg. 12 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/conv1/inst/mac_muladd_9s_9s_9ns_9_4_1_U36/conv_combined_mac_muladd_9s_9s_9ns_9_4_1_DSP48_0_U/p_reg_reg. 9 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg. 6 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg. 6 registers were pushed out.
INFO: [Physopt 32-666] Processed cell design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg. No change.
INFO: [Physopt 32-665] Processed cell design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg. 12 registers were pushed out.
INFO: [Physopt 32-457] Pass 2. Identified 2 candidate cells for DSP register optimization.
INFO: [Physopt 32-666] Processed cell design_1_i/fcc1/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg. No change.
INFO: [Physopt 32-666] Processed cell design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg. No change.
INFO: [Physopt 32-775] End 2 Pass. Optimized 15 nets or cells. Created 217 new cells, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00.06 ; elapsed = 00:00:00.06 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14861 ; free virtual = 24167
INFO: [Physopt 32-1123] No candidate cells found for Shift Register to Pipeline optimization
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-677] No candidate cells for Shift Register optimization found in the design
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-527] Pass 1: Identified 9 candidate cells for BRAM register optimization
INFO: [Physopt 32-665] Processed cell design_1_i/conv1/inst/wbuf_V_U/conv_combined_wbuf_V_ram_U/ram_reg_1. 2 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/conv1/inst/wbuf_V_U/conv_combined_wbuf_V_ram_U/ram_reg_2. 2 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/conv1/inst/wbuf_V_U/conv_combined_wbuf_V_ram_U/ram_reg_0. 2 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/conv1/inst/wbuf_V_U/conv_combined_wbuf_V_ram_U/ram_reg_4. 2 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/conv1/inst/wbuf_V_U/conv_combined_wbuf_V_ram_U/ram_reg_3. 2 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/conv1/inst/wbuf_V_U/conv_combined_wbuf_V_ram_U/ram_reg_6. 2 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/conv1/inst/wbuf_V_U/conv_combined_wbuf_V_ram_U/ram_reg_5. 2 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/conv1/inst/wbuf_V_U/conv_combined_wbuf_V_ram_U/ram_reg_7. 2 registers were pushed out.
INFO: [Physopt 32-665] Processed cell design_1_i/fcc1_y/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.TRUE_DP.SIMPLE_PRIM18.ram. 16 registers were pushed out.
INFO: [Physopt 32-775] End 1 Pass. Optimized 9 nets or cells. Created 32 new cells, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00.07 ; elapsed = 00:00:00.06 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14681 ; free virtual = 24107
INFO: [Physopt 32-846] No candidate cells for URAM register optimization found in the design
INFO: [Physopt 32-775] End 2 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-949] No candidate nets found for dynamic/static region interface net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14682 ; free virtual = 24108

Summary of Physical Synthesis Optimizations
============================================


-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                                     |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  LUT Combining                                    |            0  |            282  |                   282  |           0  |           1  |  00:00:01  |
|  Very High Fanout                                 |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Critical Cell                                    |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  DSP Register                                     |          217  |              0  |                    15  |           0  |           1  |  00:00:01  |
|  Shift Register to Pipeline                       |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Shift Register                                   |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  BRAM Register                                    |           32  |              0  |                     9  |           0  |           1  |  00:00:00  |
|  URAM Register                                    |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Dynamic/Static Region Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                                            |          249  |            282  |                   306  |           0  |           9  |  00:00:03  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------


Phase 2.3.1 Physical Synthesis In Placer | Checksum: 13de4ed5a

Time (s): cpu = 00:02:47 ; elapsed = 00:01:00 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14599 ; free virtual = 24074
Phase 2.3 Global Placement Core | Checksum: 14299231a

Time (s): cpu = 00:02:53 ; elapsed = 00:01:03 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14630 ; free virtual = 24088
Phase 2 Global Placement | Checksum: 14299231a

Time (s): cpu = 00:02:53 ; elapsed = 00:01:03 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14657 ; free virtual = 24115

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 1df862214

Time (s): cpu = 00:03:03 ; elapsed = 00:01:05 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14785 ; free virtual = 24111

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: a38f0c14

Time (s): cpu = 00:03:23 ; elapsed = 00:01:14 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14821 ; free virtual = 24094

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: b84d0af9

Time (s): cpu = 00:03:25 ; elapsed = 00:01:15 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14821 ; free virtual = 24094

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: e26bd8f7

Time (s): cpu = 00:03:25 ; elapsed = 00:01:15 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14821 ; free virtual = 24094

Phase 3.5 Fast Optimization
Phase 3.5 Fast Optimization | Checksum: fd484755

Time (s): cpu = 00:03:42 ; elapsed = 00:01:20 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14796 ; free virtual = 24076

Phase 3.6 Small Shape Detail Placement
Phase 3.6 Small Shape Detail Placement | Checksum: 1827bd752

Time (s): cpu = 00:04:32 ; elapsed = 00:02:07 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14712 ; free virtual = 24007

Phase 3.7 Re-assign LUT pins
Phase 3.7 Re-assign LUT pins | Checksum: e2dd713e

Time (s): cpu = 00:04:35 ; elapsed = 00:02:10 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14735 ; free virtual = 24016

Phase 3.8 Pipeline Register Optimization
Phase 3.8 Pipeline Register Optimization | Checksum: 12ac63351

Time (s): cpu = 00:04:36 ; elapsed = 00:02:11 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14735 ; free virtual = 24016

Phase 3.9 Fast Optimization
Phase 3.9 Fast Optimization | Checksum: 10ff44204

Time (s): cpu = 00:05:05 ; elapsed = 00:02:21 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14717 ; free virtual = 23997
Phase 3 Detail Placement | Checksum: 10ff44204

Time (s): cpu = 00:05:06 ; elapsed = 00:02:21 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14717 ; free virtual = 23997

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 10901314b

Phase 4.1.1.1 BUFG Insertion

Starting Physical Synthesis Task

Phase 1 Physical Synthesis Initialization
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 8 CPUs
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-4.652 | TNS=-8377.555 |
Phase 1 Physical Synthesis Initialization | Checksum: 18380dc84

Time (s): cpu = 00:00:05 ; elapsed = 00:00:01 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14704 ; free virtual = 23980
INFO: [Place 46-33] Processed net design_1_i/conv1/inst/gmem_m_axi_U/bus_read/buff_rdata/SR[0], BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/conv2/inst/gmem_m_axi_U/bus_read/buff_rdata/SR[0], BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/loss_derivative_0/inst/gmem_m_axi_U/bus_read/buff_rdata/SR[0], BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/fcc1/inst/gmem_m_axi_U/bus_read/buff_rdata/SR[0], BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/fcc2/inst/gmem_m_axi_U/bus_read/buff_rdata/SR[0], BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/fcc3/inst/gmem_m_axi_U/bus_read/buff_rdata/SR[0], BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-56] BUFG insertion identified 6 candidate nets. Inserted BUFG: 0, Replicated BUFG Driver: 0, Skipped due to Placement/Routing Conflicts: 6, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Ending Physical Synthesis Task | Checksum: f2efd2fd

Time (s): cpu = 00:00:06 ; elapsed = 00:00:02 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14703 ; free virtual = 23980
Phase 4.1.1.1 BUFG Insertion | Checksum: 10901314b

Time (s): cpu = 00:05:38 ; elapsed = 00:02:31 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14708 ; free virtual = 23982
INFO: [Place 30-746] Post Placement Timing Summary WNS=-3.173. For the most accurate timing information please run report_timing.

Time (s): cpu = 00:06:24 ; elapsed = 00:02:57 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14681 ; free virtual = 23975
Phase 4.1 Post Commit Optimization | Checksum: 9e5673b9

Time (s): cpu = 00:06:25 ; elapsed = 00:02:57 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14681 ; free virtual = 23974

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 9e5673b9

Time (s): cpu = 00:06:26 ; elapsed = 00:02:58 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14681 ; free virtual = 23974

Phase 4.3 Placer Reporting

Phase 4.3.1 Print Estimated Congestion
INFO: [Place 30-612] Post-Placement Estimated Congestion 
 ____________________________________________________
|           | Global Congestion | Short Congestion  |
| Direction | Region Size       | Region Size       |
|___________|___________________|___________________|
|      North|              16x16|                4x4|
|___________|___________________|___________________|
|      South|              16x16|                8x8|
|___________|___________________|___________________|
|       East|              16x16|                4x4|
|___________|___________________|___________________|
|       West|              16x16|                4x4|
|___________|___________________|___________________|

Phase 4.3.1 Print Estimated Congestion | Checksum: 9e5673b9

Time (s): cpu = 00:06:26 ; elapsed = 00:02:59 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14682 ; free virtual = 23975
Phase 4.3 Placer Reporting | Checksum: 9e5673b9

Time (s): cpu = 00:06:27 ; elapsed = 00:02:59 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14682 ; free virtual = 23975

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14682 ; free virtual = 23975

Time (s): cpu = 00:06:27 ; elapsed = 00:02:59 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14682 ; free virtual = 23975
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 167f5c7b7

Time (s): cpu = 00:06:27 ; elapsed = 00:02:59 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14681 ; free virtual = 23974
Ending Placer Task | Checksum: e3a85076

Time (s): cpu = 00:06:27 ; elapsed = 00:02:59 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14684 ; free virtual = 23978
INFO: [Common 17-83] Releasing license: Implementation
129 Infos, 22 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:06:31 ; elapsed = 00:03:01 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14782 ; free virtual = 24075
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:09 ; elapsed = 00:00:03 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14621 ; free virtual = 24046
INFO: [Common 17-1381] The checkpoint '/home/anubhav/xilinx_projects/promethean/promethean.runs/impl_1/design_1_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:20 ; elapsed = 00:00:12 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14725 ; free virtual = 24066
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00.08 ; elapsed = 00:00:00.15 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14717 ; free virtual = 24057
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00.19 ; elapsed = 00:00:00.25 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14723 ; free virtual = 24064
Command: phys_opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14671 ; free virtual = 24022

Starting Physical Synthesis Task

Phase 1 Physical Synthesis Initialization
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 8 CPUs
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-3.173 | TNS=-4588.677 |
Phase 1 Physical Synthesis Initialization | Checksum: 1fcb372f5

Time (s): cpu = 00:00:25 ; elapsed = 00:00:06 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14645 ; free virtual = 23986
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-3.173 | TNS=-4588.677 |

Phase 2 DSP Register Optimization
INFO: [Physopt 32-456] No candidate cells for DSP register optimization found in the design.
INFO: [Physopt 32-775] End 2 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Phase 2 DSP Register Optimization | Checksum: 1fcb372f5

Time (s): cpu = 00:00:26 ; elapsed = 00:00:06 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14640 ; free virtual = 23983

Phase 3 Critical Path Optimization
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-3.173 | TNS=-4588.677 |
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg_n_9_[45]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/processing_system7_0/inst/FCLK_CLK_unbuffered[0]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[43]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[39]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[35]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[31]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[27]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[23]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[19]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[15]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[15]_i_5_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/PCIN__0[30]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[11]_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[11]_i_7_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[7]_i_7_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[16]__0__0_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-663] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_4_n_9.  Re-placed instance design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_4
INFO: [Physopt 32-735] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_4_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.935 | TNS=-4577.644 |
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg_n_9_[45]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[43]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[39]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[35]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[31]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[31]_i_7_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/PCIN__0[45]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[27]_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[23]_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[19]_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[15]_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[15]_i_7_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[11]_i_7_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[7]_i_7_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_10_n_9.  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_10
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_10_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[11]_i_26_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[16]__0__0_i_12_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_29_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[16]__0__0_i_26_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[16]__0__0_i_47_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[15]__0__0_i_20_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[11]__0__0_i_14_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/FH_read_reg_3309_reg[1][0]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[2][0].  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[11]__0__0_i_25
INFO: [Physopt 32-572] Net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[2][0] was not replicated.
Resolution: phys_opt_design can be forced to replicate a net driver using the option -force_replication_on_nets <list of net objects>.
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[2][0]. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.895 | TNS=-4575.342 |
INFO: [Physopt 32-663] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_5_n_9.  Re-placed instance design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_5
INFO: [Physopt 32-735] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_5_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.884 | TNS=-4574.164 |
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[11]_i_25_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[16]__0__0_i_11_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_19_n_9.  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_19
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_19_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[16]__0__0_i_54_n_16. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[16]__0__0_i_57_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/FH_read_reg_3309_reg[10][1]. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.876 | TNS=-4573.867 |
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/FH_read_reg_3309_reg[10][1]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[11][0].  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_118
INFO: [Physopt 32-572] Net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[11][0] was not replicated.
Resolution: phys_opt_design can be forced to replicate a net driver using the option -force_replication_on_nets <list of net objects>.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[11][0]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[46]_i_1_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-81] Processed net design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product[-1111111098]_0[1]. Replicated 4 times.
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product[-1111111098]_0[1]. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.864 | TNS=-4573.144 |
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/FH_read_reg_3309_reg[1][1]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[2][1].  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[11]__0__0_i_24
INFO: [Physopt 32-572] Net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[2][1] was not replicated.
Resolution: phys_opt_design can be forced to replicate a net driver using the option -force_replication_on_nets <list of net objects>.
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[2][1]. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.857 | TNS=-4572.317 |
INFO: [Physopt 32-662] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_9_n_9.  Did not re-place instance design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_9
INFO: [Physopt 32-735] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_9_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.857 | TNS=-4572.317 |
INFO: [Physopt 32-663] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_6_n_9.  Re-placed instance design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_6
INFO: [Physopt 32-735] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_6_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.855 | TNS=-4572.007 |
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[16]__0__0_i_55_n_16. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[16]__0__0_i_58_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/FH_read_reg_3309_reg[7]_0[1]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[8]_0[1].  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_126
INFO: [Physopt 32-601] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[8]_0[1]. Net driver design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_126 was replaced.
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[8]_0[1]. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.854 | TNS=-4571.343 |
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg_n_9_[29]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[27]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[23]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[19]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[19]_i_6_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/PCIN__1[33]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[15]_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[15]_i_7_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[11]_i_7_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[7]_i_7_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-663] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_12_n_9.  Re-placed instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_12
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_12_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.852 | TNS=-4569.174 |
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[29]__0_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[27]__0_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[23]__0_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[19]__0_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[19]__0_i_6_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/PCIN[33]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[15]__0_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[11]__0_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[7]__0_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[7]__0_i_7_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[16]__1_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__1_i_5_n_9.  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__1_i_5
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__1_i_5_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.847 | TNS=-4568.584 |
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[15]__0_i_7_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[11]__0_i_7_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[11]__0_i_15_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[15]__0_i_25_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[11]__0_i_26_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-663] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[11]__0_i_32_n_9.  Re-placed instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[11]__0_i_32
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[11]__0_i_32_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.847 | TNS=-4568.184 |
INFO: [Physopt 32-663] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_3_n_9.  Re-placed instance design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_3
INFO: [Physopt 32-735] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_3_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.845 | TNS=-4567.707 |
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/FH_read_reg_3309_reg[1]_0[3]. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.844 | TNS=-4567.085 |
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[31]_i_5_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/PCIN__0[47]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[27]_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[23]_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[19]_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[19]_i_7_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[15]_i_7_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[11]_i_7_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-735] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[11]_i_15_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.827 | TNS=-4566.725 |
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[11]_i_15_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.820 | TNS=-4566.293 |
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[15]__0__0_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[11]__0__0_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[11]__0__0_i_9_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-663] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[11]__0__0_i_5_n_9.  Re-placed instance design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[11]__0__0_i_5
INFO: [Physopt 32-735] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[11]__0__0_i_5_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.811 | TNS=-4564.415 |
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/FH_read_reg_3309_reg[1]_0[0]. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.810 | TNS=-4564.043 |
INFO: [Physopt 32-663] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[11]_i_12_n_9.  Re-placed instance design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[11]_i_12
INFO: [Physopt 32-735] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[11]_i_12_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.807 | TNS=-4563.863 |
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__1_i_4_n_9.  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__1_i_4
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__1_i_4_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.799 | TNS=-4563.462 |
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[27]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[23]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[19]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[15]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[11]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[11]_i_6_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/PCIN__0[25]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[7]_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[7]_i_7_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[16]__0__0_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_4_n_9.  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_4
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_4_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.798 | TNS=-4563.256 |
INFO: [Physopt 32-663] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_12_n_9.  Re-placed instance design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_12
INFO: [Physopt 32-735] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_12_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.797 | TNS=-4562.490 |
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_119_n_9.  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_119
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_119_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.796 | TNS=-4562.356 |
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[11]__0_i_7_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[7]__0_i_7_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]__0_i_15_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.796 | TNS=-4562.077 |
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[15]_i_15_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[19]_i_25_n_16. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[15]_i_26_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[15]_i_32_n_9.  Did not re-place instance design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[15]_i_32
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[15]_i_32_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[19]_i_64_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[15]_i_62_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[16]__0__0_i_54_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-735] Processed net design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product[-1111111101]_3[1]. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.794 | TNS=-4561.417 |
INFO: [Physopt 32-81] Processed net design_1_i/conv2/inst/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0[11]. Replicated 4 times.
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0[11]. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.778 | TNS=-4560.921 |
INFO: [Physopt 32-81] Processed net design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product[-1111111098]_0[2]. Replicated 5 times.
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product[-1111111098]_0[2]. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.776 | TNS=-4560.785 |
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]__0_i_12_n_9.  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]__0_i_12
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]__0_i_12_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.774 | TNS=-4560.743 |
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[11]_i_15_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.773 | TNS=-4560.662 |
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__1_i_3_n_9.  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__1_i_3
INFO: [Physopt 32-735] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__1_i_3_n_9. Optimization improves timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.771 | TNS=-4560.434 |
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0[11].  Did not re-place instance design_1_i/conv2/inst/FH_read_reg_3309_reg[11]
INFO: [Physopt 32-572] Net design_1_i/conv2/inst/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0[11] was not replicated.
Resolution: phys_opt_design can be forced to replicate a net driver using the option -force_replication_on_nets <list of net objects>.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0[11]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg_n_9_[45]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/processing_system7_0/inst/FCLK_CLK_unbuffered[0]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[31]_i_7_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/PCIN__0[45]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[15]_i_7_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_10_n_9.  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_10
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_10_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[11]_i_25_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_19_n_9.  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_19
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_19_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[16]__0__0_i_54_n_16. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/FH_read_reg_3309_reg[10][1]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[11][0].  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_118
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[11][0]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[46]_i_1_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0[11].  Did not re-place instance design_1_i/conv2/inst/FH_read_reg_3309_reg[11]
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0[11]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.771 | TNS=-4560.434 |
Phase 3 Critical Path Optimization | Checksum: 1fcb372f5

Time (s): cpu = 00:00:47 ; elapsed = 00:00:13 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14627 ; free virtual = 23984

Phase 4 Critical Path Optimization
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.771 | TNS=-4560.434 |
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg_n_9_[45]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/processing_system7_0/inst/FCLK_CLK_unbuffered[0]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[43]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[39]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[35]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[31]_i_1_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[31]_i_7_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/PCIN__0[45]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[27]_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[23]_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[19]_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[15]_i_2_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[15]_i_7_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[11]_i_7_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[7]_i_7_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_10_n_9.  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_10
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_10_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[11]_i_25_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[16]__0__0_i_11_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_19_n_9.  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_19
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_19_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[16]__0__0_i_54_n_16. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[16]__0__0_i_57_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/FH_read_reg_3309_reg[10][1]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[11][0].  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_118
INFO: [Physopt 32-572] Net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[11][0] was not replicated.
Resolution: phys_opt_design can be forced to replicate a net driver using the option -force_replication_on_nets <list of net objects>.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[11][0]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[46]_i_1_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0[11].  Did not re-place instance design_1_i/conv2/inst/FH_read_reg_3309_reg[11]
INFO: [Physopt 32-572] Net design_1_i/conv2/inst/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0[11] was not replicated.
Resolution: phys_opt_design can be forced to replicate a net driver using the option -force_replication_on_nets <list of net objects>.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0[11]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg_n_9_[45]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/processing_system7_0/inst/FCLK_CLK_unbuffered[0]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[31]_i_7_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/PCIN__0[45]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[15]_i_7_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_10_n_9.  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_10
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[7]_i_10_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[11]_i_25_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_19_n_9.  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_19
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_19_n_9. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[16]__0__0_i_54_n_16. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/FH_read_reg_3309_reg[10][1]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[11][0].  Did not re-place instance design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p[16]__0__0_i_118
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/FH_read_reg_3309_reg[11][0]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U1/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg[46]_i_1_n_15. Optimizations did not improve timing on the net.
INFO: [Physopt 32-662] Processed net design_1_i/conv2/inst/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0[11].  Did not re-place instance design_1_i/conv2/inst/FH_read_reg_3309_reg[11]
INFO: [Physopt 32-702] Processed net design_1_i/conv2/inst/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product__0[11]. Optimizations did not improve timing on the net.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-2.771 | TNS=-4560.434 |
Phase 4 Critical Path Optimization | Checksum: 1fcb372f5

Time (s): cpu = 00:00:52 ; elapsed = 00:00:14 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14628 ; free virtual = 23984
Netlist sorting complete. Time (s): cpu = 00:00:00.09 ; elapsed = 00:00:00.10 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14631 ; free virtual = 23987
INFO: [Physopt 32-603] Post Physical Optimization Timing Summary | WNS=-2.771 | TNS=-4560.434 |

Summary of Physical Synthesis Optimizations
============================================


-------------------------------------------------------------------------------------------------------------------------------------------------------------
|  Optimization   |  WNS Gain (ns)  |  TNS Gain (ns)  |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
-------------------------------------------------------------------------------------------------------------------------------------------------------------
|  DSP Register   |          0.000  |          0.000  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Critical Path  |          0.402  |         28.243  |           13  |              0  |                    30  |           0  |           2  |  00:00:08  |
|  Total          |          0.402  |         28.243  |           13  |              0  |                    30  |           0  |           3  |  00:00:08  |
-------------------------------------------------------------------------------------------------------------------------------------------------------------


Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14631 ; free virtual = 23987
Ending Physical Synthesis Task | Checksum: 1c5b5193c

Time (s): cpu = 00:00:52 ; elapsed = 00:00:15 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14630 ; free virtual = 23987
INFO: [Common 17-83] Releasing license: Implementation
411 Infos, 22 Warnings, 0 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
phys_opt_design: Time (s): cpu = 00:01:20 ; elapsed = 00:00:21 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14675 ; free virtual = 24031
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:09 ; elapsed = 00:00:03 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14528 ; free virtual = 23999
INFO: [Common 17-1381] The checkpoint '/home/anubhav/xilinx_projects/promethean/promethean.runs/impl_1/design_1_wrapper_physopt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:20 ; elapsed = 00:00:12 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14622 ; free virtual = 24025
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 8 CPUs
Checksum: PlaceDB: d31d5716 ConstDB: 0 ShapeSum: 77e11bf RouteDB: 0

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: 167d68e23

Time (s): cpu = 00:00:21 ; elapsed = 00:00:11 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14493 ; free virtual = 23854
Post Restoration Checksum: NetGraph: ad7ac1ca NumContArr: ba5bcc59 Constraints: 0 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: 167d68e23

Time (s): cpu = 00:00:22 ; elapsed = 00:00:12 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14510 ; free virtual = 23871

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: 167d68e23

Time (s): cpu = 00:00:22 ; elapsed = 00:00:13 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14466 ; free virtual = 23827

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: 167d68e23

Time (s): cpu = 00:00:22 ; elapsed = 00:00:13 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14466 ; free virtual = 23828
 Number of Nodes with overlaps = 0

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: 1a3d4601f

Time (s): cpu = 00:00:54 ; elapsed = 00:00:24 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14441 ; free virtual = 23803
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-2.797 | TNS=-3087.599| WHS=-0.217 | THS=-291.169|

Phase 2 Router Initialization | Checksum: 26ae1899e

Time (s): cpu = 00:01:13 ; elapsed = 00:00:29 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14396 ; free virtual = 23784

Router Utilization Summary
  Global Vertical Routing Utilization    = 0 %
  Global Horizontal Routing Utilization  = 0 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 93548
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 93547
  Number of Partially Routed Nets     = 1
  Number of Node Overlaps             = 0


Phase 3 Initial Routing

Phase 3.1 Global Routing
Phase 3.1 Global Routing | Checksum: 26ae1899e

Time (s): cpu = 00:01:14 ; elapsed = 00:00:29 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14397 ; free virtual = 23784
Phase 3 Initial Routing | Checksum: b3518434

Time (s): cpu = 00:02:00 ; elapsed = 00:00:38 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14382 ; free virtual = 23776
INFO: [Route 35-580] Design has 160 pins with tight setup and hold constraints.

The top 5 pins with tight setup and hold constraints:

+--------------------------+--------------------------+----------------------------------------------------------------------------------------------------------+
|       Launch Clock       |      Capture Clock       |                                                 Pin                                                      |
+--------------------------+--------------------------+----------------------------------------------------------------------------------------------------------+
|               clk_fpga_0 |               clk_fpga_0 |                                      design_1_i/fcc2/inst/gmem_m_axi_U/wreq_throttle/throttl_cnt_reg[8]/D|
|               clk_fpga_0 |               clk_fpga_0 |                                      design_1_i/fcc3/inst/gmem_m_axi_U/wreq_throttle/throttl_cnt_reg[8]/D|
|               clk_fpga_0 |               clk_fpga_0 |                                       design_1_i/fcc3/inst/gmem_m_axi_U/bus_write/fifo_wreq/pout_reg[2]/D|
|               clk_fpga_0 |               clk_fpga_0 |                      design_1_i/loss_derivative_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mOutPtr_reg[5]/D|
|               clk_fpga_0 |               clk_fpga_0 |                                       design_1_i/fcc3/inst/gmem_m_axi_U/bus_write/fifo_wreq/pout_reg[1]/D|
+--------------------------+--------------------------+----------------------------------------------------------------------------------------------------------+

File with complete list of pins: tight_setup_hold_pins.txt


Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0

Phase 4.1.1 Update Timing
Phase 4.1.1 Update Timing | Checksum: bca516b2

Time (s): cpu = 00:02:05 ; elapsed = 00:00:41 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14399 ; free virtual = 23774
WARNING: [Route 35-447] Congestion is preventing the router from routing all nets. The router will prioritize the successful completion of routing all nets over timing optimizations.
Phase 4.1 Global Iteration 0 | Checksum: 13a7c0f76

Time (s): cpu = 00:02:21 ; elapsed = 00:00:44 . Memory (MB): peak = 3890.484 ; gain = 0.000 ; free physical = 14398 ; free virtual = 23768

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 49282
 Number of Nodes with overlaps = 22095
 Number of Nodes with overlaps = 11515
 Number of Nodes with overlaps = 7084
 Number of Nodes with overlaps = 4971
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-3.723 | TNS=-14307.032| WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: edf4628d

Time (s): cpu = 04:17:19 ; elapsed = 00:48:15 . Memory (MB): peak = 4038.473 ; gain = 147.988 ; free physical = 14286 ; free virtual = 23683

Phase 4.3 Global Iteration 2
 Number of Nodes with overlaps = 38744
 Number of Nodes with overlaps = 14136
 Number of Nodes with overlaps = 5539
 Number of Nodes with overlaps = 2927
 Number of Nodes with overlaps = 2132
 Number of Nodes with overlaps = 1725
 Number of Nodes with overlaps = 1364
 Number of Nodes with overlaps = 1177
 Number of Nodes with overlaps = 1114
 Number of Nodes with overlaps = 1050
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-4.101 | TNS=-19694.698| WHS=N/A    | THS=N/A    |

 Number of Nodes with overlaps = 1050
Phase 4.3 Global Iteration 2 | Checksum: dd8a559e

Time (s): cpu = 09:43:31 ; elapsed = 01:43:50 . Memory (MB): peak = 4050.473 ; gain = 159.988 ; free physical = 14199 ; free virtual = 23597

Phase 4.4 Global Iteration 3
 Number of Nodes with overlaps = 47077
 Number of Nodes with overlaps = 21808
 Number of Nodes with overlaps = 8234
 Number of Nodes with overlaps = 3136
 Number of Nodes with overlaps = 1302
 Number of Nodes with overlaps = 745
 Number of Nodes with overlaps = 470
 Number of Nodes with overlaps = 283
 Number of Nodes with overlaps = 209
 Number of Nodes with overlaps = 175
 Number of Nodes with overlaps = 119
 Number of Nodes with overlaps = 107
 Number of Nodes with overlaps = 82
 Number of Nodes with overlaps = 65
 Number of Nodes with overlaps = 66
 Number of Nodes with overlaps = 46
 Number of Nodes with overlaps = 39
 Number of Nodes with overlaps = 34
 Number of Nodes with overlaps = 32
 Number of Nodes with overlaps = 27
 Number of Nodes with overlaps = 26
 Number of Nodes with overlaps = 24
 Number of Nodes with overlaps = 19
 Number of Nodes with overlaps = 20
 Number of Nodes with overlaps = 13
 Number of Nodes with overlaps = 15
 Number of Nodes with overlaps = 10
 Number of Nodes with overlaps = 7
 Number of Nodes with overlaps = 7
 Number of Nodes with overlaps = 7
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-7.058 | TNS=-35286.273| WHS=N/A    | THS=N/A    |

 Number of Nodes with overlaps = 7
Phase 4.4 Global Iteration 3 | Checksum: 1af0beadd

Time (s): cpu = 15:24:02 ; elapsed = 02:51:06 . Memory (MB): peak = 4050.473 ; gain = 159.988 ; free physical = 14204 ; free virtual = 23613

Phase 4.5 Global Iteration 4
 Number of Nodes with overlaps = 15959
 Number of Nodes with overlaps = 33971
Phase 4.5 Global Iteration 4 | Checksum: 11e8581ea

Time (s): cpu = 17:24:28 ; elapsed = 03:14:33 . Memory (MB): peak = 4050.473 ; gain = 159.988 ; free physical = 14179 ; free virtual = 23592
Phase 4 Rip-up And Reroute | Checksum: 11e8581ea

Time (s): cpu = 17:24:28 ; elapsed = 03:14:33 . Memory (MB): peak = 4050.473 ; gain = 159.988 ; free physical = 14179 ; free virtual = 23592

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp
Phase 5.1 Delay CleanUp | Checksum: f68d9fec

Time (s): cpu = 17:24:29 ; elapsed = 03:14:34 . Memory (MB): peak = 4050.473 ; gain = 159.988 ; free physical = 14179 ; free virtual = 23592

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: f68d9fec

Time (s): cpu = 17:24:30 ; elapsed = 03:14:34 . Memory (MB): peak = 4050.473 ; gain = 159.988 ; free physical = 14179 ; free virtual = 23592
Phase 5 Delay and Skew Optimization | Checksum: f68d9fec

Time (s): cpu = 17:24:30 ; elapsed = 03:14:34 . Memory (MB): peak = 4050.473 ; gain = 159.988 ; free physical = 14179 ; free virtual = 23591

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter
Phase 6.1 Hold Fix Iter | Checksum: f68d9fec

Time (s): cpu = 17:24:30 ; elapsed = 03:14:34 . Memory (MB): peak = 4050.473 ; gain = 159.988 ; free physical = 14180 ; free virtual = 23590

Phase 6.2 Additional Hold Fix
Phase 6.2 Additional Hold Fix | Checksum: 187ce36be

Time (s): cpu = 17:24:37 ; elapsed = 03:14:36 . Memory (MB): peak = 4050.473 ; gain = 159.988 ; free physical = 14184 ; free virtual = 23597
Phase 6 Post Hold Fix | Checksum: 11938a696

Time (s): cpu = 17:24:44 ; elapsed = 03:14:37 . Memory (MB): peak = 4050.473 ; gain = 159.988 ; free physical = 14183 ; free virtual = 23596

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 63.9359 %
  Global Horizontal Routing Utilization  = 62.0018 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 7

Congestion Report
North Dir 32x32 Area, Max Cong = 89.4621%, Congestion bounded by tiles (Lower Left Tile -> Upper Right Tile):
   PCIE_NULL_X4Y57 -> INT_R_X31Y85
   INT_L_X32Y54 -> INT_R_X63Y85
South Dir 32x32 Area, Max Cong = 86.8829%, Congestion bounded by tiles (Lower Left Tile -> Upper Right Tile):
   PCIE_NULL_X4Y57 -> INT_R_X31Y85
   INT_L_X32Y54 -> INT_R_X63Y85
East Dir 16x16 Area, Max Cong = 94.3703%, Congestion bounded by tiles (Lower Left Tile -> Upper Right Tile):
   INT_L_X16Y38 -> INT_R_X31Y53
   INT_L_X16Y22 -> INT_R_X31Y37
   INT_L_X32Y22 -> INT_R_X47Y37
   INT_L_X16Y6 -> INT_R_X31Y21
   INT_L_X32Y6 -> INT_R_X47Y21
West Dir 32x32 Area, Max Cong = 87.403%, Congestion bounded by tiles (Lower Left Tile -> Upper Right Tile):
   INT_L_X32Y22 -> INT_R_X63Y53

------------------------------
Reporting congestion hotspots
------------------------------
Direction: North
----------------
Congested clusters found at Level 4
Effective congestion level: 5 Aspect Ratio: 1 Sparse Ratio: 1
Direction: South
----------------
Congested clusters found at Level 3
Effective congestion level: 5 Aspect Ratio: 0.4 Sparse Ratio: 1.4375
Direction: East
----------------
Congested clusters found at Level 4
Effective congestion level: 5 Aspect Ratio: 1 Sparse Ratio: 1
Direction: West
----------------
Congested clusters found at Level 4
Effective congestion level: 5 Aspect Ratio: 0.666667 Sparse Ratio: 1.25

Phase 7 Route finalize | Checksum: 13fc0a627

Time (s): cpu = 17:24:44 ; elapsed = 03:14:37 . Memory (MB): peak = 4050.473 ; gain = 159.988 ; free physical = 14184 ; free virtual = 23596

Phase 8 Verifying routed nets
CRITICAL WARNING: [Route 35-162] 13 signals failed to route due to routing congestion. Please run report_route_status to get a full summary of the design's routing.
Below is a list of the top 10 physical nodes with signal overlaps and up to 5 of the signals that were contending for this node resource:
Resolution: Run report_route_status to get a full summary of the design's routing. To find the areas of the congestion, use the route congestion Metrics in the Device View and check the logfile for the Congestion Report.
1. (85,150,89) BENTQUAD Hist: 6 Tile Name: INT_R_X33Y5 Node: SW6BEG2 Overlapping Nets: 2

Nets:
design_1_i/fcc3/inst/D[5]_alias
design_1_i/fcc2/inst/trunc_ln5_reg_1495[3]

2. (76,147,90) BENTQUAD Hist: 7 Tile Name: INT_R_X29Y8 Node: SW6BEG3 Overlapping Nets: 2

Nets:
design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0_0[2]
design_1_i/fcc3/inst/ydim_read_reg_1244[12]

3. (80,154,101) SINGLE Hist: 6 Tile Name: INT_R_X31Y1 Node: SL1BEG2 Overlapping Nets: 2

Nets:
design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/fwprop_read_reg_1240_reg[0][0]
design_1_i/fcc2/inst/trunc_ln5_reg_1495[3]

4. (79,143,147) SINGLE Hist: 8 Tile Name: INT_L_X30Y12 Node: ER1BEG_S0 Overlapping Nets: 2

Nets:
design_1_i/loss_derivative_0/inst/i_2_reg_468_reg[23]
design_1_i/fcc3/inst/gmem_m_axi_U/bus_read/sect_len_buf_reg_n_9_[1]

5. (90,154,187) BENTQUAD Hist: 4 Tile Name: INT_L_X34Y1 Node: NW6BEG1 Overlapping Nets: 2

Nets:
design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg_0[8]
design_1_i/relu3/inst/y_Din_A[11]

6. (84,152,192) DOUBLE Hist: 8 Tile Name: INT_L_X32Y3 Node: WW2BEG0 Overlapping Nets: 2

Nets:
design_1_i/fcc3/inst/dwbuf_V_U/fcc_combined_dwbuf_V_ram_U/q1[14]
design_1_i/fcc3/inst/i_7_reg_511_reg_n_9_[3]

7. (76,140,203) SINGLE Hist: 7 Tile Name: INT_R_X29Y15 Node: SR1BEG3 Overlapping Nets: 2

Nets:
design_1_i/fcc3/inst/gmem_m_axi_U/bus_read/fifo_rreq/q_reg[61]_0[46]
design_1_i/fcc3/inst/gmem_m_axi_U/bus_read/start_addr_reg_n_9_[13]


 Verification failed
Phase 8 Verifying routed nets | Checksum: 13fc0a627

Time (s): cpu = 17:24:45 ; elapsed = 03:14:38 . Memory (MB): peak = 4050.473 ; gain = 159.988 ; free physical = 14182 ; free virtual = 23595
CRITICAL WARNING: [Route 35-2] Design is not legally routed. There are 7 node overlaps.
Resolution: Run report_design_analysis -congestion and -complexity to find potential sources of congestion in the areas where nets are not fully routed and review UG906 for design closure techniques.

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 12bc572a5

Time (s): cpu = 17:24:50 ; elapsed = 03:14:41 . Memory (MB): peak = 4082.488 ; gain = 192.004 ; free physical = 14189 ; free virtual = 23601
INFO: [Route 35-77] Router completed with failures. Please check the log file for Critical Warnings and run report_route_status for a summary of routing status.

Time (s): cpu = 17:24:52 ; elapsed = 03:14:42 . Memory (MB): peak = 4082.488 ; gain = 192.004 ; free physical = 14271 ; free virtual = 23683

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
428 Infos, 23 Warnings, 2 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 17:25:20 ; elapsed = 03:14:49 . Memory (MB): peak = 4082.488 ; gain = 192.004 ; free physical = 14271 ; free virtual = 23683
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:10 ; elapsed = 00:00:03 . Memory (MB): peak = 4082.488 ; gain = 0.000 ; free physical = 14088 ; free virtual = 23648
INFO: [Common 17-1381] The checkpoint '/home/anubhav/xilinx_projects/promethean/promethean.runs/impl_1/design_1_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:21 ; elapsed = 00:00:13 . Memory (MB): peak = 4082.488 ; gain = 0.000 ; free physical = 14218 ; free virtual = 23671
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/anubhav/xilinx_projects/promethean/promethean.runs/impl_1/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:39 ; elapsed = 00:00:09 . Memory (MB): peak = 4138.516 ; gain = 56.027 ; free physical = 14090 ; free virtual = 23549
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 8 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file /home/anubhav/xilinx_projects/promethean/promethean.runs/impl_1/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:28 ; elapsed = 00:00:07 . Memory (MB): peak = 4138.516 ; gain = 0.000 ; free physical = 14095 ; free virtual = 23557
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
440 Infos, 23 Warnings, 2 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:31 ; elapsed = 00:00:10 . Memory (MB): peak = 4138.516 ; gain = 0.000 ; free physical = 14044 ; free virtual = 23510
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file design_1_wrapper_timing_summary_routed.rpt -pb design_1_wrapper_timing_summary_routed.pb -rpx design_1_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 8 CPUs
CRITICAL WARNING: [Timing 38-282] The design failed to meet the timing requirements. Please see the timing summary report for details on the timing violations.
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file design_1_wrapper_bus_skew_routed.rpt -pb design_1_wrapper_bus_skew_routed.pb -rpx design_1_wrapper_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 8 CPUs
INFO: [Common 17-206] Exiting Vivado at Sun Jun  5 19:01:02 2022...

*** Running vivado
    with args -log design_1_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace


****** Vivado v2020.2 (64-bit)
  **** SW Build 3064766 on Wed Nov 18 09:12:47 MST 2020
  **** IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source design_1_wrapper.tcl -notrace
Command: open_checkpoint design_1_wrapper_routed.dcp

Starting open_checkpoint Task

Time (s): cpu = 00:00:00.07 ; elapsed = 00:00:00.05 . Memory (MB): peak = 2363.793 ; gain = 0.000 ; free physical = 15978 ; free virtual = 25464
INFO: [Device 21-403] Loading part xc7z020clg400-1
Netlist sorting complete. Time (s): cpu = 00:00:00.68 ; elapsed = 00:00:00.68 . Memory (MB): peak = 2363.910 ; gain = 0.000 ; free physical = 15544 ; free virtual = 25033
INFO: [Netlist 29-17] Analyzing 7827 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.2
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 3006.879 ; gain = 105.961 ; free physical = 14261 ; free virtual = 23743
Restored from archive | CPU: 3.880000 secs | Memory: 104.106277 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 3006.879 ; gain = 105.961 ; free physical = 14261 ; free virtual = 23743
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00 . Memory (MB): peak = 3006.879 ; gain = 0.000 ; free physical = 14240 ; free virtual = 23722
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 104 instances were transformed.
  RAM16X1S => RAM32X1S (RAMS32): 32 instances
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 3 instances
  RAM32X1D => RAM32X1D (RAMD32(x2)): 1 instance 
  RAM32X1S => RAM32X1S (RAMS32): 48 instances
  SRLC32E => SRL16E: 20 instances

INFO: [Project 1-604] Checkpoint was created with Vivado v2020.2 (64-bit) build 3064766
open_checkpoint: Time (s): cpu = 00:00:26 ; elapsed = 00:00:29 . Memory (MB): peak = 3006.879 ; gain = 649.023 ; free physical = 14239 ; free virtual = 23721
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/Xilinx/Vivado/2020.2/data/ip'.
INFO: [DRC 23-27] Running DRC with 8 threads
ERROR: [DRC RTSTAT-6] Partial route conflicts: 13 net(s) have a partial conflict. The problem bus(es) and/or net(s) are design_1_i/fcc3/inst/D[5]_alias, design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/fwprop_read_reg_1240_reg[0][0], design_1_i/loss_derivative_0/inst/i_2_reg_468_reg[23], design_1_i/fcc3/inst/i_7_reg_511_reg_n_9_[3], design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg_0[8], design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0_0[2], design_1_i/fcc3/inst/dwbuf_V_U/fcc_combined_dwbuf_V_ram_U/q1[14], design_1_i/fcc3/inst/gmem_m_axi_U/bus_read/fifo_rreq/q_reg[61]_0[46], design_1_i/fcc3/inst/gmem_m_axi_U/bus_read/sect_len_buf_reg_n_9_[1], design_1_i/fcc3/inst/gmem_m_axi_U/bus_read/start_addr_reg_n_9_[13], design_1_i/fcc2/inst/trunc_ln5_reg_1495[3], design_1_i/relu3/inst/y_Din_A[11], and design_1_i/fcc3/inst/ydim_read_reg_1244[12].
WARNING: [DRC CHECK-3] Report rule limit reached: REQP-1840 rule limit reached: 20 violations have been found.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg input design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product input design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/conv2/inst/mac_muladd_9s_9s_9ns_9_4_1_U39/conv_combined_mac_muladd_9s_9s_9ns_9_4_1_DSP48_0_U/p_reg_reg input design_1_i/conv2/inst/mac_muladd_9s_9s_9ns_9_4_1_U39/conv_combined_mac_muladd_9s_9s_9ns_9_4_1_DSP48_0_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/fcc1/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg input design_1_i/fcc1/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg input design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg input design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg input design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mac_muladd_9s_9s_9ns_9_4_1_U36/conv_combined_mac_muladd_9s_9s_9ns_9_4_1_DSP48_0_U/p_reg_reg output design_1_i/conv1/inst/mac_muladd_9s_9s_9ns_9_4_1_U36/conv_combined_mac_muladd_9s_9s_9ns_9_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product output design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0 output design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product output design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product output design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product output design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product__1 output design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product output design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product output design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 output design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product output design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product output design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product output design_1_i/conv1/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product output design_1_i/conv1/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product output design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0 output design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product output design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product output design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product output design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product__1 output design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product output design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0 output design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product output design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 output design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product output design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product output design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product output design_1_i/conv2/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product output design_1_i/conv2/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product output design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0 output design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc1/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc1/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc1/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg output design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc2/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product output design_1_i/fcc2/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc2/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0 output design_1_i/fcc2/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc2/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc2/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc2/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc2/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc2/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc2/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg output design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc3/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product output design_1_i/fcc3/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc3/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0 output design_1_i/fcc3/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_534/mul_50ns_47ns_97_5_1_U1/loss_derivative_mul_50ns_47ns_97_5_1_Multiplier_0_U/tmp_product output design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_534/mul_50ns_47ns_97_5_1_U1/loss_derivative_mul_50ns_47ns_97_5_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_534/mul_50ns_50ns_100_5_1_U2/loss_derivative_mul_50ns_50ns_100_5_1_Multiplier_1_U/tmp_product output design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_534/mul_50ns_50ns_100_5_1_U2/loss_derivative_mul_50ns_50ns_100_5_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/loss_derivative_0/inst/grp_log_16_3_s_fu_546/mac_mulsub_24ns_4ns_29ns_29_4_1_U12/loss_derivative_mac_mulsub_24ns_4ns_29ns_29_4_1_DSP48_1_U/p_reg_reg output design_1_i/loss_derivative_0/inst/grp_log_16_3_s_fu_546/mac_mulsub_24ns_4ns_29ns_29_4_1_U12/loss_derivative_mac_mulsub_24ns_4ns_29ns_29_4_1_DSP48_1_U/p_reg_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0 multiplier stage design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0 multiplier stage design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0 multiplier stage design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__0 multiplier stage design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__2 multiplier stage design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg multiplier stage design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg multiplier stage design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0 multiplier stage design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 multiplier stage design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg multiplier stage design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1 multiplier stage design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg multiplier stage design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1 multiplier stage design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage design_1_i/conv1/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage design_1_i/conv1/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0 multiplier stage design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0 multiplier stage design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0 multiplier stage design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__0 multiplier stage design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__2 multiplier stage design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg multiplier stage design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg multiplier stage design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0 multiplier stage design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 multiplier stage design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg multiplier stage design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1 multiplier stage design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg multiplier stage design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1 multiplier stage design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage design_1_i/conv2/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage design_1_i/conv2/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/p_reg multiplier stage design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/p_reg__0 multiplier stage design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[4] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[0]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[5] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[6] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[7] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[4] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[0]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[5] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[6] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[7] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC RTSTAT-10] No routable loads: 33 net(s) have no routable loads. The problem bus(es) and/or net(s) are design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/rd_rst_reg[2:0], design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/rd_rst_reg[2:0], design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/rd_rst_reg[2:0]... and (the first 15 of 21 listed).
INFO: [Vivado 12-3199] DRC finished with 1 Errors, 233 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
ERROR: [Vivado 12-1345] Error(s) found during DRC. Bitgen not run.
INFO: [Common 17-83] Releasing license: Implementation
20 Infos, 205 Warnings, 0 Critical Warnings and 2 Errors encountered.
write_bitstream failed
write_bitstream: Time (s): cpu = 00:00:45 ; elapsed = 00:00:15 . Memory (MB): peak = 3531.699 ; gain = 524.820 ; free physical = 13139 ; free virtual = 22640
ERROR: [Common 17-39] 'write_bitstream' failed due to earlier errors.

INFO: [Common 17-206] Exiting Vivado at Sun Jun  5 19:22:58 2022...

*** Running vivado
    with args -log design_1_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace


****** Vivado v2020.2 (64-bit)
  **** SW Build 3064766 on Wed Nov 18 09:12:47 MST 2020
  **** IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source design_1_wrapper.tcl -notrace
Command: open_checkpoint design_1_wrapper_routed.dcp

Starting open_checkpoint Task

Time (s): cpu = 00:00:00.08 ; elapsed = 00:00:00.05 . Memory (MB): peak = 2363.789 ; gain = 0.000 ; free physical = 14429 ; free virtual = 23926
INFO: [Device 21-403] Loading part xc7z020clg400-1
Netlist sorting complete. Time (s): cpu = 00:00:00.65 ; elapsed = 00:00:00.65 . Memory (MB): peak = 2363.906 ; gain = 0.000 ; free physical = 13996 ; free virtual = 23491
INFO: [Netlist 29-17] Analyzing 7827 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.2
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 3006.875 ; gain = 105.961 ; free physical = 13188 ; free virtual = 22683
Restored from archive | CPU: 3.830000 secs | Memory: 104.106277 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 3006.875 ; gain = 105.961 ; free physical = 13188 ; free virtual = 22683
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3006.875 ; gain = 0.000 ; free physical = 13196 ; free virtual = 22691
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 104 instances were transformed.
  RAM16X1S => RAM32X1S (RAMS32): 32 instances
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 3 instances
  RAM32X1D => RAM32X1D (RAMD32(x2)): 1 instance 
  RAM32X1S => RAM32X1S (RAMS32): 48 instances
  SRLC32E => SRL16E: 20 instances

INFO: [Project 1-604] Checkpoint was created with Vivado v2020.2 (64-bit) build 3064766
open_checkpoint: Time (s): cpu = 00:00:26 ; elapsed = 00:00:28 . Memory (MB): peak = 3006.875 ; gain = 649.023 ; free physical = 13195 ; free virtual = 22691
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/Xilinx/Vivado/2020.2/data/ip'.
INFO: [DRC 23-27] Running DRC with 8 threads
ERROR: [DRC RTSTAT-6] Partial route conflicts: 13 net(s) have a partial conflict. The problem bus(es) and/or net(s) are design_1_i/fcc3/inst/D[5]_alias, design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/fwprop_read_reg_1240_reg[0][0], design_1_i/loss_derivative_0/inst/i_2_reg_468_reg[23], design_1_i/fcc3/inst/i_7_reg_511_reg_n_9_[3], design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/p_reg_0[8], design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0_0[2], design_1_i/fcc3/inst/dwbuf_V_U/fcc_combined_dwbuf_V_ram_U/q1[14], design_1_i/fcc3/inst/gmem_m_axi_U/bus_read/fifo_rreq/q_reg[61]_0[46], design_1_i/fcc3/inst/gmem_m_axi_U/bus_read/sect_len_buf_reg_n_9_[1], design_1_i/fcc3/inst/gmem_m_axi_U/bus_read/start_addr_reg_n_9_[13], design_1_i/fcc2/inst/trunc_ln5_reg_1495[3], design_1_i/relu3/inst/y_Din_A[11], and design_1_i/fcc3/inst/ydim_read_reg_1244[12].
WARNING: [DRC CHECK-3] Report rule limit reached: REQP-1840 rule limit reached: 20 violations have been found.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg input design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product input design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/conv2/inst/mac_muladd_9s_9s_9ns_9_4_1_U39/conv_combined_mac_muladd_9s_9s_9ns_9_4_1_DSP48_0_U/p_reg_reg input design_1_i/conv2/inst/mac_muladd_9s_9s_9ns_9_4_1_U39/conv_combined_mac_muladd_9s_9s_9ns_9_4_1_DSP48_0_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/fcc1/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg input design_1_i/fcc1/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg input design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg input design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg input design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mac_muladd_9s_9s_9ns_9_4_1_U36/conv_combined_mac_muladd_9s_9s_9ns_9_4_1_DSP48_0_U/p_reg_reg output design_1_i/conv1/inst/mac_muladd_9s_9s_9ns_9_4_1_U36/conv_combined_mac_muladd_9s_9s_9ns_9_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product output design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0 output design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product output design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product output design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product output design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product__1 output design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv1/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product output design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product output design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 output design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product output design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product output design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product output design_1_i/conv1/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv1/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product output design_1_i/conv1/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product output design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0 output design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product output design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product output design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product output design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product__1 output design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/tmp_product__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product output design_1_i/conv2/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product output design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0 output design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product output design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 output design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product output design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product output design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product output design_1_i/conv2/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/conv2/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product output design_1_i/conv2/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product output design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0 output design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc1/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc1/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc1/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg output design_1_i/fcc2/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc2/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product output design_1_i/fcc2/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc2/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0 output design_1_i/fcc2/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc2/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc2/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc2/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc2/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc2/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc2/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg output design_1_i/fcc3/inst/mac_muladd_6ns_7ns_12ns_12_4_1_U9/fcc_combined_mac_muladd_6ns_7ns_12ns_12_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc3/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product output design_1_i/fcc3/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc3/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0 output design_1_i/fcc3/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U1/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U4/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product output design_1_i/fcc3/inst/mul_31s_31s_31_2_1_U6/fcc_combined_mul_31s_31s_31_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_534/mul_50ns_47ns_97_5_1_U1/loss_derivative_mul_50ns_47ns_97_5_1_Multiplier_0_U/tmp_product output design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_534/mul_50ns_47ns_97_5_1_U1/loss_derivative_mul_50ns_47ns_97_5_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_534/mul_50ns_50ns_100_5_1_U2/loss_derivative_mul_50ns_50ns_100_5_1_Multiplier_1_U/tmp_product output design_1_i/loss_derivative_0/inst/grp_exp_16_3_s_fu_534/mul_50ns_50ns_100_5_1_U2/loss_derivative_mul_50ns_50ns_100_5_1_Multiplier_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/loss_derivative_0/inst/grp_log_16_3_s_fu_546/mac_mulsub_24ns_4ns_29ns_29_4_1_U12/loss_derivative_mac_mulsub_24ns_4ns_29ns_29_4_1_DSP48_1_U/p_reg_reg output design_1_i/loss_derivative_0/inst/grp_log_16_3_s_fu_546/mac_mulsub_24ns_4ns_29ns_29_4_1_U12/loss_derivative_mac_mulsub_24ns_4ns_29ns_29_4_1_DSP48_1_U/p_reg_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0 multiplier stage design_1_i/conv1/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0 multiplier stage design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0 multiplier stage design_1_i/conv1/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__0 multiplier stage design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__2 multiplier stage design_1_i/conv1/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg multiplier stage design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg multiplier stage design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0 multiplier stage design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 multiplier stage design_1_i/conv1/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg multiplier stage design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1 multiplier stage design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg multiplier stage design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1 multiplier stage design_1_i/conv1/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage design_1_i/conv1/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage design_1_i/conv1/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv1/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage design_1_i/conv1/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0 multiplier stage design_1_i/conv2/inst/mul_31ns_32ns_63_2_1_U18/conv_combined_mul_31ns_32ns_63_2_1_Multiplier_5_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0 multiplier stage design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U2/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0 multiplier stage design_1_i/conv2/inst/mul_31ns_64ns_95_5_1_U9/conv_combined_mul_31ns_64ns_95_5_1_Multiplier_1_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__0 multiplier stage design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__2 multiplier stage design_1_i/conv2/inst/mul_31ns_96ns_127_5_1_U29/conv_combined_mul_31ns_96ns_127_5_1_Multiplier_7_U/buff0_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U10/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U11/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U12/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U14/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U15/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U16/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U22/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U23/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U24/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U25/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U3/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U4/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U5/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_31s_31s_31_2_1_U6/conv_combined_mul_31s_31s_31_2_1_Multiplier_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg multiplier stage design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U13/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg multiplier stage design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0 multiplier stage design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0 multiplier stage design_1_i/conv2/inst/mul_32ns_32ns_64_2_1_U27/conv_combined_mul_32ns_32ns_64_2_1_Multiplier_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg multiplier stage design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1 multiplier stage design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U17/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg multiplier stage design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1 multiplier stage design_1_i/conv2/inst/mul_32ns_64ns_96_5_1_U28/conv_combined_mul_32ns_64ns_96_5_1_Multiplier_4_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage design_1_i/conv2/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_32s_32s_32_2_1_U26/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg multiplier stage design_1_i/conv2/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/conv2/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product multiplier stage design_1_i/conv2/inst/mul_32s_32s_32_2_1_U7/conv_combined_mul_32s_32s_32_2_1_Multiplier_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/p_reg multiplier stage design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/p_reg__0 multiplier stage design_1_i/fcc1/inst/mul_31ns_32ns_63_2_1_U2/fcc_combined_mul_31ns_32ns_63_2_1_Multiplier_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[4] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[0]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[5] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[6] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[7] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/InputLayer_0/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[4] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[0]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[5] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[6] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[7] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/conv1/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/conv2/inst/gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC RTSTAT-10] No routable loads: 33 net(s) have no routable loads. The problem bus(es) and/or net(s) are design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/rd_rst_reg[2:0], design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/rd_rst_reg[2:0], design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/rd_rst_reg[2:0]... and (the first 15 of 21 listed).
INFO: [Vivado 12-3199] DRC finished with 1 Errors, 233 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
ERROR: [Vivado 12-1345] Error(s) found during DRC. Bitgen not run.
INFO: [Common 17-83] Releasing license: Implementation
20 Infos, 205 Warnings, 0 Critical Warnings and 2 Errors encountered.
write_bitstream failed
write_bitstream: Time (s): cpu = 00:00:38 ; elapsed = 00:00:13 . Memory (MB): peak = 3492.984 ; gain = 486.109 ; free physical = 12965 ; free virtual = 22461
ERROR: [Common 17-39] 'write_bitstream' failed due to earlier errors.

INFO: [Common 17-206] Exiting Vivado at Sun Jun  5 19:25:03 2022...
